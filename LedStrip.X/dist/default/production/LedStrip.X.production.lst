

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 25 15:39:35 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  000D90                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _B
    39  000D90  000A               	dw	10
    40                           
    41                           ;initializer for _G
    42  000D92  000A               	dw	10
    43                           
    44                           ;initializer for _R
    45  000D94  000A               	dw	10
    46  0000                     _CCPR2L	set	3921
    47  0000                     _CCPR3L	set	3918
    48  0000                     _CCPR4L	set	3915
    49  0000                     _ANSEL1	set	31465
    50  0000                     _ANSEL2	set	31466
    51  0000                     _ANSEL3	set	31467
    52  0000                     _CCP2M2	set	31362
    53  0000                     _CCP2M3	set	31363
    54  0000                     _CCP3M2	set	31338
    55  0000                     _CCP3M3	set	31339
    56  0000                     _CCP4M2	set	31314
    57  0000                     _CCP4M3	set	31315
    58  0000                     _DC2B0	set	31364
    59  0000                     _DC2B1	set	31365
    60  0000                     _DC3B0	set	31340
    61  0000                     _DC3B1	set	31341
    62  0000                     _DC4B0	set	31316
    63  0000                     _DC4B1	set	31317
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADRESL	set	4035
    66  0000                     _BAUDCON2	set	4025
    67  0000                     _INTCONbits	set	4082
    68  0000                     _PIE3bits	set	4003
    69  0000                     _PIR3bits	set	4004
    70  0000                     _PR2	set	4043
    71  0000                     _RCONbits	set	4048
    72  0000                     _RCREG2	set	3962
    73  0000                     _RCSTA2bits	set	4006
    74  0000                     _SPBRG2	set	3963
    75  0000                     _SPBRGH2	set	3964
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TRISC	set	3988
    78  0000                     _TXREG2	set	3961
    79  0000                     _TXSTA2bits	set	4026
    80  0000                     _ADON	set	32272
    81  0000                     _CHS0	set	32274
    82  0000                     _CHS1	set	32275
    83  0000                     _GO_nDONE	set	32273
    84  0000                     _RC2IF	set	32037
    85  0000                     _T2CKPS0	set	32336
    86  0000                     _T2CKPS1	set	32337
    87  0000                     _TMR2ON	set	32338
    88  0000                     _TRIGSEL0	set	32270
    89  0000                     _TRIGSEL1	set	32271
    90  0000                     _VCFG0	set	32268
    91  0000                     _VCFG1	set	32269
    92  0000                     _VNCFG	set	32267
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  000C86                     __pcinit:
    98                           	opt stack 0
    99  000C86                     start_initialization:
   100                           	opt stack 0
   101  000C86                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Clear objects allocated to BANK0 (48 bytes)
   105  000C86  EE00  F0C1         	lfsr	0,__pbssBANK0
   106  000C8A  0E30               	movlw	48
   107  000C8C                     clear_0:
   108  000C8C  6AEE               	clrf	postinc0,c
   109  000C8E  06E8               	decf	wreg,f,c
   110  000C90  E1FD               	bnz	clear_0
   111                           
   112                           ; Clear objects allocated to COMRAM (22 bytes)
   113  000C92  EE00  F024         	lfsr	0,__pbssCOMRAM
   114  000C96  0E16               	movlw	22
   115  000C98                     clear_1:
   116  000C98  6AEE               	clrf	postinc0,c
   117  000C9A  06E8               	decf	wreg,f,c
   118  000C9C  E1FD               	bnz	clear_1
   119                           
   120                           ; Initialize objects allocated to COMRAM (6 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122  000C9E  0E90               	movlw	low __pidataCOMRAM
   123  000CA0  6EF6               	movwf	tblptrl,c
   124  000CA2  0E0D               	movlw	high __pidataCOMRAM
   125  000CA4  6EF7               	movwf	tblptrh,c
   126  000CA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127  000CA8  6EF8               	movwf	tblptru,c
   128  000CAA  EE00  F03A         	lfsr	0,__pdataCOMRAM
   129  000CAE  EE10 F006          	lfsr	1,6
   130  000CB2                     copy_data0:
   131  000CB2  0009               	tblrd		*+
   132  000CB4  CFF5 FFEE          	movff	tablat,postinc0
   133  000CB8  50E5               	movf	postdec1,w,c
   134  000CBA  50E1               	movf	fsr1l,w,c
   135  000CBC  E1FA               	bnz	copy_data0
   136  000CBE                     end_of_initialization:
   137                           	opt stack 0
   138  000CBE                     __end_of__initialization:
   139                           	opt stack 0
   140  000CBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  000CC0  6EF8               	movwf	tblptru,c
   142  000CC2  0100               	movlb	0
   143  000CC4  EFC0  F000         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	bssCOMRAM
   154  000024                     __pbssCOMRAM:
   155                           	opt stack 0
   156  000024                     high_isr@F19158:
   157                           	opt stack 0
   158  000024                     	ds	2
   159  000026                     _beginB:
   160                           	opt stack 0
   161  000026                     	ds	1
   162  000027                     _beginG:
   163                           	opt stack 0
   164  000027                     	ds	1
   165  000028                     _beginR:
   166                           	opt stack 0
   167  000028                     	ds	1
   168  000029                     _compteur:
   169                           	opt stack 0
   170  000029                     	ds	1
   171  00002A                     _buffer:
   172                           	opt stack 0
   173  00002A                     	ds	16
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	dataCOMRAM
   184  00003A                     __pdataCOMRAM:
   185                           	opt stack 0
   186  00003A                     _B:
   187                           	opt stack 0
   188  00003A                     	ds	2
   189  00003C                     _G:
   190                           	opt stack 0
   191  00003C                     	ds	2
   192  00003E                     _R:
   193                           	opt stack 0
   194  00003E                     	ds	2
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           postdec1	equ	0xFE5
   202                           fsr1l	equ	0xFE1
   203                           
   204                           	psect	bssBANK0
   205  0000C1                     __pbssBANK0:
   206                           	opt stack 0
   207  0000C1                     main@F19164:
   208                           	opt stack 0
   209  0000C1                     	ds	32
   210  0000E1                     _buffer1:
   211                           	opt stack 0
   212  0000E1                     	ds	16
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	cstackBANK0
   223  000060                     __pcstackBANK0:
   224                           	opt stack 0
   225  000060                     ??_readADC:
   226  000060                     ?___awdiv:
   227                           	opt stack 0
   228  000060                     ?___ftpack:
   229                           	opt stack 0
   230  000060                     ___awdiv@dividend:
   231                           	opt stack 0
   232  000060                     ___ftpack@arg:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x0
   236  000060                     	ds	2
   237  000062                     readADC@channel:
   238                           	opt stack 0
   239  000062                     ___awdiv@divisor:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243  000062                     	ds	1
   244  000063                     readADC@tempo:
   245                           	opt stack 0
   246  000063                     ___ftpack@exp:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x3
   250  000063                     	ds	1
   251  000064                     ___awdiv@counter:
   252                           	opt stack 0
   253  000064                     ___ftpack@sign:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x4
   257  000064                     	ds	1
   258  000065                     ?___lwtoft:
   259                           	opt stack 0
   260  000065                     ___awdiv@sign:
   261                           	opt stack 0
   262  000065                     ___lwtoft@c:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x5
   266  000065                     	ds	1
   267  000066                     ___awdiv@quotient:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x6
   271  000066                     	ds	2
   272  000068                     ?___ftmul:
   273                           	opt stack 0
   274  000068                     ___ftmul@f1:
   275                           	opt stack 0
   276                           
   277                           ; 3 bytes @ 0x8
   278  000068                     	ds	3
   279  00006B                     ___ftmul@f2:
   280                           	opt stack 0
   281                           
   282                           ; 3 bytes @ 0xB
   283  00006B                     	ds	3
   284  00006E                     ??___ftmul:
   285                           
   286                           ; 0 bytes @ 0xE
   287  00006E                     	ds	3
   288  000071                     ___ftmul@exp:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x11
   292  000071                     	ds	1
   293  000072                     ___ftmul@f3_as_product:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x12
   297  000072                     	ds	3
   298  000075                     ___ftmul@cntr:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x15
   302  000075                     	ds	1
   303  000076                     ___ftmul@sign:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x16
   307  000076                     	ds	1
   308  000077                     ?___ftdiv:
   309                           	opt stack 0
   310  000077                     ___ftdiv@f1:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x17
   314  000077                     	ds	3
   315  00007A                     ___ftdiv@f2:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x1A
   319  00007A                     	ds	3
   320  00007D                     ??___ftdiv:
   321                           
   322                           ; 0 bytes @ 0x1D
   323  00007D                     	ds	3
   324  000080                     ___ftdiv@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x20
   328  000080                     	ds	1
   329  000081                     ___ftdiv@f3:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x21
   333  000081                     	ds	3
   334  000084                     ___ftdiv@exp:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x24
   338  000084                     	ds	1
   339  000085                     ___ftdiv@sign:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x25
   343  000085                     	ds	1
   344  000086                     ?___fttol:
   345                           	opt stack 0
   346  000086                     ___fttol@f1:
   347                           	opt stack 0
   348                           
   349                           ; 3 bytes @ 0x26
   350  000086                     	ds	4
   351  00008A                     ??___fttol:
   352                           
   353                           ; 0 bytes @ 0x2A
   354  00008A                     	ds	5
   355  00008F                     ___fttol@sign1:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x2F
   359  00008F                     	ds	1
   360  000090                     ___fttol@lval:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0x30
   364  000090                     	ds	4
   365  000094                     ___fttol@exp1:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x34
   369  000094                     	ds	1
   370  000095                     pwm@dutycycle:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x35
   374  000095                     	ds	2
   375  000097                     pwm@color:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x37
   379  000097                     	ds	1
   380  000098                     
   381                           ; 2 bytes @ 0x38
   382  000098                     	ds	2
   383  00009A                     
   384                           ; 3 bytes @ 0x3A
   385  00009A                     	ds	3
   386  00009D                     main@msg:
   387                           	opt stack 0
   388                           
   389                           ; 32 bytes @ 0x3D
   390  00009D                     	ds	32
   391  0000BD                     main@delay:
   392                           	opt stack 0
   393                           
   394                           ; 4 bytes @ 0x5D
   395  0000BD                     	ds	4
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1l	equ	0xFE1
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	opt stack 0
   408  000001                     ??_isdigit:
   409  000001                     ?___wmul:
   410                           	opt stack 0
   411  000001                     ?i2___awdiv:
   412                           	opt stack 0
   413  000001                     ___wmul@multiplier:
   414                           	opt stack 0
   415  000001                     i2___awdiv@dividend:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x0
   419  000001                     	ds	1
   420  000002                     _isdigit$837:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x1
   424  000002                     	ds	1
   425  000003                     isdigit@c:
   426                           	opt stack 0
   427  000003                     ___wmul@multiplicand:
   428                           	opt stack 0
   429  000003                     i2___awdiv@divisor:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000003                     	ds	2
   434  000005                     i2___awdiv@counter:
   435                           	opt stack 0
   436  000005                     ___wmul@product:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x4
   440  000005                     	ds	1
   441  000006                     i2___awdiv@sign:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ?_atoi:
   447                           	opt stack 0
   448  000007                     atoi@s:
   449                           	opt stack 0
   450  000007                     i2___awdiv@quotient:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x6
   454  000007                     	ds	2
   455  000009                     ??_atoi:
   456                           
   457                           ; 0 bytes @ 0x8
   458  000009                     	ds	2
   459  00000B                     atoi@sign:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0xA
   463  00000B                     	ds	1
   464  00000C                     atoi@a:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0xB
   468  00000C                     	ds	2
   469  00000E                     i2pwm@dutycycle:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0xD
   473  00000E                     	ds	2
   474  000010                     i2pwm@color:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xF
   478  000010                     	ds	1
   479  000011                     ??_high_isr:
   480                           
   481                           ; 0 bytes @ 0x10
   482  000011                     	ds	14
   483  00001F                     high_isr@input:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x1E
   487  00001F                     	ds	2
   488  000021                     ??___ftpack:
   489  000021                     ?_readADC:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x20
   493  000021                     	ds	3
   494  000024                     tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           ; 0 bytes @ 0x23
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 163 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  argc            2   56[BANK0 ] int 
   512 ;;  argv            3   58[BANK0 ] PTR PTR unsigned char 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  msg            32   61[BANK0 ] unsigned char [32]
   515 ;;  delay           4   93[BANK0 ] long 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  2   56[BANK0 ] int 
   518 ;; Registers used:
   519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   525 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   526 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   528 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   529 ;;Total ram usage:       41 bytes
   530 ;; Hardware stack levels required when called:    5
   531 ;; This function calls:
   532 ;;		___ftdiv
   533 ;;		___ftmul
   534 ;;		___fttol
   535 ;;		___lwtoft
   536 ;;		_initialisation
   537 ;;		_pwm
   538 ;;		_readADC
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text0
   545  000180                     __ptext0:
   546                           	opt stack 0
   547  000180                     _main:
   548                           	opt stack 26
   549                           
   550                           ;main.c: 165: long int delay=0;
   551                           
   552                           ;incstack = 0
   553  000180  0E00               	movlw	0
   554  000182  0100               	movlb	0	; () banked
   555  000184  6FBD               	movwf	main@delay& (0+255),b
   556  000186  0E00               	movlw	0
   557  000188  6FBE               	movwf	(main@delay+1)& (0+255),b
   558  00018A  0E00               	movlw	0
   559  00018C  6FBF               	movwf	(main@delay+2)& (0+255),b
   560  00018E  0E00               	movlw	0
   561  000190  6FC0               	movwf	(main@delay+3)& (0+255),b
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 166: initialisation();
   565  000192  ECC1  F006         	call	_initialisation	;wreg free
   566                           
   567                           ;main.c: 167: char msg[32]="";
   568  000196  EE20  F0C1         	lfsr	2,main@F19164
   569  00019A  EE10  F09D         	lfsr	1,main@msg
   570  00019E  0E1F               	movlw	31
   571  0001A0                     u1611:
   572  0001A0  CFDB FFE3          	movff	plusw2,plusw1
   573  0001A4  06E8               	decf	wreg,f,c
   574  0001A6  E2FC               	bc	u1611
   575  0001A8  D000               	goto	l2102
   576  0001AA                     l2102:
   577                           
   578                           ;main.c: 179: for(delay=0;delay<1000;delay++);
   579  0001AA  0E00               	movlw	0
   580  0001AC  0100               	movlb	0	; () banked
   581  0001AE  6FBD               	movwf	main@delay& (0+255),b
   582  0001B0  0E00               	movlw	0
   583  0001B2  6FBE               	movwf	(main@delay+1)& (0+255),b
   584  0001B4  0E00               	movlw	0
   585  0001B6  6FBF               	movwf	(main@delay+2)& (0+255),b
   586  0001B8  0E00               	movlw	0
   587  0001BA  6FC0               	movwf	(main@delay+3)& (0+255),b
   588  0001BC                     l2104:
   589                           
   590                           ; BSR set to: 0
   591  0001BC  0100               	movlb	0	; () banked
   592  0001BE  BFC0               	btfsc	(main@delay+3)& (0+255),7,b
   593  0001C0  D00F               	goto	l2108
   594  0001C2  0100               	movlb	0	; () banked
   595  0001C4  51C0               	movf	(main@delay+3)& (0+255),w,b
   596  0001C6  0100               	movlb	0	; () banked
   597  0001C8  11BF               	iorwf	(main@delay+2)& (0+255),w,b
   598  0001CA  E113               	bnz	l2110
   599  0001CC  0EE8               	movlw	232
   600  0001CE  0100               	movlb	0	; () banked
   601  0001D0  5DBD               	subwf	main@delay& (0+255),w,b
   602  0001D2  0E03               	movlw	3
   603  0001D4  0100               	movlb	0	; () banked
   604  0001D6  59BE               	subwfb	(main@delay+1)& (0+255),w,b
   605  0001D8  B0D8               	btfsc	status,0,c
   606  0001DA  D00B               	goto	l2110
   607  0001DC  D001               	goto	l2108
   608                           
   609                           ; BSR set to: 0
   610  0001DE  D009               	goto	l2110
   611  0001E0                     l2108:
   612                           
   613                           ; BSR set to: 0
   614  0001E0  0E01               	movlw	1
   615  0001E2  0100               	movlb	0	; () banked
   616  0001E4  27BD               	addwf	main@delay& (0+255),f,b
   617  0001E6  0E00               	movlw	0
   618  0001E8  23BE               	addwfc	(main@delay+1)& (0+255),f,b
   619  0001EA  23BF               	addwfc	(main@delay+2)& (0+255),f,b
   620  0001EC  23C0               	addwfc	(main@delay+3)& (0+255),f,b
   621  0001EE  D7E6               	goto	l2104
   622  0001F0  D000               	goto	l2110
   623  0001F2                     l2110:
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 181: pwm('R',(int)(1023*(float)readADC(1)/65520.));
   627  0001F2  0EF0               	movlw	240
   628  0001F4  0100               	movlb	0	; () banked
   629  0001F6  6F7A               	movwf	___ftdiv@f2& (0+255),b
   630  0001F8  0E7F               	movlw	127
   631  0001FA  0100               	movlb	0	; () banked
   632  0001FC  6F7B               	movwf	(___ftdiv@f2+1)& (0+255),b
   633  0001FE  0E47               	movlw	71
   634  000200  0100               	movlb	0	; () banked
   635  000202  6F7C               	movwf	(___ftdiv@f2+2)& (0+255),b
   636  000204  0EC0               	movlw	192
   637  000206  0100               	movlb	0	; () banked
   638  000208  6F6B               	movwf	___ftmul@f2& (0+255),b
   639  00020A  0E7F               	movlw	127
   640  00020C  0100               	movlb	0	; () banked
   641  00020E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
   642  000210  0E44               	movlw	68
   643  000212  0100               	movlb	0	; () banked
   644  000214  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
   645  000216  0E01               	movlw	1
   646  000218  ECE3  F005         	call	_readADC
   647  00021C  C021  F065         	movff	?_readADC,___lwtoft@c
   648  000220  C022  F066         	movff	?_readADC+1,___lwtoft@c+1
   649  000224  EC64  F006         	call	___lwtoft	;wreg free
   650  000228  C065  F068         	movff	?___lwtoft,___ftmul@f1
   651  00022C  C066  F069         	movff	?___lwtoft+1,___ftmul@f1+1
   652  000230  C067  F06A         	movff	?___lwtoft+2,___ftmul@f1+2
   653  000234  ECAA  F001         	call	___ftmul	;wreg free
   654  000238  C068  F077         	movff	?___ftmul,___ftdiv@f1
   655  00023C  C069  F078         	movff	?___ftmul+1,___ftdiv@f1+1
   656  000240  C06A  F079         	movff	?___ftmul+2,___ftdiv@f1+2
   657  000244  EC09  F003         	call	___ftdiv	;wreg free
   658  000248  C077  F086         	movff	?___ftdiv,___fttol@f1
   659  00024C  C078  F087         	movff	?___ftdiv+1,___fttol@f1+1
   660  000250  C079  F088         	movff	?___ftdiv+2,___fttol@f1+2
   661  000254  EC60  F002         	call	___fttol	;wreg free
   662  000258  C086  F095         	movff	?___fttol,pwm@dutycycle
   663  00025C  C087  F096         	movff	?___fttol+1,pwm@dutycycle+1
   664  000260  0E52               	movlw	82
   665  000262  EC08  F005         	call	_pwm
   666                           
   667                           ;main.c: 182: pwm('G',(int)(1023*(float)readADC(2)/65520.));
   668  000266  0EF0               	movlw	240
   669  000268  0100               	movlb	0	; () banked
   670  00026A  6F7A               	movwf	___ftdiv@f2& (0+255),b
   671  00026C  0E7F               	movlw	127
   672  00026E  0100               	movlb	0	; () banked
   673  000270  6F7B               	movwf	(___ftdiv@f2+1)& (0+255),b
   674  000272  0E47               	movlw	71
   675  000274  0100               	movlb	0	; () banked
   676  000276  6F7C               	movwf	(___ftdiv@f2+2)& (0+255),b
   677  000278  0EC0               	movlw	192
   678  00027A  0100               	movlb	0	; () banked
   679  00027C  6F6B               	movwf	___ftmul@f2& (0+255),b
   680  00027E  0E7F               	movlw	127
   681  000280  0100               	movlb	0	; () banked
   682  000282  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
   683  000284  0E44               	movlw	68
   684  000286  0100               	movlb	0	; () banked
   685  000288  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
   686  00028A  0E02               	movlw	2
   687  00028C  ECE3  F005         	call	_readADC
   688  000290  C021  F065         	movff	?_readADC,___lwtoft@c
   689  000294  C022  F066         	movff	?_readADC+1,___lwtoft@c+1
   690  000298  EC64  F006         	call	___lwtoft	;wreg free
   691  00029C  C065  F068         	movff	?___lwtoft,___ftmul@f1
   692  0002A0  C066  F069         	movff	?___lwtoft+1,___ftmul@f1+1
   693  0002A4  C067  F06A         	movff	?___lwtoft+2,___ftmul@f1+2
   694  0002A8  ECAA  F001         	call	___ftmul	;wreg free
   695  0002AC  C068  F077         	movff	?___ftmul,___ftdiv@f1
   696  0002B0  C069  F078         	movff	?___ftmul+1,___ftdiv@f1+1
   697  0002B4  C06A  F079         	movff	?___ftmul+2,___ftdiv@f1+2
   698  0002B8  EC09  F003         	call	___ftdiv	;wreg free
   699  0002BC  C077  F086         	movff	?___ftdiv,___fttol@f1
   700  0002C0  C078  F087         	movff	?___ftdiv+1,___fttol@f1+1
   701  0002C4  C079  F088         	movff	?___ftdiv+2,___fttol@f1+2
   702  0002C8  EC60  F002         	call	___fttol	;wreg free
   703  0002CC  C086  F095         	movff	?___fttol,pwm@dutycycle
   704  0002D0  C087  F096         	movff	?___fttol+1,pwm@dutycycle+1
   705  0002D4  0E47               	movlw	71
   706  0002D6  EC08  F005         	call	_pwm
   707                           
   708                           ;main.c: 183: pwm('B',(int)(1023*(float)readADC(3)/65520.));
   709  0002DA  0EF0               	movlw	240
   710  0002DC  0100               	movlb	0	; () banked
   711  0002DE  6F7A               	movwf	___ftdiv@f2& (0+255),b
   712  0002E0  0E7F               	movlw	127
   713  0002E2  0100               	movlb	0	; () banked
   714  0002E4  6F7B               	movwf	(___ftdiv@f2+1)& (0+255),b
   715  0002E6  0E47               	movlw	71
   716  0002E8  0100               	movlb	0	; () banked
   717  0002EA  6F7C               	movwf	(___ftdiv@f2+2)& (0+255),b
   718  0002EC  0EC0               	movlw	192
   719  0002EE  0100               	movlb	0	; () banked
   720  0002F0  6F6B               	movwf	___ftmul@f2& (0+255),b
   721  0002F2  0E7F               	movlw	127
   722  0002F4  0100               	movlb	0	; () banked
   723  0002F6  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
   724  0002F8  0E44               	movlw	68
   725  0002FA  0100               	movlb	0	; () banked
   726  0002FC  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
   727  0002FE  0E03               	movlw	3
   728  000300  ECE3  F005         	call	_readADC
   729  000304  C021  F065         	movff	?_readADC,___lwtoft@c
   730  000308  C022  F066         	movff	?_readADC+1,___lwtoft@c+1
   731  00030C  EC64  F006         	call	___lwtoft	;wreg free
   732  000310  C065  F068         	movff	?___lwtoft,___ftmul@f1
   733  000314  C066  F069         	movff	?___lwtoft+1,___ftmul@f1+1
   734  000318  C067  F06A         	movff	?___lwtoft+2,___ftmul@f1+2
   735  00031C  ECAA  F001         	call	___ftmul	;wreg free
   736  000320  C068  F077         	movff	?___ftmul,___ftdiv@f1
   737  000324  C069  F078         	movff	?___ftmul+1,___ftdiv@f1+1
   738  000328  C06A  F079         	movff	?___ftmul+2,___ftdiv@f1+2
   739  00032C  EC09  F003         	call	___ftdiv	;wreg free
   740  000330  C077  F086         	movff	?___ftdiv,___fttol@f1
   741  000334  C078  F087         	movff	?___ftdiv+1,___fttol@f1+1
   742  000338  C079  F088         	movff	?___ftdiv+2,___fttol@f1+2
   743  00033C  EC60  F002         	call	___fttol	;wreg free
   744  000340  C086  F095         	movff	?___fttol,pwm@dutycycle
   745  000344  C087  F096         	movff	?___fttol+1,pwm@dutycycle+1
   746  000348  0E42               	movlw	66
   747  00034A  EC08  F005         	call	_pwm
   748  00034E  D72D               	goto	l2102
   749                           
   750                           ;main.c: 184: }
   751                           ;main.c: 186: return (0);
   752                           ;	Return value of _main is never used
   753  000350  EFBE  F000         	goto	start
   754  000354                     __end_of_main:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           plusw1	equ	0xFE3
   764                           fsr1l	equ	0xFE1
   765                           plusw2	equ	0xFDB
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _readADC *****************
   769 ;; Defined at:
   770 ;;		line 305 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  channel         1    wreg     unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  channel         1    2[BANK0 ] unsigned char 
   775 ;;  tempo           1    3[BANK0 ] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  2   32[COMRAM] unsigned int 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;Total ram usage:        6 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    3
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800  000BC6                     __ptext1:
   801                           	opt stack 0
   802  000BC6                     _readADC:
   803                           	opt stack 27
   804                           
   805                           ;incstack = 0
   806                           ;readADC@channel stored from wreg
   807  000BC6  0100               	movlb	0	; () banked
   808  000BC8  6F62               	movwf	readADC@channel& (0+255),b
   809                           
   810                           ; BSR set to: 0
   811                           ;main.c: 307: char tempo=0;
   812  000BCA  0E00               	movlw	0
   813  000BCC  0100               	movlb	0	; () banked
   814  000BCE  6F63               	movwf	readADC@tempo& (0+255),b
   815                           
   816                           ;main.c: 308: switch (channel)
   817  000BD0  D008               	goto	l1982
   818  000BD2                     l177:
   819                           
   820                           ; BSR set to: 0
   821                           ;main.c: 311: {
   822                           ;main.c: 312: CHS1=0;
   823  000BD2  96C2               	bcf	4034,3,c	;volatile
   824  000BD4  D004               	goto	L1
   825  000BD6                     l179:
   826                           
   827                           ; BSR set to: 0
   828                           ;main.c: 317: {
   829                           ;main.c: 318: CHS1=1;
   830  000BD6  86C2               	bsf	4034,3,c	;volatile
   831                           
   832                           ;main.c: 319: CHS0=0;
   833  000BD8  94C2               	bcf	4034,2,c	;volatile
   834                           
   835                           ;main.c: 320: break;
   836  000BDA  D00F               	goto	l1984
   837  000BDC                     l180:
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 323: {
   841                           ;main.c: 324: CHS1=1;
   842  000BDC  86C2               	bsf	4034,3,c	;volatile
   843  000BDE                     L1:
   844                           
   845                           ;main.c: 325: CHS0=1;
   846  000BDE  84C2               	bsf	4034,2,c	;volatile
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 327: }
   850                           ;main.c: 328: }
   851                           
   852                           ;main.c: 326: break;
   853  000BE0  D00C               	goto	l1984
   854  000BE2                     l1982:
   855                           
   856                           ; BSR set to: 0
   857  000BE2  0100               	movlb	0	; () banked
   858  000BE4  5162               	movf	readADC@channel& (0+255),w,b
   859                           
   860                           ; Switch size 1, requested type "space"
   861                           ; Number of cases is 3, Range of values is 1 to 3
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte           10     6 (average)
   865                           ;	Chosen strategy is simple_byte
   866  000BE6  0A01               	xorlw	1	; case 1
   867  000BE8  B4D8               	btfsc	status,2,c
   868  000BEA  D7F3               	goto	l177
   869  000BEC  0A03               	xorlw	3	; case 2
   870  000BEE  B4D8               	btfsc	status,2,c
   871  000BF0  D7F2               	goto	l179
   872  000BF2  0A01               	xorlw	1	; case 3
   873  000BF4  B4D8               	btfsc	status,2,c
   874  000BF6  D7F2               	goto	l180
   875  000BF8  D000               	goto	l1984
   876  000BFA                     l1984:
   877                           
   878                           ; BSR set to: 0
   879                           ;main.c: 329: for(tempo=0;tempo<100;tempo++);
   880  000BFA  0E00               	movlw	0
   881  000BFC  0100               	movlb	0	; () banked
   882  000BFE  6F63               	movwf	readADC@tempo& (0+255),b
   883  000C00  D003               	goto	l1992
   884                           
   885                           ; BSR set to: 0
   886                           
   887                           ; BSR set to: 0
   888  000C02  D006               	goto	l182
   889  000C04                     l1990:
   890                           
   891                           ; BSR set to: 0
   892  000C04  0100               	movlb	0	; () banked
   893  000C06  2B63               	incf	readADC@tempo& (0+255),f,b
   894  000C08                     l1992:
   895                           
   896                           ; BSR set to: 0
   897  000C08  0E63               	movlw	99
   898  000C0A  0100               	movlb	0	; () banked
   899  000C0C  6563               	cpfsgt	readADC@tempo& (0+255),b
   900  000C0E  D7FA               	goto	l1990
   901  000C10                     l182:
   902                           
   903                           ; BSR set to: 0
   904                           ;main.c: 330: GO_nDONE = 1;
   905  000C10  82C2               	bsf	4034,1,c	;volatile
   906                           
   907                           ;main.c: 331: while(GO_nDONE);
   908  000C12  D000               	goto	l183
   909  000C14                     l183:
   910                           
   911                           ; BSR set to: 0
   912  000C14  B2C2               	btfsc	4034,1,c	;volatile
   913  000C16  D7FE               	goto	l183
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 333: return ((ADRESH<<8)+ADRESL);
   917                           
   918                           ; BSR set to: 0
   919  000C18  50C4               	movf	4036,w,c	;volatile
   920  000C1A  0100               	movlb	0	; () banked
   921  000C1C  6F61               	movwf	(??_readADC+1)& (0+255),b
   922  000C1E  6B60               	clrf	??_readADC& (0+255),b
   923  000C20  50C3               	movf	4035,w,c	;volatile
   924  000C22  0100               	movlb	0	; () banked
   925  000C24  2560               	addwf	??_readADC& (0+255),w,b
   926  000C26  6E21               	movwf	?_readADC,c
   927  000C28  0E00               	movlw	0
   928  000C2A  0100               	movlb	0	; () banked
   929  000C2C  2161               	addwfc	(??_readADC+1)& (0+255),w,b
   930  000C2E  6E22               	movwf	?_readADC+1,c
   931  000C30  0012               	return	
   932                           
   933                           ; BSR set to: 0
   934                           
   935                           ; BSR set to: 0
   936  000C32  0012               	return		;funcret
   937  000C34                     __end_of_readADC:
   938                           	opt stack 0
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec1	equ	0xFE5
   946                           plusw1	equ	0xFE3
   947                           fsr1l	equ	0xFE1
   948                           plusw2	equ	0xFDB
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _pwm *****************
   952 ;; Defined at:
   953 ;;		line 8 in file "converter.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  color           1    wreg     unsigned char 
   956 ;;  dutycycle       2   53[BANK0 ] int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  color           1   55[BANK0 ] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;		None               void
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   972 ;;Total ram usage:        3 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    4
   975 ;; This function calls:
   976 ;;		___awdiv
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text2
   983  000A10                     __ptext2:
   984                           	opt stack 0
   985  000A10                     _pwm:
   986                           	opt stack 26
   987                           
   988                           ; BSR set to: 0
   989                           ;incstack = 0
   990                           ;pwm@color stored from wreg
   991  000A10  0100               	movlb	0	; () banked
   992  000A12  6F97               	movwf	pwm@color& (0+255),b
   993                           
   994                           ; BSR set to: 0
   995                           ;converter.c: 9: switch(color){
   996  000A14  D03C               	goto	l1976
   997  000A16                     l1956:
   998                           
   999                           ; BSR set to: 0
  1000                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1001  000A16  C095  F060         	movff	pwm@dutycycle,___awdiv@dividend
  1002  000A1A  C096  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1003  000A1E  0E00               	movlw	0
  1004  000A20  0100               	movlb	0	; () banked
  1005  000A22  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1006  000A24  0E04               	movlw	4
  1007  000A26  6F62               	movwf	___awdiv@divisor& (0+255),b
  1008  000A28  ECA0  F004         	call	___awdiv	;wreg free
  1009  000A2C  0100               	movlb	0	; () banked
  1010  000A2E  5160               	movf	?___awdiv& (0+255),w,b
  1011  000A30  010F               	movlb	15	; () banked
  1012  000A32  6F51               	movwf	81,b	;volatile
  1013                           
  1014                           ; BSR set to: 15
  1015                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1016  000A34  010F               	movlb	15	; () banked
  1017  000A36  9B50               	bcf	80,5,b	;volatile
  1018                           
  1019                           ; BSR set to: 15
  1020                           ;converter.c: 13: DC2B0=dutycycle%1;
  1021  000A38  010F               	movlb	15	; () banked
  1022  000A3A  9950               	bcf	80,4,b	;volatile
  1023                           
  1024                           ;converter.c: 14: break;
  1025  000A3C  0012               	return	
  1026  000A3E                     l1962:
  1027                           
  1028                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1029  000A3E  C095  F060         	movff	pwm@dutycycle,___awdiv@dividend
  1030  000A42  C096  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1031  000A46  0E00               	movlw	0
  1032  000A48  0100               	movlb	0	; () banked
  1033  000A4A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1034  000A4C  0E04               	movlw	4
  1035  000A4E  6F62               	movwf	___awdiv@divisor& (0+255),b
  1036  000A50  ECA0  F004         	call	___awdiv	;wreg free
  1037  000A54  0100               	movlb	0	; () banked
  1038  000A56  5160               	movf	?___awdiv& (0+255),w,b
  1039  000A58  010F               	movlb	15	; () banked
  1040  000A5A  6F4E               	movwf	78,b	;volatile
  1041                           
  1042                           ; BSR set to: 15
  1043                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1044  000A5C  010F               	movlb	15	; () banked
  1045  000A5E  9B4D               	bcf	77,5,b	;volatile
  1046                           
  1047                           ; BSR set to: 15
  1048                           ;converter.c: 18: DC3B0=0;
  1049  000A60  010F               	movlb	15	; () banked
  1050  000A62  994D               	bcf	77,4,b	;volatile
  1051                           
  1052                           ;converter.c: 19: break;
  1053  000A64  0012               	return	
  1054  000A66                     l1968:
  1055                           
  1056                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1057  000A66  C095  F060         	movff	pwm@dutycycle,___awdiv@dividend
  1058  000A6A  C096  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1059  000A6E  0E00               	movlw	0
  1060  000A70  0100               	movlb	0	; () banked
  1061  000A72  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1062  000A74  0E04               	movlw	4
  1063  000A76  6F62               	movwf	___awdiv@divisor& (0+255),b
  1064  000A78  ECA0  F004         	call	___awdiv	;wreg free
  1065  000A7C  0100               	movlb	0	; () banked
  1066  000A7E  5160               	movf	?___awdiv& (0+255),w,b
  1067  000A80  010F               	movlb	15	; () banked
  1068  000A82  6F4B               	movwf	75,b	;volatile
  1069                           
  1070                           ; BSR set to: 15
  1071                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1072  000A84  010F               	movlb	15	; () banked
  1073  000A86  9B4A               	bcf	74,5,b	;volatile
  1074                           
  1075                           ; BSR set to: 15
  1076                           ;converter.c: 23: DC4B0=dutycycle%1;
  1077  000A88  010F               	movlb	15	; () banked
  1078  000A8A  994A               	bcf	74,4,b	;volatile
  1079                           
  1080                           ; BSR set to: 15
  1081                           ;converter.c: 25: }
  1082                           
  1083                           ;converter.c: 24: break;
  1084  000A8C  0012               	return	
  1085  000A8E                     l1976:
  1086  000A8E  0100               	movlb	0	; () banked
  1087  000A90  5197               	movf	pwm@color& (0+255),w,b
  1088                           
  1089                           ; Switch size 1, requested type "space"
  1090                           ; Number of cases is 3, Range of values is 66 to 82
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte           10     6 (average)
  1094                           ;	Chosen strategy is simple_byte
  1095  000A92  0A42               	xorlw	66	; case 66
  1096  000A94  B4D8               	btfsc	status,2,c
  1097  000A96  D7BF               	goto	l1956
  1098  000A98  0A05               	xorlw	5	; case 71
  1099  000A9A  B4D8               	btfsc	status,2,c
  1100  000A9C  D7E4               	goto	l1968
  1101  000A9E  0A15               	xorlw	21	; case 82
  1102  000AA0  A4D8               	btfss	status,2,c
  1103  000AA2  0012               	return	
  1104  000AA4  D7CC               	goto	l1962
  1105                           
  1106                           ; BSR set to: 0
  1107  000AA6  0012               	return		;funcret
  1108  000AA8                     __end_of_pwm:
  1109                           	opt stack 0
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec1	equ	0xFE5
  1117                           plusw1	equ	0xFE3
  1118                           fsr1l	equ	0xFE1
  1119                           plusw2	equ	0xFDB
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function ___awdiv *****************
  1123 ;; Defined at:
  1124 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  dividend        2    0[BANK0 ] int 
  1127 ;;  divisor         2    2[BANK0 ] int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  quotient        2    6[BANK0 ] int 
  1130 ;;  sign            1    5[BANK0 ] unsigned char 
  1131 ;;  counter         1    4[BANK0 ] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  2    0[BANK0 ] int 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1142 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;Total ram usage:        8 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    3
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_pwm
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text3
  1156  000940                     __ptext3:
  1157                           	opt stack 0
  1158  000940                     ___awdiv:
  1159                           	opt stack 26
  1160                           
  1161                           ;incstack = 0
  1162  000940  0E00               	movlw	0
  1163  000942  0100               	movlb	0	; () banked
  1164  000944  6F65               	movwf	___awdiv@sign& (0+255),b
  1165                           
  1166                           ; BSR set to: 0
  1167  000946  0100               	movlb	0	; () banked
  1168  000948  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1169  00094A  D009               	goto	l1918
  1170                           
  1171                           ; BSR set to: 0
  1172  00094C  0100               	movlb	0	; () banked
  1173  00094E  6D62               	negf	___awdiv@divisor& (0+255),b
  1174  000950  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1175  000952  B0D8               	btfsc	status,0,c
  1176  000954  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1177                           
  1178                           ; BSR set to: 0
  1179  000956  0E01               	movlw	1
  1180  000958  0100               	movlb	0	; () banked
  1181  00095A  6F65               	movwf	___awdiv@sign& (0+255),b
  1182  00095C  D000               	goto	l1918
  1183  00095E                     l1918:
  1184                           
  1185                           ; BSR set to: 0
  1186  00095E  0100               	movlb	0	; () banked
  1187  000960  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1188  000962  D009               	goto	l1924
  1189                           
  1190                           ; BSR set to: 0
  1191  000964  0100               	movlb	0	; () banked
  1192  000966  6D60               	negf	___awdiv@dividend& (0+255),b
  1193  000968  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1194  00096A  B0D8               	btfsc	status,0,c
  1195  00096C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1196                           
  1197                           ; BSR set to: 0
  1198  00096E  0E01               	movlw	1
  1199  000970  0100               	movlb	0	; () banked
  1200  000972  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  1201  000974  D000               	goto	l1924
  1202  000976                     l1924:
  1203                           
  1204                           ; BSR set to: 0
  1205  000976  0E00               	movlw	0
  1206  000978  0100               	movlb	0	; () banked
  1207  00097A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  1208  00097C  0E00               	movlw	0
  1209  00097E  6F66               	movwf	___awdiv@quotient& (0+255),b
  1210                           
  1211                           ; BSR set to: 0
  1212  000980  0100               	movlb	0	; () banked
  1213  000982  5162               	movf	___awdiv@divisor& (0+255),w,b
  1214  000984  0100               	movlb	0	; () banked
  1215  000986  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1216  000988  B4D8               	btfsc	status,2,c
  1217  00098A  D031               	goto	l1946
  1218                           
  1219                           ; BSR set to: 0
  1220  00098C  0E01               	movlw	1
  1221  00098E  0100               	movlb	0	; () banked
  1222  000990  6F64               	movwf	___awdiv@counter& (0+255),b
  1223  000992  D007               	goto	l1932
  1224  000994                     l1930:
  1225                           
  1226                           ; BSR set to: 0
  1227  000994  0100               	movlb	0	; () banked
  1228  000996  90D8               	bcf	status,0,c
  1229  000998  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  1230  00099A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1231  00099C  0100               	movlb	0	; () banked
  1232  00099E  2B64               	incf	___awdiv@counter& (0+255),f,b
  1233  0009A0  D000               	goto	l1932
  1234  0009A2                     l1932:
  1235                           
  1236                           ; BSR set to: 0
  1237  0009A2  0100               	movlb	0	; () banked
  1238  0009A4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1239  0009A6  D002               	goto	l1934
  1240  0009A8  D7F5               	goto	l1930
  1241                           
  1242                           ; BSR set to: 0
  1243  0009AA  D000               	goto	l1934
  1244  0009AC                     l1934:
  1245                           
  1246                           ; BSR set to: 0
  1247  0009AC  0100               	movlb	0	; () banked
  1248  0009AE  90D8               	bcf	status,0,c
  1249  0009B0  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  1250  0009B2  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1251                           
  1252                           ; BSR set to: 0
  1253  0009B4  0100               	movlb	0	; () banked
  1254  0009B6  5162               	movf	___awdiv@divisor& (0+255),w,b
  1255  0009B8  0100               	movlb	0	; () banked
  1256  0009BA  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  1257  0009BC  0100               	movlb	0	; () banked
  1258  0009BE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1259  0009C0  0100               	movlb	0	; () banked
  1260  0009C2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1261  0009C4  A0D8               	btfss	status,0,c
  1262  0009C6  D00B               	goto	l1942
  1263                           
  1264                           ; BSR set to: 0
  1265  0009C8  0100               	movlb	0	; () banked
  1266  0009CA  5162               	movf	___awdiv@divisor& (0+255),w,b
  1267  0009CC  0100               	movlb	0	; () banked
  1268  0009CE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  1269  0009D0  0100               	movlb	0	; () banked
  1270  0009D2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1271  0009D4  0100               	movlb	0	; () banked
  1272  0009D6  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1273                           
  1274                           ; BSR set to: 0
  1275  0009D8  0100               	movlb	0	; () banked
  1276  0009DA  8166               	bsf	___awdiv@quotient& (0+255),0,b
  1277  0009DC  D000               	goto	l1942
  1278  0009DE                     l1942:
  1279                           
  1280                           ; BSR set to: 0
  1281  0009DE  0100               	movlb	0	; () banked
  1282  0009E0  90D8               	bcf	status,0,c
  1283  0009E2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1284  0009E4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  1285                           
  1286                           ; BSR set to: 0
  1287  0009E6  0100               	movlb	0	; () banked
  1288  0009E8  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  1289  0009EA  D7E0               	goto	l1934
  1290                           
  1291                           ; BSR set to: 0
  1292  0009EC  D000               	goto	l1946
  1293  0009EE                     l1946:
  1294                           
  1295                           ; BSR set to: 0
  1296  0009EE  0100               	movlb	0	; () banked
  1297  0009F0  5165               	movf	___awdiv@sign& (0+255),w,b
  1298  0009F2  0100               	movlb	0	; () banked
  1299  0009F4  B4D8               	btfsc	status,2,c
  1300  0009F6  D006               	goto	l1950
  1301                           
  1302                           ; BSR set to: 0
  1303  0009F8  0100               	movlb	0	; () banked
  1304  0009FA  6D66               	negf	___awdiv@quotient& (0+255),b
  1305  0009FC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1306  0009FE  B0D8               	btfsc	status,0,c
  1307  000A00  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1308  000A02  D000               	goto	l1950
  1309  000A04                     l1950:
  1310                           
  1311                           ; BSR set to: 0
  1312  000A04  C066  F060         	movff	___awdiv@quotient,?___awdiv
  1313  000A08  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  1314  000A0C  0012               	return	
  1315                           
  1316                           ; BSR set to: 0
  1317                           
  1318                           ; BSR set to: 0
  1319  000A0E  0012               	return		;funcret
  1320  000A10                     __end_of___awdiv:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           plusw1	equ	0xFE3
  1330                           fsr1l	equ	0xFE1
  1331                           plusw2	equ	0xFDB
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _initialisation *****************
  1335 ;; Defined at:
  1336 ;;		line 190 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    4
  1357 ;; This function calls:
  1358 ;;		_initADC
  1359 ;;		_initComms
  1360 ;;		_initPWM
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text4
  1367  000D82                     __ptext4:
  1368                           	opt stack 0
  1369  000D82                     _initialisation:
  1370                           	opt stack 26
  1371                           
  1372                           ;main.c: 194: initPWM();
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;incstack = 0
  1376  000D82  EC1A  F006         	call	_initPWM	;wreg free
  1377                           
  1378                           ;main.c: 198: initComms();
  1379  000D86  EC7A  F006         	call	_initComms	;wreg free
  1380                           
  1381                           ;main.c: 202: initADC();
  1382  000D8A  ECB3  F006         	call	_initADC	;wreg free
  1383  000D8E  0012               	return		;funcret
  1384  000D90                     __end_of_initialisation:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postdec1	equ	0xFE5
  1393                           plusw1	equ	0xFE3
  1394                           fsr1l	equ	0xFE1
  1395                           plusw2	equ	0xFDB
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _initPWM *****************
  1399 ;; Defined at:
  1400 ;;		line 207 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;		None               void
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    3
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_initialisation
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text5
  1429  000C34                     __ptext5:
  1430                           	opt stack 0
  1431  000C34                     _initPWM:
  1432                           	opt stack 26
  1433                           
  1434                           ;main.c: 212: PR2=0xFF;
  1435                           
  1436                           ;incstack = 0
  1437  000C34  68CB               	setf	4043,c	;volatile
  1438                           
  1439                           ;main.c: 216: CCPR2L=0b00000000;
  1440  000C36  0E00               	movlw	0
  1441  000C38  010F               	movlb	15	; () banked
  1442  000C3A  6F51               	movwf	81,b	;volatile
  1443                           
  1444                           ;main.c: 217: CCPR3L=0b00000000;
  1445  000C3C  0E00               	movlw	0
  1446  000C3E  010F               	movlb	15	; () banked
  1447  000C40  6F4E               	movwf	78,b	;volatile
  1448                           
  1449                           ;main.c: 218: CCPR4L=0b00000000;
  1450  000C42  0E00               	movlw	0
  1451  000C44  010F               	movlb	15	; () banked
  1452  000C46  6F4B               	movwf	75,b	;volatile
  1453                           
  1454                           ; BSR set to: 15
  1455                           ;main.c: 219: DC2B1=0;
  1456  000C48  010F               	movlb	15	; () banked
  1457  000C4A  9B50               	bcf	80,5,b	;volatile
  1458                           
  1459                           ; BSR set to: 15
  1460                           ;main.c: 220: DC2B0=0;
  1461  000C4C  010F               	movlb	15	; () banked
  1462  000C4E  9950               	bcf	80,4,b	;volatile
  1463                           
  1464                           ; BSR set to: 15
  1465                           ;main.c: 221: DC3B1=0;
  1466  000C50  010F               	movlb	15	; () banked
  1467  000C52  9B4D               	bcf	77,5,b	;volatile
  1468                           
  1469                           ; BSR set to: 15
  1470                           ;main.c: 222: DC3B0=0;
  1471  000C54  010F               	movlb	15	; () banked
  1472  000C56  994D               	bcf	77,4,b	;volatile
  1473                           
  1474                           ; BSR set to: 15
  1475                           ;main.c: 223: DC4B1=0;
  1476  000C58  010F               	movlb	15	; () banked
  1477  000C5A  9B4A               	bcf	74,5,b	;volatile
  1478                           
  1479                           ; BSR set to: 15
  1480                           ;main.c: 224: DC4B0=0;
  1481  000C5C  010F               	movlb	15	; () banked
  1482  000C5E  994A               	bcf	74,4,b	;volatile
  1483                           
  1484                           ; BSR set to: 15
  1485                           ;main.c: 230: TRISC=TRISC & 0b00111011;
  1486  000C60  5094               	movf	3988,w,c	;volatile
  1487  000C62  0B3B               	andlw	59
  1488  000C64  6E94               	movwf	3988,c	;volatile
  1489                           
  1490                           ; BSR set to: 15
  1491                           ;main.c: 233: T2CKPS1=0;
  1492  000C66  92CA               	bcf	4042,1,c	;volatile
  1493                           
  1494                           ; BSR set to: 15
  1495                           ;main.c: 234: T2CKPS0=0;
  1496  000C68  90CA               	bcf	4042,0,c	;volatile
  1497                           
  1498                           ; BSR set to: 15
  1499                           ;main.c: 237: TMR2ON = 1;
  1500  000C6A  84CA               	bsf	4042,2,c	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503                           ;main.c: 240: CCP2M2=1;
  1504  000C6C  010F               	movlb	15	; () banked
  1505  000C6E  8550               	bsf	80,2,b	;volatile
  1506                           
  1507                           ; BSR set to: 15
  1508                           ;main.c: 241: CCP2M3=1;
  1509  000C70  010F               	movlb	15	; () banked
  1510  000C72  8750               	bsf	80,3,b	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;main.c: 242: CCP3M2=1;
  1514  000C74  010F               	movlb	15	; () banked
  1515  000C76  854D               	bsf	77,2,b	;volatile
  1516                           
  1517                           ; BSR set to: 15
  1518                           ;main.c: 243: CCP3M3=1;
  1519  000C78  010F               	movlb	15	; () banked
  1520  000C7A  874D               	bsf	77,3,b	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;main.c: 244: CCP4M2=1;
  1524  000C7C  010F               	movlb	15	; () banked
  1525  000C7E  854A               	bsf	74,2,b	;volatile
  1526                           
  1527                           ; BSR set to: 15
  1528                           ;main.c: 245: CCP4M3=1;
  1529  000C80  010F               	movlb	15	; () banked
  1530  000C82  874A               	bsf	74,3,b	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533  000C84  0012               	return		;funcret
  1534  000C86                     __end_of_initPWM:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           postdec1	equ	0xFE5
  1543                           plusw1	equ	0xFE3
  1544                           fsr1l	equ	0xFE1
  1545                           plusw2	equ	0xFDB
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _initComms *****************
  1549 ;; Defined at:
  1550 ;;		line 249 in file "main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    3
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_initialisation
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text6
  1579  000CF4                     __ptext6:
  1580                           	opt stack 0
  1581  000CF4                     _initComms:
  1582                           	opt stack 26
  1583                           
  1584                           ;main.c: 251: TRISBbits.TRISB7 = 1;
  1585                           
  1586                           ; BSR set to: 15
  1587                           ;incstack = 0
  1588  000CF4  8E93               	bsf	3987,7,c	;volatile
  1589                           
  1590                           ;main.c: 252: TRISBbits.TRISB6 = 0;
  1591  000CF6  9C93               	bcf	3987,6,c	;volatile
  1592                           
  1593                           ;main.c: 255: TXSTA2bits.BRGH = 1;
  1594  000CF8  84BA               	bsf	4026,2,c	;volatile
  1595                           
  1596                           ;main.c: 256: TXSTA2bits.SYNC = 0;
  1597  000CFA  98BA               	bcf	4026,4,c	;volatile
  1598                           
  1599                           ;main.c: 257: SPBRGH2 = 0;
  1600  000CFC  0E00               	movlw	0
  1601  000CFE  6E7C               	movwf	3964,c	;volatile
  1602                           
  1603                           ;main.c: 258: SPBRG2 = 51;
  1604  000D00  0E33               	movlw	51
  1605  000D02  6E7B               	movwf	3963,c	;volatile
  1606                           
  1607                           ;main.c: 259: BAUDCON2 = 0x08;
  1608  000D04  0E08               	movlw	8
  1609  000D06  6EB9               	movwf	4025,c	;volatile
  1610                           
  1611                           ;main.c: 263: TXSTA2bits.TXEN = 1;
  1612  000D08  8ABA               	bsf	4026,5,c	;volatile
  1613                           
  1614                           ;main.c: 264: RCSTA2bits.CREN = 1;
  1615  000D0A  88A6               	bsf	4006,4,c	;volatile
  1616                           
  1617                           ;main.c: 265: RCSTA2bits.SPEN = 1;
  1618  000D0C  8EA6               	bsf	4006,7,c	;volatile
  1619                           
  1620                           ;main.c: 268: RCONbits.IPEN = 1;
  1621  000D0E  8ED0               	bsf	4048,7,c	;volatile
  1622                           
  1623                           ;main.c: 269: INTCONbits.GIE = 1;
  1624  000D10  8EF2               	bsf	intcon,7,c	;volatile
  1625                           
  1626                           ;main.c: 270: INTCONbits.PEIE = 1;
  1627  000D12  8CF2               	bsf	intcon,6,c	;volatile
  1628                           
  1629                           ;main.c: 271: PIE3bits.RC2IE = 0;
  1630  000D14  9AA3               	bcf	4003,5,c	;volatile
  1631                           
  1632                           ;main.c: 272: PIE3bits.TX2IE = 0;
  1633  000D16  98A3               	bcf	4003,4,c	;volatile
  1634                           
  1635                           ;main.c: 274: RC2IF = 0;
  1636  000D18  9AA4               	bcf	4004,5,c	;volatile
  1637  000D1A  0012               	return		;funcret
  1638  000D1C                     __end_of_initComms:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           plusw1	equ	0xFE3
  1649                           fsr1l	equ	0xFE1
  1650                           plusw2	equ	0xFDB
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _initADC *****************
  1654 ;; Defined at:
  1655 ;;		line 277 in file "main.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		None
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    3
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_initialisation
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text7
  1684  000D66                     __ptext7:
  1685                           	opt stack 0
  1686  000D66                     _initADC:
  1687                           	opt stack 26
  1688                           
  1689                           ;main.c: 279: TRIGSEL1=0;
  1690                           
  1691                           ;incstack = 0
  1692  000D66  9EC1               	bcf	4033,7,c	;volatile
  1693                           
  1694                           ;main.c: 280: TRIGSEL0=0;
  1695  000D68  9CC1               	bcf	4033,6,c	;volatile
  1696                           
  1697                           ;main.c: 282: VCFG1=0;
  1698  000D6A  9AC1               	bcf	4033,5,c	;volatile
  1699                           
  1700                           ;main.c: 283: VCFG0=0;
  1701  000D6C  98C1               	bcf	4033,4,c	;volatile
  1702                           
  1703                           ;main.c: 284: VNCFG=0;
  1704  000D6E  96C1               	bcf	4033,3,c	;volatile
  1705                           
  1706                           ;main.c: 288: ANSEL3=1;
  1707  000D70  010F               	movlb	15	; () banked
  1708  000D72  875D               	bsf	93,3,b	;volatile
  1709                           
  1710                           ;main.c: 289: ANSEL2=1;
  1711  000D74  010F               	movlb	15	; () banked
  1712  000D76  855D               	bsf	93,2,b	;volatile
  1713                           
  1714                           ;main.c: 290: ANSEL1=1;
  1715  000D78  010F               	movlb	15	; () banked
  1716  000D7A  835D               	bsf	93,1,b	;volatile
  1717                           
  1718                           ;main.c: 292: ADON=1;
  1719  000D7C  80C2               	bsf	4034,0,c	;volatile
  1720                           
  1721                           ;main.c: 294: CHS0=1;
  1722  000D7E  84C2               	bsf	4034,2,c	;volatile
  1723                           
  1724                           ; BSR set to: 15
  1725  000D80  0012               	return		;funcret
  1726  000D82                     __end_of_initADC:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           intcon	equ	0xFF2
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           plusw1	equ	0xFE3
  1737                           fsr1l	equ	0xFE1
  1738                           plusw2	equ	0xFDB
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function ___lwtoft *****************
  1742 ;; Defined at:
  1743 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  c               2    5[BANK0 ] unsigned int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  3    5[BANK0 ] float 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1757 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;Total ram usage:        3 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		___ftpack
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text8
  1772  000CC8                     __ptext8:
  1773                           	opt stack 0
  1774  000CC8                     ___lwtoft:
  1775                           	opt stack 26
  1776                           
  1777                           ; BSR set to: 15
  1778                           ;incstack = 0
  1779  000CC8  C065  F060         	movff	___lwtoft@c,___ftpack@arg
  1780  000CCC  C066  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  1781  000CD0  0100               	movlb	0	; () banked
  1782  000CD2  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  1783  000CD4  0E8E               	movlw	142
  1784  000CD6  0100               	movlb	0	; () banked
  1785  000CD8  6F63               	movwf	___ftpack@exp& (0+255),b
  1786  000CDA  0E00               	movlw	0
  1787  000CDC  0100               	movlb	0	; () banked
  1788  000CDE  6F64               	movwf	___ftpack@sign& (0+255),b
  1789  000CE0  ECB2  F003         	call	___ftpack	;wreg free
  1790  000CE4  C060  F065         	movff	?___ftpack,?___lwtoft
  1791  000CE8  C061  F066         	movff	?___ftpack+1,?___lwtoft+1
  1792  000CEC  C062  F067         	movff	?___ftpack+2,?___lwtoft+2
  1793  000CF0  0012               	return	
  1794  000CF2  0012               	return		;funcret
  1795  000CF4                     __end_of___lwtoft:
  1796                           	opt stack 0
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           plusw1	equ	0xFE3
  1806                           fsr1l	equ	0xFE1
  1807                           plusw2	equ	0xFDB
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___fttol *****************
  1811 ;; Defined at:
  1812 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  f1              3   38[BANK0 ] float 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  lval            4   48[BANK0 ] unsigned long 
  1817 ;;  exp1            1   52[BANK0 ] unsigned char 
  1818 ;;  sign1           1   47[BANK0 ] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  4   38[BANK0 ] long 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1828 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;Total ram usage:       15 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    3
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text9
  1843  0004C0                     __ptext9:
  1844                           	opt stack 0
  1845  0004C0                     ___fttol:
  1846                           	opt stack 27
  1847                           
  1848                           ;incstack = 0
  1849  0004C0  C088  F08A         	movff	___fttol@f1+2,??___fttol
  1850  0004C4  0100               	movlb	0	; () banked
  1851  0004C6  6B8B               	clrf	(??___fttol+1)& (0+255),b
  1852  0004C8  6B8C               	clrf	(??___fttol+2)& (0+255),b
  1853  0004CA  0100               	movlb	0	; () banked
  1854  0004CC  3587               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1855  0004CE  0100               	movlb	0	; () banked
  1856  0004D0  378A               	rlcf	??___fttol& (0+255),f,b
  1857  0004D2  E301               	bnc	u1101
  1858  0004D4  818B               	bsf	(??___fttol+1)& (0+255),0,b
  1859  0004D6                     u1101:
  1860  0004D6  0100               	movlb	0	; () banked
  1861  0004D8  518A               	movf	??___fttol& (0+255),w,b
  1862  0004DA  0100               	movlb	0	; () banked
  1863  0004DC  6F94               	movwf	___fttol@exp1& (0+255),b
  1864  0004DE  0100               	movlb	0	; () banked
  1865  0004E0  5194               	movf	___fttol@exp1& (0+255),w,b
  1866  0004E2  A4D8               	btfss	status,2,c
  1867  0004E4  D00A               	goto	l1732
  1868                           
  1869                           ; BSR set to: 0
  1870  0004E6  0E00               	movlw	0
  1871  0004E8  0100               	movlb	0	; () banked
  1872  0004EA  6F86               	movwf	?___fttol& (0+255),b
  1873  0004EC  0E00               	movlw	0
  1874  0004EE  6F87               	movwf	(?___fttol+1)& (0+255),b
  1875  0004F0  0E00               	movlw	0
  1876  0004F2  6F88               	movwf	(?___fttol+2)& (0+255),b
  1877  0004F4  0E00               	movlw	0
  1878  0004F6  6F89               	movwf	(?___fttol+3)& (0+255),b
  1879                           
  1880                           ; BSR set to: 0
  1881  0004F8  0012               	return	
  1882  0004FA                     l1732:
  1883                           
  1884                           ; BSR set to: 0
  1885  0004FA  0E17               	movlw	23
  1886  0004FC  0100               	movlb	0	; () banked
  1887  0004FE  6F8A               	movwf	??___fttol& (0+255),b
  1888  000500  C086  F08B         	movff	___fttol@f1,??___fttol+1
  1889  000504  C087  F08C         	movff	___fttol@f1+1,??___fttol+2
  1890  000508  C088  F08D         	movff	___fttol@f1+2,??___fttol+3
  1891  00050C  0100               	movlb	0	; () banked
  1892  00050E  298A               	incf	??___fttol& (0+255),w,b
  1893  000510  0100               	movlb	0	; () banked
  1894  000512  6F8E               	movwf	(??___fttol+4)& (0+255),b
  1895  000514  D005               	goto	u1120
  1896  000516                     u1125:
  1897  000516  0100               	movlb	0	; () banked
  1898  000518  90D8               	bcf	status,0,c
  1899  00051A  338D               	rrcf	(??___fttol+3)& (0+255),f,b
  1900  00051C  338C               	rrcf	(??___fttol+2)& (0+255),f,b
  1901  00051E  338B               	rrcf	(??___fttol+1)& (0+255),f,b
  1902  000520                     u1120:
  1903  000520  0100               	movlb	0	; () banked
  1904  000522  2F8E               	decfsz	(??___fttol+4)& (0+255),f,b
  1905  000524  D7F8               	goto	u1125
  1906  000526  0100               	movlb	0	; () banked
  1907  000528  518B               	movf	(??___fttol+1)& (0+255),w,b
  1908  00052A  0100               	movlb	0	; () banked
  1909  00052C  6F8F               	movwf	___fttol@sign1& (0+255),b
  1910                           
  1911                           ; BSR set to: 0
  1912  00052E  0100               	movlb	0	; () banked
  1913  000530  8F87               	bsf	(___fttol@f1+1)& (0+255),7,b
  1914                           
  1915                           ; BSR set to: 0
  1916  000532  0EFF               	movlw	255
  1917  000534  0100               	movlb	0	; () banked
  1918  000536  1786               	andwf	___fttol@f1& (0+255),f,b
  1919  000538  0EFF               	movlw	255
  1920  00053A  0100               	movlb	0	; () banked
  1921  00053C  1787               	andwf	(___fttol@f1+1)& (0+255),f,b
  1922  00053E  0E00               	movlw	0
  1923  000540  0100               	movlb	0	; () banked
  1924  000542  1788               	andwf	(___fttol@f1+2)& (0+255),f,b
  1925                           
  1926                           ; BSR set to: 0
  1927  000544  0100               	movlb	0	; () banked
  1928  000546  5186               	movf	___fttol@f1& (0+255),w,b
  1929  000548  0100               	movlb	0	; () banked
  1930  00054A  6F90               	movwf	___fttol@lval& (0+255),b
  1931  00054C  0100               	movlb	0	; () banked
  1932  00054E  5187               	movf	(___fttol@f1+1)& (0+255),w,b
  1933  000550  0100               	movlb	0	; () banked
  1934  000552  6F91               	movwf	(___fttol@lval+1)& (0+255),b
  1935  000554  0100               	movlb	0	; () banked
  1936  000556  5188               	movf	(___fttol@f1+2)& (0+255),w,b
  1937  000558  0100               	movlb	0	; () banked
  1938  00055A  6F92               	movwf	(___fttol@lval+2)& (0+255),b
  1939  00055C  0100               	movlb	0	; () banked
  1940  00055E  6B93               	clrf	(___fttol@lval+3)& (0+255),b
  1941                           
  1942                           ; BSR set to: 0
  1943  000560  0E8E               	movlw	142
  1944  000562  0100               	movlb	0	; () banked
  1945  000564  5F94               	subwf	___fttol@exp1& (0+255),f,b
  1946                           
  1947                           ; BSR set to: 0
  1948  000566  0100               	movlb	0	; () banked
  1949  000568  AF94               	btfss	___fttol@exp1& (0+255),7,b
  1950  00056A  D01B               	goto	l1754
  1951                           
  1952                           ; BSR set to: 0
  1953  00056C  0100               	movlb	0	; () banked
  1954  00056E  5194               	movf	___fttol@exp1& (0+255),w,b
  1955  000570  0A80               	xorlw	128
  1956  000572  0F8F               	addlw	143
  1957  000574  B0D8               	btfsc	status,0,c
  1958  000576  D00B               	goto	l1750
  1959                           
  1960                           ; BSR set to: 0
  1961  000578  0E00               	movlw	0
  1962  00057A  0100               	movlb	0	; () banked
  1963  00057C  6F86               	movwf	?___fttol& (0+255),b
  1964  00057E  0E00               	movlw	0
  1965  000580  6F87               	movwf	(?___fttol+1)& (0+255),b
  1966  000582  0E00               	movlw	0
  1967  000584  6F88               	movwf	(?___fttol+2)& (0+255),b
  1968  000586  0E00               	movlw	0
  1969  000588  6F89               	movwf	(?___fttol+3)& (0+255),b
  1970                           
  1971                           ; BSR set to: 0
  1972  00058A  0012               	return	
  1973                           
  1974                           ; BSR set to: 0
  1975  00058C  D000               	goto	l1750
  1976  00058E                     l1750:
  1977                           
  1978                           ; BSR set to: 0
  1979  00058E  0100               	movlb	0	; () banked
  1980  000590  90D8               	bcf	status,0,c
  1981  000592  3393               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1982  000594  3392               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1983  000596  3391               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1984  000598  3390               	rrcf	___fttol@lval& (0+255),f,b
  1985                           
  1986                           ; BSR set to: 0
  1987  00059A  0100               	movlb	0	; () banked
  1988  00059C  3F94               	incfsz	___fttol@exp1& (0+255),f,b
  1989  00059E  D7F7               	goto	l1750
  1990                           
  1991                           ; BSR set to: 0
  1992  0005A0  D01F               	goto	l1764
  1993  0005A2                     l1754:
  1994                           
  1995                           ; BSR set to: 0
  1996  0005A2  0E17               	movlw	23
  1997  0005A4  0100               	movlb	0	; () banked
  1998  0005A6  6594               	cpfsgt	___fttol@exp1& (0+255),b
  1999  0005A8  D014               	goto	l1762
  2000                           
  2001                           ; BSR set to: 0
  2002  0005AA  0E00               	movlw	0
  2003  0005AC  0100               	movlb	0	; () banked
  2004  0005AE  6F86               	movwf	?___fttol& (0+255),b
  2005  0005B0  0E00               	movlw	0
  2006  0005B2  6F87               	movwf	(?___fttol+1)& (0+255),b
  2007  0005B4  0E00               	movlw	0
  2008  0005B6  6F88               	movwf	(?___fttol+2)& (0+255),b
  2009  0005B8  0E00               	movlw	0
  2010  0005BA  6F89               	movwf	(?___fttol+3)& (0+255),b
  2011                           
  2012                           ; BSR set to: 0
  2013  0005BC  0012               	return	
  2014                           
  2015                           ; BSR set to: 0
  2016  0005BE  D009               	goto	l1762
  2017  0005C0                     l1760:
  2018                           
  2019                           ; BSR set to: 0
  2020  0005C0  0100               	movlb	0	; () banked
  2021  0005C2  90D8               	bcf	status,0,c
  2022  0005C4  3790               	rlcf	___fttol@lval& (0+255),f,b
  2023  0005C6  3791               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2024  0005C8  3792               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2025  0005CA  3793               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2026  0005CC  0100               	movlb	0	; () banked
  2027  0005CE  0794               	decf	___fttol@exp1& (0+255),f,b
  2028  0005D0  D000               	goto	l1762
  2029  0005D2                     l1762:
  2030                           
  2031                           ; BSR set to: 0
  2032  0005D2  0100               	movlb	0	; () banked
  2033  0005D4  5194               	movf	___fttol@exp1& (0+255),w,b
  2034  0005D6  0100               	movlb	0	; () banked
  2035  0005D8  B4D8               	btfsc	status,2,c
  2036  0005DA  D002               	goto	l1764
  2037  0005DC  D7F1               	goto	l1760
  2038                           
  2039                           ; BSR set to: 0
  2040  0005DE  D000               	goto	l1764
  2041  0005E0                     l1764:
  2042                           
  2043                           ; BSR set to: 0
  2044  0005E0  0100               	movlb	0	; () banked
  2045  0005E2  518F               	movf	___fttol@sign1& (0+255),w,b
  2046  0005E4  0100               	movlb	0	; () banked
  2047  0005E6  B4D8               	btfsc	status,2,c
  2048  0005E8  D00A               	goto	l1768
  2049                           
  2050                           ; BSR set to: 0
  2051  0005EA  0100               	movlb	0	; () banked
  2052  0005EC  1F93               	comf	(___fttol@lval+3)& (0+255),f,b
  2053  0005EE  1F92               	comf	(___fttol@lval+2)& (0+255),f,b
  2054  0005F0  1F91               	comf	(___fttol@lval+1)& (0+255),f,b
  2055  0005F2  6D90               	negf	___fttol@lval& (0+255),b
  2056  0005F4  0E00               	movlw	0
  2057  0005F6  2391               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2058  0005F8  2392               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2059  0005FA  2393               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2060  0005FC  D000               	goto	l1768
  2061  0005FE                     l1768:
  2062                           
  2063                           ; BSR set to: 0
  2064  0005FE  C090  F086         	movff	___fttol@lval,?___fttol
  2065  000602  C091  F087         	movff	___fttol@lval+1,?___fttol+1
  2066  000606  C092  F088         	movff	___fttol@lval+2,?___fttol+2
  2067  00060A  C093  F089         	movff	___fttol@lval+3,?___fttol+3
  2068  00060E  0012               	return	
  2069                           
  2070                           ; BSR set to: 0
  2071                           
  2072                           ; BSR set to: 0
  2073  000610  0012               	return		;funcret
  2074  000612                     __end_of___fttol:
  2075                           	opt stack 0
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           intcon	equ	0xFF2
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           postdec1	equ	0xFE5
  2084                           plusw1	equ	0xFE3
  2085                           fsr1l	equ	0xFE1
  2086                           plusw2	equ	0xFDB
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function ___ftmul *****************
  2090 ;; Defined at:
  2091 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  f1              3    8[BANK0 ] float 
  2094 ;;  f2              3   11[BANK0 ] float 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  2097 ;;  sign            1   22[BANK0 ] unsigned char 
  2098 ;;  cntr            1   21[BANK0 ] unsigned char 
  2099 ;;  exp             1   17[BANK0 ] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  3    8[BANK0 ] float 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2109 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;Total ram usage:       15 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    4
  2116 ;; This function calls:
  2117 ;;		___ftpack
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text10
  2124  000354                     __ptext10:
  2125                           	opt stack 0
  2126  000354                     ___ftmul:
  2127                           	opt stack 26
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;incstack = 0
  2131  000354  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  2132  000358  0100               	movlb	0	; () banked
  2133  00035A  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  2134  00035C  6B70               	clrf	(??___ftmul+2)& (0+255),b
  2135  00035E  0100               	movlb	0	; () banked
  2136  000360  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2137  000362  0100               	movlb	0	; () banked
  2138  000364  376E               	rlcf	??___ftmul& (0+255),f,b
  2139  000366  E301               	bnc	u1551
  2140  000368  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  2141  00036A                     u1551:
  2142  00036A  0100               	movlb	0	; () banked
  2143  00036C  516E               	movf	??___ftmul& (0+255),w,b
  2144  00036E  0100               	movlb	0	; () banked
  2145  000370  6F71               	movwf	___ftmul@exp& (0+255),b
  2146  000372  0100               	movlb	0	; () banked
  2147  000374  5171               	movf	___ftmul@exp& (0+255),w,b
  2148  000376  A4D8               	btfss	status,2,c
  2149  000378  D00A               	goto	l2050
  2150                           
  2151                           ; BSR set to: 0
  2152  00037A  0E00               	movlw	0
  2153  00037C  0100               	movlb	0	; () banked
  2154  00037E  6F68               	movwf	?___ftmul& (0+255),b
  2155  000380  0E00               	movlw	0
  2156  000382  0100               	movlb	0	; () banked
  2157  000384  6F69               	movwf	(?___ftmul+1)& (0+255),b
  2158  000386  0E00               	movlw	0
  2159  000388  0100               	movlb	0	; () banked
  2160  00038A  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  2161                           
  2162                           ; BSR set to: 0
  2163  00038C  0012               	return	
  2164  00038E                     l2050:
  2165                           
  2166                           ; BSR set to: 0
  2167  00038E  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  2168  000392  0100               	movlb	0	; () banked
  2169  000394  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  2170  000396  6B70               	clrf	(??___ftmul+2)& (0+255),b
  2171  000398  0100               	movlb	0	; () banked
  2172  00039A  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2173  00039C  0100               	movlb	0	; () banked
  2174  00039E  376E               	rlcf	??___ftmul& (0+255),f,b
  2175  0003A0  E301               	bnc	u1571
  2176  0003A2  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  2177  0003A4                     u1571:
  2178  0003A4  0100               	movlb	0	; () banked
  2179  0003A6  516E               	movf	??___ftmul& (0+255),w,b
  2180  0003A8  0100               	movlb	0	; () banked
  2181  0003AA  6F76               	movwf	___ftmul@sign& (0+255),b
  2182  0003AC  0100               	movlb	0	; () banked
  2183  0003AE  5176               	movf	___ftmul@sign& (0+255),w,b
  2184  0003B0  A4D8               	btfss	status,2,c
  2185  0003B2  D00A               	goto	l2056
  2186                           
  2187                           ; BSR set to: 0
  2188  0003B4  0E00               	movlw	0
  2189  0003B6  0100               	movlb	0	; () banked
  2190  0003B8  6F68               	movwf	?___ftmul& (0+255),b
  2191  0003BA  0E00               	movlw	0
  2192  0003BC  0100               	movlb	0	; () banked
  2193  0003BE  6F69               	movwf	(?___ftmul+1)& (0+255),b
  2194  0003C0  0E00               	movlw	0
  2195  0003C2  0100               	movlb	0	; () banked
  2196  0003C4  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199  0003C6  0012               	return	
  2200  0003C8                     l2056:
  2201                           
  2202                           ; BSR set to: 0
  2203  0003C8  0100               	movlb	0	; () banked
  2204  0003CA  5176               	movf	___ftmul@sign& (0+255),w,b
  2205  0003CC  0F7B               	addlw	123
  2206  0003CE  0100               	movlb	0	; () banked
  2207  0003D0  2771               	addwf	___ftmul@exp& (0+255),f,b
  2208                           
  2209                           ; BSR set to: 0
  2210  0003D2  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  2211  0003D6  0100               	movlb	0	; () banked
  2212  0003D8  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  2213  0003DA  0100               	movlb	0	; () banked
  2214  0003DC  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  2215  0003DE  0E80               	movlw	128
  2216  0003E0  0100               	movlb	0	; () banked
  2217  0003E2  1776               	andwf	___ftmul@sign& (0+255),f,b
  2218                           
  2219                           ; BSR set to: 0
  2220  0003E4  0100               	movlb	0	; () banked
  2221  0003E6  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2222                           
  2223                           ; BSR set to: 0
  2224  0003E8  0100               	movlb	0	; () banked
  2225  0003EA  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2226                           
  2227                           ; BSR set to: 0
  2228  0003EC  0EFF               	movlw	255
  2229  0003EE  0100               	movlb	0	; () banked
  2230  0003F0  176B               	andwf	___ftmul@f2& (0+255),f,b
  2231  0003F2  0EFF               	movlw	255
  2232  0003F4  0100               	movlb	0	; () banked
  2233  0003F6  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2234  0003F8  0E00               	movlw	0
  2235  0003FA  0100               	movlb	0	; () banked
  2236  0003FC  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2237                           
  2238                           ; BSR set to: 0
  2239  0003FE  0E00               	movlw	0
  2240  000400  0100               	movlb	0	; () banked
  2241  000402  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  2242  000404  0E00               	movlw	0
  2243  000406  0100               	movlb	0	; () banked
  2244  000408  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2245  00040A  0E00               	movlw	0
  2246  00040C  0100               	movlb	0	; () banked
  2247  00040E  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2248                           
  2249                           ; BSR set to: 0
  2250  000410  0E07               	movlw	7
  2251  000412  0100               	movlb	0	; () banked
  2252  000414  6F75               	movwf	___ftmul@cntr& (0+255),b
  2253  000416  D000               	goto	l2070
  2254  000418                     l2070:
  2255                           
  2256                           ; BSR set to: 0
  2257  000418  0100               	movlb	0	; () banked
  2258  00041A  A168               	btfss	___ftmul@f1& (0+255),0,b
  2259  00041C  D00D               	goto	l2074
  2260                           
  2261                           ; BSR set to: 0
  2262  00041E  0100               	movlb	0	; () banked
  2263  000420  516B               	movf	___ftmul@f2& (0+255),w,b
  2264  000422  0100               	movlb	0	; () banked
  2265  000424  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2266  000426  0100               	movlb	0	; () banked
  2267  000428  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  2268  00042A  0100               	movlb	0	; () banked
  2269  00042C  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2270  00042E  0100               	movlb	0	; () banked
  2271  000430  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  2272  000432  0100               	movlb	0	; () banked
  2273  000434  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2274  000436  D000               	goto	l2074
  2275  000438                     l2074:
  2276                           
  2277                           ; BSR set to: 0
  2278  000438  0100               	movlb	0	; () banked
  2279  00043A  90D8               	bcf	status,0,c
  2280  00043C  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2281  00043E  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2282  000440  3368               	rrcf	___ftmul@f1& (0+255),f,b
  2283  000442  0100               	movlb	0	; () banked
  2284  000444  90D8               	bcf	status,0,c
  2285  000446  376B               	rlcf	___ftmul@f2& (0+255),f,b
  2286  000448  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2287  00044A  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2288                           
  2289                           ; BSR set to: 0
  2290  00044C  0100               	movlb	0	; () banked
  2291  00044E  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  2292  000450  D7E3               	goto	l2070
  2293  000452  D000               	goto	l2078
  2294  000454                     l2078:
  2295                           
  2296                           ; BSR set to: 0
  2297  000454  0E09               	movlw	9
  2298  000456  0100               	movlb	0	; () banked
  2299  000458  6F75               	movwf	___ftmul@cntr& (0+255),b
  2300  00045A  D000               	goto	l2080
  2301  00045C                     l2080:
  2302                           
  2303                           ; BSR set to: 0
  2304  00045C  0100               	movlb	0	; () banked
  2305  00045E  A168               	btfss	___ftmul@f1& (0+255),0,b
  2306  000460  D00D               	goto	l2084
  2307                           
  2308                           ; BSR set to: 0
  2309  000462  0100               	movlb	0	; () banked
  2310  000464  516B               	movf	___ftmul@f2& (0+255),w,b
  2311  000466  0100               	movlb	0	; () banked
  2312  000468  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2313  00046A  0100               	movlb	0	; () banked
  2314  00046C  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  2315  00046E  0100               	movlb	0	; () banked
  2316  000470  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2317  000472  0100               	movlb	0	; () banked
  2318  000474  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  2319  000476  0100               	movlb	0	; () banked
  2320  000478  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2321  00047A  D000               	goto	l2084
  2322  00047C                     l2084:
  2323                           
  2324                           ; BSR set to: 0
  2325  00047C  0100               	movlb	0	; () banked
  2326  00047E  90D8               	bcf	status,0,c
  2327  000480  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2328  000482  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2329  000484  3368               	rrcf	___ftmul@f1& (0+255),f,b
  2330  000486  0100               	movlb	0	; () banked
  2331  000488  90D8               	bcf	status,0,c
  2332  00048A  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2333  00048C  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2334  00048E  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2335                           
  2336                           ; BSR set to: 0
  2337  000490  0100               	movlb	0	; () banked
  2338  000492  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  2339  000494  D7E3               	goto	l2080
  2340  000496  D000               	goto	l2088
  2341  000498                     l2088:
  2342                           
  2343                           ; BSR set to: 0
  2344  000498  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  2345  00049C  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2346  0004A0  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2347  0004A4  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  2348  0004A8  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  2349  0004AC  ECB2  F003         	call	___ftpack	;wreg free
  2350  0004B0  C060  F068         	movff	?___ftpack,?___ftmul
  2351  0004B4  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  2352  0004B8  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  2353  0004BC  0012               	return	
  2354  0004BE  0012               	return		;funcret
  2355  0004C0                     __end_of___ftmul:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           postdec1	equ	0xFE5
  2365                           plusw1	equ	0xFE3
  2366                           fsr1l	equ	0xFE1
  2367                           plusw2	equ	0xFDB
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function ___ftdiv *****************
  2371 ;; Defined at:
  2372 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  f1              3   23[BANK0 ] float 
  2375 ;;  f2              3   26[BANK0 ] float 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  f3              3   33[BANK0 ] float 
  2378 ;;  sign            1   37[BANK0 ] unsigned char 
  2379 ;;  exp             1   36[BANK0 ] unsigned char 
  2380 ;;  cntr            1   32[BANK0 ] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  3   23[BANK0 ] float 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;Total ram usage:       15 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    4
  2397 ;; This function calls:
  2398 ;;		___ftpack
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text11
  2405  000612                     __ptext11:
  2406                           	opt stack 0
  2407  000612                     ___ftdiv:
  2408                           	opt stack 26
  2409                           
  2410                           ;incstack = 0
  2411  000612  C079  F07D         	movff	___ftdiv@f1+2,??___ftdiv
  2412  000616  0100               	movlb	0	; () banked
  2413  000618  6B7E               	clrf	(??___ftdiv+1)& (0+255),b
  2414  00061A  6B7F               	clrf	(??___ftdiv+2)& (0+255),b
  2415  00061C  0100               	movlb	0	; () banked
  2416  00061E  3578               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2417  000620  0100               	movlb	0	; () banked
  2418  000622  377D               	rlcf	??___ftdiv& (0+255),f,b
  2419  000624  E301               	bnc	u1501
  2420  000626  817E               	bsf	(??___ftdiv+1)& (0+255),0,b
  2421  000628                     u1501:
  2422  000628  0100               	movlb	0	; () banked
  2423  00062A  517D               	movf	??___ftdiv& (0+255),w,b
  2424  00062C  0100               	movlb	0	; () banked
  2425  00062E  6F84               	movwf	___ftdiv@exp& (0+255),b
  2426  000630  0100               	movlb	0	; () banked
  2427  000632  5184               	movf	___ftdiv@exp& (0+255),w,b
  2428  000634  A4D8               	btfss	status,2,c
  2429  000636  D00A               	goto	l2004
  2430                           
  2431                           ; BSR set to: 0
  2432  000638  0E00               	movlw	0
  2433  00063A  0100               	movlb	0	; () banked
  2434  00063C  6F77               	movwf	?___ftdiv& (0+255),b
  2435  00063E  0E00               	movlw	0
  2436  000640  0100               	movlb	0	; () banked
  2437  000642  6F78               	movwf	(?___ftdiv+1)& (0+255),b
  2438  000644  0E00               	movlw	0
  2439  000646  0100               	movlb	0	; () banked
  2440  000648  6F79               	movwf	(?___ftdiv+2)& (0+255),b
  2441                           
  2442                           ; BSR set to: 0
  2443  00064A  0012               	return	
  2444  00064C                     l2004:
  2445                           
  2446                           ; BSR set to: 0
  2447  00064C  C07C  F07D         	movff	___ftdiv@f2+2,??___ftdiv
  2448  000650  0100               	movlb	0	; () banked
  2449  000652  6B7E               	clrf	(??___ftdiv+1)& (0+255),b
  2450  000654  6B7F               	clrf	(??___ftdiv+2)& (0+255),b
  2451  000656  0100               	movlb	0	; () banked
  2452  000658  357B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2453  00065A  0100               	movlb	0	; () banked
  2454  00065C  377D               	rlcf	??___ftdiv& (0+255),f,b
  2455  00065E  E301               	bnc	u1521
  2456  000660  817E               	bsf	(??___ftdiv+1)& (0+255),0,b
  2457  000662                     u1521:
  2458  000662  0100               	movlb	0	; () banked
  2459  000664  517D               	movf	??___ftdiv& (0+255),w,b
  2460  000666  0100               	movlb	0	; () banked
  2461  000668  6F85               	movwf	___ftdiv@sign& (0+255),b
  2462  00066A  0100               	movlb	0	; () banked
  2463  00066C  5185               	movf	___ftdiv@sign& (0+255),w,b
  2464  00066E  A4D8               	btfss	status,2,c
  2465  000670  D00A               	goto	l2010
  2466                           
  2467                           ; BSR set to: 0
  2468  000672  0E00               	movlw	0
  2469  000674  0100               	movlb	0	; () banked
  2470  000676  6F77               	movwf	?___ftdiv& (0+255),b
  2471  000678  0E00               	movlw	0
  2472  00067A  0100               	movlb	0	; () banked
  2473  00067C  6F78               	movwf	(?___ftdiv+1)& (0+255),b
  2474  00067E  0E00               	movlw	0
  2475  000680  0100               	movlb	0	; () banked
  2476  000682  6F79               	movwf	(?___ftdiv+2)& (0+255),b
  2477                           
  2478                           ; BSR set to: 0
  2479  000684  0012               	return	
  2480  000686                     l2010:
  2481                           
  2482                           ; BSR set to: 0
  2483  000686  0E00               	movlw	0
  2484  000688  0100               	movlb	0	; () banked
  2485  00068A  6F81               	movwf	___ftdiv@f3& (0+255),b
  2486  00068C  0E00               	movlw	0
  2487  00068E  0100               	movlb	0	; () banked
  2488  000690  6F82               	movwf	(___ftdiv@f3+1)& (0+255),b
  2489  000692  0E00               	movlw	0
  2490  000694  0100               	movlb	0	; () banked
  2491  000696  6F83               	movwf	(___ftdiv@f3+2)& (0+255),b
  2492                           
  2493                           ; BSR set to: 0
  2494  000698  0100               	movlb	0	; () banked
  2495  00069A  5185               	movf	___ftdiv@sign& (0+255),w,b
  2496  00069C  0F89               	addlw	137
  2497  00069E  0100               	movlb	0	; () banked
  2498  0006A0  5F84               	subwf	___ftdiv@exp& (0+255),f,b
  2499                           
  2500                           ; BSR set to: 0
  2501  0006A2  C079  F085         	movff	___ftdiv@f1+2,___ftdiv@sign
  2502                           
  2503                           ; BSR set to: 0
  2504  0006A6  0100               	movlb	0	; () banked
  2505  0006A8  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2506  0006AA  0100               	movlb	0	; () banked
  2507  0006AC  1B85               	xorwf	___ftdiv@sign& (0+255),f,b
  2508                           
  2509                           ; BSR set to: 0
  2510  0006AE  0E80               	movlw	128
  2511  0006B0  0100               	movlb	0	; () banked
  2512  0006B2  1785               	andwf	___ftdiv@sign& (0+255),f,b
  2513                           
  2514                           ; BSR set to: 0
  2515  0006B4  0100               	movlb	0	; () banked
  2516  0006B6  8F78               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2517                           
  2518                           ; BSR set to: 0
  2519  0006B8  0EFF               	movlw	255
  2520  0006BA  0100               	movlb	0	; () banked
  2521  0006BC  1777               	andwf	___ftdiv@f1& (0+255),f,b
  2522  0006BE  0EFF               	movlw	255
  2523  0006C0  0100               	movlb	0	; () banked
  2524  0006C2  1778               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2525  0006C4  0E00               	movlw	0
  2526  0006C6  0100               	movlb	0	; () banked
  2527  0006C8  1779               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2528                           
  2529                           ; BSR set to: 0
  2530  0006CA  0100               	movlb	0	; () banked
  2531  0006CC  8F7B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2532                           
  2533                           ; BSR set to: 0
  2534  0006CE  0EFF               	movlw	255
  2535  0006D0  0100               	movlb	0	; () banked
  2536  0006D2  177A               	andwf	___ftdiv@f2& (0+255),f,b
  2537  0006D4  0EFF               	movlw	255
  2538  0006D6  0100               	movlb	0	; () banked
  2539  0006D8  177B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2540  0006DA  0E00               	movlw	0
  2541  0006DC  0100               	movlb	0	; () banked
  2542  0006DE  177C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2543                           
  2544                           ; BSR set to: 0
  2545  0006E0  0E18               	movlw	24
  2546  0006E2  0100               	movlb	0	; () banked
  2547  0006E4  6F80               	movwf	___ftdiv@cntr& (0+255),b
  2548  0006E6  D000               	goto	l2030
  2549  0006E8                     l2030:
  2550                           
  2551                           ; BSR set to: 0
  2552  0006E8  0100               	movlb	0	; () banked
  2553  0006EA  90D8               	bcf	status,0,c
  2554  0006EC  3781               	rlcf	___ftdiv@f3& (0+255),f,b
  2555  0006EE  3782               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2556  0006F0  3783               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2557                           
  2558                           ; BSR set to: 0
  2559  0006F2  0100               	movlb	0	; () banked
  2560  0006F4  517A               	movf	___ftdiv@f2& (0+255),w,b
  2561  0006F6  0100               	movlb	0	; () banked
  2562  0006F8  5D77               	subwf	___ftdiv@f1& (0+255),w,b
  2563  0006FA  0100               	movlb	0	; () banked
  2564  0006FC  517B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2565  0006FE  0100               	movlb	0	; () banked
  2566  000700  5978               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2567  000702  0100               	movlb	0	; () banked
  2568  000704  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2569  000706  0100               	movlb	0	; () banked
  2570  000708  5979               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2571  00070A  A0D8               	btfss	status,0,c
  2572  00070C  D00E               	goto	l613
  2573                           
  2574                           ; BSR set to: 0
  2575  00070E  0100               	movlb	0	; () banked
  2576  000710  517A               	movf	___ftdiv@f2& (0+255),w,b
  2577  000712  0100               	movlb	0	; () banked
  2578  000714  5F77               	subwf	___ftdiv@f1& (0+255),f,b
  2579  000716  0100               	movlb	0	; () banked
  2580  000718  517B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2581  00071A  0100               	movlb	0	; () banked
  2582  00071C  5B78               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2583  00071E  0100               	movlb	0	; () banked
  2584  000720  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2585  000722  0100               	movlb	0	; () banked
  2586  000724  5B79               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2587                           
  2588                           ; BSR set to: 0
  2589  000726  0100               	movlb	0	; () banked
  2590  000728  8181               	bsf	___ftdiv@f3& (0+255),0,b
  2591  00072A                     l613:
  2592                           
  2593                           ; BSR set to: 0
  2594  00072A  0100               	movlb	0	; () banked
  2595  00072C  90D8               	bcf	status,0,c
  2596  00072E  3777               	rlcf	___ftdiv@f1& (0+255),f,b
  2597  000730  3778               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2598  000732  3779               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2599                           
  2600                           ; BSR set to: 0
  2601  000734  0100               	movlb	0	; () banked
  2602  000736  2F80               	decfsz	___ftdiv@cntr& (0+255),f,b
  2603  000738  D7D7               	goto	l2030
  2604  00073A  D000               	goto	l2040
  2605  00073C                     l2040:
  2606                           
  2607                           ; BSR set to: 0
  2608  00073C  C081  F060         	movff	___ftdiv@f3,___ftpack@arg
  2609  000740  C082  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2610  000744  C083  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2611  000748  C084  F063         	movff	___ftdiv@exp,___ftpack@exp
  2612  00074C  C085  F064         	movff	___ftdiv@sign,___ftpack@sign
  2613  000750  ECB2  F003         	call	___ftpack	;wreg free
  2614  000754  C060  F077         	movff	?___ftpack,?___ftdiv
  2615  000758  C061  F078         	movff	?___ftpack+1,?___ftdiv+1
  2616  00075C  C062  F079         	movff	?___ftpack+2,?___ftdiv+2
  2617  000760  0012               	return	
  2618  000762  0012               	return		;funcret
  2619  000764                     __end_of___ftdiv:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           intcon	equ	0xFF2
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           postdec1	equ	0xFE5
  2629                           plusw1	equ	0xFE3
  2630                           fsr1l	equ	0xFE1
  2631                           plusw2	equ	0xFDB
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function ___ftpack *****************
  2635 ;; Defined at:
  2636 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  arg             3    0[BANK0 ] unsigned um
  2639 ;;  exp             1    3[BANK0 ] unsigned char 
  2640 ;;  sign            1    4[BANK0 ] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  3    0[BANK0 ] float 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2652 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;Total ram usage:        8 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		___ftdiv
  2663 ;;		___ftmul
  2664 ;;		___lwtoft
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  000764                     __ptext12:
  2670                           	opt stack 0
  2671  000764                     ___ftpack:
  2672                           	opt stack 26
  2673                           
  2674                           ;incstack = 0
  2675  000764  0100               	movlb	0	; () banked
  2676  000766  5163               	movf	___ftpack@exp& (0+255),w,b
  2677  000768  0100               	movlb	0	; () banked
  2678  00076A  B4D8               	btfsc	status,2,c
  2679  00076C  D008               	goto	l1878
  2680                           
  2681                           ; BSR set to: 0
  2682  00076E  0100               	movlb	0	; () banked
  2683  000770  5160               	movf	___ftpack@arg& (0+255),w,b
  2684  000772  0100               	movlb	0	; () banked
  2685  000774  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2686  000776  0100               	movlb	0	; () banked
  2687  000778  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2688  00077A  A4D8               	btfss	status,2,c
  2689  00077C  D013               	goto	l1884
  2690  00077E                     l1878:
  2691                           
  2692                           ; BSR set to: 0
  2693  00077E  0E00               	movlw	0
  2694  000780  0100               	movlb	0	; () banked
  2695  000782  6F60               	movwf	?___ftpack& (0+255),b
  2696  000784  0E00               	movlw	0
  2697  000786  0100               	movlb	0	; () banked
  2698  000788  6F61               	movwf	(?___ftpack+1)& (0+255),b
  2699  00078A  0E00               	movlw	0
  2700  00078C  0100               	movlb	0	; () banked
  2701  00078E  6F62               	movwf	(?___ftpack+2)& (0+255),b
  2702                           
  2703                           ; BSR set to: 0
  2704  000790  0012               	return	
  2705                           
  2706                           ; BSR set to: 0
  2707  000792  D008               	goto	l1884
  2708  000794                     l1882:
  2709                           
  2710                           ; BSR set to: 0
  2711  000794  0100               	movlb	0	; () banked
  2712  000796  2B63               	incf	___ftpack@exp& (0+255),f,b
  2713  000798  0100               	movlb	0	; () banked
  2714  00079A  90D8               	bcf	status,0,c
  2715  00079C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2716  00079E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2717  0007A0  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2718  0007A2  D000               	goto	l1884
  2719  0007A4                     l1884:
  2720                           
  2721                           ; BSR set to: 0
  2722  0007A4  0E00               	movlw	0
  2723  0007A6  0100               	movlb	0	; () banked
  2724  0007A8  1560               	andwf	___ftpack@arg& (0+255),w,b
  2725  0007AA  6E21               	movwf	??___ftpack& (0+255),c
  2726  0007AC  0E00               	movlw	0
  2727  0007AE  0100               	movlb	0	; () banked
  2728  0007B0  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2729  0007B2  6E22               	movwf	(??___ftpack+1)& (0+255),c
  2730  0007B4  0EFE               	movlw	254
  2731  0007B6  0100               	movlb	0	; () banked
  2732  0007B8  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2733  0007BA  6E23               	movwf	(??___ftpack+2)& (0+255),c
  2734  0007BC  5021               	movf	??___ftpack,w,c
  2735  0007BE  1022               	iorwf	??___ftpack+1,w,c
  2736  0007C0  1023               	iorwf	??___ftpack+2,w,c
  2737  0007C2  B4D8               	btfsc	status,2,c
  2738  0007C4  D013               	goto	l1890
  2739  0007C6  D7E6               	goto	l1882
  2740                           
  2741                           ; BSR set to: 0
  2742  0007C8  D011               	goto	l1890
  2743  0007CA                     l1886:
  2744                           
  2745                           ; BSR set to: 0
  2746  0007CA  0100               	movlb	0	; () banked
  2747  0007CC  2B63               	incf	___ftpack@exp& (0+255),f,b
  2748                           
  2749                           ; BSR set to: 0
  2750  0007CE  0E01               	movlw	1
  2751  0007D0  0100               	movlb	0	; () banked
  2752  0007D2  2760               	addwf	___ftpack@arg& (0+255),f,b
  2753  0007D4  0E00               	movlw	0
  2754  0007D6  0100               	movlb	0	; () banked
  2755  0007D8  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2756  0007DA  0E00               	movlw	0
  2757  0007DC  0100               	movlb	0	; () banked
  2758  0007DE  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2759  0007E0  0100               	movlb	0	; () banked
  2760  0007E2  90D8               	bcf	status,0,c
  2761  0007E4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2762  0007E6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2763  0007E8  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2764  0007EA  D000               	goto	l1890
  2765  0007EC                     l1890:
  2766                           
  2767                           ; BSR set to: 0
  2768  0007EC  0E00               	movlw	0
  2769  0007EE  0100               	movlb	0	; () banked
  2770  0007F0  1560               	andwf	___ftpack@arg& (0+255),w,b
  2771  0007F2  6E21               	movwf	??___ftpack& (0+255),c
  2772  0007F4  0E00               	movlw	0
  2773  0007F6  0100               	movlb	0	; () banked
  2774  0007F8  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2775  0007FA  6E22               	movwf	(??___ftpack+1)& (0+255),c
  2776  0007FC  0EFF               	movlw	255
  2777  0007FE  0100               	movlb	0	; () banked
  2778  000800  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2779  000802  6E23               	movwf	(??___ftpack+2)& (0+255),c
  2780  000804  5021               	movf	??___ftpack,w,c
  2781  000806  1022               	iorwf	??___ftpack+1,w,c
  2782  000808  1023               	iorwf	??___ftpack+2,w,c
  2783  00080A  B4D8               	btfsc	status,2,c
  2784  00080C  D00A               	goto	l1894
  2785  00080E  D7DD               	goto	l1886
  2786                           
  2787                           ; BSR set to: 0
  2788  000810  D008               	goto	l1894
  2789  000812                     l1892:
  2790                           
  2791                           ; BSR set to: 0
  2792  000812  0100               	movlb	0	; () banked
  2793  000814  0763               	decf	___ftpack@exp& (0+255),f,b
  2794  000816  0100               	movlb	0	; () banked
  2795  000818  90D8               	bcf	status,0,c
  2796  00081A  3760               	rlcf	___ftpack@arg& (0+255),f,b
  2797  00081C  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2798  00081E  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2799  000820  D000               	goto	l1894
  2800  000822                     l1894:
  2801                           
  2802                           ; BSR set to: 0
  2803  000822  0100               	movlb	0	; () banked
  2804  000824  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2805  000826  D005               	goto	l549
  2806                           
  2807                           ; BSR set to: 0
  2808  000828  0E02               	movlw	2
  2809  00082A  0100               	movlb	0	; () banked
  2810  00082C  6163               	cpfslt	___ftpack@exp& (0+255),b
  2811  00082E  D7F1               	goto	l1892
  2812  000830  D000               	goto	l549
  2813  000832                     l549:
  2814                           
  2815                           ; BSR set to: 0
  2816  000832  0100               	movlb	0	; () banked
  2817  000834  B163               	btfsc	___ftpack@exp& (0+255),0,b
  2818  000836  D003               	goto	l1900
  2819                           
  2820                           ; BSR set to: 0
  2821  000838  0100               	movlb	0	; () banked
  2822  00083A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2823  00083C  D000               	goto	l1900
  2824  00083E                     l1900:
  2825                           
  2826                           ; BSR set to: 0
  2827  00083E  0100               	movlb	0	; () banked
  2828  000840  90D8               	bcf	status,0,c
  2829  000842  3363               	rrcf	___ftpack@exp& (0+255),f,b
  2830  000844  0100               	movlb	0	; () banked
  2831  000846  5163               	movf	___ftpack@exp& (0+255),w,b
  2832  000848  0100               	movlb	0	; () banked
  2833  00084A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2834                           
  2835                           ; BSR set to: 0
  2836  00084C  0100               	movlb	0	; () banked
  2837  00084E  5164               	movf	___ftpack@sign& (0+255),w,b
  2838  000850  0100               	movlb	0	; () banked
  2839  000852  B4D8               	btfsc	status,2,c
  2840  000854  D003               	goto	l1906
  2841                           
  2842                           ; BSR set to: 0
  2843  000856  0100               	movlb	0	; () banked
  2844  000858  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2845  00085A  D000               	goto	l1906
  2846  00085C                     l1906:
  2847                           
  2848                           ; BSR set to: 0
  2849  00085C  C060  F060         	movff	___ftpack@arg,?___ftpack
  2850  000860  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  2851  000864  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  2852  000868  0012               	return	
  2853                           
  2854                           ; BSR set to: 0
  2855                           
  2856                           ; BSR set to: 0
  2857  00086A  0012               	return		;funcret
  2858  00086C                     __end_of___ftpack:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           intcon	equ	0xFF2
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           plusw1	equ	0xFE3
  2869                           fsr1l	equ	0xFE1
  2870                           plusw2	equ	0xFDB
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _high_isr *****************
  2874 ;; Defined at:
  2875 ;;		line 118 in file "main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  input           2   30[COMRAM] unsigned char [2]
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;Total ram usage:       16 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		_atoi
  2898 ;;		i2_pwm
  2899 ;; This function is called by:
  2900 ;;		Interrupt level 2
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	intcode
  2905  000008                     __pintcode:
  2906                           	opt stack 0
  2907  000008                     _high_isr:
  2908                           	opt stack 26
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;incstack = 0
  2912  000008  CFFA F011          	movff	pclath,??_high_isr
  2913  00000C  CFFB F012          	movff	pclatu,??_high_isr+1
  2914  000010  CFE9 F013          	movff	fsr0l,??_high_isr+2
  2915  000014  CFEA F014          	movff	fsr0h,??_high_isr+3
  2916  000018  CFE1 F015          	movff	fsr1l,??_high_isr+4
  2917  00001C  CFE2 F016          	movff	fsr1h,??_high_isr+5
  2918  000020  CFD9 F017          	movff	fsr2l,??_high_isr+6
  2919  000024  CFDA F018          	movff	fsr2h,??_high_isr+7
  2920  000028  CFF3 F019          	movff	prodl,??_high_isr+8
  2921  00002C  CFF4 F01A          	movff	prodh,??_high_isr+9
  2922  000030  CFF6 F01B          	movff	tblptrl,??_high_isr+10
  2923  000034  CFF7 F01C          	movff	tblptrh,??_high_isr+11
  2924  000038  CFF8 F01D          	movff	tblptru,??_high_isr+12
  2925  00003C  CFF5 F01E          	movff	tablat,??_high_isr+13
  2926                           
  2927                           ;main.c: 119: RC2IF = 0;
  2928  000040  9AA4               	bcf	4004,5,c	;volatile
  2929                           
  2930                           ;main.c: 122: char input[2] = "";
  2931  000042  C024  F01F         	movff	high_isr@F19158,high_isr@input
  2932  000046  C025  F020         	movff	high_isr@F19158+1,high_isr@input+1
  2933                           
  2934                           ;main.c: 123: input[0] = RCREG2;
  2935  00004A  CF7A F01F          	movff	3962,high_isr@input	;volatile
  2936                           
  2937                           ;main.c: 125: if (beginR==1 | beginG==1 | beginB==1)
  2938  00004E  0428               	decf	_beginR,w,c
  2939  000050  B4D8               	btfsc	status,2,c
  2940  000052  D006               	goto	i2l1808
  2941  000054  0427               	decf	_beginG,w,c
  2942  000056  B4D8               	btfsc	status,2,c
  2943  000058  D003               	goto	i2l1808
  2944  00005A  0426               	decf	_beginB,w,c
  2945  00005C  A4D8               	btfss	status,2,c
  2946  00005E  D05C               	goto	i2l1846
  2947  000060                     i2l1808:
  2948                           
  2949                           ;main.c: 126: {
  2950                           ;main.c: 127: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  2951  000060  0E52               	movlw	82
  2952  000062  181F               	xorwf	high_isr@input,w,c
  2953  000064  B4D8               	btfsc	status,2,c
  2954  000066  D014               	goto	i2l1818
  2955  000068  0E47               	movlw	71
  2956  00006A  181F               	xorwf	high_isr@input,w,c
  2957  00006C  B4D8               	btfsc	status,2,c
  2958  00006E  D010               	goto	i2l1818
  2959  000070  0E42               	movlw	66
  2960  000072  181F               	xorwf	high_isr@input,w,c
  2961  000074  B4D8               	btfsc	status,2,c
  2962  000076  D00C               	goto	i2l1818
  2963                           
  2964                           ;main.c: 128: {
  2965                           ;main.c: 129: buffer[compteur]=input[0];
  2966  000078  5029               	movf	_compteur,w,c
  2967  00007A  0D01               	mullw	1
  2968  00007C  0E2A               	movlw	low _buffer
  2969  00007E  24F3               	addwf	prodl,w,c
  2970  000080  6ED9               	movwf	fsr2l,c
  2971  000082  0E00               	movlw	high _buffer
  2972  000084  20F4               	addwfc	prodh,w,c
  2973  000086  6EDA               	movwf	fsr2h,c
  2974  000088  C01F  FFDF         	movff	high_isr@input,indf2
  2975                           
  2976                           ;main.c: 130: compteur+=1;
  2977  00008C  2A29               	incf	_compteur,f,c
  2978                           
  2979                           ;main.c: 131: }
  2980  00008E  D044               	goto	i2l1846
  2981  000090                     i2l1818:
  2982                           
  2983                           ;main.c: 133: else
  2984                           ;main.c: 134: {
  2985                           ;main.c: 135: if (beginR==1)
  2986  000090  0428               	decf	_beginR,w,c
  2987  000092  A4D8               	btfss	status,2,c
  2988  000094  D00E               	goto	i2l1822
  2989                           
  2990                           ;main.c: 136: pwm('R',atoi(buffer));
  2991  000096  0E2A               	movlw	low _buffer
  2992  000098  6E07               	movwf	atoi@s,c
  2993  00009A  0E00               	movlw	high _buffer
  2994  00009C  6E08               	movwf	atoi@s+1,c
  2995  00009E  EC36  F004         	call	_atoi	;wreg free
  2996  0000A2  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  2997  0000A6  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  2998  0000AA  0E52               	movlw	82
  2999  0000AC  EC9F  F005         	call	i2_pwm
  3000  0000B0  D000               	goto	i2l1822
  3001  0000B2                     i2l1822:
  3002                           
  3003                           ;main.c: 137: beginR=0;
  3004  0000B2  0E00               	movlw	0
  3005  0000B4  6E28               	movwf	_beginR,c
  3006                           
  3007                           ;main.c: 138: if (beginG==1)
  3008  0000B6  0427               	decf	_beginG,w,c
  3009  0000B8  A4D8               	btfss	status,2,c
  3010  0000BA  D00E               	goto	i2l1828
  3011                           
  3012                           ;main.c: 139: pwm('G',atoi(buffer));
  3013  0000BC  0E2A               	movlw	low _buffer
  3014  0000BE  6E07               	movwf	atoi@s,c
  3015  0000C0  0E00               	movlw	high _buffer
  3016  0000C2  6E08               	movwf	atoi@s+1,c
  3017  0000C4  EC36  F004         	call	_atoi	;wreg free
  3018  0000C8  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  3019  0000CC  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  3020  0000D0  0E47               	movlw	71
  3021  0000D2  EC9F  F005         	call	i2_pwm
  3022  0000D6  D000               	goto	i2l1828
  3023  0000D8                     i2l1828:
  3024                           
  3025                           ;main.c: 140: beginG=0;
  3026  0000D8  0E00               	movlw	0
  3027  0000DA  6E27               	movwf	_beginG,c
  3028                           
  3029                           ;main.c: 141: if (beginB==1)
  3030  0000DC  0426               	decf	_beginB,w,c
  3031  0000DE  A4D8               	btfss	status,2,c
  3032  0000E0  D00E               	goto	i2l1834
  3033                           
  3034                           ;main.c: 142: pwm('B',atoi(buffer));
  3035  0000E2  0E2A               	movlw	low _buffer
  3036  0000E4  6E07               	movwf	atoi@s,c
  3037  0000E6  0E00               	movlw	high _buffer
  3038  0000E8  6E08               	movwf	atoi@s+1,c
  3039  0000EA  EC36  F004         	call	_atoi	;wreg free
  3040  0000EE  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  3041  0000F2  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  3042  0000F6  0E42               	movlw	66
  3043  0000F8  EC9F  F005         	call	i2_pwm
  3044  0000FC  D000               	goto	i2l1834
  3045  0000FE                     i2l1834:
  3046                           
  3047                           ;main.c: 143: beginB=0;
  3048  0000FE  0E00               	movlw	0
  3049  000100  6E26               	movwf	_beginB,c
  3050                           
  3051                           ;main.c: 146: compteur=0;
  3052  000102  0E00               	movlw	0
  3053  000104  6E29               	movwf	_compteur,c
  3054                           
  3055                           ;main.c: 147: buffer[3]='\0';
  3056  000106  0E00               	movlw	0
  3057  000108  6E2D               	movwf	_buffer+3,c
  3058                           
  3059                           ;main.c: 148: buffer[2]='\0';
  3060  00010A  0E00               	movlw	0
  3061  00010C  6E2C               	movwf	_buffer+2,c
  3062                           
  3063                           ;main.c: 149: buffer[1]='\0';
  3064  00010E  0E00               	movlw	0
  3065  000110  6E2B               	movwf	_buffer+1,c
  3066                           
  3067                           ;main.c: 150: buffer[0]='\0';
  3068  000112  0E00               	movlw	0
  3069  000114  6E2A               	movwf	_buffer,c
  3070  000116  D000               	goto	i2l1846
  3071  000118                     i2l1846:
  3072                           
  3073                           ;main.c: 151: }
  3074                           ;main.c: 152: }
  3075                           ;main.c: 154: if (input[0]=='R')
  3076  000118  0E52               	movlw	82
  3077  00011A  181F               	xorwf	high_isr@input,w,c
  3078  00011C  A4D8               	btfss	status,2,c
  3079  00011E  D003               	goto	i2l1850
  3080                           
  3081                           ;main.c: 155: beginR=1;
  3082  000120  0E01               	movlw	1
  3083  000122  6E28               	movwf	_beginR,c
  3084  000124  D000               	goto	i2l1850
  3085  000126                     i2l1850:
  3086                           
  3087                           ;main.c: 156: if (input[0]=='G')
  3088  000126  0E47               	movlw	71
  3089  000128  181F               	xorwf	high_isr@input,w,c
  3090  00012A  A4D8               	btfss	status,2,c
  3091  00012C  D003               	goto	i2l1854
  3092                           
  3093                           ;main.c: 157: beginG=1;
  3094  00012E  0E01               	movlw	1
  3095  000130  6E27               	movwf	_beginG,c
  3096  000132  D000               	goto	i2l1854
  3097  000134                     i2l1854:
  3098                           
  3099                           ;main.c: 158: if (input[0]=='B')
  3100  000134  0E42               	movlw	66
  3101  000136  181F               	xorwf	high_isr@input,w,c
  3102  000138  A4D8               	btfss	status,2,c
  3103  00013A  D003               	goto	i2l142
  3104                           
  3105                           ;main.c: 159: beginB=1;
  3106  00013C  0E01               	movlw	1
  3107  00013E  6E26               	movwf	_beginB,c
  3108  000140  D000               	goto	i2l142
  3109  000142                     i2l142:
  3110  000142  C01E  FFF5         	movff	??_high_isr+13,tablat
  3111  000146  C01D  FFF8         	movff	??_high_isr+12,tblptru
  3112  00014A  C01C  FFF7         	movff	??_high_isr+11,tblptrh
  3113  00014E  C01B  FFF6         	movff	??_high_isr+10,tblptrl
  3114  000152  C01A  FFF4         	movff	??_high_isr+9,prodh
  3115  000156  C019  FFF3         	movff	??_high_isr+8,prodl
  3116  00015A  C018  FFDA         	movff	??_high_isr+7,fsr2h
  3117  00015E  C017  FFD9         	movff	??_high_isr+6,fsr2l
  3118  000162  C016  FFE2         	movff	??_high_isr+5,fsr1h
  3119  000166  C015  FFE1         	movff	??_high_isr+4,fsr1l
  3120  00016A  C014  FFEA         	movff	??_high_isr+3,fsr0h
  3121  00016E  C013  FFE9         	movff	??_high_isr+2,fsr0l
  3122  000172  C012  FFFB         	movff	??_high_isr+1,pclatu
  3123  000176  C011  FFFA         	movff	??_high_isr,pclath
  3124  00017A  0011               	retfie		f
  3125  00017C                     __end_of_high_isr:
  3126                           	opt stack 0
  3127                           pclatu	equ	0xFFB
  3128                           pclath	equ	0xFFA
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           intcon	equ	0xFF2
  3136                           postinc0	equ	0xFEE
  3137                           fsr0h	equ	0xFEA
  3138                           fsr0l	equ	0xFE9
  3139                           wreg	equ	0xFE8
  3140                           postdec1	equ	0xFE5
  3141                           plusw1	equ	0xFE3
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           plusw2	equ	0xFDB
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function i2_pwm *****************
  3151 ;; Defined at:
  3152 ;;		line 8 in file "converter.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  color           1    wreg     unsigned char 
  3155 ;;  dutycycle       2   13[COMRAM] int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  color           1   15[COMRAM] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3171 ;;Total ram usage:        3 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    1
  3174 ;; This function calls:
  3175 ;;		i2___awdiv
  3176 ;; This function is called by:
  3177 ;;		_high_isr
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text14
  3182  000B3E                     __ptext14:
  3183                           	opt stack 0
  3184  000B3E                     i2_pwm:
  3185                           	opt stack 26
  3186                           
  3187                           ;incstack = 0
  3188                           ;i2pwm@color stored from wreg
  3189  000B3E  6E10               	movwf	i2pwm@color,c
  3190                           
  3191                           ;converter.c: 9: switch(color){
  3192  000B40  D036               	goto	i2l1798
  3193  000B42                     i2l1778:
  3194                           
  3195                           ;converter.c: 11: CCPR2L=dutycycle/4;
  3196  000B42  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  3197  000B46  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  3198  000B4A  0E00               	movlw	0
  3199  000B4C  6E04               	movwf	i2___awdiv@divisor+1,c
  3200  000B4E  0E04               	movlw	4
  3201  000B50  6E03               	movwf	i2___awdiv@divisor,c
  3202  000B52  EC54  F005         	call	i2___awdiv	;wreg free
  3203  000B56  5001               	movf	?i2___awdiv,w,c
  3204  000B58  010F               	movlb	15	; () banked
  3205  000B5A  6F51               	movwf	81,b	;volatile
  3206                           
  3207                           ; BSR set to: 15
  3208                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  3209  000B5C  010F               	movlb	15	; () banked
  3210  000B5E  9B50               	bcf	80,5,b	;volatile
  3211                           
  3212                           ; BSR set to: 15
  3213                           ;converter.c: 13: DC2B0=dutycycle%1;
  3214  000B60  010F               	movlb	15	; () banked
  3215  000B62  9950               	bcf	80,4,b	;volatile
  3216                           
  3217                           ;converter.c: 14: break;
  3218  000B64  0012               	return	
  3219  000B66                     i2l1784:
  3220                           
  3221                           ;converter.c: 16: CCPR3L=dutycycle/4;
  3222  000B66  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  3223  000B6A  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  3224  000B6E  0E00               	movlw	0
  3225  000B70  6E04               	movwf	i2___awdiv@divisor+1,c
  3226  000B72  0E04               	movlw	4
  3227  000B74  6E03               	movwf	i2___awdiv@divisor,c
  3228  000B76  EC54  F005         	call	i2___awdiv	;wreg free
  3229  000B7A  5001               	movf	?i2___awdiv,w,c
  3230  000B7C  010F               	movlb	15	; () banked
  3231  000B7E  6F4E               	movwf	78,b	;volatile
  3232                           
  3233                           ; BSR set to: 15
  3234                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  3235  000B80  010F               	movlb	15	; () banked
  3236  000B82  9B4D               	bcf	77,5,b	;volatile
  3237                           
  3238                           ; BSR set to: 15
  3239                           ;converter.c: 18: DC3B0=0;
  3240  000B84  010F               	movlb	15	; () banked
  3241  000B86  994D               	bcf	77,4,b	;volatile
  3242                           
  3243                           ;converter.c: 19: break;
  3244  000B88  0012               	return	
  3245  000B8A                     i2l1790:
  3246                           
  3247                           ;converter.c: 21: CCPR4L=dutycycle/4;
  3248  000B8A  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  3249  000B8E  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  3250  000B92  0E00               	movlw	0
  3251  000B94  6E04               	movwf	i2___awdiv@divisor+1,c
  3252  000B96  0E04               	movlw	4
  3253  000B98  6E03               	movwf	i2___awdiv@divisor,c
  3254  000B9A  EC54  F005         	call	i2___awdiv	;wreg free
  3255  000B9E  5001               	movf	?i2___awdiv,w,c
  3256  000BA0  010F               	movlb	15	; () banked
  3257  000BA2  6F4B               	movwf	75,b	;volatile
  3258                           
  3259                           ; BSR set to: 15
  3260                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  3261  000BA4  010F               	movlb	15	; () banked
  3262  000BA6  9B4A               	bcf	74,5,b	;volatile
  3263                           
  3264                           ; BSR set to: 15
  3265                           ;converter.c: 23: DC4B0=dutycycle%1;
  3266  000BA8  010F               	movlb	15	; () banked
  3267  000BAA  994A               	bcf	74,4,b	;volatile
  3268                           
  3269                           ; BSR set to: 15
  3270                           ;converter.c: 25: }
  3271                           
  3272                           ;converter.c: 24: break;
  3273  000BAC  0012               	return	
  3274  000BAE                     i2l1798:
  3275  000BAE  5010               	movf	i2pwm@color,w,c
  3276                           
  3277                           ; Switch size 1, requested type "space"
  3278                           ; Number of cases is 3, Range of values is 66 to 82
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           10     6 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  000BB0  0A42               	xorlw	66	; case 66
  3284  000BB2  B4D8               	btfsc	status,2,c
  3285  000BB4  D7C6               	goto	i2l1778
  3286  000BB6  0A05               	xorlw	5	; case 71
  3287  000BB8  B4D8               	btfsc	status,2,c
  3288  000BBA  D7E7               	goto	i2l1790
  3289  000BBC  0A15               	xorlw	21	; case 82
  3290  000BBE  A4D8               	btfss	status,2,c
  3291  000BC0  0012               	return	
  3292  000BC2  D7D1               	goto	i2l1784
  3293  000BC4  0012               	return		;funcret
  3294  000BC6                     __end_ofi2_pwm:
  3295                           	opt stack 0
  3296                           pclatu	equ	0xFFB
  3297                           pclath	equ	0xFFA
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           intcon	equ	0xFF2
  3305                           postinc0	equ	0xFEE
  3306                           fsr0h	equ	0xFEA
  3307                           fsr0l	equ	0xFE9
  3308                           wreg	equ	0xFE8
  3309                           postdec1	equ	0xFE5
  3310                           plusw1	equ	0xFE3
  3311                           fsr1h	equ	0xFE2
  3312                           fsr1l	equ	0xFE1
  3313                           indf2	equ	0xFDF
  3314                           plusw2	equ	0xFDB
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function i2___awdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  dividend        2    0[COMRAM] int 
  3324 ;;  divisor         2    2[COMRAM] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  __awdiv         2    6[COMRAM] int 
  3327 ;;  __awdiv         1    5[COMRAM] unsigned char 
  3328 ;;  __awdiv         1    4[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    0[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		i2_pwm
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text15
  3352  000AA8                     __ptext15:
  3353                           	opt stack 0
  3354  000AA8                     i2___awdiv:
  3355                           	opt stack 26
  3356                           
  3357                           ;incstack = 0
  3358  000AA8  0E00               	movlw	0
  3359  000AAA  6E06               	movwf	i2___awdiv@sign,c
  3360  000AAC  AE04               	btfss	i2___awdiv@divisor+1,7,c
  3361  000AAE  D007               	goto	i2l1518
  3362  000AB0  6C03               	negf	i2___awdiv@divisor,c
  3363  000AB2  1E04               	comf	i2___awdiv@divisor+1,f,c
  3364  000AB4  B0D8               	btfsc	status,0,c
  3365  000AB6  2A04               	incf	i2___awdiv@divisor+1,f,c
  3366  000AB8  0E01               	movlw	1
  3367  000ABA  6E06               	movwf	i2___awdiv@sign,c
  3368  000ABC  D000               	goto	i2l1518
  3369  000ABE                     i2l1518:
  3370  000ABE  AE02               	btfss	i2___awdiv@dividend+1,7,c
  3371  000AC0  D007               	goto	i2l1524
  3372  000AC2  6C01               	negf	i2___awdiv@dividend,c
  3373  000AC4  1E02               	comf	i2___awdiv@dividend+1,f,c
  3374  000AC6  B0D8               	btfsc	status,0,c
  3375  000AC8  2A02               	incf	i2___awdiv@dividend+1,f,c
  3376  000ACA  0E01               	movlw	1
  3377  000ACC  1A06               	xorwf	i2___awdiv@sign,f,c
  3378  000ACE  D000               	goto	i2l1524
  3379  000AD0                     i2l1524:
  3380  000AD0  0E00               	movlw	0
  3381  000AD2  6E08               	movwf	i2___awdiv@quotient+1,c
  3382  000AD4  0E00               	movlw	0
  3383  000AD6  6E07               	movwf	i2___awdiv@quotient,c
  3384  000AD8  5003               	movf	i2___awdiv@divisor,w,c
  3385  000ADA  1004               	iorwf	i2___awdiv@divisor+1,w,c
  3386  000ADC  B4D8               	btfsc	status,2,c
  3387  000ADE  D021               	goto	i2l1546
  3388  000AE0  0E01               	movlw	1
  3389  000AE2  6E05               	movwf	i2___awdiv@counter,c
  3390  000AE4  D005               	goto	i2l1532
  3391  000AE6                     i2l1530:
  3392  000AE6  90D8               	bcf	status,0,c
  3393  000AE8  3603               	rlcf	i2___awdiv@divisor,f,c
  3394  000AEA  3604               	rlcf	i2___awdiv@divisor+1,f,c
  3395  000AEC  2A05               	incf	i2___awdiv@counter,f,c
  3396  000AEE  D000               	goto	i2l1532
  3397  000AF0                     i2l1532:
  3398  000AF0  BE04               	btfsc	i2___awdiv@divisor+1,7,c
  3399  000AF2  D002               	goto	i2l1534
  3400  000AF4  D7F8               	goto	i2l1530
  3401  000AF6  D000               	goto	i2l1534
  3402  000AF8                     i2l1534:
  3403  000AF8  90D8               	bcf	status,0,c
  3404  000AFA  3607               	rlcf	i2___awdiv@quotient,f,c
  3405  000AFC  3608               	rlcf	i2___awdiv@quotient+1,f,c
  3406  000AFE  5003               	movf	i2___awdiv@divisor,w,c
  3407  000B00  5C01               	subwf	i2___awdiv@dividend,w,c
  3408  000B02  5004               	movf	i2___awdiv@divisor+1,w,c
  3409  000B04  5802               	subwfb	i2___awdiv@dividend+1,w,c
  3410  000B06  A0D8               	btfss	status,0,c
  3411  000B08  D006               	goto	i2l1542
  3412  000B0A  5003               	movf	i2___awdiv@divisor,w,c
  3413  000B0C  5E01               	subwf	i2___awdiv@dividend,f,c
  3414  000B0E  5004               	movf	i2___awdiv@divisor+1,w,c
  3415  000B10  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  3416  000B12  8007               	bsf	i2___awdiv@quotient,0,c
  3417  000B14  D000               	goto	i2l1542
  3418  000B16                     i2l1542:
  3419  000B16  90D8               	bcf	status,0,c
  3420  000B18  3204               	rrcf	i2___awdiv@divisor+1,f,c
  3421  000B1A  3203               	rrcf	i2___awdiv@divisor,f,c
  3422  000B1C  2E05               	decfsz	i2___awdiv@counter,f,c
  3423  000B1E  D7EC               	goto	i2l1534
  3424  000B20  D000               	goto	i2l1546
  3425  000B22                     i2l1546:
  3426  000B22  5006               	movf	i2___awdiv@sign,w,c
  3427  000B24  B4D8               	btfsc	status,2,c
  3428  000B26  D005               	goto	i2l1550
  3429  000B28  6C07               	negf	i2___awdiv@quotient,c
  3430  000B2A  1E08               	comf	i2___awdiv@quotient+1,f,c
  3431  000B2C  B0D8               	btfsc	status,0,c
  3432  000B2E  2A08               	incf	i2___awdiv@quotient+1,f,c
  3433  000B30  D000               	goto	i2l1550
  3434  000B32                     i2l1550:
  3435  000B32  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3436  000B36  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3437  000B3A  0012               	return	
  3438  000B3C  0012               	return		;funcret
  3439  000B3E                     __end_ofi2___awdiv:
  3440                           	opt stack 0
  3441                           pclatu	equ	0xFFB
  3442                           pclath	equ	0xFFA
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           intcon	equ	0xFF2
  3450                           postinc0	equ	0xFEE
  3451                           fsr0h	equ	0xFEA
  3452                           fsr0l	equ	0xFE9
  3453                           wreg	equ	0xFE8
  3454                           postdec1	equ	0xFE5
  3455                           plusw1	equ	0xFE3
  3456                           fsr1h	equ	0xFE2
  3457                           fsr1l	equ	0xFE1
  3458                           indf2	equ	0xFDF
  3459                           plusw2	equ	0xFDB
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function _atoi *****************
  3465 ;; Defined at:
  3466 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3469 ;;		 -> buffer(16), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  a               2   11[COMRAM] int 
  3472 ;;  sign            1   10[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  2    6[COMRAM] int 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3486 ;;Total ram usage:        7 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    1
  3489 ;; This function calls:
  3490 ;;		___wmul
  3491 ;;		_isdigit
  3492 ;; This function is called by:
  3493 ;;		_high_isr
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text16
  3498  00086C                     __ptext16:
  3499                           	opt stack 0
  3500  00086C                     _atoi:
  3501                           	opt stack 26
  3502                           
  3503                           ;incstack = 0
  3504  00086C  D003               	goto	i2l1558
  3505  00086E                     i2l1556:
  3506  00086E  4A07               	infsnz	atoi@s,f,c
  3507  000870  2A08               	incf	atoi@s+1,f,c
  3508  000872  D000               	goto	i2l1558
  3509  000874                     i2l1558:
  3510  000874  C007  FFD9         	movff	atoi@s,fsr2l
  3511  000878  C008  FFDA         	movff	atoi@s+1,fsr2h
  3512  00087C  0E20               	movlw	32
  3513  00087E  18DE               	xorwf	postinc2,w,c
  3514  000880  B4D8               	btfsc	status,2,c
  3515  000882  D7F5               	goto	i2l1556
  3516  000884  C007  FFD9         	movff	atoi@s,fsr2l
  3517  000888  C008  FFDA         	movff	atoi@s+1,fsr2h
  3518  00088C  0E09               	movlw	9
  3519  00088E  18DE               	xorwf	postinc2,w,c
  3520  000890  B4D8               	btfsc	status,2,c
  3521  000892  D7ED               	goto	i2l1556
  3522  000894  0E00               	movlw	0
  3523  000896  6E0D               	movwf	atoi@a+1,c
  3524  000898  0E00               	movlw	0
  3525  00089A  6E0C               	movwf	atoi@a,c
  3526  00089C  0E00               	movlw	0
  3527  00089E  6E0B               	movwf	atoi@sign,c
  3528  0008A0  C007  FFD9         	movff	atoi@s,fsr2l
  3529  0008A4  C008  FFDA         	movff	atoi@s+1,fsr2h
  3530  0008A8  0E2D               	movlw	45
  3531  0008AA  18DE               	xorwf	postinc2,w,c
  3532  0008AC  A4D8               	btfss	status,2,c
  3533  0008AE  D002               	goto	i2l1568
  3534  0008B0  2A0B               	incf	atoi@sign,f,c
  3535  0008B2  D025               	goto	i2l1574
  3536  0008B4                     i2l1568:
  3537  0008B4  C007  FFD9         	movff	atoi@s,fsr2l
  3538  0008B8  C008  FFDA         	movff	atoi@s+1,fsr2h
  3539  0008BC  0E2B               	movlw	43
  3540  0008BE  18DE               	xorwf	postinc2,w,c
  3541  0008C0  A4D8               	btfss	status,2,c
  3542  0008C2  D020               	goto	i2l1576
  3543  0008C4  D01C               	goto	i2l1574
  3544  0008C6  D01E               	goto	i2l1576
  3545  0008C8                     i2l1572:
  3546  0008C8  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3547  0008CC  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3548  0008D0  0E00               	movlw	0
  3549  0008D2  6E04               	movwf	___wmul@multiplicand+1,c
  3550  0008D4  0E0A               	movlw	10
  3551  0008D6  6E03               	movwf	___wmul@multiplicand,c
  3552  0008D8  EC8E  F006         	call	___wmul	;wreg free
  3553  0008DC  C007  FFD9         	movff	atoi@s,fsr2l
  3554  0008E0  C008  FFDA         	movff	atoi@s+1,fsr2h
  3555  0008E4  50DF               	movf	indf2,w,c
  3556  0008E6  6E09               	movwf	??_atoi& (0+255),c
  3557  0008E8  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3558  0008EA  5001               	movf	?___wmul,w,c
  3559  0008EC  2609               	addwf	??_atoi,f,c
  3560  0008EE  5002               	movf	?___wmul+1,w,c
  3561  0008F0  220A               	addwfc	??_atoi+1,f,c
  3562  0008F2  0ED0               	movlw	208
  3563  0008F4  2409               	addwf	??_atoi,w,c
  3564  0008F6  6E0C               	movwf	atoi@a,c
  3565  0008F8  0EFF               	movlw	255
  3566  0008FA  200A               	addwfc	??_atoi+1,w,c
  3567  0008FC  6E0D               	movwf	atoi@a+1,c
  3568  0008FE                     i2l1574:
  3569  0008FE  4A07               	infsnz	atoi@s,f,c
  3570  000900  2A08               	incf	atoi@s+1,f,c
  3571  000902  D000               	goto	i2l1576
  3572  000904                     i2l1576:
  3573  000904  C007  FFD9         	movff	atoi@s,fsr2l
  3574  000908  C008  FFDA         	movff	atoi@s+1,fsr2h
  3575  00090C  50DF               	movf	indf2,w,c
  3576  00090E  ECA2  F006         	call	_isdigit
  3577  000912  B0D8               	btfsc	status,0,c
  3578  000914  D7D9               	goto	i2l1572
  3579  000916  500B               	movf	atoi@sign,w,c
  3580  000918  B4D8               	btfsc	status,2,c
  3581  00091A  D00D               	goto	i2l397
  3582  00091C  C00C  F009         	movff	atoi@a,??_atoi
  3583  000920  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3584  000924  1E09               	comf	??_atoi,f,c
  3585  000926  1E0A               	comf	??_atoi+1,f,c
  3586  000928  4A09               	infsnz	??_atoi,f,c
  3587  00092A  2A0A               	incf	??_atoi+1,f,c
  3588  00092C  C009  F007         	movff	??_atoi,?_atoi
  3589  000930  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3590  000934  0012               	return	
  3591  000936                     i2l397:
  3592  000936  C00C  F007         	movff	atoi@a,?_atoi
  3593  00093A  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3594  00093E  0012               	return		;funcret
  3595  000940                     __end_of_atoi:
  3596                           	opt stack 0
  3597                           pclatu	equ	0xFFB
  3598                           pclath	equ	0xFFA
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           postinc0	equ	0xFEE
  3607                           fsr0h	equ	0xFEA
  3608                           fsr0l	equ	0xFE9
  3609                           wreg	equ	0xFE8
  3610                           postdec1	equ	0xFE5
  3611                           plusw1	equ	0xFE3
  3612                           fsr1h	equ	0xFE2
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           plusw2	equ	0xFDB
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _isdigit *****************
  3622 ;; Defined at:
  3623 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  c               1    wreg     unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  c               1    2[COMRAM] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;Total ram usage:        3 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_atoi
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text17
  3651  000D44                     __ptext17:
  3652                           	opt stack 0
  3653  000D44                     _isdigit:
  3654                           	opt stack 26
  3655                           
  3656                           ;incstack = 0
  3657                           ;isdigit@c stored from wreg
  3658  000D44  6E03               	movwf	isdigit@c,c
  3659  000D46  0E00               	movlw	0
  3660  000D48  6E02               	movwf	_isdigit$837,c
  3661  000D4A  0E3A               	movlw	58
  3662  000D4C  6003               	cpfslt	isdigit@c,c
  3663  000D4E  D006               	goto	i2l1462
  3664  000D50  0E2F               	movlw	47
  3665  000D52  6403               	cpfsgt	isdigit@c,c
  3666  000D54  D003               	goto	i2l1462
  3667  000D56  0E01               	movlw	1
  3668  000D58  6E02               	movwf	_isdigit$837,c
  3669  000D5A  D000               	goto	i2l1462
  3670  000D5C                     i2l1462:
  3671  000D5C  C002  F001         	movff	_isdigit$837,??_isdigit
  3672  000D60  3001               	rrcf	??_isdigit,w,c
  3673  000D62  0012               	return	
  3674  000D64  0012               	return		;funcret
  3675  000D66                     __end_of_isdigit:
  3676                           	opt stack 0
  3677                           pclatu	equ	0xFFB
  3678                           pclath	equ	0xFFA
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           fsr0h	equ	0xFEA
  3688                           fsr0l	equ	0xFE9
  3689                           wreg	equ	0xFE8
  3690                           postdec1	equ	0xFE5
  3691                           plusw1	equ	0xFE3
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           indf2	equ	0xFDF
  3695                           postinc2	equ	0xFDE
  3696                           plusw2	equ	0xFDB
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function ___wmul *****************
  3702 ;; Defined at:
  3703 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  multiplier      2    0[COMRAM] unsigned int 
  3706 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  product         2    4[COMRAM] unsigned int 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  2    0[COMRAM] unsigned int 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, prodl, prodh
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;Total ram usage:        6 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_atoi
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text18
  3732  000D1C                     __ptext18:
  3733                           	opt stack 0
  3734  000D1C                     ___wmul:
  3735                           	opt stack 26
  3736                           
  3737                           ;incstack = 0
  3738  000D1C  5001               	movf	___wmul@multiplier,w,c
  3739  000D1E  0203               	mulwf	___wmul@multiplicand,c
  3740  000D20  CFF3 F005          	movff	prodl,___wmul@product
  3741  000D24  CFF4 F006          	movff	prodh,___wmul@product+1
  3742  000D28  5001               	movf	___wmul@multiplier,w,c
  3743  000D2A  0204               	mulwf	___wmul@multiplicand+1,c
  3744  000D2C  50F3               	movf	prodl,w,c
  3745  000D2E  2606               	addwf	___wmul@product+1,f,c
  3746  000D30  5002               	movf	___wmul@multiplier+1,w,c
  3747  000D32  0203               	mulwf	___wmul@multiplicand,c
  3748  000D34  50F3               	movf	prodl,w,c
  3749  000D36  2606               	addwf	___wmul@product+1,f,c
  3750  000D38  C005  F001         	movff	___wmul@product,?___wmul
  3751  000D3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3752  000D40  0012               	return	
  3753  000D42  0012               	return		;funcret
  3754  000D44                     __end_of___wmul:
  3755                           	opt stack 0
  3756  0000                     pclatu	equ	0xFFB
  3757                           pclath	equ	0xFFA
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           fsr0h	equ	0xFEA
  3767                           fsr0l	equ	0xFE9
  3768                           wreg	equ	0xFE8
  3769                           postdec1	equ	0xFE5
  3770                           plusw1	equ	0xFE3
  3771                           fsr1h	equ	0xFE2
  3772                           fsr1l	equ	0xFE1
  3773                           indf2	equ	0xFDF
  3774                           postinc2	equ	0xFDE
  3775                           plusw2	equ	0xFDB
  3776                           fsr2h	equ	0xFDA
  3777                           fsr2l	equ	0xFD9
  3778                           status	equ	0xFD8
  3779                           pclatu	equ	0xFFB
  3780                           pclath	equ	0xFFA
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           prodh	equ	0xFF4
  3786                           prodl	equ	0xFF3
  3787                           intcon	equ	0xFF2
  3788                           postinc0	equ	0xFEE
  3789                           fsr0h	equ	0xFEA
  3790                           fsr0l	equ	0xFE9
  3791                           wreg	equ	0xFE8
  3792                           postdec1	equ	0xFE5
  3793                           plusw1	equ	0xFE3
  3794                           fsr1h	equ	0xFE2
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           postinc2	equ	0xFDE
  3798                           plusw2	equ	0xFDB
  3799                           fsr2h	equ	0xFDA
  3800                           fsr2l	equ	0xFD9
  3801                           status	equ	0xFD8
  3802                           
  3803                           	psect	rparam
  3804  0000                     pclatu	equ	0xFFB
  3805                           pclath	equ	0xFFA
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           fsr0h	equ	0xFEA
  3815                           fsr0l	equ	0xFE9
  3816                           wreg	equ	0xFE8
  3817                           postdec1	equ	0xFE5
  3818                           plusw1	equ	0xFE3
  3819                           fsr1h	equ	0xFE2
  3820                           fsr1l	equ	0xFE1
  3821                           indf2	equ	0xFDF
  3822                           postinc2	equ	0xFDE
  3823                           plusw2	equ	0xFDB
  3824                           fsr2h	equ	0xFDA
  3825                           fsr2l	equ	0xFD9
  3826                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      63
    BANK0           160     97     145
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_pwm
    i2_pwm->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    36      5    9949
                                             56 BANK0     41    36      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2     102
                                             32 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1244
                                             53 BANK0      3     1      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2234
                                              5 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     411
                                             38 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2976
                                              8 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2908
                                             23 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2008
                                             32 COMRAM     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            16    16      0    1498
                                             16 COMRAM    16    16      0
                               _atoi
                              i2_pwm
 ---------------------------------------------------------------------------------
 (4) i2_pwm                                                3     1      2     622
                                             13 COMRAM     3     1      2
                               _atoi (ARG)
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (5) i2___awdiv                                            8     4      4     456
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
     _readADC (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
     _readADC (ARG)
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
     _readADC (ARG)
   ___lwtoft
     ___ftpack
     _readADC (ARG)
   _initialisation
     _initADC
     _initComms
     _initPWM
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
     _readADC (ARG)
   _readADC

 _high_isr (ROOT)
   _atoi
     ___wmul
     _isdigit
   i2_pwm
     _atoi (ARG)
       ___wmul
       _isdigit
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      91       5       90.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3F       1       66.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0       6        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 25 15:39:35 2015

                      _B 003A                        _G 003C                        _R 003E  
           ___awdiv@sign 0065      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l180 0BDC                      l182 0C10  
                    l183 0C14                      l177 0BD2                      l179 0BD6  
                    l613 072A                      l549 0832             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _pwm 0A10  
                    prod 000FF3                      wreg 000FE8               _TXSTA2bits 000FBA  
           ___ftdiv@cntr 0080             ___ftdiv@sign 0085                     l2010 0686  
                   l2004 064C                     l2030 06E8                     l2110 01F2  
                   l2102 01AA                     l2040 073C                     l2104 01BC  
                   l2050 038E                     l2108 01E0                     l2070 0418  
                   l2080 045C                     l2056 03C8                     l2074 0438  
                   l2084 047C                     l2078 0454                     l2088 0498  
                   l1900 083E                     l1732 04FA                     l1750 058E  
                   l1760 05C0                     l1906 085C                     l1762 05D2  
                   l1754 05A2                     l1930 0994                     l1764 05E0  
                   l1932 09A2                     l1924 0976                     l1950 0A04  
                   l1942 09DE                     l1934 09AC                     l1918 095E  
                   l1768 05FE                     l1890 07EC                     l1882 0794  
                   l1946 09EE                     l1962 0A3E                     l1892 0812  
                   l1884 07A4                     l1956 0A16                     l1894 0822  
                   l1886 07CA                     l1878 077E                     l1990 0C04  
                   l1982 0BE2                     l1968 0A66                     l1976 0A8E  
                   l1992 0C08                     l1984 0BFA                     _ADON 007E10  
                   _CHS0 007E12                     _CHS1 007E13                     ?_pwm 0095  
                   u1101 04D6                     u1120 0520                     u1125 0516  
                   u1501 0628                     u1521 0662                     u1611 01A0  
                   u1551 036A                     u1571 03A4         ??_initialisation 0021  
                   _atoi 086C                     _main 0180             ___ftpack@arg 0060  
           ___ftpack@exp 0063                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 017C  
          __CFG_IESO$OFF 000000             ___ftmul@cntr 0075             ___param_bank 000010  
           ___ftmul@sign 0076             ___fttol@exp1 0094             ___fttol@lval 0090  
                  ??_pwm 0024                    _DC2B0 007A84                    _DC2B1 007A85  
                  _DC3B0 007A6C                    _DC3B1 007A6D                    _DC4B0 007A54  
                  _DC4B1 007A55                    ?_atoi 0007                    ?_main 0098  
        __end_of___awdiv 0A10          __end_of___ftdiv 0764          __end_of___ftmul 04C0  
        ___awdiv@divisor 0062          __end_of___fttol 0612                    _RC2IF 007D25  
                  i2l142 0142                    i2l397 0936          ___awdiv@counter 0064  
                  _VCFG0 007E0C                    _VCFG1 007E0D                    _VNCFG 007E0B  
                  _TRISC 000F94                    i2_pwm 0B3E            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initADC 0D82  
        __end_of_readADC 0C34           __CFG_EBTRB$OFF 000000          __end_of_initPWM 0C86  
        __end_of_isdigit 0D66            ___ftpack@sign 0064                    atoi@a 000C  
                  atoi@s 0007                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8           i2pwm@dutycycle 000E  
     __size_ofi2___awdiv 0096               i2pwm@color 0010           __CFG_MCLRE$OFF 000000  
        __initialization 0C86             __end_of_atoi 0940             __end_of_main 0354  
          high_isr@input 001F                   ??_atoi 0009                   ??_main 0024  
          ___fttol@sign1 008F            __activetblptr 000002           __CFG_RETEN$OFF 000000  
                 ?i2_pwm 000E                   _CCP2M2 007A82                   _CCP2M3 007A83  
                 _CCP3M2 007A6A                   _CCP3M3 007A6B                   _CCP4M2 007A52  
                 _CCP4M3 007A53                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000F51                   _CCPR3L 000F4E                   _CCPR4L 000F4B  
       ___awdiv@dividend 0060                   _ANSEL1 007AE9                   _ANSEL2 007AEA  
                 _ANSEL3 007AEB         __end_of___ftpack 086C          __CFG_BBSIZ$BB2K 000000  
                 i2l1530 0AE6                   i2l1532 0AF0                   i2l1524 0AD0  
                 i2l1462 0D5C                   i2l1550 0B32                   i2l1542 0B16  
                 i2l1534 0AF8                   i2l1518 0ABE                   i2l1546 0B22  
                 i2l1572 08C8                   i2l1556 086E                   i2l1574 08FE  
                 i2l1558 0874                   i2l1822 00B2           __CFG_WDTEN$OFF 000000  
                 i2l1576 0904                   i2l1568 08B4                   i2l1808 0060  
                 i2l1850 0126                   i2l1834 00FE                   i2l1818 0090  
                 i2l1828 00D8                   i2l1790 0B8A                   i2l1854 0134  
                 i2l1846 0118                   i2l1784 0B66                   i2l1778 0B42  
                 i2l1798 0BAE                   _RCREG2 000F7A         __end_of___lwtoft 0CF4  
                 _SPBRG2 000F7B                   _TMR2ON 007E52                   _TXREG2 000F79  
         __CFG_XINST$OFF 000000         __end_of_high_isr 017C                   _beginB 0026  
                 _beginG 0027                   ___wmul 0D1C                   _beginR 0028  
              ??___awdiv 0021           __CFG_STVREN$ON 000000                ??___ftdiv 007D  
              ??___ftmul 006E                ??___fttol 008A             readADC@tempo 0063  
                 _buffer 002A                   clear_0 0C8C                   clear_1 0C98  
       ___awdiv@quotient 0066           i2___awdiv@sign 0006                ??_initADC 0021  
  ___ftmul@f3_as_product 0072                ??_readADC 0060                ??_initPWM 0021  
           __pdataCOMRAM 003A                ??_isdigit 0001        __end_ofi2___awdiv 0B3E  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         high_isr@F19158 0024               __accesstop 0060  __end_of__initialization 0CBE  
          ___rparam_used 000001               ___ftdiv@f1 0077               ___ftdiv@f2 007A  
             ___ftdiv@f3 0081               ___ftmul@f1 0068               ___ftmul@f2 006B  
          __end_ofi2_pwm 0BC6               ___fttol@f1 0086           __pcstackCOMRAM 0001  
             ___lwtoft@c 0065                  ??i2_pwm 0010               __pbssBANK0 00C1  
        __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028                  ?___wmul 0001  
              ?___ftpack 0060                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
              ?___lwtoft 0065         __CFG_CANMX$PORTB 000000                  _SPBRGH2 000F7C  
              ?_high_isr 0001          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0940                  ___ftdiv 0612  
        __size_of___wmul 0028                  ___ftmul 0354                  ___fttol 04C0  
                __pcinit 0C86               ??___ftpack 0021                  __ramtop 0F00  
                __ptext0 0180                  __ptext1 0BC6                  __ptext2 0A10  
                __ptext3 0940                  __ptext4 0D82                  __ptext5 0C34  
                __ptext6 0CF4                  __ptext7 0D66                  __ptext8 0CC8  
                __ptext9 04C0                  _buffer1 00E1        __end_of_initComms 0D1C  
             ??___lwtoft 0024                  _initADC 0D66                  _readADC 0BC6  
                _initPWM 0C34                  _isdigit 0D44             __size_of_pwm 0098  
      __CFG_MSSPMSK$MSK7 000000                  main@msg 009D               ??_high_isr 0011  
   end_of_initialization 0CBE            __Lmediumconst 0000                  postdec1 000FE5  
                postinc0 000FEE                  postinc2 000FDE  __size_of_initialisation 000E  
             main@F19164 00C1         __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93  
              i2___awdiv 0AA8              ___ftdiv@exp 0084       i2___awdiv@dividend 0001  
            ___ftmul@exp 0071           __end_of___wmul 0D44            __pidataCOMRAM 0D90  
    start_initialization 0C86       i2___awdiv@quotient 0007              __end_of_pwm 0AA8  
             ?i2___awdiv 0001                 ??___wmul 0005        __size_of___ftpack 0108  
            __pbssCOMRAM 0024        __size_of___lwtoft 002C            __pcstackBANK0 0060  
      __size_of_high_isr 0174                __pintcode 0008           _initialisation 0D82  
               ?___awdiv 0060                 ?___ftdiv 0077                 ?___ftmul 0068  
               ?___fttol 0086                 ?_initADC 0001                 ?_readADC 0021  
               ?_initPWM 0001                 _BAUDCON2 000FB9                 ?_isdigit 0001  
         __size_ofi2_pwm 0088                _initComms 0CF4              ??i2___awdiv 0005  
         ___wmul@product 0005                 _PIE3bits 000FA3   __end_of_initialisation 0D90  
               _PIR3bits 000FA4                 _GO_nDONE 007E11                 _RCONbits 000FD0  
               _TRIGSEL0 007E0E                 _TRIGSEL1 007E0F        ___wmul@multiplier 0001  
       __CFG_SOSCSEL$DIG 000000                main@delay 00BD        i2___awdiv@divisor 0003  
      i2___awdiv@counter 0005               ?_initComms 0001                copy_data0 0CB2  
               __Hrparam 0000          ?_initialisation 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 00D0         __size_of___ftdiv 0152  
       __size_of___ftmul 016C         __size_of___fttol 0152           readADC@channel 0062  
               ___ftpack 0764              _isdigit$837 0002                 ___lwtoft 0CC8  
       __size_of_initADC 001C         __size_of_readADC 006E         __size_of_initPWM 0052  
       __size_of_isdigit 0022                 __ptext10 0354                 __ptext11 0612  
               __ptext12 0764                 __ptext14 0B3E                 __ptext15 0AA8  
               __ptext16 086C                 __ptext17 0D44                 __ptext18 0D1C  
               _high_isr 0008                 _compteur 0029            __size_of_atoi 00D4  
          __size_of_main 01D4                 atoi@sign 000B                 main@argc 0098  
               main@argv 009A      __CFG_INTOSCSEL$HIGH 000000               _INTCONbits 000FF2  
            ??_initComms 0021                 isdigit@c 0003                 intlevel2 0000  
           pwm@dutycycle 0095               _RCSTA2bits 000FA6                 pwm@color 0097  
     __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000  
