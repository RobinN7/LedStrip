

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 25 20:14:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     _CCPR2L	set	3921
    33  0000                     _CCPR3L	set	3918
    34  0000                     _CCPR4L	set	3915
    35  0000                     _ANSEL1	set	31465
    36  0000                     _ANSEL2	set	31466
    37  0000                     _ANSEL3	set	31467
    38  0000                     _CCP2M2	set	31362
    39  0000                     _CCP2M3	set	31363
    40  0000                     _CCP3M2	set	31338
    41  0000                     _CCP3M3	set	31339
    42  0000                     _CCP4M2	set	31314
    43  0000                     _CCP4M3	set	31315
    44  0000                     _DC2B0	set	31364
    45  0000                     _DC2B1	set	31365
    46  0000                     _DC3B0	set	31340
    47  0000                     _DC3B1	set	31341
    48  0000                     _DC4B0	set	31316
    49  0000                     _DC4B1	set	31317
    50  0000                     _ADRESH	set	4036
    51  0000                     _ADRESL	set	4035
    52  0000                     _BAUDCON2	set	4025
    53  0000                     _INTCONbits	set	4082
    54  0000                     _PIE3bits	set	4003
    55  0000                     _PIR3bits	set	4004
    56  0000                     _PR2	set	4043
    57  0000                     _RCONbits	set	4048
    58  0000                     _RCREG2	set	3962
    59  0000                     _RCSTA2bits	set	4006
    60  0000                     _SPBRG2	set	3963
    61  0000                     _SPBRGH2	set	3964
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TXREG2	set	3961
    65  0000                     _TXSTA2bits	set	4026
    66  0000                     _ADON	set	32272
    67  0000                     _CHS0	set	32274
    68  0000                     _CHS1	set	32275
    69  0000                     _GO_nDONE	set	32273
    70  0000                     _RC2IF	set	32037
    71  0000                     _T2CKPS0	set	32336
    72  0000                     _T2CKPS1	set	32337
    73  0000                     _TMR2ON	set	32338
    74  0000                     _TRIGSEL0	set	32270
    75  0000                     _TRIGSEL1	set	32271
    76  0000                     _VCFG0	set	32268
    77  0000                     _VCFG1	set	32269
    78  0000                     _VNCFG	set	32267
    79                           
    80                           ; 0 bytes @ 0x2C
    81 ;;
    82 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    83 ;;
    84 ;; *************** function _main *****************
    85 ;; Defined at:
    86 ;;		line 163 in file "main.c"
    87 ;; Parameters:    Size  Location     Type
    88 ;;  argc            2   44[BANK0 ] int 
    89 ;;  argv            3   46[BANK0 ] PTR PTR unsigned char 
    90 ;; Auto vars:     Size  Location     Type
    91 ;;  msg            15   49[BANK0 ] unsigned char [15]
    92 ;;  amplitude       2   66[BANK0 ] unsigned int 
    93 ;;  delay           2   64[BANK0 ] int 
    94 ;; Return value:  Size  Location     Type
    95 ;;                  2   44[BANK0 ] int 
    96 ;; Registers used:
    97 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
    98 ;; Tracked objects:
    99 ;;		On entry : 0/0
   100 ;;		On exit  : 0/0
   101 ;;		Unchanged: 0/0
   102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   103 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   104 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   106 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   107 ;;Total ram usage:       24 bytes
   108 ;; Hardware stack levels required when called:    5
   109 ;; This function calls:
   110 ;;		___ftdiv
   111 ;;		___ftmul
   112 ;;		___fttol
   113 ;;		___lwtoft
   114 ;;		_initialisation
   115 ;;		_pwm
   116 ;;		_readADC
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text0
   123  00016E                     __ptext0:
   124                           	opt stack 0
   125  00016E                     _main:
   126                           	opt stack 26
   127                           
   128                           ;main.c: 165: int delay=0;
   129                           
   130                           ;incstack = 0
   131  00016E  0E00               	movlw	0
   132  000170  0100               	movlb	0	; () banked
   133  000172  6FA1               	movwf	(main@delay+1)& (0+255),b
   134  000174  0E00               	movlw	0
   135  000176  6FA0               	movwf	main@delay& (0+255),b
   136                           
   137                           ; BSR set to: 0
   138                           ;main.c: 166: initialisation();
   139  000178  ECCE  F005         	call	_initialisation	;wreg free
   140                           
   141                           ;main.c: 167: char msg[15]="";
   142  00017C  EE20  F0A4         	lfsr	2,main@F19163
   143  000180  EE10  F091         	lfsr	1,main@msg
   144  000184  0E0E               	movlw	14
   145  000186                     u1461:
   146  000186  CFDB FFE3          	movff	plusw2,plusw1
   147  00018A  06E8               	decf	wreg,f,c
   148  00018C  E2FC               	bc	u1461
   149                           
   150                           ;main.c: 173: unsigned int amplitude=0;
   151  00018E  0E00               	movlw	0
   152  000190  0100               	movlb	0	; () banked
   153  000192  6FA3               	movwf	(main@amplitude+1)& (0+255),b
   154  000194  0E00               	movlw	0
   155  000196  6FA2               	movwf	main@amplitude& (0+255),b
   156  000198  D000               	goto	l1958
   157  00019A                     l1958:
   158                           
   159                           ;main.c: 176: for(delay=0;delay<100;delay++);
   160  00019A  0E00               	movlw	0
   161  00019C  0100               	movlb	0	; () banked
   162  00019E  6FA1               	movwf	(main@delay+1)& (0+255),b
   163  0001A0  0E00               	movlw	0
   164  0001A2  6FA0               	movwf	main@delay& (0+255),b
   165  0001A4                     l1960:
   166                           
   167                           ; BSR set to: 0
   168  0001A4  0100               	movlb	0	; () banked
   169  0001A6  BFA1               	btfsc	(main@delay+1)& (0+255),7,b
   170  0001A8  D00A               	goto	l1964
   171  0001AA  0100               	movlb	0	; () banked
   172  0001AC  51A1               	movf	(main@delay+1)& (0+255),w,b
   173  0001AE  E10C               	bnz	l1968
   174  0001B0  0E64               	movlw	100
   175  0001B2  0100               	movlb	0	; () banked
   176  0001B4  5DA0               	subwf	main@delay& (0+255),w,b
   177  0001B6  B0D8               	btfsc	status,0,c
   178  0001B8  D007               	goto	l1968
   179  0001BA  D001               	goto	l1964
   180                           
   181                           ; BSR set to: 0
   182  0001BC  D005               	goto	l1968
   183  0001BE                     l1964:
   184                           
   185                           ; BSR set to: 0
   186  0001BE  0100               	movlb	0	; () banked
   187  0001C0  4BA0               	infsnz	main@delay& (0+255),f,b
   188  0001C2  2BA1               	incf	(main@delay+1)& (0+255),f,b
   189  0001C4  D7EF               	goto	l1960
   190                           
   191                           ; BSR set to: 0
   192  0001C6  D000               	goto	l1968
   193  0001C8                     l1968:
   194                           
   195                           ; BSR set to: 0
   196                           ;main.c: 177: amplitude=readADC(1);
   197  0001C8  0E01               	movlw	1
   198  0001CA  ECFA  F004         	call	_readADC
   199  0001CE  C01E  F0A2         	movff	?_readADC,main@amplitude
   200  0001D2  C01F  F0A3         	movff	?_readADC+1,main@amplitude+1
   201                           
   202                           ;main.c: 178: pwm('R',(int)( (float)R[0] * (float)amplitude/65520.));
   203  0001D6  0EF0               	movlw	240
   204  0001D8  0100               	movlb	0	; () banked
   205  0001DA  6F6F               	movwf	___ftdiv@f2& (0+255),b
   206  0001DC  0E7F               	movlw	127
   207  0001DE  0100               	movlb	0	; () banked
   208  0001E0  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   209  0001E2  0E47               	movlw	71
   210  0001E4  0100               	movlb	0	; () banked
   211  0001E6  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   212  0001E8  C0A2  F026         	movff	main@amplitude,___lwtoft@c
   213  0001EC  C0A3  F027         	movff	main@amplitude+1,___lwtoft@c+1
   214  0001F0  EC9C  F005         	call	___lwtoft	;wreg free
   215  0001F4  C026  F063         	movff	?___lwtoft,___ftmul@f2
   216  0001F8  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   217  0001FC  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   218  000200  C100  F026         	movff	_R,___lwtoft@c
   219  000204  C101  F027         	movff	_R+1,___lwtoft@c+1
   220  000208  EC9C  F005         	call	___lwtoft	;wreg free
   221  00020C  C026  F060         	movff	?___lwtoft,___ftmul@f1
   222  000210  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   223  000214  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   224  000218  EC9C  F001         	call	___ftmul	;wreg free
   225  00021C  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   226  000220  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   227  000224  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   228  000228  ECF5  F002         	call	___ftdiv	;wreg free
   229  00022C  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   230  000230  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   231  000234  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   232  000238  EC4C  F002         	call	___fttol	;wreg free
   233  00023C  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   234  000240  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   235  000244  0E52               	movlw	82
   236  000246  ECB6  F004         	call	_pwm
   237                           
   238                           ;main.c: 179: pwm('G',(int)( (float)G[0] * (float)amplitude/65520.));
   239  00024A  0EF0               	movlw	240
   240  00024C  0100               	movlb	0	; () banked
   241  00024E  6F6F               	movwf	___ftdiv@f2& (0+255),b
   242  000250  0E7F               	movlw	127
   243  000252  0100               	movlb	0	; () banked
   244  000254  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   245  000256  0E47               	movlw	71
   246  000258  0100               	movlb	0	; () banked
   247  00025A  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   248  00025C  C0A2  F026         	movff	main@amplitude,___lwtoft@c
   249  000260  C0A3  F027         	movff	main@amplitude+1,___lwtoft@c+1
   250  000264  EC9C  F005         	call	___lwtoft	;wreg free
   251  000268  C026  F063         	movff	?___lwtoft,___ftmul@f2
   252  00026C  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   253  000270  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   254  000274  C200  F026         	movff	_G,___lwtoft@c
   255  000278  C201  F027         	movff	_G+1,___lwtoft@c+1
   256  00027C  EC9C  F005         	call	___lwtoft	;wreg free
   257  000280  C026  F060         	movff	?___lwtoft,___ftmul@f1
   258  000284  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   259  000288  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   260  00028C  EC9C  F001         	call	___ftmul	;wreg free
   261  000290  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   262  000294  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   263  000298  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   264  00029C  ECF5  F002         	call	___ftdiv	;wreg free
   265  0002A0  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   266  0002A4  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   267  0002A8  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   268  0002AC  EC4C  F002         	call	___fttol	;wreg free
   269  0002B0  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   270  0002B4  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   271  0002B8  0E47               	movlw	71
   272  0002BA  ECB6  F004         	call	_pwm
   273                           
   274                           ;main.c: 180: pwm('B',(int)( (float)B[0] * (float)amplitude/65520.));
   275  0002BE  0EF0               	movlw	240
   276  0002C0  0100               	movlb	0	; () banked
   277  0002C2  6F6F               	movwf	___ftdiv@f2& (0+255),b
   278  0002C4  0E7F               	movlw	127
   279  0002C6  0100               	movlb	0	; () banked
   280  0002C8  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   281  0002CA  0E47               	movlw	71
   282  0002CC  0100               	movlb	0	; () banked
   283  0002CE  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   284  0002D0  C0A2  F026         	movff	main@amplitude,___lwtoft@c
   285  0002D4  C0A3  F027         	movff	main@amplitude+1,___lwtoft@c+1
   286  0002D8  EC9C  F005         	call	___lwtoft	;wreg free
   287  0002DC  C026  F063         	movff	?___lwtoft,___ftmul@f2
   288  0002E0  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   289  0002E4  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   290  0002E8  C300  F026         	movff	_B,___lwtoft@c
   291  0002EC  C301  F027         	movff	_B+1,___lwtoft@c+1
   292  0002F0  EC9C  F005         	call	___lwtoft	;wreg free
   293  0002F4  C026  F060         	movff	?___lwtoft,___ftmul@f1
   294  0002F8  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   295  0002FC  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   296  000300  EC9C  F001         	call	___ftmul	;wreg free
   297  000304  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   298  000308  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   299  00030C  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   300  000310  ECF5  F002         	call	___ftdiv	;wreg free
   301  000314  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   302  000318  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   303  00031C  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   304  000320  EC4C  F002         	call	___fttol	;wreg free
   305  000324  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   306  000328  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   307  00032C  0E42               	movlw	66
   308  00032E  ECB6  F004         	call	_pwm
   309  000332  D733               	goto	l1958
   310                           
   311                           ;main.c: 181: }
   312                           ;main.c: 183: return (0);
   313                           ;	Return value of _main is never used
   314  000334  EFB5  F000         	goto	start
   315  000338                     __end_of_main:
   316                           	opt stack 0
   317                           wreg	equ	0xFE8
   318                           plusw1	equ	0xFE3
   319                           plusw2	equ	0xFDB
   320                           status	equ	0xFD8
   321                           
   322                           	psect	cinit
   323  000AA2                     __pcinit:
   324                           	opt stack 0
   325  000AA2                     start_initialization:
   326                           	opt stack 0
   327  000AA2                     __initialization:
   328                           	opt stack 0
   329                           
   330                           ; Clear objects allocated to BANK3 (200 bytes)
   331  000AA2  EE03  F000         	lfsr	0,__pbssBANK3
   332  000AA6  0EC8               	movlw	200
   333  000AA8                     clear_0:
   334  000AA8  6AEE               	clrf	postinc0,c
   335  000AAA  06E8               	decf	wreg,f,c
   336  000AAC  E1FD               	bnz	clear_0
   337                           
   338                           ; Clear objects allocated to BANK2 (200 bytes)
   339  000AAE  EE02  F000         	lfsr	0,__pbssBANK2
   340  000AB2  0EC8               	movlw	200
   341  000AB4                     clear_1:
   342  000AB4  6AEE               	clrf	postinc0,c
   343  000AB6  06E8               	decf	wreg,f,c
   344  000AB8  E1FD               	bnz	clear_1
   345                           
   346                           ; Clear objects allocated to BANK1 (200 bytes)
   347  000ABA  EE01  F000         	lfsr	0,__pbssBANK1
   348  000ABE  0EC8               	movlw	200
   349  000AC0                     clear_2:
   350  000AC0  6AEE               	clrf	postinc0,c
   351  000AC2  06E8               	decf	wreg,f,c
   352  000AC4  E1FD               	bnz	clear_2
   353                           
   354                           ; Clear objects allocated to BANK0 (15 bytes)
   355  000AC6  EE00  F0A4         	lfsr	0,__pbssBANK0
   356  000ACA  0E0F               	movlw	15
   357  000ACC                     clear_3:
   358  000ACC  6AEE               	clrf	postinc0,c
   359  000ACE  06E8               	decf	wreg,f,c
   360  000AD0  E1FD               	bnz	clear_3
   361                           
   362                           ; Clear objects allocated to COMRAM (22 bytes)
   363  000AD2  EE00  F02D         	lfsr	0,__pbssCOMRAM
   364  000AD6  0E16               	movlw	22
   365  000AD8                     clear_4:
   366  000AD8  6AEE               	clrf	postinc0,c
   367  000ADA  06E8               	decf	wreg,f,c
   368  000ADC  E1FD               	bnz	clear_4
   369  000ADE                     end_of_initialization:
   370                           	opt stack 0
   371  000ADE                     __end_of__initialization:
   372                           	opt stack 0
   373  000ADE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   374  000AE0  6EF8               	movwf	tblptru,c
   375  000AE2  0100               	movlb	0
   376  000AE4  EFB7  F000         	goto	_main	;jump to C main() function
   377                           tblptru	equ	0xFF8
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           plusw1	equ	0xFE3
   381                           plusw2	equ	0xFDB
   382                           status	equ	0xFD8
   383                           
   384                           	psect	bssCOMRAM
   385  00002D                     __pbssCOMRAM:
   386                           	opt stack 0
   387  00002D                     high_isr@F19157:
   388                           	opt stack 0
   389  00002D                     	ds	2
   390  00002F                     _beginB:
   391                           	opt stack 0
   392  00002F                     	ds	1
   393  000030                     _beginG:
   394                           	opt stack 0
   395  000030                     	ds	1
   396  000031                     _beginR:
   397                           	opt stack 0
   398  000031                     	ds	1
   399  000032                     _compteur:
   400                           	opt stack 0
   401  000032                     	ds	1
   402  000033                     _buffer:
   403                           	opt stack 0
   404  000033                     	ds	16
   405                           tblptru	equ	0xFF8
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           plusw1	equ	0xFE3
   409                           plusw2	equ	0xFDB
   410                           status	equ	0xFD8
   411                           
   412                           	psect	bssBANK0
   413  0000A4                     __pbssBANK0:
   414                           	opt stack 0
   415  0000A4                     main@F19163:
   416                           	opt stack 0
   417  0000A4                     	ds	15
   418                           tblptru	equ	0xFF8
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           plusw1	equ	0xFE3
   422                           plusw2	equ	0xFDB
   423                           status	equ	0xFD8
   424                           
   425                           	psect	bssBANK1
   426  000100                     __pbssBANK1:
   427                           	opt stack 0
   428  000100                     _R:
   429                           	opt stack 0
   430  000100                     	ds	200
   431                           tblptru	equ	0xFF8
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           plusw1	equ	0xFE3
   435                           plusw2	equ	0xFDB
   436                           status	equ	0xFD8
   437                           
   438                           	psect	bssBANK2
   439  000200                     __pbssBANK2:
   440                           	opt stack 0
   441  000200                     _G:
   442                           	opt stack 0
   443  000200                     	ds	200
   444                           tblptru	equ	0xFF8
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           plusw1	equ	0xFE3
   448                           plusw2	equ	0xFDB
   449                           status	equ	0xFD8
   450                           
   451                           	psect	bssBANK3
   452  000300                     __pbssBANK3:
   453                           	opt stack 0
   454  000300                     _B:
   455                           	opt stack 0
   456  000300                     	ds	200
   457                           tblptru	equ	0xFF8
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           plusw1	equ	0xFE3
   461                           plusw2	equ	0xFDB
   462                           status	equ	0xFD8
   463                           
   464                           	psect	cstackBANK0
   465  000060                     __pcstackBANK0:
   466                           	opt stack 0
   467  000060                     ?___ftmul:
   468                           	opt stack 0
   469  000060                     ___ftmul@f1:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0x0
   473  000060                     	ds	3
   474  000063                     ___ftmul@f2:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x3
   478  000063                     	ds	3
   479  000066                     ___ftmul@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x6
   483  000066                     	ds	1
   484  000067                     ___ftmul@f3_as_product:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x7
   488  000067                     	ds	3
   489  00006A                     ___ftmul@cntr:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0xA
   493  00006A                     	ds	1
   494  00006B                     ___ftmul@sign:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0xB
   498  00006B                     	ds	1
   499  00006C                     ?___ftdiv:
   500                           	opt stack 0
   501  00006C                     ___ftdiv@f1:
   502                           	opt stack 0
   503                           
   504                           ; 3 bytes @ 0xC
   505  00006C                     	ds	3
   506  00006F                     ___ftdiv@f2:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0xF
   510  00006F                     	ds	3
   511  000072                     ??___ftdiv:
   512                           
   513                           ; 0 bytes @ 0x12
   514  000072                     	ds	3
   515  000075                     ___ftdiv@cntr:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x15
   519  000075                     	ds	1
   520  000076                     ___ftdiv@f3:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x16
   524  000076                     	ds	3
   525  000079                     ___ftdiv@exp:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x19
   529  000079                     	ds	1
   530  00007A                     ___ftdiv@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x1A
   534  00007A                     	ds	1
   535  00007B                     ?___fttol:
   536                           	opt stack 0
   537  00007B                     ___fttol@f1:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x1B
   541  00007B                     	ds	4
   542  00007F                     ??___fttol:
   543                           
   544                           ; 0 bytes @ 0x1F
   545  00007F                     	ds	5
   546  000084                     ___fttol@sign1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x24
   550  000084                     	ds	1
   551  000085                     ___fttol@lval:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x25
   555  000085                     	ds	4
   556  000089                     ___fttol@exp1:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x29
   560  000089                     	ds	1
   561  00008A                     pwm@dutycycle:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x2A
   565  00008A                     	ds	2
   566  00008C                     
   567                           ; 2 bytes @ 0x2C
   568  00008C                     	ds	2
   569  00008E                     
   570                           ; 3 bytes @ 0x2E
   571  00008E                     	ds	3
   572  000091                     main@msg:
   573                           	opt stack 0
   574                           
   575                           ; 15 bytes @ 0x31
   576  000091                     	ds	15
   577  0000A0                     main@delay:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x40
   581  0000A0                     	ds	2
   582  0000A2                     main@amplitude:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x42
   586  0000A2                     	ds	2
   587                           tblptru	equ	0xFF8
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           plusw1	equ	0xFE3
   591                           plusw2	equ	0xFDB
   592                           status	equ	0xFD8
   593                           
   594                           	psect	cstackCOMRAM
   595  000001                     __pcstackCOMRAM:
   596                           	opt stack 0
   597  000001                     ??_isdigit:
   598  000001                     ?___wmul:
   599                           	opt stack 0
   600  000001                     ___wmul@multiplier:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x0
   604  000001                     	ds	1
   605  000002                     _isdigit$839:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x1
   609  000002                     	ds	1
   610  000003                     isdigit@c:
   611                           	opt stack 0
   612  000003                     ___wmul@multiplicand:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616  000003                     	ds	2
   617  000005                     ___wmul@product:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x4
   621  000005                     	ds	2
   622  000007                     ?_atoi:
   623                           	opt stack 0
   624  000007                     atoi@s:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x6
   628  000007                     	ds	2
   629  000009                     ??_atoi:
   630                           
   631                           ; 0 bytes @ 0x8
   632  000009                     	ds	2
   633  00000B                     atoi@sign:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0xA
   637  00000B                     	ds	1
   638  00000C                     atoi@a:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xB
   642  00000C                     	ds	2
   643  00000E                     ??_high_isr:
   644                           
   645                           ; 0 bytes @ 0xD
   646  00000E                     	ds	14
   647  00001C                     high_isr@input:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x1B
   651  00001C                     	ds	2
   652  00001E                     ?_readADC:
   653                           	opt stack 0
   654  00001E                     ?___awdiv:
   655                           	opt stack 0
   656  00001E                     ?___ftpack:
   657                           	opt stack 0
   658  00001E                     ___awdiv@dividend:
   659                           	opt stack 0
   660  00001E                     ___ftpack@arg:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x1D
   664  00001E                     	ds	2
   665  000020                     ??_readADC:
   666  000020                     ___awdiv@divisor:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x1F
   670  000020                     	ds	1
   671  000021                     ___ftpack@exp:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x20
   675  000021                     	ds	1
   676  000022                     readADC@channel:
   677                           	opt stack 0
   678  000022                     ___awdiv@counter:
   679                           	opt stack 0
   680  000022                     ___ftpack@sign:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x21
   684  000022                     	ds	1
   685  000023                     ??___ftpack:
   686  000023                     readADC@tempo:
   687                           	opt stack 0
   688  000023                     ___awdiv@sign:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x22
   692  000023                     	ds	1
   693  000024                     ___awdiv@quotient:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x23
   697  000024                     	ds	2
   698  000026                     ?___lwtoft:
   699                           	opt stack 0
   700  000026                     ___lwtoft@c:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x25
   704  000026                     	ds	3
   705  000029                     ??___ftmul:
   706  000029                     
   707                           ; 0 bytes @ 0x28
   708  000029                     	ds	3
   709  00002C                     pwm@color:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x2B
   713  00002C                     	ds	1
   714  00002D                     tblptru	equ	0xFF8
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           plusw1	equ	0xFE3
   718                           plusw2	equ	0xFDB
   719                           status	equ	0xFD8
   720                           
   721 ;; *************** function _readADC *****************
   722 ;; Defined at:
   723 ;;		line 197 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  channel         1    wreg     unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  channel         1   33[COMRAM] unsigned char 
   728 ;;  tempo           1   34[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2   29[COMRAM] unsigned int 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;Total ram usage:        6 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text1
   753  0009F4                     __ptext1:
   754                           	opt stack 0
   755  0009F4                     _readADC:
   756                           	opt stack 27
   757                           
   758                           ;incstack = 0
   759                           ;readADC@channel stored from wreg
   760  0009F4  6E22               	movwf	readADC@channel,c
   761                           
   762                           ;main.c: 199: char tempo=0;
   763  0009F6  0E00               	movlw	0
   764  0009F8  6E23               	movwf	readADC@tempo,c
   765                           
   766                           ;main.c: 200: switch (channel)
   767  0009FA  D008               	goto	l1486
   768  0009FC                     l81:
   769                           
   770                           ;main.c: 203: {
   771                           ;main.c: 204: CHS1=0;
   772  0009FC  96C2               	bcf	4034,3,c	;volatile
   773  0009FE  D004               	goto	L1
   774  000A00                     l83:
   775                           
   776                           ;main.c: 209: {
   777                           ;main.c: 210: CHS1=1;
   778  000A00  86C2               	bsf	4034,3,c	;volatile
   779                           
   780                           ;main.c: 211: CHS0=0;
   781  000A02  94C2               	bcf	4034,2,c	;volatile
   782                           
   783                           ;main.c: 212: break;
   784  000A04  D00E               	goto	l1488
   785  000A06                     l84:
   786                           
   787                           ;main.c: 215: {
   788                           ;main.c: 216: CHS1=1;
   789  000A06  86C2               	bsf	4034,3,c	;volatile
   790  000A08                     L1:
   791                           
   792                           ;main.c: 217: CHS0=1;
   793  000A08  84C2               	bsf	4034,2,c	;volatile
   794                           
   795                           ;main.c: 219: }
   796                           ;main.c: 220: }
   797                           
   798                           ;main.c: 218: break;
   799  000A0A  D00B               	goto	l1488
   800  000A0C                     l1486:
   801  000A0C  5022               	movf	readADC@channel,w,c
   802                           
   803                           ; Switch size 1, requested type "space"
   804                           ; Number of cases is 3, Range of values is 1 to 3
   805                           ; switch strategies available:
   806                           ; Name         Instructions Cycles
   807                           ; simple_byte           10     6 (average)
   808                           ;	Chosen strategy is simple_byte
   809  000A0E  0A01               	xorlw	1	; case 1
   810  000A10  B4D8               	btfsc	status,2,c
   811  000A12  D7F4               	goto	l81
   812  000A14  0A03               	xorlw	3	; case 2
   813  000A16  B4D8               	btfsc	status,2,c
   814  000A18  D7F3               	goto	l83
   815  000A1A  0A01               	xorlw	1	; case 3
   816  000A1C  B4D8               	btfsc	status,2,c
   817  000A1E  D7F3               	goto	l84
   818  000A20  D000               	goto	l1488
   819  000A22                     l1488:
   820                           
   821                           ;main.c: 221: for(tempo=0;tempo<100;tempo++);
   822  000A22  0E00               	movlw	0
   823  000A24  6E23               	movwf	readADC@tempo,c
   824  000A26  D002               	goto	l1496
   825  000A28  D004               	goto	l86
   826  000A2A                     l1494:
   827  000A2A  2A23               	incf	readADC@tempo,f,c
   828  000A2C                     l1496:
   829  000A2C  0E63               	movlw	99
   830  000A2E  6423               	cpfsgt	readADC@tempo,c
   831  000A30  D7FC               	goto	l1494
   832  000A32                     l86:
   833                           
   834                           ;main.c: 222: GO_nDONE = 1;
   835  000A32  82C2               	bsf	4034,1,c	;volatile
   836                           
   837                           ;main.c: 223: while(GO_nDONE);
   838  000A34  D000               	goto	l87
   839  000A36                     l87:
   840  000A36  B2C2               	btfsc	4034,1,c	;volatile
   841  000A38  D7FE               	goto	l87
   842                           
   843                           ;main.c: 225: return ((ADRESH<<8)+ADRESL);
   844  000A3A  50C4               	movf	4036,w,c	;volatile
   845  000A3C  6E21               	movwf	(??_readADC+1)& (0+255),c
   846  000A3E  6A20               	clrf	??_readADC& (0+255),c
   847  000A40  50C3               	movf	4035,w,c	;volatile
   848  000A42  2420               	addwf	??_readADC,w,c
   849  000A44  6E1E               	movwf	?_readADC,c
   850  000A46  0E00               	movlw	0
   851  000A48  2021               	addwfc	??_readADC+1,w,c
   852  000A4A  6E1F               	movwf	?_readADC+1,c
   853  000A4C  0012               	return	
   854  000A4E  0012               	return		;funcret
   855  000A50                     __end_of_readADC:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           plusw1	equ	0xFE3
   861                           plusw2	equ	0xFDB
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _pwm *****************
   865 ;; Defined at:
   866 ;;		line 8 in file "converter.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  color           1    wreg     unsigned char 
   869 ;;  dutycycle       2   42[BANK0 ] int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  color           1   43[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;Total ram usage:        3 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    4
   888 ;; This function calls:
   889 ;;		___awdiv
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text2
   896  00096C                     __ptext2:
   897                           	opt stack 0
   898  00096C                     _pwm:
   899                           	opt stack 26
   900                           
   901                           ;incstack = 0
   902                           ;pwm@color stored from wreg
   903  00096C  6E2C               	movwf	pwm@color,c
   904                           
   905                           ;converter.c: 9: switch(color){
   906  00096E  D036               	goto	l1850
   907  000970                     l1830:
   908                           
   909                           ;converter.c: 11: CCPR2L=dutycycle/4;
   910  000970  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
   911  000974  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   912  000978  0E00               	movlw	0
   913  00097A  6E21               	movwf	___awdiv@divisor+1,c
   914  00097C  0E04               	movlw	4
   915  00097E  6E20               	movwf	___awdiv@divisor,c
   916  000980  EC6B  F004         	call	___awdiv	;wreg free
   917  000984  501E               	movf	?___awdiv,w,c
   918  000986  010F               	movlb	15	; () banked
   919  000988  6F51               	movwf	81,b	;volatile
   920                           
   921                           ; BSR set to: 15
   922                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
   923  00098A  010F               	movlb	15	; () banked
   924  00098C  9B50               	bcf	80,5,b	;volatile
   925                           
   926                           ; BSR set to: 15
   927                           ;converter.c: 13: DC2B0=dutycycle%1;
   928  00098E  010F               	movlb	15	; () banked
   929  000990  9950               	bcf	80,4,b	;volatile
   930                           
   931                           ;converter.c: 14: break;
   932  000992  0012               	return	
   933  000994                     l1836:
   934                           
   935                           ;converter.c: 16: CCPR3L=dutycycle/4;
   936  000994  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
   937  000998  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   938  00099C  0E00               	movlw	0
   939  00099E  6E21               	movwf	___awdiv@divisor+1,c
   940  0009A0  0E04               	movlw	4
   941  0009A2  6E20               	movwf	___awdiv@divisor,c
   942  0009A4  EC6B  F004         	call	___awdiv	;wreg free
   943  0009A8  501E               	movf	?___awdiv,w,c
   944  0009AA  010F               	movlb	15	; () banked
   945  0009AC  6F4E               	movwf	78,b	;volatile
   946                           
   947                           ; BSR set to: 15
   948                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
   949  0009AE  010F               	movlb	15	; () banked
   950  0009B0  9B4D               	bcf	77,5,b	;volatile
   951                           
   952                           ; BSR set to: 15
   953                           ;converter.c: 18: DC3B0=0;
   954  0009B2  010F               	movlb	15	; () banked
   955  0009B4  994D               	bcf	77,4,b	;volatile
   956                           
   957                           ;converter.c: 19: break;
   958  0009B6  0012               	return	
   959  0009B8                     l1842:
   960                           
   961                           ;converter.c: 21: CCPR4L=dutycycle/4;
   962  0009B8  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
   963  0009BC  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   964  0009C0  0E00               	movlw	0
   965  0009C2  6E21               	movwf	___awdiv@divisor+1,c
   966  0009C4  0E04               	movlw	4
   967  0009C6  6E20               	movwf	___awdiv@divisor,c
   968  0009C8  EC6B  F004         	call	___awdiv	;wreg free
   969  0009CC  501E               	movf	?___awdiv,w,c
   970  0009CE  010F               	movlb	15	; () banked
   971  0009D0  6F4B               	movwf	75,b	;volatile
   972                           
   973                           ; BSR set to: 15
   974                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
   975  0009D2  010F               	movlb	15	; () banked
   976  0009D4  9B4A               	bcf	74,5,b	;volatile
   977                           
   978                           ; BSR set to: 15
   979                           ;converter.c: 23: DC4B0=dutycycle%1;
   980  0009D6  010F               	movlb	15	; () banked
   981  0009D8  994A               	bcf	74,4,b	;volatile
   982                           
   983                           ; BSR set to: 15
   984                           ;converter.c: 25: }
   985                           
   986                           ;converter.c: 24: break;
   987  0009DA  0012               	return	
   988  0009DC                     l1850:
   989  0009DC  502C               	movf	pwm@color,w,c
   990                           
   991                           ; Switch size 1, requested type "space"
   992                           ; Number of cases is 3, Range of values is 66 to 82
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           10     6 (average)
   996                           ;	Chosen strategy is simple_byte
   997  0009DE  0A42               	xorlw	66	; case 66
   998  0009E0  B4D8               	btfsc	status,2,c
   999  0009E2  D7C6               	goto	l1830
  1000  0009E4  0A05               	xorlw	5	; case 71
  1001  0009E6  B4D8               	btfsc	status,2,c
  1002  0009E8  D7E7               	goto	l1842
  1003  0009EA  0A15               	xorlw	21	; case 82
  1004  0009EC  A4D8               	btfss	status,2,c
  1005  0009EE  0012               	return	
  1006  0009F0  D7D1               	goto	l1836
  1007  0009F2  0012               	return		;funcret
  1008  0009F4                     __end_of_pwm:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           plusw1	equ	0xFE3
  1014                           plusw2	equ	0xFDB
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function ___awdiv *****************
  1018 ;; Defined at:
  1019 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  dividend        2   29[COMRAM] int 
  1022 ;;  divisor         2   31[COMRAM] int 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  quotient        2   35[COMRAM] int 
  1025 ;;  sign            1   34[COMRAM] unsigned char 
  1026 ;;  counter         1   33[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2   29[COMRAM] int 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1040 ;;Total ram usage:        8 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_pwm
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  0008D6                     __ptext3:
  1052                           	opt stack 0
  1053  0008D6                     ___awdiv:
  1054                           	opt stack 26
  1055                           
  1056                           ;incstack = 0
  1057  0008D6  0E00               	movlw	0
  1058  0008D8  6E23               	movwf	___awdiv@sign,c
  1059  0008DA  AE21               	btfss	___awdiv@divisor+1,7,c
  1060  0008DC  D007               	goto	l1792
  1061  0008DE  6C20               	negf	___awdiv@divisor,c
  1062  0008E0  1E21               	comf	___awdiv@divisor+1,f,c
  1063  0008E2  B0D8               	btfsc	status,0,c
  1064  0008E4  2A21               	incf	___awdiv@divisor+1,f,c
  1065  0008E6  0E01               	movlw	1
  1066  0008E8  6E23               	movwf	___awdiv@sign,c
  1067  0008EA  D000               	goto	l1792
  1068  0008EC                     l1792:
  1069  0008EC  AE1F               	btfss	___awdiv@dividend+1,7,c
  1070  0008EE  D007               	goto	l1798
  1071  0008F0  6C1E               	negf	___awdiv@dividend,c
  1072  0008F2  1E1F               	comf	___awdiv@dividend+1,f,c
  1073  0008F4  B0D8               	btfsc	status,0,c
  1074  0008F6  2A1F               	incf	___awdiv@dividend+1,f,c
  1075  0008F8  0E01               	movlw	1
  1076  0008FA  1A23               	xorwf	___awdiv@sign,f,c
  1077  0008FC  D000               	goto	l1798
  1078  0008FE                     l1798:
  1079  0008FE  0E00               	movlw	0
  1080  000900  6E25               	movwf	___awdiv@quotient+1,c
  1081  000902  0E00               	movlw	0
  1082  000904  6E24               	movwf	___awdiv@quotient,c
  1083  000906  5020               	movf	___awdiv@divisor,w,c
  1084  000908  1021               	iorwf	___awdiv@divisor+1,w,c
  1085  00090A  B4D8               	btfsc	status,2,c
  1086  00090C  D021               	goto	l1820
  1087  00090E  0E01               	movlw	1
  1088  000910  6E22               	movwf	___awdiv@counter,c
  1089  000912  D005               	goto	l1806
  1090  000914                     l1804:
  1091  000914  90D8               	bcf	status,0,c
  1092  000916  3620               	rlcf	___awdiv@divisor,f,c
  1093  000918  3621               	rlcf	___awdiv@divisor+1,f,c
  1094  00091A  2A22               	incf	___awdiv@counter,f,c
  1095  00091C  D000               	goto	l1806
  1096  00091E                     l1806:
  1097  00091E  BE21               	btfsc	___awdiv@divisor+1,7,c
  1098  000920  D002               	goto	l1808
  1099  000922  D7F8               	goto	l1804
  1100  000924  D000               	goto	l1808
  1101  000926                     l1808:
  1102  000926  90D8               	bcf	status,0,c
  1103  000928  3624               	rlcf	___awdiv@quotient,f,c
  1104  00092A  3625               	rlcf	___awdiv@quotient+1,f,c
  1105  00092C  5020               	movf	___awdiv@divisor,w,c
  1106  00092E  5C1E               	subwf	___awdiv@dividend,w,c
  1107  000930  5021               	movf	___awdiv@divisor+1,w,c
  1108  000932  581F               	subwfb	___awdiv@dividend+1,w,c
  1109  000934  A0D8               	btfss	status,0,c
  1110  000936  D006               	goto	l1816
  1111  000938  5020               	movf	___awdiv@divisor,w,c
  1112  00093A  5E1E               	subwf	___awdiv@dividend,f,c
  1113  00093C  5021               	movf	___awdiv@divisor+1,w,c
  1114  00093E  5A1F               	subwfb	___awdiv@dividend+1,f,c
  1115  000940  8024               	bsf	___awdiv@quotient,0,c
  1116  000942  D000               	goto	l1816
  1117  000944                     l1816:
  1118  000944  90D8               	bcf	status,0,c
  1119  000946  3221               	rrcf	___awdiv@divisor+1,f,c
  1120  000948  3220               	rrcf	___awdiv@divisor,f,c
  1121  00094A  2E22               	decfsz	___awdiv@counter,f,c
  1122  00094C  D7EC               	goto	l1808
  1123  00094E  D000               	goto	l1820
  1124  000950                     l1820:
  1125  000950  5023               	movf	___awdiv@sign,w,c
  1126  000952  B4D8               	btfsc	status,2,c
  1127  000954  D005               	goto	l1824
  1128  000956  6C24               	negf	___awdiv@quotient,c
  1129  000958  1E25               	comf	___awdiv@quotient+1,f,c
  1130  00095A  B0D8               	btfsc	status,0,c
  1131  00095C  2A25               	incf	___awdiv@quotient+1,f,c
  1132  00095E  D000               	goto	l1824
  1133  000960                     l1824:
  1134  000960  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  1135  000964  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  1136  000968  0012               	return	
  1137  00096A  0012               	return		;funcret
  1138  00096C                     __end_of___awdiv:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           plusw1	equ	0xFE3
  1144                           plusw2	equ	0xFDB
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _initialisation *****************
  1148 ;; Defined at:
  1149 ;;		line 6 in file "init.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;		None               void
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    4
  1170 ;; This function calls:
  1171 ;;		_initADC
  1172 ;;		_initComms
  1173 ;;		_initPWM
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  000B9C                     __ptext4:
  1181                           	opt stack 0
  1182  000B9C                     _initialisation:
  1183                           	opt stack 26
  1184                           
  1185                           ;init.c: 10: initPWM();
  1186                           
  1187                           ;incstack = 0
  1188  000B9C  EC28  F005         	call	_initPWM	;wreg free
  1189                           
  1190                           ;init.c: 14: initComms();
  1191  000BA0  EC74  F005         	call	_initComms	;wreg free
  1192                           
  1193                           ;init.c: 18: initADC();
  1194  000BA4  ECC0  F005         	call	_initADC	;wreg free
  1195  000BA8  0012               	return		;funcret
  1196  000BAA                     __end_of_initialisation:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           plusw1	equ	0xFE3
  1202                           plusw2	equ	0xFDB
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _initPWM *****************
  1206 ;; Defined at:
  1207 ;;		line 23 in file "init.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    3
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_initialisation
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text5
  1236  000A50                     __ptext5:
  1237                           	opt stack 0
  1238  000A50                     _initPWM:
  1239                           	opt stack 26
  1240                           
  1241                           ;init.c: 28: PR2=0xFF;
  1242                           
  1243                           ;incstack = 0
  1244  000A50  68CB               	setf	4043,c	;volatile
  1245                           
  1246                           ;init.c: 32: CCPR2L=0b00000000;
  1247  000A52  0E00               	movlw	0
  1248  000A54  010F               	movlb	15	; () banked
  1249  000A56  6F51               	movwf	81,b	;volatile
  1250                           
  1251                           ;init.c: 33: CCPR3L=0b00000000;
  1252  000A58  0E00               	movlw	0
  1253  000A5A  010F               	movlb	15	; () banked
  1254  000A5C  6F4E               	movwf	78,b	;volatile
  1255                           
  1256                           ;init.c: 34: CCPR4L=0b00000000;
  1257  000A5E  0E00               	movlw	0
  1258  000A60  010F               	movlb	15	; () banked
  1259  000A62  6F4B               	movwf	75,b	;volatile
  1260                           
  1261                           ; BSR set to: 15
  1262                           ;init.c: 35: DC2B1=0;
  1263  000A64  010F               	movlb	15	; () banked
  1264  000A66  9B50               	bcf	80,5,b	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;init.c: 36: DC2B0=0;
  1268  000A68  010F               	movlb	15	; () banked
  1269  000A6A  9950               	bcf	80,4,b	;volatile
  1270                           
  1271                           ; BSR set to: 15
  1272                           ;init.c: 37: DC3B1=0;
  1273  000A6C  010F               	movlb	15	; () banked
  1274  000A6E  9B4D               	bcf	77,5,b	;volatile
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;init.c: 38: DC3B0=0;
  1278  000A70  010F               	movlb	15	; () banked
  1279  000A72  994D               	bcf	77,4,b	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;init.c: 39: DC4B1=0;
  1283  000A74  010F               	movlb	15	; () banked
  1284  000A76  9B4A               	bcf	74,5,b	;volatile
  1285                           
  1286                           ; BSR set to: 15
  1287                           ;init.c: 40: DC4B0=0;
  1288  000A78  010F               	movlb	15	; () banked
  1289  000A7A  994A               	bcf	74,4,b	;volatile
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;init.c: 46: TRISC=TRISC & 0b00111011;
  1293  000A7C  5094               	movf	3988,w,c	;volatile
  1294  000A7E  0B3B               	andlw	59
  1295  000A80  6E94               	movwf	3988,c	;volatile
  1296                           
  1297                           ; BSR set to: 15
  1298                           ;init.c: 49: T2CKPS1=0;
  1299  000A82  92CA               	bcf	4042,1,c	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;init.c: 50: T2CKPS0=0;
  1303  000A84  90CA               	bcf	4042,0,c	;volatile
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;init.c: 53: TMR2ON = 1;
  1307  000A86  84CA               	bsf	4042,2,c	;volatile
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;init.c: 56: CCP2M2=1;
  1311  000A88  010F               	movlb	15	; () banked
  1312  000A8A  8550               	bsf	80,2,b	;volatile
  1313                           
  1314                           ; BSR set to: 15
  1315                           ;init.c: 57: CCP2M3=1;
  1316  000A8C  010F               	movlb	15	; () banked
  1317  000A8E  8750               	bsf	80,3,b	;volatile
  1318                           
  1319                           ; BSR set to: 15
  1320                           ;init.c: 58: CCP3M2=1;
  1321  000A90  010F               	movlb	15	; () banked
  1322  000A92  854D               	bsf	77,2,b	;volatile
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;init.c: 59: CCP3M3=1;
  1326  000A94  010F               	movlb	15	; () banked
  1327  000A96  874D               	bsf	77,3,b	;volatile
  1328                           
  1329                           ; BSR set to: 15
  1330                           ;init.c: 60: CCP4M2=1;
  1331  000A98  010F               	movlb	15	; () banked
  1332  000A9A  854A               	bsf	74,2,b	;volatile
  1333                           
  1334                           ; BSR set to: 15
  1335                           ;init.c: 61: CCP4M3=1;
  1336  000A9C  010F               	movlb	15	; () banked
  1337  000A9E  874A               	bsf	74,3,b	;volatile
  1338                           
  1339                           ; BSR set to: 15
  1340  000AA0  0012               	return		;funcret
  1341  000AA2                     __end_of_initPWM:
  1342                           	opt stack 0
  1343                           tblptru	equ	0xFF8
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           plusw1	equ	0xFE3
  1347                           plusw2	equ	0xFDB
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function _initComms *****************
  1351 ;; Defined at:
  1352 ;;		line 65 in file "init.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;		None               void
  1359 ;; Registers used:
  1360 ;;		wreg, status,2
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    3
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_initialisation
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text6
  1381  000AE8                     __ptext6:
  1382                           	opt stack 0
  1383  000AE8                     _initComms:
  1384                           	opt stack 26
  1385                           
  1386                           ;init.c: 67: TRISBbits.TRISB7 = 1;
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;incstack = 0
  1390  000AE8  8E93               	bsf	3987,7,c	;volatile
  1391                           
  1392                           ;init.c: 68: TRISBbits.TRISB6 = 0;
  1393  000AEA  9C93               	bcf	3987,6,c	;volatile
  1394                           
  1395                           ;init.c: 71: TXSTA2bits.BRGH = 1;
  1396  000AEC  84BA               	bsf	4026,2,c	;volatile
  1397                           
  1398                           ;init.c: 72: TXSTA2bits.SYNC = 0;
  1399  000AEE  98BA               	bcf	4026,4,c	;volatile
  1400                           
  1401                           ;init.c: 73: SPBRGH2 = 0;
  1402  000AF0  0E00               	movlw	0
  1403  000AF2  6E7C               	movwf	3964,c	;volatile
  1404                           
  1405                           ;init.c: 74: SPBRG2 = 51;
  1406  000AF4  0E33               	movlw	51
  1407  000AF6  6E7B               	movwf	3963,c	;volatile
  1408                           
  1409                           ;init.c: 75: BAUDCON2 = 0x08;
  1410  000AF8  0E08               	movlw	8
  1411  000AFA  6EB9               	movwf	4025,c	;volatile
  1412                           
  1413                           ;init.c: 79: TXSTA2bits.TXEN = 1;
  1414  000AFC  8ABA               	bsf	4026,5,c	;volatile
  1415                           
  1416                           ;init.c: 80: RCSTA2bits.CREN = 1;
  1417  000AFE  88A6               	bsf	4006,4,c	;volatile
  1418                           
  1419                           ;init.c: 81: RCSTA2bits.SPEN = 1;
  1420  000B00  8EA6               	bsf	4006,7,c	;volatile
  1421                           
  1422                           ;init.c: 84: RCONbits.IPEN = 1;
  1423  000B02  8ED0               	bsf	4048,7,c	;volatile
  1424                           
  1425                           ;init.c: 85: INTCONbits.GIE = 1;
  1426  000B04  8EF2               	bsf	intcon,7,c	;volatile
  1427                           
  1428                           ;init.c: 86: INTCONbits.PEIE = 1;
  1429  000B06  8CF2               	bsf	intcon,6,c	;volatile
  1430                           
  1431                           ;init.c: 87: PIE3bits.RC2IE = 1;
  1432  000B08  8AA3               	bsf	4003,5,c	;volatile
  1433                           
  1434                           ;init.c: 88: PIE3bits.TX2IE = 0;
  1435  000B0A  98A3               	bcf	4003,4,c	;volatile
  1436                           
  1437                           ;init.c: 90: RC2IF = 0;
  1438  000B0C  9AA4               	bcf	4004,5,c	;volatile
  1439  000B0E  0012               	return		;funcret
  1440  000B10                     __end_of_initComms:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           plusw1	equ	0xFE3
  1447                           plusw2	equ	0xFDB
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _initADC *****************
  1451 ;; Defined at:
  1452 ;;		line 93 in file "init.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		None
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_initialisation
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text7
  1481  000B80                     __ptext7:
  1482                           	opt stack 0
  1483  000B80                     _initADC:
  1484                           	opt stack 26
  1485                           
  1486                           ;init.c: 95: TRIGSEL1=0;
  1487                           
  1488                           ;incstack = 0
  1489  000B80  9EC1               	bcf	4033,7,c	;volatile
  1490                           
  1491                           ;init.c: 96: TRIGSEL0=0;
  1492  000B82  9CC1               	bcf	4033,6,c	;volatile
  1493                           
  1494                           ;init.c: 98: VCFG1=0;
  1495  000B84  9AC1               	bcf	4033,5,c	;volatile
  1496                           
  1497                           ;init.c: 99: VCFG0=0;
  1498  000B86  98C1               	bcf	4033,4,c	;volatile
  1499                           
  1500                           ;init.c: 100: VNCFG=0;
  1501  000B88  96C1               	bcf	4033,3,c	;volatile
  1502                           
  1503                           ;init.c: 104: ANSEL3=1;
  1504  000B8A  010F               	movlb	15	; () banked
  1505  000B8C  875D               	bsf	93,3,b	;volatile
  1506                           
  1507                           ;init.c: 105: ANSEL2=1;
  1508  000B8E  010F               	movlb	15	; () banked
  1509  000B90  855D               	bsf	93,2,b	;volatile
  1510                           
  1511                           ;init.c: 106: ANSEL1=1;
  1512  000B92  010F               	movlb	15	; () banked
  1513  000B94  835D               	bsf	93,1,b	;volatile
  1514                           
  1515                           ;init.c: 108: ADON=1;
  1516  000B96  80C2               	bsf	4034,0,c	;volatile
  1517                           
  1518                           ;init.c: 110: CHS0=1;
  1519  000B98  84C2               	bsf	4034,2,c	;volatile
  1520                           
  1521                           ; BSR set to: 15
  1522  000B9A  0012               	return		;funcret
  1523  000B9C                     __end_of_initADC:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           intcon	equ	0xFF2
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           plusw1	equ	0xFE3
  1530                           plusw2	equ	0xFDB
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function ___lwtoft *****************
  1534 ;; Defined at:
  1535 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  c               2   37[COMRAM] unsigned int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  3   37[COMRAM] float 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    4
  1556 ;; This function calls:
  1557 ;;		___ftpack
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text8
  1564  000B38                     __ptext8:
  1565                           	opt stack 0
  1566  000B38                     ___lwtoft:
  1567                           	opt stack 26
  1568                           
  1569                           ; BSR set to: 15
  1570                           ;incstack = 0
  1571  000B38  C026  F01E         	movff	___lwtoft@c,___ftpack@arg
  1572  000B3C  C027  F01F         	movff	___lwtoft@c+1,___ftpack@arg+1
  1573  000B40  6A20               	clrf	___ftpack@arg+2,c
  1574  000B42  0E8E               	movlw	142
  1575  000B44  6E21               	movwf	___ftpack@exp,c
  1576  000B46  0E00               	movlw	0
  1577  000B48  6E22               	movwf	___ftpack@sign,c
  1578  000B4A  EC08  F004         	call	___ftpack	;wreg free
  1579  000B4E  C01E  F026         	movff	?___ftpack,?___lwtoft
  1580  000B52  C01F  F027         	movff	?___ftpack+1,?___lwtoft+1
  1581  000B56  C020  F028         	movff	?___ftpack+2,?___lwtoft+2
  1582  000B5A  0012               	return	
  1583  000B5C  0012               	return		;funcret
  1584  000B5E                     __end_of___lwtoft:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           intcon	equ	0xFF2
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           plusw1	equ	0xFE3
  1591                           plusw2	equ	0xFDB
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function ___fttol *****************
  1595 ;; Defined at:
  1596 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  f1              3   27[BANK0 ] float 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  lval            4   37[BANK0 ] unsigned long 
  1601 ;;  exp1            1   41[BANK0 ] unsigned char 
  1602 ;;  sign1           1   36[BANK0 ] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  4   27[BANK0 ] long 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;Total ram usage:       15 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    3
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text9
  1627  000498                     __ptext9:
  1628                           	opt stack 0
  1629  000498                     ___fttol:
  1630                           	opt stack 27
  1631                           
  1632                           ;incstack = 0
  1633  000498  C07D  F07F         	movff	___fttol@f1+2,??___fttol
  1634  00049C  0100               	movlb	0	; () banked
  1635  00049E  6B80               	clrf	(??___fttol+1)& (0+255),b
  1636  0004A0  6B81               	clrf	(??___fttol+2)& (0+255),b
  1637  0004A2  0100               	movlb	0	; () banked
  1638  0004A4  357C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1639  0004A6  0100               	movlb	0	; () banked
  1640  0004A8  377F               	rlcf	??___fttol& (0+255),f,b
  1641  0004AA  E301               	bnc	u981
  1642  0004AC  8180               	bsf	(??___fttol+1)& (0+255),0,b
  1643  0004AE                     u981:
  1644  0004AE  0100               	movlb	0	; () banked
  1645  0004B0  517F               	movf	??___fttol& (0+255),w,b
  1646  0004B2  0100               	movlb	0	; () banked
  1647  0004B4  6F89               	movwf	___fttol@exp1& (0+255),b
  1648  0004B6  0100               	movlb	0	; () banked
  1649  0004B8  5189               	movf	___fttol@exp1& (0+255),w,b
  1650  0004BA  A4D8               	btfss	status,2,c
  1651  0004BC  D00A               	goto	l1626
  1652                           
  1653                           ; BSR set to: 0
  1654  0004BE  0E00               	movlw	0
  1655  0004C0  0100               	movlb	0	; () banked
  1656  0004C2  6F7B               	movwf	?___fttol& (0+255),b
  1657  0004C4  0E00               	movlw	0
  1658  0004C6  6F7C               	movwf	(?___fttol+1)& (0+255),b
  1659  0004C8  0E00               	movlw	0
  1660  0004CA  6F7D               	movwf	(?___fttol+2)& (0+255),b
  1661  0004CC  0E00               	movlw	0
  1662  0004CE  6F7E               	movwf	(?___fttol+3)& (0+255),b
  1663                           
  1664                           ; BSR set to: 0
  1665  0004D0  0012               	return	
  1666  0004D2                     l1626:
  1667                           
  1668                           ; BSR set to: 0
  1669  0004D2  0E17               	movlw	23
  1670  0004D4  0100               	movlb	0	; () banked
  1671  0004D6  6F7F               	movwf	??___fttol& (0+255),b
  1672  0004D8  C07B  F080         	movff	___fttol@f1,??___fttol+1
  1673  0004DC  C07C  F081         	movff	___fttol@f1+1,??___fttol+2
  1674  0004E0  C07D  F082         	movff	___fttol@f1+2,??___fttol+3
  1675  0004E4  0100               	movlb	0	; () banked
  1676  0004E6  297F               	incf	??___fttol& (0+255),w,b
  1677  0004E8  0100               	movlb	0	; () banked
  1678  0004EA  6F83               	movwf	(??___fttol+4)& (0+255),b
  1679  0004EC  D005               	goto	u1000
  1680  0004EE                     u1005:
  1681  0004EE  0100               	movlb	0	; () banked
  1682  0004F0  90D8               	bcf	status,0,c
  1683  0004F2  3382               	rrcf	(??___fttol+3)& (0+255),f,b
  1684  0004F4  3381               	rrcf	(??___fttol+2)& (0+255),f,b
  1685  0004F6  3380               	rrcf	(??___fttol+1)& (0+255),f,b
  1686  0004F8                     u1000:
  1687  0004F8  0100               	movlb	0	; () banked
  1688  0004FA  2F83               	decfsz	(??___fttol+4)& (0+255),f,b
  1689  0004FC  D7F8               	goto	u1005
  1690  0004FE  0100               	movlb	0	; () banked
  1691  000500  5180               	movf	(??___fttol+1)& (0+255),w,b
  1692  000502  0100               	movlb	0	; () banked
  1693  000504  6F84               	movwf	___fttol@sign1& (0+255),b
  1694                           
  1695                           ; BSR set to: 0
  1696  000506  0100               	movlb	0	; () banked
  1697  000508  8F7C               	bsf	(___fttol@f1+1)& (0+255),7,b
  1698                           
  1699                           ; BSR set to: 0
  1700  00050A  0EFF               	movlw	255
  1701  00050C  0100               	movlb	0	; () banked
  1702  00050E  177B               	andwf	___fttol@f1& (0+255),f,b
  1703  000510  0EFF               	movlw	255
  1704  000512  0100               	movlb	0	; () banked
  1705  000514  177C               	andwf	(___fttol@f1+1)& (0+255),f,b
  1706  000516  0E00               	movlw	0
  1707  000518  0100               	movlb	0	; () banked
  1708  00051A  177D               	andwf	(___fttol@f1+2)& (0+255),f,b
  1709                           
  1710                           ; BSR set to: 0
  1711  00051C  0100               	movlb	0	; () banked
  1712  00051E  517B               	movf	___fttol@f1& (0+255),w,b
  1713  000520  0100               	movlb	0	; () banked
  1714  000522  6F85               	movwf	___fttol@lval& (0+255),b
  1715  000524  0100               	movlb	0	; () banked
  1716  000526  517C               	movf	(___fttol@f1+1)& (0+255),w,b
  1717  000528  0100               	movlb	0	; () banked
  1718  00052A  6F86               	movwf	(___fttol@lval+1)& (0+255),b
  1719  00052C  0100               	movlb	0	; () banked
  1720  00052E  517D               	movf	(___fttol@f1+2)& (0+255),w,b
  1721  000530  0100               	movlb	0	; () banked
  1722  000532  6F87               	movwf	(___fttol@lval+2)& (0+255),b
  1723  000534  0100               	movlb	0	; () banked
  1724  000536  6B88               	clrf	(___fttol@lval+3)& (0+255),b
  1725                           
  1726                           ; BSR set to: 0
  1727  000538  0E8E               	movlw	142
  1728  00053A  0100               	movlb	0	; () banked
  1729  00053C  5F89               	subwf	___fttol@exp1& (0+255),f,b
  1730                           
  1731                           ; BSR set to: 0
  1732  00053E  0100               	movlb	0	; () banked
  1733  000540  AF89               	btfss	___fttol@exp1& (0+255),7,b
  1734  000542  D01B               	goto	l1648
  1735                           
  1736                           ; BSR set to: 0
  1737  000544  0100               	movlb	0	; () banked
  1738  000546  5189               	movf	___fttol@exp1& (0+255),w,b
  1739  000548  0A80               	xorlw	128
  1740  00054A  0F8F               	addlw	143
  1741  00054C  B0D8               	btfsc	status,0,c
  1742  00054E  D00B               	goto	l1644
  1743                           
  1744                           ; BSR set to: 0
  1745  000550  0E00               	movlw	0
  1746  000552  0100               	movlb	0	; () banked
  1747  000554  6F7B               	movwf	?___fttol& (0+255),b
  1748  000556  0E00               	movlw	0
  1749  000558  6F7C               	movwf	(?___fttol+1)& (0+255),b
  1750  00055A  0E00               	movlw	0
  1751  00055C  6F7D               	movwf	(?___fttol+2)& (0+255),b
  1752  00055E  0E00               	movlw	0
  1753  000560  6F7E               	movwf	(?___fttol+3)& (0+255),b
  1754                           
  1755                           ; BSR set to: 0
  1756  000562  0012               	return	
  1757                           
  1758                           ; BSR set to: 0
  1759  000564  D000               	goto	l1644
  1760  000566                     l1644:
  1761                           
  1762                           ; BSR set to: 0
  1763  000566  0100               	movlb	0	; () banked
  1764  000568  90D8               	bcf	status,0,c
  1765  00056A  3388               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1766  00056C  3387               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1767  00056E  3386               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1768  000570  3385               	rrcf	___fttol@lval& (0+255),f,b
  1769                           
  1770                           ; BSR set to: 0
  1771  000572  0100               	movlb	0	; () banked
  1772  000574  3F89               	incfsz	___fttol@exp1& (0+255),f,b
  1773  000576  D7F7               	goto	l1644
  1774                           
  1775                           ; BSR set to: 0
  1776  000578  D01F               	goto	l1658
  1777  00057A                     l1648:
  1778                           
  1779                           ; BSR set to: 0
  1780  00057A  0E17               	movlw	23
  1781  00057C  0100               	movlb	0	; () banked
  1782  00057E  6589               	cpfsgt	___fttol@exp1& (0+255),b
  1783  000580  D014               	goto	l1656
  1784                           
  1785                           ; BSR set to: 0
  1786  000582  0E00               	movlw	0
  1787  000584  0100               	movlb	0	; () banked
  1788  000586  6F7B               	movwf	?___fttol& (0+255),b
  1789  000588  0E00               	movlw	0
  1790  00058A  6F7C               	movwf	(?___fttol+1)& (0+255),b
  1791  00058C  0E00               	movlw	0
  1792  00058E  6F7D               	movwf	(?___fttol+2)& (0+255),b
  1793  000590  0E00               	movlw	0
  1794  000592  6F7E               	movwf	(?___fttol+3)& (0+255),b
  1795                           
  1796                           ; BSR set to: 0
  1797  000594  0012               	return	
  1798                           
  1799                           ; BSR set to: 0
  1800  000596  D009               	goto	l1656
  1801  000598                     l1654:
  1802                           
  1803                           ; BSR set to: 0
  1804  000598  0100               	movlb	0	; () banked
  1805  00059A  90D8               	bcf	status,0,c
  1806  00059C  3785               	rlcf	___fttol@lval& (0+255),f,b
  1807  00059E  3786               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1808  0005A0  3787               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1809  0005A2  3788               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1810  0005A4  0100               	movlb	0	; () banked
  1811  0005A6  0789               	decf	___fttol@exp1& (0+255),f,b
  1812  0005A8  D000               	goto	l1656
  1813  0005AA                     l1656:
  1814                           
  1815                           ; BSR set to: 0
  1816  0005AA  0100               	movlb	0	; () banked
  1817  0005AC  5189               	movf	___fttol@exp1& (0+255),w,b
  1818  0005AE  0100               	movlb	0	; () banked
  1819  0005B0  B4D8               	btfsc	status,2,c
  1820  0005B2  D002               	goto	l1658
  1821  0005B4  D7F1               	goto	l1654
  1822                           
  1823                           ; BSR set to: 0
  1824  0005B6  D000               	goto	l1658
  1825  0005B8                     l1658:
  1826                           
  1827                           ; BSR set to: 0
  1828  0005B8  0100               	movlb	0	; () banked
  1829  0005BA  5184               	movf	___fttol@sign1& (0+255),w,b
  1830  0005BC  0100               	movlb	0	; () banked
  1831  0005BE  B4D8               	btfsc	status,2,c
  1832  0005C0  D00A               	goto	l1662
  1833                           
  1834                           ; BSR set to: 0
  1835  0005C2  0100               	movlb	0	; () banked
  1836  0005C4  1F88               	comf	(___fttol@lval+3)& (0+255),f,b
  1837  0005C6  1F87               	comf	(___fttol@lval+2)& (0+255),f,b
  1838  0005C8  1F86               	comf	(___fttol@lval+1)& (0+255),f,b
  1839  0005CA  6D85               	negf	___fttol@lval& (0+255),b
  1840  0005CC  0E00               	movlw	0
  1841  0005CE  2386               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1842  0005D0  2387               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1843  0005D2  2388               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1844  0005D4  D000               	goto	l1662
  1845  0005D6                     l1662:
  1846                           
  1847                           ; BSR set to: 0
  1848  0005D6  C085  F07B         	movff	___fttol@lval,?___fttol
  1849  0005DA  C086  F07C         	movff	___fttol@lval+1,?___fttol+1
  1850  0005DE  C087  F07D         	movff	___fttol@lval+2,?___fttol+2
  1851  0005E2  C088  F07E         	movff	___fttol@lval+3,?___fttol+3
  1852  0005E6  0012               	return	
  1853                           
  1854                           ; BSR set to: 0
  1855                           
  1856                           ; BSR set to: 0
  1857  0005E8  0012               	return		;funcret
  1858  0005EA                     __end_of___fttol:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           intcon	equ	0xFF2
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           plusw1	equ	0xFE3
  1865                           plusw2	equ	0xFDB
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function ___ftmul *****************
  1869 ;; Defined at:
  1870 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  f1              3    0[BANK0 ] float 
  1873 ;;  f2              3    3[BANK0 ] float 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  1876 ;;  sign            1   11[BANK0 ] unsigned char 
  1877 ;;  cntr            1   10[BANK0 ] unsigned char 
  1878 ;;  exp             1    6[BANK0 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  3    0[BANK0 ] float 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;Total ram usage:       15 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    4
  1895 ;; This function calls:
  1896 ;;		___ftpack
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  000338                     __ptext10:
  1904                           	opt stack 0
  1905  000338                     ___ftmul:
  1906                           	opt stack 26
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;incstack = 0
  1910  000338  C062  F029         	movff	___ftmul@f1+2,??___ftmul
  1911  00033C  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  1912  00033E  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  1913  000340  0100               	movlb	0	; () banked
  1914  000342  3561               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1915  000344  3629               	rlcf	??___ftmul& (0+255),f,c
  1916  000346  E301               	bnc	u1401
  1917  000348  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  1918  00034A                     u1401:
  1919  00034A  5029               	movf	??___ftmul,w,c
  1920  00034C  0100               	movlb	0	; () banked
  1921  00034E  6F66               	movwf	___ftmul@exp& (0+255),b
  1922  000350  0100               	movlb	0	; () banked
  1923  000352  5166               	movf	___ftmul@exp& (0+255),w,b
  1924  000354  A4D8               	btfss	status,2,c
  1925  000356  D00A               	goto	l1904
  1926                           
  1927                           ; BSR set to: 0
  1928  000358  0E00               	movlw	0
  1929  00035A  0100               	movlb	0	; () banked
  1930  00035C  6F60               	movwf	?___ftmul& (0+255),b
  1931  00035E  0E00               	movlw	0
  1932  000360  0100               	movlb	0	; () banked
  1933  000362  6F61               	movwf	(?___ftmul+1)& (0+255),b
  1934  000364  0E00               	movlw	0
  1935  000366  0100               	movlb	0	; () banked
  1936  000368  6F62               	movwf	(?___ftmul+2)& (0+255),b
  1937                           
  1938                           ; BSR set to: 0
  1939  00036A  0012               	return	
  1940  00036C                     l1904:
  1941                           
  1942                           ; BSR set to: 0
  1943  00036C  C065  F029         	movff	___ftmul@f2+2,??___ftmul
  1944  000370  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  1945  000372  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  1946  000374  0100               	movlb	0	; () banked
  1947  000376  3564               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1948  000378  3629               	rlcf	??___ftmul& (0+255),f,c
  1949  00037A  E301               	bnc	u1421
  1950  00037C  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  1951  00037E                     u1421:
  1952  00037E  5029               	movf	??___ftmul,w,c
  1953  000380  0100               	movlb	0	; () banked
  1954  000382  6F6B               	movwf	___ftmul@sign& (0+255),b
  1955  000384  0100               	movlb	0	; () banked
  1956  000386  516B               	movf	___ftmul@sign& (0+255),w,b
  1957  000388  A4D8               	btfss	status,2,c
  1958  00038A  D00A               	goto	l1910
  1959                           
  1960                           ; BSR set to: 0
  1961  00038C  0E00               	movlw	0
  1962  00038E  0100               	movlb	0	; () banked
  1963  000390  6F60               	movwf	?___ftmul& (0+255),b
  1964  000392  0E00               	movlw	0
  1965  000394  0100               	movlb	0	; () banked
  1966  000396  6F61               	movwf	(?___ftmul+1)& (0+255),b
  1967  000398  0E00               	movlw	0
  1968  00039A  0100               	movlb	0	; () banked
  1969  00039C  6F62               	movwf	(?___ftmul+2)& (0+255),b
  1970                           
  1971                           ; BSR set to: 0
  1972  00039E  0012               	return	
  1973  0003A0                     l1910:
  1974                           
  1975                           ; BSR set to: 0
  1976  0003A0  0100               	movlb	0	; () banked
  1977  0003A2  516B               	movf	___ftmul@sign& (0+255),w,b
  1978  0003A4  0F7B               	addlw	123
  1979  0003A6  0100               	movlb	0	; () banked
  1980  0003A8  2766               	addwf	___ftmul@exp& (0+255),f,b
  1981                           
  1982                           ; BSR set to: 0
  1983  0003AA  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  1984  0003AE  0100               	movlb	0	; () banked
  1985  0003B0  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  1986  0003B2  0100               	movlb	0	; () banked
  1987  0003B4  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  1988  0003B6  0E80               	movlw	128
  1989  0003B8  0100               	movlb	0	; () banked
  1990  0003BA  176B               	andwf	___ftmul@sign& (0+255),f,b
  1991                           
  1992                           ; BSR set to: 0
  1993  0003BC  0100               	movlb	0	; () banked
  1994  0003BE  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1995                           
  1996                           ; BSR set to: 0
  1997  0003C0  0100               	movlb	0	; () banked
  1998  0003C2  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1999                           
  2000                           ; BSR set to: 0
  2001  0003C4  0EFF               	movlw	255
  2002  0003C6  0100               	movlb	0	; () banked
  2003  0003C8  1763               	andwf	___ftmul@f2& (0+255),f,b
  2004  0003CA  0EFF               	movlw	255
  2005  0003CC  0100               	movlb	0	; () banked
  2006  0003CE  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2007  0003D0  0E00               	movlw	0
  2008  0003D2  0100               	movlb	0	; () banked
  2009  0003D4  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2010                           
  2011                           ; BSR set to: 0
  2012  0003D6  0E00               	movlw	0
  2013  0003D8  0100               	movlb	0	; () banked
  2014  0003DA  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  2015  0003DC  0E00               	movlw	0
  2016  0003DE  0100               	movlb	0	; () banked
  2017  0003E0  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2018  0003E2  0E00               	movlw	0
  2019  0003E4  0100               	movlb	0	; () banked
  2020  0003E6  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023  0003E8  0E07               	movlw	7
  2024  0003EA  0100               	movlb	0	; () banked
  2025  0003EC  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2026  0003EE  D000               	goto	l1924
  2027  0003F0                     l1924:
  2028                           
  2029                           ; BSR set to: 0
  2030  0003F0  0100               	movlb	0	; () banked
  2031  0003F2  A160               	btfss	___ftmul@f1& (0+255),0,b
  2032  0003F4  D00D               	goto	l1928
  2033                           
  2034                           ; BSR set to: 0
  2035  0003F6  0100               	movlb	0	; () banked
  2036  0003F8  5163               	movf	___ftmul@f2& (0+255),w,b
  2037  0003FA  0100               	movlb	0	; () banked
  2038  0003FC  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2039  0003FE  0100               	movlb	0	; () banked
  2040  000400  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2041  000402  0100               	movlb	0	; () banked
  2042  000404  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2043  000406  0100               	movlb	0	; () banked
  2044  000408  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2045  00040A  0100               	movlb	0	; () banked
  2046  00040C  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2047  00040E  D000               	goto	l1928
  2048  000410                     l1928:
  2049                           
  2050                           ; BSR set to: 0
  2051  000410  0100               	movlb	0	; () banked
  2052  000412  90D8               	bcf	status,0,c
  2053  000414  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2054  000416  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2055  000418  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2056  00041A  0100               	movlb	0	; () banked
  2057  00041C  90D8               	bcf	status,0,c
  2058  00041E  3763               	rlcf	___ftmul@f2& (0+255),f,b
  2059  000420  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2060  000422  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2061                           
  2062                           ; BSR set to: 0
  2063  000424  0100               	movlb	0	; () banked
  2064  000426  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2065  000428  D7E3               	goto	l1924
  2066  00042A  D000               	goto	l1932
  2067  00042C                     l1932:
  2068                           
  2069                           ; BSR set to: 0
  2070  00042C  0E09               	movlw	9
  2071  00042E  0100               	movlb	0	; () banked
  2072  000430  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2073  000432  D000               	goto	l1934
  2074  000434                     l1934:
  2075                           
  2076                           ; BSR set to: 0
  2077  000434  0100               	movlb	0	; () banked
  2078  000436  A160               	btfss	___ftmul@f1& (0+255),0,b
  2079  000438  D00D               	goto	l1938
  2080                           
  2081                           ; BSR set to: 0
  2082  00043A  0100               	movlb	0	; () banked
  2083  00043C  5163               	movf	___ftmul@f2& (0+255),w,b
  2084  00043E  0100               	movlb	0	; () banked
  2085  000440  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2086  000442  0100               	movlb	0	; () banked
  2087  000444  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2088  000446  0100               	movlb	0	; () banked
  2089  000448  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2090  00044A  0100               	movlb	0	; () banked
  2091  00044C  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2092  00044E  0100               	movlb	0	; () banked
  2093  000450  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2094  000452  D000               	goto	l1938
  2095  000454                     l1938:
  2096                           
  2097                           ; BSR set to: 0
  2098  000454  0100               	movlb	0	; () banked
  2099  000456  90D8               	bcf	status,0,c
  2100  000458  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2101  00045A  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2102  00045C  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2103  00045E  0100               	movlb	0	; () banked
  2104  000460  90D8               	bcf	status,0,c
  2105  000462  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2106  000464  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2107  000466  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2108                           
  2109                           ; BSR set to: 0
  2110  000468  0100               	movlb	0	; () banked
  2111  00046A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2112  00046C  D7E3               	goto	l1934
  2113  00046E  D000               	goto	l1942
  2114  000470                     l1942:
  2115                           
  2116                           ; BSR set to: 0
  2117  000470  C067  F01E         	movff	___ftmul@f3_as_product,___ftpack@arg
  2118  000474  C068  F01F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2119  000478  C069  F020         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2120  00047C  C066  F021         	movff	___ftmul@exp,___ftpack@exp
  2121  000480  C06B  F022         	movff	___ftmul@sign,___ftpack@sign
  2122  000484  EC08  F004         	call	___ftpack	;wreg free
  2123  000488  C01E  F060         	movff	?___ftpack,?___ftmul
  2124  00048C  C01F  F061         	movff	?___ftpack+1,?___ftmul+1
  2125  000490  C020  F062         	movff	?___ftpack+2,?___ftmul+2
  2126  000494  0012               	return	
  2127  000496  0012               	return		;funcret
  2128  000498                     __end_of___ftmul:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           intcon	equ	0xFF2
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           plusw1	equ	0xFE3
  2135                           plusw2	equ	0xFDB
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function ___ftdiv *****************
  2139 ;; Defined at:
  2140 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  f1              3   12[BANK0 ] float 
  2143 ;;  f2              3   15[BANK0 ] float 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  f3              3   22[BANK0 ] float 
  2146 ;;  sign            1   26[BANK0 ] unsigned char 
  2147 ;;  exp             1   25[BANK0 ] unsigned char 
  2148 ;;  cntr            1   21[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  3   12[BANK0 ] float 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:       15 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    4
  2165 ;; This function calls:
  2166 ;;		___ftpack
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text11
  2173  0005EA                     __ptext11:
  2174                           	opt stack 0
  2175  0005EA                     ___ftdiv:
  2176                           	opt stack 26
  2177                           
  2178                           ;incstack = 0
  2179  0005EA  C06E  F072         	movff	___ftdiv@f1+2,??___ftdiv
  2180  0005EE  0100               	movlb	0	; () banked
  2181  0005F0  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2182  0005F2  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2183  0005F4  0100               	movlb	0	; () banked
  2184  0005F6  356D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2185  0005F8  0100               	movlb	0	; () banked
  2186  0005FA  3772               	rlcf	??___ftdiv& (0+255),f,b
  2187  0005FC  E301               	bnc	u1351
  2188  0005FE  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2189  000600                     u1351:
  2190  000600  0100               	movlb	0	; () banked
  2191  000602  5172               	movf	??___ftdiv& (0+255),w,b
  2192  000604  0100               	movlb	0	; () banked
  2193  000606  6F79               	movwf	___ftdiv@exp& (0+255),b
  2194  000608  0100               	movlb	0	; () banked
  2195  00060A  5179               	movf	___ftdiv@exp& (0+255),w,b
  2196  00060C  A4D8               	btfss	status,2,c
  2197  00060E  D00A               	goto	l1858
  2198                           
  2199                           ; BSR set to: 0
  2200  000610  0E00               	movlw	0
  2201  000612  0100               	movlb	0	; () banked
  2202  000614  6F6C               	movwf	?___ftdiv& (0+255),b
  2203  000616  0E00               	movlw	0
  2204  000618  0100               	movlb	0	; () banked
  2205  00061A  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2206  00061C  0E00               	movlw	0
  2207  00061E  0100               	movlb	0	; () banked
  2208  000620  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211  000622  0012               	return	
  2212  000624                     l1858:
  2213                           
  2214                           ; BSR set to: 0
  2215  000624  C071  F072         	movff	___ftdiv@f2+2,??___ftdiv
  2216  000628  0100               	movlb	0	; () banked
  2217  00062A  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2218  00062C  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2219  00062E  0100               	movlb	0	; () banked
  2220  000630  3570               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2221  000632  0100               	movlb	0	; () banked
  2222  000634  3772               	rlcf	??___ftdiv& (0+255),f,b
  2223  000636  E301               	bnc	u1371
  2224  000638  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2225  00063A                     u1371:
  2226  00063A  0100               	movlb	0	; () banked
  2227  00063C  5172               	movf	??___ftdiv& (0+255),w,b
  2228  00063E  0100               	movlb	0	; () banked
  2229  000640  6F7A               	movwf	___ftdiv@sign& (0+255),b
  2230  000642  0100               	movlb	0	; () banked
  2231  000644  517A               	movf	___ftdiv@sign& (0+255),w,b
  2232  000646  A4D8               	btfss	status,2,c
  2233  000648  D00A               	goto	l1864
  2234                           
  2235                           ; BSR set to: 0
  2236  00064A  0E00               	movlw	0
  2237  00064C  0100               	movlb	0	; () banked
  2238  00064E  6F6C               	movwf	?___ftdiv& (0+255),b
  2239  000650  0E00               	movlw	0
  2240  000652  0100               	movlb	0	; () banked
  2241  000654  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2242  000656  0E00               	movlw	0
  2243  000658  0100               	movlb	0	; () banked
  2244  00065A  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247  00065C  0012               	return	
  2248  00065E                     l1864:
  2249                           
  2250                           ; BSR set to: 0
  2251  00065E  0E00               	movlw	0
  2252  000660  0100               	movlb	0	; () banked
  2253  000662  6F76               	movwf	___ftdiv@f3& (0+255),b
  2254  000664  0E00               	movlw	0
  2255  000666  0100               	movlb	0	; () banked
  2256  000668  6F77               	movwf	(___ftdiv@f3+1)& (0+255),b
  2257  00066A  0E00               	movlw	0
  2258  00066C  0100               	movlb	0	; () banked
  2259  00066E  6F78               	movwf	(___ftdiv@f3+2)& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262  000670  0100               	movlb	0	; () banked
  2263  000672  517A               	movf	___ftdiv@sign& (0+255),w,b
  2264  000674  0F89               	addlw	137
  2265  000676  0100               	movlb	0	; () banked
  2266  000678  5F79               	subwf	___ftdiv@exp& (0+255),f,b
  2267                           
  2268                           ; BSR set to: 0
  2269  00067A  C06E  F07A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2270                           
  2271                           ; BSR set to: 0
  2272  00067E  0100               	movlb	0	; () banked
  2273  000680  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2274  000682  0100               	movlb	0	; () banked
  2275  000684  1B7A               	xorwf	___ftdiv@sign& (0+255),f,b
  2276                           
  2277                           ; BSR set to: 0
  2278  000686  0E80               	movlw	128
  2279  000688  0100               	movlb	0	; () banked
  2280  00068A  177A               	andwf	___ftdiv@sign& (0+255),f,b
  2281                           
  2282                           ; BSR set to: 0
  2283  00068C  0100               	movlb	0	; () banked
  2284  00068E  8F6D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2285                           
  2286                           ; BSR set to: 0
  2287  000690  0EFF               	movlw	255
  2288  000692  0100               	movlb	0	; () banked
  2289  000694  176C               	andwf	___ftdiv@f1& (0+255),f,b
  2290  000696  0EFF               	movlw	255
  2291  000698  0100               	movlb	0	; () banked
  2292  00069A  176D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2293  00069C  0E00               	movlw	0
  2294  00069E  0100               	movlb	0	; () banked
  2295  0006A0  176E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2296                           
  2297                           ; BSR set to: 0
  2298  0006A2  0100               	movlb	0	; () banked
  2299  0006A4  8F70               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2300                           
  2301                           ; BSR set to: 0
  2302  0006A6  0EFF               	movlw	255
  2303  0006A8  0100               	movlb	0	; () banked
  2304  0006AA  176F               	andwf	___ftdiv@f2& (0+255),f,b
  2305  0006AC  0EFF               	movlw	255
  2306  0006AE  0100               	movlb	0	; () banked
  2307  0006B0  1770               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2308  0006B2  0E00               	movlw	0
  2309  0006B4  0100               	movlb	0	; () banked
  2310  0006B6  1771               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2311                           
  2312                           ; BSR set to: 0
  2313  0006B8  0E18               	movlw	24
  2314  0006BA  0100               	movlb	0	; () banked
  2315  0006BC  6F75               	movwf	___ftdiv@cntr& (0+255),b
  2316  0006BE  D000               	goto	l1884
  2317  0006C0                     l1884:
  2318                           
  2319                           ; BSR set to: 0
  2320  0006C0  0100               	movlb	0	; () banked
  2321  0006C2  90D8               	bcf	status,0,c
  2322  0006C4  3776               	rlcf	___ftdiv@f3& (0+255),f,b
  2323  0006C6  3777               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2324  0006C8  3778               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2325                           
  2326                           ; BSR set to: 0
  2327  0006CA  0100               	movlb	0	; () banked
  2328  0006CC  516F               	movf	___ftdiv@f2& (0+255),w,b
  2329  0006CE  0100               	movlb	0	; () banked
  2330  0006D0  5D6C               	subwf	___ftdiv@f1& (0+255),w,b
  2331  0006D2  0100               	movlb	0	; () banked
  2332  0006D4  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2333  0006D6  0100               	movlb	0	; () banked
  2334  0006D8  596D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2335  0006DA  0100               	movlb	0	; () banked
  2336  0006DC  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2337  0006DE  0100               	movlb	0	; () banked
  2338  0006E0  596E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2339  0006E2  A0D8               	btfss	status,0,c
  2340  0006E4  D00E               	goto	l615
  2341                           
  2342                           ; BSR set to: 0
  2343  0006E6  0100               	movlb	0	; () banked
  2344  0006E8  516F               	movf	___ftdiv@f2& (0+255),w,b
  2345  0006EA  0100               	movlb	0	; () banked
  2346  0006EC  5F6C               	subwf	___ftdiv@f1& (0+255),f,b
  2347  0006EE  0100               	movlb	0	; () banked
  2348  0006F0  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2349  0006F2  0100               	movlb	0	; () banked
  2350  0006F4  5B6D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2351  0006F6  0100               	movlb	0	; () banked
  2352  0006F8  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2353  0006FA  0100               	movlb	0	; () banked
  2354  0006FC  5B6E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2355                           
  2356                           ; BSR set to: 0
  2357  0006FE  0100               	movlb	0	; () banked
  2358  000700  8176               	bsf	___ftdiv@f3& (0+255),0,b
  2359  000702                     l615:
  2360                           
  2361                           ; BSR set to: 0
  2362  000702  0100               	movlb	0	; () banked
  2363  000704  90D8               	bcf	status,0,c
  2364  000706  376C               	rlcf	___ftdiv@f1& (0+255),f,b
  2365  000708  376D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2366  00070A  376E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2367                           
  2368                           ; BSR set to: 0
  2369  00070C  0100               	movlb	0	; () banked
  2370  00070E  2F75               	decfsz	___ftdiv@cntr& (0+255),f,b
  2371  000710  D7D7               	goto	l1884
  2372  000712  D000               	goto	l1894
  2373  000714                     l1894:
  2374                           
  2375                           ; BSR set to: 0
  2376  000714  C076  F01E         	movff	___ftdiv@f3,___ftpack@arg
  2377  000718  C077  F01F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2378  00071C  C078  F020         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2379  000720  C079  F021         	movff	___ftdiv@exp,___ftpack@exp
  2380  000724  C07A  F022         	movff	___ftdiv@sign,___ftpack@sign
  2381  000728  EC08  F004         	call	___ftpack	;wreg free
  2382  00072C  C01E  F06C         	movff	?___ftpack,?___ftdiv
  2383  000730  C01F  F06D         	movff	?___ftpack+1,?___ftdiv+1
  2384  000734  C020  F06E         	movff	?___ftpack+2,?___ftdiv+2
  2385  000738  0012               	return	
  2386  00073A  0012               	return		;funcret
  2387  00073C                     __end_of___ftdiv:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           plusw1	equ	0xFE3
  2394                           plusw2	equ	0xFDB
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function ___ftpack *****************
  2398 ;; Defined at:
  2399 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  arg             3   29[COMRAM] unsigned um
  2402 ;;  exp             1   32[COMRAM] unsigned char 
  2403 ;;  sign            1   33[COMRAM] unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  3   29[COMRAM] float 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2415 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;Total ram usage:        8 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    3
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		___ftdiv
  2426 ;;		___ftmul
  2427 ;;		___lwtoft
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text12
  2432  000810                     __ptext12:
  2433                           	opt stack 0
  2434  000810                     ___ftpack:
  2435                           	opt stack 26
  2436                           
  2437                           ;incstack = 0
  2438  000810  5021               	movf	___ftpack@exp,w,c
  2439  000812  B4D8               	btfsc	status,2,c
  2440  000814  D005               	goto	l1752
  2441  000816  501E               	movf	___ftpack@arg,w,c
  2442  000818  101F               	iorwf	___ftpack@arg+1,w,c
  2443  00081A  1020               	iorwf	___ftpack@arg+2,w,c
  2444  00081C  A4D8               	btfss	status,2,c
  2445  00081E  D00E               	goto	l1758
  2446  000820                     l1752:
  2447  000820  0E00               	movlw	0
  2448  000822  6E1E               	movwf	?___ftpack,c
  2449  000824  0E00               	movlw	0
  2450  000826  6E1F               	movwf	?___ftpack+1,c
  2451  000828  0E00               	movlw	0
  2452  00082A  6E20               	movwf	?___ftpack+2,c
  2453  00082C  0012               	return	
  2454  00082E  D006               	goto	l1758
  2455  000830                     l1756:
  2456  000830  2A21               	incf	___ftpack@exp,f,c
  2457  000832  90D8               	bcf	status,0,c
  2458  000834  3220               	rrcf	___ftpack@arg+2,f,c
  2459  000836  321F               	rrcf	___ftpack@arg+1,f,c
  2460  000838  321E               	rrcf	___ftpack@arg,f,c
  2461  00083A  D000               	goto	l1758
  2462  00083C                     l1758:
  2463  00083C  0E00               	movlw	0
  2464  00083E  141E               	andwf	___ftpack@arg,w,c
  2465  000840  6E23               	movwf	??___ftpack& (0+255),c
  2466  000842  0E00               	movlw	0
  2467  000844  141F               	andwf	___ftpack@arg+1,w,c
  2468  000846  6E24               	movwf	(??___ftpack+1)& (0+255),c
  2469  000848  0EFE               	movlw	254
  2470  00084A  1420               	andwf	___ftpack@arg+2,w,c
  2471  00084C  6E25               	movwf	(??___ftpack+2)& (0+255),c
  2472  00084E  5023               	movf	??___ftpack,w,c
  2473  000850  1024               	iorwf	??___ftpack+1,w,c
  2474  000852  1025               	iorwf	??___ftpack+2,w,c
  2475  000854  B4D8               	btfsc	status,2,c
  2476  000856  D00E               	goto	l1764
  2477  000858  D7EB               	goto	l1756
  2478  00085A  D00C               	goto	l1764
  2479  00085C                     l1760:
  2480  00085C  2A21               	incf	___ftpack@exp,f,c
  2481  00085E  0E01               	movlw	1
  2482  000860  261E               	addwf	___ftpack@arg,f,c
  2483  000862  0E00               	movlw	0
  2484  000864  221F               	addwfc	___ftpack@arg+1,f,c
  2485  000866  0E00               	movlw	0
  2486  000868  2220               	addwfc	___ftpack@arg+2,f,c
  2487  00086A  90D8               	bcf	status,0,c
  2488  00086C  3220               	rrcf	___ftpack@arg+2,f,c
  2489  00086E  321F               	rrcf	___ftpack@arg+1,f,c
  2490  000870  321E               	rrcf	___ftpack@arg,f,c
  2491  000872  D000               	goto	l1764
  2492  000874                     l1764:
  2493  000874  0E00               	movlw	0
  2494  000876  141E               	andwf	___ftpack@arg,w,c
  2495  000878  6E23               	movwf	??___ftpack& (0+255),c
  2496  00087A  0E00               	movlw	0
  2497  00087C  141F               	andwf	___ftpack@arg+1,w,c
  2498  00087E  6E24               	movwf	(??___ftpack+1)& (0+255),c
  2499  000880  0EFF               	movlw	255
  2500  000882  1420               	andwf	___ftpack@arg+2,w,c
  2501  000884  6E25               	movwf	(??___ftpack+2)& (0+255),c
  2502  000886  5023               	movf	??___ftpack,w,c
  2503  000888  1024               	iorwf	??___ftpack+1,w,c
  2504  00088A  1025               	iorwf	??___ftpack+2,w,c
  2505  00088C  B4D8               	btfsc	status,2,c
  2506  00088E  D008               	goto	l1768
  2507  000890  D7E5               	goto	l1760
  2508  000892  D006               	goto	l1768
  2509  000894                     l1766:
  2510  000894  0621               	decf	___ftpack@exp,f,c
  2511  000896  90D8               	bcf	status,0,c
  2512  000898  361E               	rlcf	___ftpack@arg,f,c
  2513  00089A  361F               	rlcf	___ftpack@arg+1,f,c
  2514  00089C  3620               	rlcf	___ftpack@arg+2,f,c
  2515  00089E  D000               	goto	l1768
  2516  0008A0                     l1768:
  2517  0008A0  BE1F               	btfsc	___ftpack@arg+1,7,c
  2518  0008A2  D004               	goto	l551
  2519  0008A4  0E02               	movlw	2
  2520  0008A6  6021               	cpfslt	___ftpack@exp,c
  2521  0008A8  D7F5               	goto	l1766
  2522  0008AA  D000               	goto	l551
  2523  0008AC                     l551:
  2524  0008AC  B021               	btfsc	___ftpack@exp,0,c
  2525  0008AE  D002               	goto	l1774
  2526  0008B0  9E1F               	bcf	___ftpack@arg+1,7,c
  2527  0008B2  D000               	goto	l1774
  2528  0008B4                     l1774:
  2529  0008B4  90D8               	bcf	status,0,c
  2530  0008B6  3221               	rrcf	___ftpack@exp,f,c
  2531  0008B8  5021               	movf	___ftpack@exp,w,c
  2532  0008BA  1220               	iorwf	___ftpack@arg+2,f,c
  2533  0008BC  5022               	movf	___ftpack@sign,w,c
  2534  0008BE  B4D8               	btfsc	status,2,c
  2535  0008C0  D002               	goto	l1780
  2536  0008C2  8E20               	bsf	___ftpack@arg+2,7,c
  2537  0008C4  D000               	goto	l1780
  2538  0008C6                     l1780:
  2539  0008C6  C01E  F01E         	movff	___ftpack@arg,?___ftpack
  2540  0008CA  C01F  F01F         	movff	___ftpack@arg+1,?___ftpack+1
  2541  0008CE  C020  F020         	movff	___ftpack@arg+2,?___ftpack+2
  2542  0008D2  0012               	return	
  2543  0008D4  0012               	return		;funcret
  2544  0008D6                     __end_of___ftpack:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           intcon	equ	0xFF2
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           plusw1	equ	0xFE3
  2551                           plusw2	equ	0xFDB
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _high_isr *****************
  2555 ;; Defined at:
  2556 ;;		line 118 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  input           2   27[COMRAM] unsigned char [2]
  2561 ;; Return value:  Size  Location     Type
  2562 ;;		None               void
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;Total ram usage:       16 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    2
  2577 ;; This function calls:
  2578 ;;		_atoi
  2579 ;; This function is called by:
  2580 ;;		Interrupt level 2
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	intcode
  2585  000008                     __pintcode:
  2586                           	opt stack 0
  2587  000008                     _high_isr:
  2588                           	opt stack 26
  2589                           
  2590                           ;incstack = 0
  2591  000008  CFFA F00E          	movff	pclath,??_high_isr
  2592  00000C  CFFB F00F          	movff	pclatu,??_high_isr+1
  2593  000010  CFE9 F010          	movff	fsr0l,??_high_isr+2
  2594  000014  CFEA F011          	movff	fsr0h,??_high_isr+3
  2595  000018  CFE1 F012          	movff	fsr1l,??_high_isr+4
  2596  00001C  CFE2 F013          	movff	fsr1h,??_high_isr+5
  2597  000020  CFD9 F014          	movff	fsr2l,??_high_isr+6
  2598  000024  CFDA F015          	movff	fsr2h,??_high_isr+7
  2599  000028  CFF3 F016          	movff	prodl,??_high_isr+8
  2600  00002C  CFF4 F017          	movff	prodh,??_high_isr+9
  2601  000030  CFF6 F018          	movff	tblptrl,??_high_isr+10
  2602  000034  CFF7 F019          	movff	tblptrh,??_high_isr+11
  2603  000038  CFF8 F01A          	movff	tblptru,??_high_isr+12
  2604  00003C  CFF5 F01B          	movff	tablat,??_high_isr+13
  2605                           
  2606                           ;main.c: 119: RC2IF = 0;
  2607  000040  9AA4               	bcf	4004,5,c	;volatile
  2608                           
  2609                           ;main.c: 122: char input[2] = "";
  2610  000042  C02D  F01C         	movff	high_isr@F19157,high_isr@input
  2611  000046  C02E  F01D         	movff	high_isr@F19157+1,high_isr@input+1
  2612                           
  2613                           ;main.c: 123: input[0] = RCREG2;
  2614  00004A  CF7A F01C          	movff	3962,high_isr@input	;volatile
  2615                           
  2616                           ;main.c: 125: if (beginR==1 | beginG==1 | beginB==1)
  2617  00004E  0431               	decf	_beginR,w,c
  2618  000050  B4D8               	btfsc	status,2,c
  2619  000052  D006               	goto	i2l1678
  2620  000054  0430               	decf	_beginG,w,c
  2621  000056  B4D8               	btfsc	status,2,c
  2622  000058  D003               	goto	i2l1678
  2623  00005A  042F               	decf	_beginB,w,c
  2624  00005C  A4D8               	btfss	status,2,c
  2625  00005E  D053               	goto	i2l1716
  2626  000060                     i2l1678:
  2627                           
  2628                           ;main.c: 126: {
  2629                           ;main.c: 127: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  2630  000060  0E52               	movlw	82
  2631  000062  181C               	xorwf	high_isr@input,w,c
  2632  000064  B4D8               	btfsc	status,2,c
  2633  000066  D014               	goto	i2l1688
  2634  000068  0E47               	movlw	71
  2635  00006A  181C               	xorwf	high_isr@input,w,c
  2636  00006C  B4D8               	btfsc	status,2,c
  2637  00006E  D010               	goto	i2l1688
  2638  000070  0E42               	movlw	66
  2639  000072  181C               	xorwf	high_isr@input,w,c
  2640  000074  B4D8               	btfsc	status,2,c
  2641  000076  D00C               	goto	i2l1688
  2642                           
  2643                           ;main.c: 128: {
  2644                           ;main.c: 129: buffer[compteur]=input[0];
  2645  000078  5032               	movf	_compteur,w,c
  2646  00007A  0D01               	mullw	1
  2647  00007C  0E33               	movlw	low _buffer
  2648  00007E  24F3               	addwf	prodl,w,c
  2649  000080  6ED9               	movwf	fsr2l,c
  2650  000082  0E00               	movlw	high _buffer
  2651  000084  20F4               	addwfc	prodh,w,c
  2652  000086  6EDA               	movwf	fsr2h,c
  2653  000088  C01C  FFDF         	movff	high_isr@input,indf2
  2654                           
  2655                           ;main.c: 130: compteur+=1;
  2656  00008C  2A32               	incf	_compteur,f,c
  2657                           
  2658                           ;main.c: 131: }
  2659  00008E  D03B               	goto	i2l1716
  2660  000090                     i2l1688:
  2661                           
  2662                           ;main.c: 133: else
  2663                           ;main.c: 134: {
  2664                           ;main.c: 135: if (beginR==1)
  2665  000090  0431               	decf	_beginR,w,c
  2666  000092  A4D8               	btfss	status,2,c
  2667  000094  D00B               	goto	i2l1692
  2668                           
  2669                           ;main.c: 136: R[0]=atoi(buffer);
  2670  000096  0E33               	movlw	low _buffer
  2671  000098  6E07               	movwf	atoi@s,c
  2672  00009A  0E00               	movlw	high _buffer
  2673  00009C  6E08               	movwf	atoi@s+1,c
  2674  00009E  EC9E  F003         	call	_atoi	;wreg free
  2675  0000A2  C007  F100         	movff	?_atoi,_R
  2676  0000A6  C008  F101         	movff	?_atoi+1,_R+1
  2677  0000AA  D000               	goto	i2l1692
  2678  0000AC                     i2l1692:
  2679                           
  2680                           ;main.c: 137: beginR=0;
  2681  0000AC  0E00               	movlw	0
  2682  0000AE  6E31               	movwf	_beginR,c
  2683                           
  2684                           ;main.c: 138: if (beginG==1)
  2685  0000B0  0430               	decf	_beginG,w,c
  2686  0000B2  A4D8               	btfss	status,2,c
  2687  0000B4  D00B               	goto	i2l1698
  2688                           
  2689                           ;main.c: 139: G[0]=atoi(buffer);
  2690  0000B6  0E33               	movlw	low _buffer
  2691  0000B8  6E07               	movwf	atoi@s,c
  2692  0000BA  0E00               	movlw	high _buffer
  2693  0000BC  6E08               	movwf	atoi@s+1,c
  2694  0000BE  EC9E  F003         	call	_atoi	;wreg free
  2695  0000C2  C007  F200         	movff	?_atoi,_G
  2696  0000C6  C008  F201         	movff	?_atoi+1,_G+1
  2697  0000CA  D000               	goto	i2l1698
  2698  0000CC                     i2l1698:
  2699                           
  2700                           ;main.c: 140: beginG=0;
  2701  0000CC  0E00               	movlw	0
  2702  0000CE  6E30               	movwf	_beginG,c
  2703                           
  2704                           ;main.c: 141: if (beginB==1)
  2705  0000D0  042F               	decf	_beginB,w,c
  2706  0000D2  A4D8               	btfss	status,2,c
  2707  0000D4  D00B               	goto	i2l1704
  2708                           
  2709                           ;main.c: 142: B[0]=atoi(buffer);
  2710  0000D6  0E33               	movlw	low _buffer
  2711  0000D8  6E07               	movwf	atoi@s,c
  2712  0000DA  0E00               	movlw	high _buffer
  2713  0000DC  6E08               	movwf	atoi@s+1,c
  2714  0000DE  EC9E  F003         	call	_atoi	;wreg free
  2715  0000E2  C007  F300         	movff	?_atoi,_B
  2716  0000E6  C008  F301         	movff	?_atoi+1,_B+1
  2717  0000EA  D000               	goto	i2l1704
  2718  0000EC                     i2l1704:
  2719                           
  2720                           ;main.c: 143: beginB=0;
  2721  0000EC  0E00               	movlw	0
  2722  0000EE  6E2F               	movwf	_beginB,c
  2723                           
  2724                           ;main.c: 146: compteur=0;
  2725  0000F0  0E00               	movlw	0
  2726  0000F2  6E32               	movwf	_compteur,c
  2727                           
  2728                           ;main.c: 147: buffer[3]='\0';
  2729  0000F4  0E00               	movlw	0
  2730  0000F6  6E36               	movwf	_buffer+3,c
  2731                           
  2732                           ;main.c: 148: buffer[2]='\0';
  2733  0000F8  0E00               	movlw	0
  2734  0000FA  6E35               	movwf	_buffer+2,c
  2735                           
  2736                           ;main.c: 149: buffer[1]='\0';
  2737  0000FC  0E00               	movlw	0
  2738  0000FE  6E34               	movwf	_buffer+1,c
  2739                           
  2740                           ;main.c: 150: buffer[0]='\0';
  2741  000100  0E00               	movlw	0
  2742  000102  6E33               	movwf	_buffer,c
  2743  000104  D000               	goto	i2l1716
  2744  000106                     i2l1716:
  2745                           
  2746                           ;main.c: 151: }
  2747                           ;main.c: 152: }
  2748                           ;main.c: 154: if (input[0]=='R')
  2749  000106  0E52               	movlw	82
  2750  000108  181C               	xorwf	high_isr@input,w,c
  2751  00010A  A4D8               	btfss	status,2,c
  2752  00010C  D003               	goto	i2l1720
  2753                           
  2754                           ;main.c: 155: beginR=1;
  2755  00010E  0E01               	movlw	1
  2756  000110  6E31               	movwf	_beginR,c
  2757  000112  D000               	goto	i2l1720
  2758  000114                     i2l1720:
  2759                           
  2760                           ;main.c: 156: if (input[0]=='G')
  2761  000114  0E47               	movlw	71
  2762  000116  181C               	xorwf	high_isr@input,w,c
  2763  000118  A4D8               	btfss	status,2,c
  2764  00011A  D003               	goto	i2l1724
  2765                           
  2766                           ;main.c: 157: beginG=1;
  2767  00011C  0E01               	movlw	1
  2768  00011E  6E30               	movwf	_beginG,c
  2769  000120  D000               	goto	i2l1724
  2770  000122                     i2l1724:
  2771                           
  2772                           ;main.c: 158: if (input[0]=='B')
  2773  000122  0E42               	movlw	66
  2774  000124  181C               	xorwf	high_isr@input,w,c
  2775  000126  A4D8               	btfss	status,2,c
  2776  000128  D003               	goto	i2l58
  2777                           
  2778                           ;main.c: 159: beginB=1;
  2779  00012A  0E01               	movlw	1
  2780  00012C  6E2F               	movwf	_beginB,c
  2781  00012E  D000               	goto	i2l58
  2782  000130                     i2l58:
  2783  000130  C01B  FFF5         	movff	??_high_isr+13,tablat
  2784  000134  C01A  FFF8         	movff	??_high_isr+12,tblptru
  2785  000138  C019  FFF7         	movff	??_high_isr+11,tblptrh
  2786  00013C  C018  FFF6         	movff	??_high_isr+10,tblptrl
  2787  000140  C017  FFF4         	movff	??_high_isr+9,prodh
  2788  000144  C016  FFF3         	movff	??_high_isr+8,prodl
  2789  000148  C015  FFDA         	movff	??_high_isr+7,fsr2h
  2790  00014C  C014  FFD9         	movff	??_high_isr+6,fsr2l
  2791  000150  C013  FFE2         	movff	??_high_isr+5,fsr1h
  2792  000154  C012  FFE1         	movff	??_high_isr+4,fsr1l
  2793  000158  C011  FFEA         	movff	??_high_isr+3,fsr0h
  2794  00015C  C010  FFE9         	movff	??_high_isr+2,fsr0l
  2795  000160  C00F  FFFB         	movff	??_high_isr+1,pclatu
  2796  000164  C00E  FFFA         	movff	??_high_isr,pclath
  2797  000168  0011               	retfie		f
  2798  00016A                     __end_of_high_isr:
  2799                           	opt stack 0
  2800                           pclatu	equ	0xFFB
  2801                           pclath	equ	0xFFA
  2802                           tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           prodh	equ	0xFF4
  2807                           prodl	equ	0xFF3
  2808                           intcon	equ	0xFF2
  2809                           postinc0	equ	0xFEE
  2810                           fsr0h	equ	0xFEA
  2811                           fsr0l	equ	0xFE9
  2812                           wreg	equ	0xFE8
  2813                           plusw1	equ	0xFE3
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           plusw2	equ	0xFDB
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _atoi *****************
  2823 ;; Defined at:
  2824 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2827 ;;		 -> buffer(16), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  a               2   11[COMRAM] int 
  2830 ;;  sign            1   10[COMRAM] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2    6[COMRAM] int 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2843 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2844 ;;Total ram usage:        7 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    1
  2847 ;; This function calls:
  2848 ;;		___wmul
  2849 ;;		_isdigit
  2850 ;; This function is called by:
  2851 ;;		_high_isr
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text14
  2856  00073C                     __ptext14:
  2857                           	opt stack 0
  2858  00073C                     _atoi:
  2859                           	opt stack 26
  2860                           
  2861                           ;incstack = 0
  2862  00073C  D003               	goto	i2l1452
  2863  00073E                     i2l1450:
  2864  00073E  4A07               	infsnz	atoi@s,f,c
  2865  000740  2A08               	incf	atoi@s+1,f,c
  2866  000742  D000               	goto	i2l1452
  2867  000744                     i2l1452:
  2868  000744  C007  FFD9         	movff	atoi@s,fsr2l
  2869  000748  C008  FFDA         	movff	atoi@s+1,fsr2h
  2870  00074C  0E20               	movlw	32
  2871  00074E  18DE               	xorwf	postinc2,w,c
  2872  000750  B4D8               	btfsc	status,2,c
  2873  000752  D7F5               	goto	i2l1450
  2874  000754  C007  FFD9         	movff	atoi@s,fsr2l
  2875  000758  C008  FFDA         	movff	atoi@s+1,fsr2h
  2876  00075C  0E09               	movlw	9
  2877  00075E  18DE               	xorwf	postinc2,w,c
  2878  000760  B4D8               	btfsc	status,2,c
  2879  000762  D7ED               	goto	i2l1450
  2880  000764  0E00               	movlw	0
  2881  000766  6E0D               	movwf	atoi@a+1,c
  2882  000768  0E00               	movlw	0
  2883  00076A  6E0C               	movwf	atoi@a,c
  2884  00076C  0E00               	movlw	0
  2885  00076E  6E0B               	movwf	atoi@sign,c
  2886  000770  C007  FFD9         	movff	atoi@s,fsr2l
  2887  000774  C008  FFDA         	movff	atoi@s+1,fsr2h
  2888  000778  0E2D               	movlw	45
  2889  00077A  18DE               	xorwf	postinc2,w,c
  2890  00077C  A4D8               	btfss	status,2,c
  2891  00077E  D002               	goto	i2l1462
  2892  000780  2A0B               	incf	atoi@sign,f,c
  2893  000782  D025               	goto	i2l1468
  2894  000784                     i2l1462:
  2895  000784  C007  FFD9         	movff	atoi@s,fsr2l
  2896  000788  C008  FFDA         	movff	atoi@s+1,fsr2h
  2897  00078C  0E2B               	movlw	43
  2898  00078E  18DE               	xorwf	postinc2,w,c
  2899  000790  A4D8               	btfss	status,2,c
  2900  000792  D020               	goto	i2l1470
  2901  000794  D01C               	goto	i2l1468
  2902  000796  D01E               	goto	i2l1470
  2903  000798                     i2l1466:
  2904  000798  C00C  F001         	movff	atoi@a,___wmul@multiplier
  2905  00079C  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  2906  0007A0  0E00               	movlw	0
  2907  0007A2  6E04               	movwf	___wmul@multiplicand+1,c
  2908  0007A4  0E0A               	movlw	10
  2909  0007A6  6E03               	movwf	___wmul@multiplicand,c
  2910  0007A8  EC88  F005         	call	___wmul	;wreg free
  2911  0007AC  C007  FFD9         	movff	atoi@s,fsr2l
  2912  0007B0  C008  FFDA         	movff	atoi@s+1,fsr2h
  2913  0007B4  50DF               	movf	indf2,w,c
  2914  0007B6  6E09               	movwf	??_atoi& (0+255),c
  2915  0007B8  6A0A               	clrf	(??_atoi+1)& (0+255),c
  2916  0007BA  5001               	movf	?___wmul,w,c
  2917  0007BC  2609               	addwf	??_atoi,f,c
  2918  0007BE  5002               	movf	?___wmul+1,w,c
  2919  0007C0  220A               	addwfc	??_atoi+1,f,c
  2920  0007C2  0ED0               	movlw	208
  2921  0007C4  2409               	addwf	??_atoi,w,c
  2922  0007C6  6E0C               	movwf	atoi@a,c
  2923  0007C8  0EFF               	movlw	255
  2924  0007CA  200A               	addwfc	??_atoi+1,w,c
  2925  0007CC  6E0D               	movwf	atoi@a+1,c
  2926  0007CE                     i2l1468:
  2927  0007CE  4A07               	infsnz	atoi@s,f,c
  2928  0007D0  2A08               	incf	atoi@s+1,f,c
  2929  0007D2  D000               	goto	i2l1470
  2930  0007D4                     i2l1470:
  2931  0007D4  C007  FFD9         	movff	atoi@s,fsr2l
  2932  0007D8  C008  FFDA         	movff	atoi@s+1,fsr2h
  2933  0007DC  50DF               	movf	indf2,w,c
  2934  0007DE  ECAF  F005         	call	_isdigit
  2935  0007E2  B0D8               	btfsc	status,0,c
  2936  0007E4  D7D9               	goto	i2l1466
  2937  0007E6  500B               	movf	atoi@sign,w,c
  2938  0007E8  B4D8               	btfsc	status,2,c
  2939  0007EA  D00D               	goto	i2l399
  2940  0007EC  C00C  F009         	movff	atoi@a,??_atoi
  2941  0007F0  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  2942  0007F4  1E09               	comf	??_atoi,f,c
  2943  0007F6  1E0A               	comf	??_atoi+1,f,c
  2944  0007F8  4A09               	infsnz	??_atoi,f,c
  2945  0007FA  2A0A               	incf	??_atoi+1,f,c
  2946  0007FC  C009  F007         	movff	??_atoi,?_atoi
  2947  000800  C00A  F008         	movff	??_atoi+1,?_atoi+1
  2948  000804  0012               	return	
  2949  000806                     i2l399:
  2950  000806  C00C  F007         	movff	atoi@a,?_atoi
  2951  00080A  C00D  F008         	movff	atoi@a+1,?_atoi+1
  2952  00080E  0012               	return		;funcret
  2953  000810                     __end_of_atoi:
  2954                           	opt stack 0
  2955                           pclatu	equ	0xFFB
  2956                           pclath	equ	0xFFA
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           postinc0	equ	0xFEE
  2965                           fsr0h	equ	0xFEA
  2966                           fsr0l	equ	0xFE9
  2967                           wreg	equ	0xFE8
  2968                           plusw1	equ	0xFE3
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           postinc2	equ	0xFDE
  2973                           plusw2	equ	0xFDB
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _isdigit *****************
  2979 ;; Defined at:
  2980 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  c               1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  c               1    2[COMRAM] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;Total ram usage:        3 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_atoi
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text15
  3008  000B5E                     __ptext15:
  3009                           	opt stack 0
  3010  000B5E                     _isdigit:
  3011                           	opt stack 26
  3012                           
  3013                           ;incstack = 0
  3014                           ;isdigit@c stored from wreg
  3015  000B5E  6E03               	movwf	isdigit@c,c
  3016  000B60  0E00               	movlw	0
  3017  000B62  6E02               	movwf	_isdigit$839,c
  3018  000B64  0E3A               	movlw	58
  3019  000B66  6003               	cpfslt	isdigit@c,c
  3020  000B68  D006               	goto	i2l1400
  3021  000B6A  0E2F               	movlw	47
  3022  000B6C  6403               	cpfsgt	isdigit@c,c
  3023  000B6E  D003               	goto	i2l1400
  3024  000B70  0E01               	movlw	1
  3025  000B72  6E02               	movwf	_isdigit$839,c
  3026  000B74  D000               	goto	i2l1400
  3027  000B76                     i2l1400:
  3028  000B76  C002  F001         	movff	_isdigit$839,??_isdigit
  3029  000B7A  3001               	rrcf	??_isdigit,w,c
  3030  000B7C  0012               	return	
  3031  000B7E  0012               	return		;funcret
  3032  000B80                     __end_of_isdigit:
  3033                           	opt stack 0
  3034                           pclatu	equ	0xFFB
  3035                           pclath	equ	0xFFA
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           fsr0h	equ	0xFEA
  3045                           fsr0l	equ	0xFE9
  3046                           wreg	equ	0xFE8
  3047                           plusw1	equ	0xFE3
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           indf2	equ	0xFDF
  3051                           postinc2	equ	0xFDE
  3052                           plusw2	equ	0xFDB
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function ___wmul *****************
  3058 ;; Defined at:
  3059 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  multiplier      2    0[COMRAM] unsigned int 
  3062 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  product         2    4[COMRAM] unsigned int 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2    0[COMRAM] unsigned int 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, prodl, prodh
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;Total ram usage:        6 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_atoi
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text16
  3088  000B10                     __ptext16:
  3089                           	opt stack 0
  3090  000B10                     ___wmul:
  3091                           	opt stack 26
  3092                           
  3093                           ;incstack = 0
  3094  000B10  5001               	movf	___wmul@multiplier,w,c
  3095  000B12  0203               	mulwf	___wmul@multiplicand,c
  3096  000B14  CFF3 F005          	movff	prodl,___wmul@product
  3097  000B18  CFF4 F006          	movff	prodh,___wmul@product+1
  3098  000B1C  5001               	movf	___wmul@multiplier,w,c
  3099  000B1E  0204               	mulwf	___wmul@multiplicand+1,c
  3100  000B20  50F3               	movf	prodl,w,c
  3101  000B22  2606               	addwf	___wmul@product+1,f,c
  3102  000B24  5002               	movf	___wmul@multiplier+1,w,c
  3103  000B26  0203               	mulwf	___wmul@multiplicand,c
  3104  000B28  50F3               	movf	prodl,w,c
  3105  000B2A  2606               	addwf	___wmul@product+1,f,c
  3106  000B2C  C005  F001         	movff	___wmul@product,?___wmul
  3107  000B30  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3108  000B34  0012               	return	
  3109  000B36  0012               	return		;funcret
  3110  000B38                     __end_of___wmul:
  3111                           	opt stack 0
  3112  0000                     pclatu	equ	0xFFB
  3113                           pclath	equ	0xFFA
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           intcon	equ	0xFF2
  3121                           postinc0	equ	0xFEE
  3122                           fsr0h	equ	0xFEA
  3123                           fsr0l	equ	0xFE9
  3124                           wreg	equ	0xFE8
  3125                           plusw1	equ	0xFE3
  3126                           fsr1h	equ	0xFE2
  3127                           fsr1l	equ	0xFE1
  3128                           indf2	equ	0xFDF
  3129                           postinc2	equ	0xFDE
  3130                           plusw2	equ	0xFDB
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8
  3134                           pclatu	equ	0xFFB
  3135                           pclath	equ	0xFFA
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           intcon	equ	0xFF2
  3143                           postinc0	equ	0xFEE
  3144                           fsr0h	equ	0xFEA
  3145                           fsr0l	equ	0xFE9
  3146                           wreg	equ	0xFE8
  3147                           plusw1	equ	0xFE3
  3148                           fsr1h	equ	0xFE2
  3149                           fsr1l	equ	0xFE1
  3150                           indf2	equ	0xFDF
  3151                           postinc2	equ	0xFDE
  3152                           plusw2	equ	0xFDB
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157                           	psect	rparam
  3158  0000                     pclatu	equ	0xFFB
  3159                           pclath	equ	0xFFA
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           fsr0h	equ	0xFEA
  3169                           fsr0l	equ	0xFE9
  3170                           wreg	equ	0xFE8
  3171                           plusw1	equ	0xFE3
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           plusw2	equ	0xFDB
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      66
    BANK0           160     68      83
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_pwm
    _pwm->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _high_isr in COMRAM

    _high_isr->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    19      5   10120
                                             44 BANK0     24    19      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      69
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1154
                                             43 COMRAM     1     1      0
                                             42 BANK0      2     0      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                             29 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2429
                                             37 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     411
                                             27 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2976
                                             40 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2908
                                             12 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2008
                                             29 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _initialisation
     _initADC
     _initComms
     _initPWM
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _readADC

 _high_isr (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      53       5       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      42       1       69.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2ED       6        0.0%
DATA                 0      0     2ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 25 20:14:01 2015

                      _B 0300                        _G 0200                        _R 0100  
                     l81 09FC                       l83 0A00                       l84 0A06  
                     l86 0A32                       l87 0A36             ___awdiv@sign 0023  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l551 08AC                      l615 0702             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      u981 04AE  
                    _pwm 096C                      prod 000FF3                      wreg 000FE8  
             _TXSTA2bits 000FBA             ___ftdiv@cntr 0075             ___ftdiv@sign 007A  
                   l1626 04D2                     l1644 0566                     l1804 0914  
                   l1820 0950                     l1910 03A0                     l1662 05D6  
                   l1654 0598                     l1806 091E                     l1830 0970  
                   l1494 0A2A                     l1486 0A0C                     l1760 085C  
                   l1752 0820                     l1904 036C                     l1656 05AA  
                   l1648 057A                     l1824 0960                     l1816 0944  
                   l1808 0926                     l1496 0A2C                     l1488 0A22  
                   l1658 05B8                     l1842 09B8                     l1850 09DC  
                   l1780 08C6                     l1764 0874                     l1756 0830  
                   l1932 042C                     l1924 03F0                     l1836 0994  
                   l1774 08B4                     l1766 0894                     l1758 083C  
                   l1942 0470                     l1934 0434                     l1768 08A0  
                   l1864 065E                     l1928 0410                     l1792 08EC  
                   l1960 01A4                     l1858 0624                     l1938 0454  
                   l1884 06C0                     l1964 01BE                     l1894 0714  
                   l1798 08FE                     l1958 019A                     l1968 01C8  
                   _ADON 007E10                     _CHS0 007E12                     _CHS1 007E13  
                   ?_pwm 008A                     u1000 04F8                     u1005 04EE  
                   u1401 034A                     u1421 037E                     u1351 0600  
                   u1371 063A                     u1461 0186                     i2l58 0130  
       ??_initialisation 001E                     _atoi 073C                     _main 016E  
           ___ftpack@arg 001E             ___ftpack@exp 0021                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 016A            __CFG_IESO$OFF 000000             ___ftmul@cntr 006A  
           ___param_bank 000010             ___ftmul@sign 006B             ___fttol@exp1 0089  
           ___fttol@lval 0085                    ??_pwm 002C                    _DC2B0 007A84  
                  _DC2B1 007A85                    _DC3B0 007A6C                    _DC3B1 007A6D  
                  _DC4B0 007A54                    _DC4B1 007A55                    ?_atoi 0007  
                  ?_main 008C          __end_of___awdiv 096C          __end_of___ftdiv 073C  
        __end_of___ftmul 0498          ___awdiv@divisor 0020          __end_of___fttol 05EA  
                  _RC2IF 007D25                    i2l399 0806          ___awdiv@counter 0022  
                  _VCFG0 007E0C                    _VCFG1 007E0D                    _VNCFG 007E0B  
                  _TRISC 000F94            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000          __end_of_initADC 0B9C          __end_of_readADC 0A50  
         __CFG_EBTRB$OFF 000000          __end_of_initPWM 0AA2          __end_of_isdigit 0B80  
          ___ftpack@sign 0022                    atoi@a 000C                    atoi@s 0007  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 0AA2  
           __end_of_atoi 0810             __end_of_main 0338            high_isr@input 001C  
                 ??_atoi 0009                   ??_main 002D            ___fttol@sign1 0084  
          __activetblptr 000002           __CFG_RETEN$OFF 000000            main@amplitude 00A2  
                 _CCP2M2 007A82                   _CCP2M3 007A83                   _CCP3M2 007A6A  
                 _CCP3M3 007A6B                   _CCP4M2 007A52                   _CCP4M3 007A53  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR2L 000F51  
                 _CCPR3L 000F4E                   _CCPR4L 000F4B         ___awdiv@dividend 001E  
                 _ANSEL1 007AE9                   _ANSEL2 007AEA                   _ANSEL3 007AEB  
       __end_of___ftpack 08D6          __CFG_BBSIZ$BB2K 000000                   i2l1400 0B76  
                 i2l1450 073E                   i2l1452 0744                   i2l1470 07D4  
                 i2l1462 0784                   i2l1720 0114                   i2l1704 00EC  
                 i2l1466 0798                   i2l1468 07CE                   i2l1724 0122  
                 i2l1716 0106           __CFG_WDTEN$OFF 000000                   i2l1692 00AC  
                 i2l1678 0060                   i2l1688 0090                   i2l1698 00CC  
                 _RCREG2 000F7A         __end_of___lwtoft 0B5E                   _SPBRG2 000F7B  
                 _TMR2ON 007E52                   _TXREG2 000F79           __CFG_XINST$OFF 000000  
       __end_of_high_isr 016A                   _beginB 002F                   _beginG 0030  
                 ___wmul 0B10                   _beginR 0031                ??___awdiv 0022  
         __CFG_STVREN$ON 000000                ??___ftdiv 0072                ??___ftmul 0029  
              ??___fttol 007F             readADC@tempo 0023                   _buffer 0033  
                 clear_0 0AA8                   clear_1 0AB4                   clear_2 0AC0  
                 clear_3 0ACC                   clear_4 0AD8         ___awdiv@quotient 0024  
              ??_initADC 001E    ___ftmul@f3_as_product 0067                ??_readADC 0020  
              ??_initPWM 001E                ??_isdigit 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8           high_isr@F19157 002D  
             __accesstop 0060  __end_of__initialization 0ADE            ___rparam_used 000001  
             ___ftdiv@f1 006C               ___ftdiv@f2 006F               ___ftdiv@f3 0076  
             ___ftmul@f1 0060               ___ftmul@f2 0063               ___fttol@f1 007B  
         __pcstackCOMRAM 0001               ___lwtoft@c 0026               __pbssBANK0 00A4  
             __pbssBANK1 0100               __pbssBANK2 0200               __pbssBANK3 0300  
        __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028                  ?___wmul 0001  
              ?___ftpack 001E                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
              ?___lwtoft 0026         __CFG_CANMX$PORTB 000000                  _SPBRGH2 000F7C  
              ?_high_isr 0001          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 08D6                  ___ftdiv 05EA  
        __size_of___wmul 0028                  ___ftmul 0338                  ___fttol 0498  
                __pcinit 0AA2               ??___ftpack 0023                  __ramtop 0F00  
                __ptext0 016E                  __ptext1 09F4                  __ptext2 096C  
                __ptext3 08D6                  __ptext4 0B9C                  __ptext5 0A50  
                __ptext6 0AE8                  __ptext7 0B80                  __ptext8 0B38  
                __ptext9 0498        __end_of_initComms 0B10               ??___lwtoft 0029  
                _initADC 0B80                  _readADC 09F4                  _initPWM 0A50  
                _isdigit 0B5E             __size_of_pwm 0088        __CFG_MSSPMSK$MSK7 000000  
                main@msg 0091               ??_high_isr 000E     end_of_initialization 0ADE  
          __Lmediumconst 0000                  postinc0 000FEE                  postinc2 000FDE  
__size_of_initialisation 000E               main@F19163 00A4         __CFG_FOSC$INTIO2 000000  
              _TRISBbits 000F93              ___ftdiv@exp 0079              ___ftmul@exp 0066  
         __end_of___wmul 0B38      start_initialization 0AA2              __end_of_pwm 09F4  
               ??___wmul 0005        __size_of___ftpack 00C6              __pbssCOMRAM 002D  
      __size_of___lwtoft 0026            __pcstackBANK0 0060        __size_of_high_isr 0162  
              __pintcode 0008           _initialisation 0B9C                 ?___awdiv 001E  
               ?___ftdiv 006C                 ?___ftmul 0060                 ?___fttol 007B  
               ?_initADC 0001                 ?_readADC 001E                 ?_initPWM 0001  
               _BAUDCON2 000FB9                 ?_isdigit 0001                _initComms 0AE8  
         ___wmul@product 0005                 _PIE3bits 000FA3   __end_of_initialisation 0BAA  
               _PIR3bits 000FA4                 _GO_nDONE 007E11                 _RCONbits 000FD0  
               _TRIGSEL0 007E0E                 _TRIGSEL1 007E0F        ___wmul@multiplier 0001  
       __CFG_SOSCSEL$DIG 000000                main@delay 00A0               ?_initComms 0001  
               __Hrparam 0000          ?_initialisation 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 0096         __size_of___ftdiv 0152  
       __size_of___ftmul 0160         __size_of___fttol 0152           readADC@channel 0022  
               ___ftpack 0810              _isdigit$839 0002                 ___lwtoft 0B38  
       __size_of_initADC 001C         __size_of_readADC 005C         __size_of_initPWM 0052  
       __size_of_isdigit 0022                 __ptext10 0338                 __ptext11 05EA  
               __ptext12 0810                 __ptext14 073C                 __ptext15 0B5E  
               __ptext16 0B10                 _high_isr 0008                 _compteur 0032  
          __size_of_atoi 00D4            __size_of_main 01CA                 atoi@sign 000B  
               main@argc 008C                 main@argv 008E      __CFG_INTOSCSEL$HIGH 000000  
             _INTCONbits 000FF2              ??_initComms 001E                 isdigit@c 0003  
               intlevel2 0000             pwm@dutycycle 008A               _RCSTA2bits 000FA6  
               pwm@color 002C       __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000  
