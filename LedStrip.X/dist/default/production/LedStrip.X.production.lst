

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May 19 22:57:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     _CCPR2L	set	3921
    33  0000                     _CCPR3L	set	3918
    34  0000                     _CCPR4L	set	3915
    35  0000                     _ANSEL1	set	31465
    36  0000                     _ANSEL2	set	31466
    37  0000                     _ANSEL3	set	31467
    38  0000                     _CCP2M2	set	31362
    39  0000                     _CCP2M3	set	31363
    40  0000                     _CCP3M2	set	31338
    41  0000                     _CCP3M3	set	31339
    42  0000                     _CCP4M2	set	31314
    43  0000                     _CCP4M3	set	31315
    44  0000                     _DC2B0	set	31364
    45  0000                     _DC2B1	set	31365
    46  0000                     _DC3B0	set	31340
    47  0000                     _DC3B1	set	31341
    48  0000                     _DC4B0	set	31316
    49  0000                     _DC4B1	set	31317
    50  0000                     _ADRESH	set	4036
    51  0000                     _ADRESL	set	4035
    52  0000                     _BAUDCON2	set	4025
    53  0000                     _INTCONbits	set	4082
    54  0000                     _PIE3bits	set	4003
    55  0000                     _PIR3bits	set	4004
    56  0000                     _PR2	set	4043
    57  0000                     _RCONbits	set	4048
    58  0000                     _RCREG2	set	3962
    59  0000                     _RCSTA2bits	set	4006
    60  0000                     _SPBRG2	set	3963
    61  0000                     _SPBRGH2	set	3964
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TXREG2	set	3961
    65  0000                     _TXSTA2bits	set	4026
    66  0000                     _ADON	set	32272
    67  0000                     _CHS0	set	32274
    68  0000                     _CHS1	set	32275
    69  0000                     _GIE	set	32663
    70  0000                     _GO_nDONE	set	32273
    71  0000                     _PEIE	set	32662
    72  0000                     _PSA	set	32427
    73  0000                     _RC0	set	31760
    74  0000                     _RC2IF	set	32037
    75  0000                     _T08BIT	set	32430
    76  0000                     _T0CS	set	32429
    77  0000                     _T0PS0	set	32424
    78  0000                     _T0PS1	set	32425
    79  0000                     _T0PS2	set	32426
    80  0000                     _T2CKPS0	set	32336
    81  0000                     _T2CKPS1	set	32337
    82  0000                     _TMR0IE	set	32661
    83  0000                     _TMR2ON	set	32338
    84  0000                     _TRIGSEL0	set	32270
    85  0000                     _TRIGSEL1	set	32271
    86  0000                     _VCFG0	set	32268
    87  0000                     _VCFG1	set	32269
    88  0000                     _VNCFG	set	32267
    89                           
    90                           ; 0 bytes @ 0x2C
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 154 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;  argc            2   44[BANK0 ] int 
    99 ;;  argv            3   46[BANK0 ] PTR PTR unsigned char 
   100 ;; Auto vars:     Size  Location     Type
   101 ;;  msg            15   49[BANK0 ] unsigned char [15]
   102 ;;  delay           4   72[BANK0 ] long 
   103 ;;  amplitude3      2   69[BANK0 ] unsigned int 
   104 ;;  amplitude2      2   67[BANK0 ] unsigned int 
   105 ;;  amplitude1      2   65[BANK0 ] unsigned int 
   106 ;;  mode            1   71[BANK0 ] unsigned char 
   107 ;;  old_SWITCH1     1   64[BANK0 ] unsigned char 
   108 ;; Return value:  Size  Location     Type
   109 ;;                  2   44[BANK0 ] int 
   110 ;; Registers used:
   111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   117 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   118 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   120 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   121 ;;Total ram usage:       32 bytes
   122 ;; Hardware stack levels required when called:    5
   123 ;; This function calls:
   124 ;;		___ftdiv
   125 ;;		___ftmul
   126 ;;		___fttol
   127 ;;		___lwtoft
   128 ;;		_initialisation
   129 ;;		_pwm
   130 ;;		_readADC
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  00016E                     __ptext0:
   138                           	opt stack 0
   139  00016E                     _main:
   140                           	opt stack 26
   141                           
   142                           ;main.c: 156: long int delay=0;
   143                           
   144                           ;incstack = 0
   145  00016E  0E00               	movlw	0
   146  000170  0100               	movlb	0	; () banked
   147  000172  6FA8               	movwf	main@delay& (0+255),b
   148  000174  0E00               	movlw	0
   149  000176  6FA9               	movwf	(main@delay+1)& (0+255),b
   150  000178  0E00               	movlw	0
   151  00017A  6FAA               	movwf	(main@delay+2)& (0+255),b
   152  00017C  0E00               	movlw	0
   153  00017E  6FAB               	movwf	(main@delay+3)& (0+255),b
   154                           
   155                           ;main.c: 157: for(delay=0;delay<100000;delay++);
   156  000180  0E00               	movlw	0
   157  000182  0100               	movlb	0	; () banked
   158  000184  6FA8               	movwf	main@delay& (0+255),b
   159  000186  0E00               	movlw	0
   160  000188  6FA9               	movwf	(main@delay+1)& (0+255),b
   161  00018A  0E00               	movlw	0
   162  00018C  6FAA               	movwf	(main@delay+2)& (0+255),b
   163  00018E  0E00               	movlw	0
   164  000190  6FAB               	movwf	(main@delay+3)& (0+255),b
   165  000192                     l2030:
   166                           
   167                           ; BSR set to: 0
   168  000192  0100               	movlb	0	; () banked
   169  000194  BFAB               	btfsc	(main@delay+3)& (0+255),7,b
   170  000196  D010               	goto	l2034
   171  000198  0100               	movlb	0	; () banked
   172  00019A  51AB               	movf	(main@delay+3)& (0+255),w,b
   173  00019C  E116               	bnz	l2036
   174  00019E  0EA0               	movlw	160
   175  0001A0  0100               	movlb	0	; () banked
   176  0001A2  5DA8               	subwf	main@delay& (0+255),w,b
   177  0001A4  0E86               	movlw	134
   178  0001A6  0100               	movlb	0	; () banked
   179  0001A8  59A9               	subwfb	(main@delay+1)& (0+255),w,b
   180  0001AA  0E01               	movlw	1
   181  0001AC  0100               	movlb	0	; () banked
   182  0001AE  59AA               	subwfb	(main@delay+2)& (0+255),w,b
   183  0001B0  B0D8               	btfsc	status,0,c
   184  0001B2  D00B               	goto	l2036
   185  0001B4  D001               	goto	l2034
   186                           
   187                           ; BSR set to: 0
   188  0001B6  D009               	goto	l2036
   189  0001B8                     l2034:
   190                           
   191                           ; BSR set to: 0
   192  0001B8  0E01               	movlw	1
   193  0001BA  0100               	movlb	0	; () banked
   194  0001BC  27A8               	addwf	main@delay& (0+255),f,b
   195  0001BE  0E00               	movlw	0
   196  0001C0  23A9               	addwfc	(main@delay+1)& (0+255),f,b
   197  0001C2  23AA               	addwfc	(main@delay+2)& (0+255),f,b
   198  0001C4  23AB               	addwfc	(main@delay+3)& (0+255),f,b
   199  0001C6  D7E5               	goto	l2030
   200  0001C8  D000               	goto	l2036
   201  0001CA                     l2036:
   202                           
   203                           ; BSR set to: 0
   204                           ;main.c: 158: initialisation();
   205  0001CA  ECE0  F006         	call	_initialisation	;wreg free
   206                           
   207                           ;main.c: 159: char msg[15]="";
   208  0001CE  EE20  F0AC         	lfsr	2,main@F19165
   209  0001D2  EE10  F091         	lfsr	1,main@msg
   210  0001D6  0E0E               	movlw	14
   211  0001D8                     u1621:
   212  0001D8  CFDB FFE3          	movff	plusw2,plusw1
   213  0001DC  06E8               	decf	wreg,f,c
   214  0001DE  E2FC               	bc	u1621
   215                           
   216                           ;main.c: 161: char mode=0;
   217  0001E0  0E00               	movlw	0
   218  0001E2  0100               	movlb	0	; () banked
   219  0001E4  6FA7               	movwf	main@mode& (0+255),b
   220                           
   221                           ; BSR set to: 0
   222                           ;main.c: 162: char old_SWITCH1=0;
   223  0001E6  0E00               	movlw	0
   224  0001E8  0100               	movlb	0	; () banked
   225  0001EA  6FA0               	movwf	main@old_SWITCH1& (0+255),b
   226                           
   227                           ; BSR set to: 0
   228                           ;main.c: 168: unsigned int amplitude1=0;
   229  0001EC  0E00               	movlw	0
   230  0001EE  0100               	movlb	0	; () banked
   231  0001F0  6FA2               	movwf	(main@amplitude1+1)& (0+255),b
   232  0001F2  0E00               	movlw	0
   233  0001F4  6FA1               	movwf	main@amplitude1& (0+255),b
   234                           
   235                           ; BSR set to: 0
   236                           ;main.c: 169: unsigned int amplitude2=0;
   237  0001F6  0E00               	movlw	0
   238  0001F8  0100               	movlb	0	; () banked
   239  0001FA  6FA4               	movwf	(main@amplitude2+1)& (0+255),b
   240  0001FC  0E00               	movlw	0
   241  0001FE  6FA3               	movwf	main@amplitude2& (0+255),b
   242                           
   243                           ; BSR set to: 0
   244                           ;main.c: 170: unsigned int amplitude3=0;
   245  000200  0E00               	movlw	0
   246  000202  0100               	movlb	0	; () banked
   247  000204  6FA6               	movwf	(main@amplitude3+1)& (0+255),b
   248  000206  0E00               	movlw	0
   249  000208  6FA5               	movwf	main@amplitude3& (0+255),b
   250  00020A  D000               	goto	l2050
   251  00020C                     l2050:
   252                           
   253                           ;main.c: 173: for(delay=0;delay<100;delay++);
   254  00020C  0E00               	movlw	0
   255  00020E  0100               	movlb	0	; () banked
   256  000210  6FA8               	movwf	main@delay& (0+255),b
   257  000212  0E00               	movlw	0
   258  000214  6FA9               	movwf	(main@delay+1)& (0+255),b
   259  000216  0E00               	movlw	0
   260  000218  6FAA               	movwf	(main@delay+2)& (0+255),b
   261  00021A  0E00               	movlw	0
   262  00021C  6FAB               	movwf	(main@delay+3)& (0+255),b
   263  00021E                     l2052:
   264                           
   265                           ; BSR set to: 0
   266  00021E  0100               	movlb	0	; () banked
   267  000220  BFAB               	btfsc	(main@delay+3)& (0+255),7,b
   268  000222  D00E               	goto	l2056
   269  000224  0100               	movlb	0	; () banked
   270  000226  51AB               	movf	(main@delay+3)& (0+255),w,b
   271  000228  0100               	movlb	0	; () banked
   272  00022A  11AA               	iorwf	(main@delay+2)& (0+255),w,b
   273  00022C  0100               	movlb	0	; () banked
   274  00022E  11A9               	iorwf	(main@delay+1)& (0+255),w,b
   275  000230  E110               	bnz	l2058
   276  000232  0E64               	movlw	100
   277  000234  0100               	movlb	0	; () banked
   278  000236  5DA8               	subwf	main@delay& (0+255),w,b
   279  000238  B0D8               	btfsc	status,0,c
   280  00023A  D00B               	goto	l2058
   281  00023C  D001               	goto	l2056
   282                           
   283                           ; BSR set to: 0
   284  00023E  D009               	goto	l2058
   285  000240                     l2056:
   286                           
   287                           ; BSR set to: 0
   288  000240  0E01               	movlw	1
   289  000242  0100               	movlb	0	; () banked
   290  000244  27A8               	addwf	main@delay& (0+255),f,b
   291  000246  0E00               	movlw	0
   292  000248  23A9               	addwfc	(main@delay+1)& (0+255),f,b
   293  00024A  23AA               	addwfc	(main@delay+2)& (0+255),f,b
   294  00024C  23AB               	addwfc	(main@delay+3)& (0+255),f,b
   295  00024E  D7E7               	goto	l2052
   296  000250  D000               	goto	l2058
   297  000252                     l2058:
   298                           
   299                           ; BSR set to: 0
   300                           ;main.c: 175: amplitude1=readADC(1);
   301  000252  0E01               	movlw	1
   302  000254  EC0C  F006         	call	_readADC
   303  000258  C01E  F0A1         	movff	?_readADC,main@amplitude1
   304  00025C  C01F  F0A2         	movff	?_readADC+1,main@amplitude1+1
   305                           
   306                           ;main.c: 176: amplitude2=readADC(2);
   307  000260  0E02               	movlw	2
   308  000262  EC0C  F006         	call	_readADC
   309  000266  C01E  F0A3         	movff	?_readADC,main@amplitude2
   310  00026A  C01F  F0A4         	movff	?_readADC+1,main@amplitude2+1
   311                           
   312                           ;main.c: 177: amplitude3=readADC(3);
   313  00026E  0E03               	movlw	3
   314  000270  EC0C  F006         	call	_readADC
   315  000274  C01E  F0A5         	movff	?_readADC,main@amplitude3
   316  000278  C01F  F0A6         	movff	?_readADC+1,main@amplitude3+1
   317                           
   318                           ;main.c: 180: if (RC0==0 && old_SWITCH1==1)
   319  00027C  B082               	btfsc	3970,0,c	;volatile
   320  00027E  D00E               	goto	l215
   321  000280  0100               	movlb	0	; () banked
   322  000282  05A0               	decf	main@old_SWITCH1& (0+255),w,b
   323  000284  A4D8               	btfss	status,2,c
   324  000286  D00A               	goto	l215
   325                           
   326                           ; BSR set to: 0
   327                           ;main.c: 181: {
   328                           ;main.c: 182: mode=!mode;
   329  000288  0100               	movlb	0	; () banked
   330  00028A  51A7               	movf	main@mode& (0+255),w,b
   331  00028C  0100               	movlb	0	; () banked
   332  00028E  A4D8               	btfss	status,2,c
   333  000290  D002               	goto	u1670
   334  000292  0E01               	movlw	1
   335  000294  D001               	goto	u1680
   336  000296                     u1670:
   337  000296  0E00               	movlw	0
   338  000298                     u1680:
   339  000298  0100               	movlb	0	; () banked
   340  00029A  6FA7               	movwf	main@mode& (0+255),b
   341  00029C                     l215:
   342                           
   343                           ;main.c: 183: }
   344                           ;main.c: 184: old_SWITCH1=RC0;
   345  00029C  0E00               	movlw	0
   346  00029E  B082               	btfsc	3970,0,c	;volatile
   347  0002A0  0E01               	movlw	1
   348  0002A2  0100               	movlb	0	; () banked
   349  0002A4  6FA0               	movwf	main@old_SWITCH1& (0+255),b
   350                           
   351                           ; BSR set to: 0
   352                           ;main.c: 186: if (mode==1)
   353  0002A6  0100               	movlb	0	; () banked
   354  0002A8  05A7               	decf	main@mode& (0+255),w,b
   355  0002AA  A4D8               	btfss	status,2,c
   356  0002AC  D0AF               	goto	l2070
   357                           
   358                           ; BSR set to: 0
   359                           ;main.c: 187: {
   360                           ;main.c: 188: pwm('R',(int)( (float)R[0] * (float)amplitude1/65520.));
   361  0002AE  0EF0               	movlw	240
   362  0002B0  0100               	movlb	0	; () banked
   363  0002B2  6F6F               	movwf	___ftdiv@f2& (0+255),b
   364  0002B4  0E7F               	movlw	127
   365  0002B6  0100               	movlb	0	; () banked
   366  0002B8  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   367  0002BA  0E47               	movlw	71
   368  0002BC  0100               	movlb	0	; () banked
   369  0002BE  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   370  0002C0  C0A1  F026         	movff	main@amplitude1,___lwtoft@c
   371  0002C4  C0A2  F027         	movff	main@amplitude1+1,___lwtoft@c+1
   372  0002C8  ECAE  F006         	call	___lwtoft	;wreg free
   373  0002CC  C026  F063         	movff	?___lwtoft,___ftmul@f2
   374  0002D0  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   375  0002D4  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   376  0002D8  C100  F026         	movff	_R,___lwtoft@c
   377  0002DC  C101  F027         	movff	_R+1,___lwtoft@c+1
   378  0002E0  ECAE  F006         	call	___lwtoft	;wreg free
   379  0002E4  C026  F060         	movff	?___lwtoft,___ftmul@f1
   380  0002E8  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   381  0002EC  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   382  0002F0  ECAE  F002         	call	___ftmul	;wreg free
   383  0002F4  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   384  0002F8  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   385  0002FC  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   386  000300  EC07  F004         	call	___ftdiv	;wreg free
   387  000304  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   388  000308  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   389  00030C  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   390  000310  EC5E  F003         	call	___fttol	;wreg free
   391  000314  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   392  000318  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   393  00031C  0E52               	movlw	82
   394  00031E  ECC8  F005         	call	_pwm
   395                           
   396                           ;main.c: 189: pwm('G',(int)( (float)G[0] * (float)amplitude2/65520.));
   397  000322  0EF0               	movlw	240
   398  000324  0100               	movlb	0	; () banked
   399  000326  6F6F               	movwf	___ftdiv@f2& (0+255),b
   400  000328  0E7F               	movlw	127
   401  00032A  0100               	movlb	0	; () banked
   402  00032C  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   403  00032E  0E47               	movlw	71
   404  000330  0100               	movlb	0	; () banked
   405  000332  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   406  000334  C0A3  F026         	movff	main@amplitude2,___lwtoft@c
   407  000338  C0A4  F027         	movff	main@amplitude2+1,___lwtoft@c+1
   408  00033C  ECAE  F006         	call	___lwtoft	;wreg free
   409  000340  C026  F063         	movff	?___lwtoft,___ftmul@f2
   410  000344  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   411  000348  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   412  00034C  C200  F026         	movff	_G,___lwtoft@c
   413  000350  C201  F027         	movff	_G+1,___lwtoft@c+1
   414  000354  ECAE  F006         	call	___lwtoft	;wreg free
   415  000358  C026  F060         	movff	?___lwtoft,___ftmul@f1
   416  00035C  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   417  000360  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   418  000364  ECAE  F002         	call	___ftmul	;wreg free
   419  000368  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   420  00036C  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   421  000370  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   422  000374  EC07  F004         	call	___ftdiv	;wreg free
   423  000378  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   424  00037C  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   425  000380  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   426  000384  EC5E  F003         	call	___fttol	;wreg free
   427  000388  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   428  00038C  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   429  000390  0E47               	movlw	71
   430  000392  ECC8  F005         	call	_pwm
   431                           
   432                           ;main.c: 190: pwm('B',(int)( (float)B[0] * (float)amplitude3/65520.));
   433  000396  0EF0               	movlw	240
   434  000398  0100               	movlb	0	; () banked
   435  00039A  6F6F               	movwf	___ftdiv@f2& (0+255),b
   436  00039C  0E7F               	movlw	127
   437  00039E  0100               	movlb	0	; () banked
   438  0003A0  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   439  0003A2  0E47               	movlw	71
   440  0003A4  0100               	movlb	0	; () banked
   441  0003A6  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   442  0003A8  C0A5  F026         	movff	main@amplitude3,___lwtoft@c
   443  0003AC  C0A6  F027         	movff	main@amplitude3+1,___lwtoft@c+1
   444  0003B0  ECAE  F006         	call	___lwtoft	;wreg free
   445  0003B4  C026  F063         	movff	?___lwtoft,___ftmul@f2
   446  0003B8  C027  F064         	movff	?___lwtoft+1,___ftmul@f2+1
   447  0003BC  C028  F065         	movff	?___lwtoft+2,___ftmul@f2+2
   448  0003C0  C300  F026         	movff	_B,___lwtoft@c
   449  0003C4  C301  F027         	movff	_B+1,___lwtoft@c+1
   450  0003C8  ECAE  F006         	call	___lwtoft	;wreg free
   451  0003CC  C026  F060         	movff	?___lwtoft,___ftmul@f1
   452  0003D0  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   453  0003D4  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   454  0003D8  ECAE  F002         	call	___ftmul	;wreg free
   455  0003DC  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   456  0003E0  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   457  0003E4  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   458  0003E8  EC07  F004         	call	___ftdiv	;wreg free
   459  0003EC  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   460  0003F0  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   461  0003F4  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   462  0003F8  EC5E  F003         	call	___fttol	;wreg free
   463  0003FC  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   464  000400  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   465  000404  0E42               	movlw	66
   466  000406  ECC8  F005         	call	_pwm
   467                           
   468                           ;main.c: 191: }
   469  00040A  D700               	goto	l2050
   470  00040C                     l2070:
   471                           
   472                           ;main.c: 192: else
   473                           ;main.c: 193: {
   474                           ;main.c: 194: pwm('R',(int)( 1023 * (float)amplitude1/65520.));
   475  00040C  0EF0               	movlw	240
   476  00040E  0100               	movlb	0	; () banked
   477  000410  6F6F               	movwf	___ftdiv@f2& (0+255),b
   478  000412  0E7F               	movlw	127
   479  000414  0100               	movlb	0	; () banked
   480  000416  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   481  000418  0E47               	movlw	71
   482  00041A  0100               	movlb	0	; () banked
   483  00041C  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   484  00041E  0EC0               	movlw	192
   485  000420  0100               	movlb	0	; () banked
   486  000422  6F63               	movwf	___ftmul@f2& (0+255),b
   487  000424  0E7F               	movlw	127
   488  000426  0100               	movlb	0	; () banked
   489  000428  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   490  00042A  0E44               	movlw	68
   491  00042C  0100               	movlb	0	; () banked
   492  00042E  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   493  000430  C0A1  F026         	movff	main@amplitude1,___lwtoft@c
   494  000434  C0A2  F027         	movff	main@amplitude1+1,___lwtoft@c+1
   495  000438  ECAE  F006         	call	___lwtoft	;wreg free
   496  00043C  C026  F060         	movff	?___lwtoft,___ftmul@f1
   497  000440  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   498  000444  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   499  000448  ECAE  F002         	call	___ftmul	;wreg free
   500  00044C  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   501  000450  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   502  000454  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   503  000458  EC07  F004         	call	___ftdiv	;wreg free
   504  00045C  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   505  000460  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   506  000464  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   507  000468  EC5E  F003         	call	___fttol	;wreg free
   508  00046C  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   509  000470  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   510  000474  0E52               	movlw	82
   511  000476  ECC8  F005         	call	_pwm
   512                           
   513                           ;main.c: 195: pwm('G',(int)( 1023 * (float)amplitude2/65520.));
   514  00047A  0EF0               	movlw	240
   515  00047C  0100               	movlb	0	; () banked
   516  00047E  6F6F               	movwf	___ftdiv@f2& (0+255),b
   517  000480  0E7F               	movlw	127
   518  000482  0100               	movlb	0	; () banked
   519  000484  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   520  000486  0E47               	movlw	71
   521  000488  0100               	movlb	0	; () banked
   522  00048A  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   523  00048C  0EC0               	movlw	192
   524  00048E  0100               	movlb	0	; () banked
   525  000490  6F63               	movwf	___ftmul@f2& (0+255),b
   526  000492  0E7F               	movlw	127
   527  000494  0100               	movlb	0	; () banked
   528  000496  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   529  000498  0E44               	movlw	68
   530  00049A  0100               	movlb	0	; () banked
   531  00049C  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   532  00049E  C0A3  F026         	movff	main@amplitude2,___lwtoft@c
   533  0004A2  C0A4  F027         	movff	main@amplitude2+1,___lwtoft@c+1
   534  0004A6  ECAE  F006         	call	___lwtoft	;wreg free
   535  0004AA  C026  F060         	movff	?___lwtoft,___ftmul@f1
   536  0004AE  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   537  0004B2  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   538  0004B6  ECAE  F002         	call	___ftmul	;wreg free
   539  0004BA  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   540  0004BE  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   541  0004C2  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   542  0004C6  EC07  F004         	call	___ftdiv	;wreg free
   543  0004CA  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   544  0004CE  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   545  0004D2  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   546  0004D6  EC5E  F003         	call	___fttol	;wreg free
   547  0004DA  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   548  0004DE  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   549  0004E2  0E47               	movlw	71
   550  0004E4  ECC8  F005         	call	_pwm
   551                           
   552                           ;main.c: 196: pwm('B',(int)( 1023 * (float)amplitude3/65520.));
   553  0004E8  0EF0               	movlw	240
   554  0004EA  0100               	movlb	0	; () banked
   555  0004EC  6F6F               	movwf	___ftdiv@f2& (0+255),b
   556  0004EE  0E7F               	movlw	127
   557  0004F0  0100               	movlb	0	; () banked
   558  0004F2  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
   559  0004F4  0E47               	movlw	71
   560  0004F6  0100               	movlb	0	; () banked
   561  0004F8  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
   562  0004FA  0EC0               	movlw	192
   563  0004FC  0100               	movlb	0	; () banked
   564  0004FE  6F63               	movwf	___ftmul@f2& (0+255),b
   565  000500  0E7F               	movlw	127
   566  000502  0100               	movlb	0	; () banked
   567  000504  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   568  000506  0E44               	movlw	68
   569  000508  0100               	movlb	0	; () banked
   570  00050A  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   571  00050C  C0A5  F026         	movff	main@amplitude3,___lwtoft@c
   572  000510  C0A6  F027         	movff	main@amplitude3+1,___lwtoft@c+1
   573  000514  ECAE  F006         	call	___lwtoft	;wreg free
   574  000518  C026  F060         	movff	?___lwtoft,___ftmul@f1
   575  00051C  C027  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   576  000520  C028  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   577  000524  ECAE  F002         	call	___ftmul	;wreg free
   578  000528  C060  F06C         	movff	?___ftmul,___ftdiv@f1
   579  00052C  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
   580  000530  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
   581  000534  EC07  F004         	call	___ftdiv	;wreg free
   582  000538  C06C  F07B         	movff	?___ftdiv,___fttol@f1
   583  00053C  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
   584  000540  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
   585  000544  EC5E  F003         	call	___fttol	;wreg free
   586  000548  C07B  F08A         	movff	?___fttol,pwm@dutycycle
   587  00054C  C07C  F08B         	movff	?___fttol+1,pwm@dutycycle+1
   588  000550  0E42               	movlw	66
   589  000552  ECC8  F005         	call	_pwm
   590  000556  D65A               	goto	l2050
   591                           
   592                           ;main.c: 197: }
   593                           ;main.c: 198: }
   594                           ;main.c: 200: return (0);
   595                           ;	Return value of _main is never used
   596  000558  EFB5  F000         	goto	start
   597  00055C                     __end_of_main:
   598                           	opt stack 0
   599                           wreg	equ	0xFE8
   600                           plusw1	equ	0xFE3
   601                           plusw2	equ	0xFDB
   602                           status	equ	0xFD8
   603                           
   604                           	psect	cinit
   605  000CC6                     __pcinit:
   606                           	opt stack 0
   607  000CC6                     start_initialization:
   608                           	opt stack 0
   609  000CC6                     __initialization:
   610                           	opt stack 0
   611                           
   612                           ; Clear objects allocated to BANK3 (200 bytes)
   613  000CC6  EE03  F000         	lfsr	0,__pbssBANK3
   614  000CCA  0EC8               	movlw	200
   615  000CCC                     clear_0:
   616  000CCC  6AEE               	clrf	postinc0,c
   617  000CCE  06E8               	decf	wreg,f,c
   618  000CD0  E1FD               	bnz	clear_0
   619                           
   620                           ; Clear objects allocated to BANK2 (200 bytes)
   621  000CD2  EE02  F000         	lfsr	0,__pbssBANK2
   622  000CD6  0EC8               	movlw	200
   623  000CD8                     clear_1:
   624  000CD8  6AEE               	clrf	postinc0,c
   625  000CDA  06E8               	decf	wreg,f,c
   626  000CDC  E1FD               	bnz	clear_1
   627                           
   628                           ; Clear objects allocated to BANK1 (200 bytes)
   629  000CDE  EE01  F000         	lfsr	0,__pbssBANK1
   630  000CE2  0EC8               	movlw	200
   631  000CE4                     clear_2:
   632  000CE4  6AEE               	clrf	postinc0,c
   633  000CE6  06E8               	decf	wreg,f,c
   634  000CE8  E1FD               	bnz	clear_2
   635                           
   636                           ; Clear objects allocated to BANK0 (15 bytes)
   637  000CEA  EE00  F0AC         	lfsr	0,__pbssBANK0
   638  000CEE  0E0F               	movlw	15
   639  000CF0                     clear_3:
   640  000CF0  6AEE               	clrf	postinc0,c
   641  000CF2  06E8               	decf	wreg,f,c
   642  000CF4  E1FD               	bnz	clear_3
   643                           
   644                           ; Clear objects allocated to COMRAM (22 bytes)
   645  000CF6  EE00  F02D         	lfsr	0,__pbssCOMRAM
   646  000CFA  0E16               	movlw	22
   647  000CFC                     clear_4:
   648  000CFC  6AEE               	clrf	postinc0,c
   649  000CFE  06E8               	decf	wreg,f,c
   650  000D00  E1FD               	bnz	clear_4
   651  000D02                     end_of_initialization:
   652                           	opt stack 0
   653  000D02                     __end_of__initialization:
   654                           	opt stack 0
   655  000D02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   656  000D04  6EF8               	movwf	tblptru,c
   657  000D06  0100               	movlb	0
   658  000D08  EFB7  F000         	goto	_main	;jump to C main() function
   659                           tblptru	equ	0xFF8
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           plusw1	equ	0xFE3
   663                           plusw2	equ	0xFDB
   664                           status	equ	0xFD8
   665                           
   666                           	psect	bssCOMRAM
   667  00002D                     __pbssCOMRAM:
   668                           	opt stack 0
   669  00002D                     high_isr@F19159:
   670                           	opt stack 0
   671  00002D                     	ds	2
   672  00002F                     _beginB:
   673                           	opt stack 0
   674  00002F                     	ds	1
   675  000030                     _beginG:
   676                           	opt stack 0
   677  000030                     	ds	1
   678  000031                     _beginR:
   679                           	opt stack 0
   680  000031                     	ds	1
   681  000032                     _compteur:
   682                           	opt stack 0
   683  000032                     	ds	1
   684  000033                     _buffer:
   685                           	opt stack 0
   686  000033                     	ds	16
   687                           tblptru	equ	0xFF8
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           plusw1	equ	0xFE3
   691                           plusw2	equ	0xFDB
   692                           status	equ	0xFD8
   693                           
   694                           	psect	bssBANK0
   695  0000AC                     __pbssBANK0:
   696                           	opt stack 0
   697  0000AC                     main@F19165:
   698                           	opt stack 0
   699  0000AC                     	ds	15
   700                           tblptru	equ	0xFF8
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           plusw1	equ	0xFE3
   704                           plusw2	equ	0xFDB
   705                           status	equ	0xFD8
   706                           
   707                           	psect	bssBANK1
   708  000100                     __pbssBANK1:
   709                           	opt stack 0
   710  000100                     _R:
   711                           	opt stack 0
   712  000100                     	ds	200
   713                           tblptru	equ	0xFF8
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           plusw1	equ	0xFE3
   717                           plusw2	equ	0xFDB
   718                           status	equ	0xFD8
   719                           
   720                           	psect	bssBANK2
   721  000200                     __pbssBANK2:
   722                           	opt stack 0
   723  000200                     _G:
   724                           	opt stack 0
   725  000200                     	ds	200
   726                           tblptru	equ	0xFF8
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           plusw1	equ	0xFE3
   730                           plusw2	equ	0xFDB
   731                           status	equ	0xFD8
   732                           
   733                           	psect	bssBANK3
   734  000300                     __pbssBANK3:
   735                           	opt stack 0
   736  000300                     _B:
   737                           	opt stack 0
   738  000300                     	ds	200
   739                           tblptru	equ	0xFF8
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           plusw1	equ	0xFE3
   743                           plusw2	equ	0xFDB
   744                           status	equ	0xFD8
   745                           
   746                           	psect	cstackBANK0
   747  000060                     __pcstackBANK0:
   748                           	opt stack 0
   749  000060                     ?___ftmul:
   750                           	opt stack 0
   751  000060                     ___ftmul@f1:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x0
   755  000060                     	ds	3
   756  000063                     ___ftmul@f2:
   757                           	opt stack 0
   758                           
   759                           ; 3 bytes @ 0x3
   760  000063                     	ds	3
   761  000066                     ___ftmul@exp:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x6
   765  000066                     	ds	1
   766  000067                     ___ftmul@f3_as_product:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x7
   770  000067                     	ds	3
   771  00006A                     ___ftmul@cntr:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0xA
   775  00006A                     	ds	1
   776  00006B                     ___ftmul@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0xB
   780  00006B                     	ds	1
   781  00006C                     ?___ftdiv:
   782                           	opt stack 0
   783  00006C                     ___ftdiv@f1:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0xC
   787  00006C                     	ds	3
   788  00006F                     ___ftdiv@f2:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0xF
   792  00006F                     	ds	3
   793  000072                     ??___ftdiv:
   794                           
   795                           ; 0 bytes @ 0x12
   796  000072                     	ds	3
   797  000075                     ___ftdiv@cntr:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x15
   801  000075                     	ds	1
   802  000076                     ___ftdiv@f3:
   803                           	opt stack 0
   804                           
   805                           ; 3 bytes @ 0x16
   806  000076                     	ds	3
   807  000079                     ___ftdiv@exp:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x19
   811  000079                     	ds	1
   812  00007A                     ___ftdiv@sign:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x1A
   816  00007A                     	ds	1
   817  00007B                     ?___fttol:
   818                           	opt stack 0
   819  00007B                     ___fttol@f1:
   820                           	opt stack 0
   821                           
   822                           ; 3 bytes @ 0x1B
   823  00007B                     	ds	4
   824  00007F                     ??___fttol:
   825                           
   826                           ; 0 bytes @ 0x1F
   827  00007F                     	ds	5
   828  000084                     ___fttol@sign1:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x24
   832  000084                     	ds	1
   833  000085                     ___fttol@lval:
   834                           	opt stack 0
   835                           
   836                           ; 4 bytes @ 0x25
   837  000085                     	ds	4
   838  000089                     ___fttol@exp1:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x29
   842  000089                     	ds	1
   843  00008A                     pwm@dutycycle:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x2A
   847  00008A                     	ds	2
   848  00008C                     
   849                           ; 2 bytes @ 0x2C
   850  00008C                     	ds	2
   851  00008E                     
   852                           ; 3 bytes @ 0x2E
   853  00008E                     	ds	3
   854  000091                     main@msg:
   855                           	opt stack 0
   856                           
   857                           ; 15 bytes @ 0x31
   858  000091                     	ds	15
   859  0000A0                     main@old_SWITCH1:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x40
   863  0000A0                     	ds	1
   864  0000A1                     main@amplitude1:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x41
   868  0000A1                     	ds	2
   869  0000A3                     main@amplitude2:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x43
   873  0000A3                     	ds	2
   874  0000A5                     main@amplitude3:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x45
   878  0000A5                     	ds	2
   879  0000A7                     main@mode:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x47
   883  0000A7                     	ds	1
   884  0000A8                     main@delay:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0x48
   888  0000A8                     	ds	4
   889                           tblptru	equ	0xFF8
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           plusw1	equ	0xFE3
   893                           plusw2	equ	0xFDB
   894                           status	equ	0xFD8
   895                           
   896                           	psect	cstackCOMRAM
   897  000001                     __pcstackCOMRAM:
   898                           	opt stack 0
   899  000001                     ??_isdigit:
   900  000001                     ?___wmul:
   901                           	opt stack 0
   902  000001                     ___wmul@multiplier:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x0
   906  000001                     	ds	1
   907  000002                     _isdigit$848:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x1
   911  000002                     	ds	1
   912  000003                     isdigit@c:
   913                           	opt stack 0
   914  000003                     ___wmul@multiplicand:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x2
   918  000003                     	ds	2
   919  000005                     ___wmul@product:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x4
   923  000005                     	ds	2
   924  000007                     ?_atoi:
   925                           	opt stack 0
   926  000007                     atoi@s:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x6
   930  000007                     	ds	2
   931  000009                     ??_atoi:
   932                           
   933                           ; 0 bytes @ 0x8
   934  000009                     	ds	2
   935  00000B                     atoi@sign:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0xA
   939  00000B                     	ds	1
   940  00000C                     atoi@a:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0xB
   944  00000C                     	ds	2
   945  00000E                     ??_high_isr:
   946                           
   947                           ; 0 bytes @ 0xD
   948  00000E                     	ds	14
   949  00001C                     high_isr@input:
   950                           	opt stack 0
   951                           
   952                           ; 2 bytes @ 0x1B
   953  00001C                     	ds	2
   954  00001E                     ?_readADC:
   955                           	opt stack 0
   956  00001E                     ?___awdiv:
   957                           	opt stack 0
   958  00001E                     ?___ftpack:
   959                           	opt stack 0
   960  00001E                     ___awdiv@dividend:
   961                           	opt stack 0
   962  00001E                     ___ftpack@arg:
   963                           	opt stack 0
   964                           
   965                           ; 3 bytes @ 0x1D
   966  00001E                     	ds	2
   967  000020                     ??_readADC:
   968  000020                     ___awdiv@divisor:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x1F
   972  000020                     	ds	1
   973  000021                     ___ftpack@exp:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x20
   977  000021                     	ds	1
   978  000022                     readADC@channel:
   979                           	opt stack 0
   980  000022                     ___awdiv@counter:
   981                           	opt stack 0
   982  000022                     ___ftpack@sign:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x21
   986  000022                     	ds	1
   987  000023                     ??___ftpack:
   988  000023                     readADC@tempo:
   989                           	opt stack 0
   990  000023                     ___awdiv@sign:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x22
   994  000023                     	ds	1
   995  000024                     ___awdiv@quotient:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x23
   999  000024                     	ds	2
  1000  000026                     ?___lwtoft:
  1001                           	opt stack 0
  1002  000026                     ___lwtoft@c:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x25
  1006  000026                     	ds	3
  1007  000029                     ??___ftmul:
  1008  000029                     
  1009                           ; 0 bytes @ 0x28
  1010  000029                     	ds	3
  1011  00002C                     pwm@color:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x2B
  1015  00002C                     	ds	1
  1016  00002D                     tblptru	equ	0xFF8
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           plusw1	equ	0xFE3
  1020                           plusw2	equ	0xFDB
  1021                           status	equ	0xFD8
  1022                           
  1023 ;; *************** function _readADC *****************
  1024 ;; Defined at:
  1025 ;;		line 214 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  channel         1    wreg     unsigned char 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  channel         1   33[COMRAM] unsigned char 
  1030 ;;  tempo           1   34[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2   29[COMRAM] unsigned int 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1043 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1044 ;;Total ram usage:        6 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    3
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text1
  1055  000C18                     __ptext1:
  1056                           	opt stack 0
  1057  000C18                     _readADC:
  1058                           	opt stack 27
  1059                           
  1060                           ;incstack = 0
  1061                           ;readADC@channel stored from wreg
  1062  000C18  6E22               	movwf	readADC@channel,c
  1063                           
  1064                           ;main.c: 216: char tempo=0;
  1065  000C1A  0E00               	movlw	0
  1066  000C1C  6E23               	movwf	readADC@tempo,c
  1067                           
  1068                           ;main.c: 217: switch (channel)
  1069  000C1E  D008               	goto	l1564
  1070  000C20                     l233:
  1071                           
  1072                           ;main.c: 220: {
  1073                           ;main.c: 221: CHS1=0;
  1074  000C20  96C2               	bcf	4034,3,c	;volatile
  1075  000C22  D004               	goto	L1
  1076  000C24                     l235:
  1077                           
  1078                           ;main.c: 226: {
  1079                           ;main.c: 227: CHS1=1;
  1080  000C24  86C2               	bsf	4034,3,c	;volatile
  1081                           
  1082                           ;main.c: 228: CHS0=0;
  1083  000C26  94C2               	bcf	4034,2,c	;volatile
  1084                           
  1085                           ;main.c: 229: break;
  1086  000C28  D00E               	goto	l1566
  1087  000C2A                     l236:
  1088                           
  1089                           ;main.c: 232: {
  1090                           ;main.c: 233: CHS1=1;
  1091  000C2A  86C2               	bsf	4034,3,c	;volatile
  1092  000C2C                     L1:
  1093                           
  1094                           ;main.c: 234: CHS0=1;
  1095  000C2C  84C2               	bsf	4034,2,c	;volatile
  1096                           
  1097                           ;main.c: 236: }
  1098                           ;main.c: 237: }
  1099                           
  1100                           ;main.c: 235: break;
  1101  000C2E  D00B               	goto	l1566
  1102  000C30                     l1564:
  1103  000C30  5022               	movf	readADC@channel,w,c
  1104                           
  1105                           ; Switch size 1, requested type "space"
  1106                           ; Number of cases is 3, Range of values is 1 to 3
  1107                           ; switch strategies available:
  1108                           ; Name         Instructions Cycles
  1109                           ; simple_byte           10     6 (average)
  1110                           ;	Chosen strategy is simple_byte
  1111  000C32  0A01               	xorlw	1	; case 1
  1112  000C34  B4D8               	btfsc	status,2,c
  1113  000C36  D7F4               	goto	l233
  1114  000C38  0A03               	xorlw	3	; case 2
  1115  000C3A  B4D8               	btfsc	status,2,c
  1116  000C3C  D7F3               	goto	l235
  1117  000C3E  0A01               	xorlw	1	; case 3
  1118  000C40  B4D8               	btfsc	status,2,c
  1119  000C42  D7F3               	goto	l236
  1120  000C44  D000               	goto	l1566
  1121  000C46                     l1566:
  1122                           
  1123                           ;main.c: 238: for(tempo=0;tempo<100;tempo++);
  1124  000C46  0E00               	movlw	0
  1125  000C48  6E23               	movwf	readADC@tempo,c
  1126  000C4A  D002               	goto	l1574
  1127  000C4C  D004               	goto	l238
  1128  000C4E                     l1572:
  1129  000C4E  2A23               	incf	readADC@tempo,f,c
  1130  000C50                     l1574:
  1131  000C50  0E63               	movlw	99
  1132  000C52  6423               	cpfsgt	readADC@tempo,c
  1133  000C54  D7FC               	goto	l1572
  1134  000C56                     l238:
  1135                           
  1136                           ;main.c: 239: GO_nDONE = 1;
  1137  000C56  82C2               	bsf	4034,1,c	;volatile
  1138                           
  1139                           ;main.c: 240: while(GO_nDONE);
  1140  000C58  D000               	goto	l239
  1141  000C5A                     l239:
  1142  000C5A  B2C2               	btfsc	4034,1,c	;volatile
  1143  000C5C  D7FE               	goto	l239
  1144                           
  1145                           ;main.c: 242: return ((ADRESH<<8)+ADRESL);
  1146  000C5E  50C4               	movf	4036,w,c	;volatile
  1147  000C60  6E21               	movwf	(??_readADC+1)& (0+255),c
  1148  000C62  6A20               	clrf	??_readADC& (0+255),c
  1149  000C64  50C3               	movf	4035,w,c	;volatile
  1150  000C66  2420               	addwf	??_readADC,w,c
  1151  000C68  6E1E               	movwf	?_readADC,c
  1152  000C6A  0E00               	movlw	0
  1153  000C6C  2021               	addwfc	??_readADC+1,w,c
  1154  000C6E  6E1F               	movwf	?_readADC+1,c
  1155  000C70  0012               	return	
  1156  000C72  0012               	return		;funcret
  1157  000C74                     __end_of_readADC:
  1158                           	opt stack 0
  1159                           tblptru	equ	0xFF8
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           plusw1	equ	0xFE3
  1163                           plusw2	equ	0xFDB
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _pwm *****************
  1167 ;; Defined at:
  1168 ;;		line 8 in file "converter.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  color           1    wreg     unsigned char 
  1171 ;;  dutycycle       2   42[BANK0 ] int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  color           1   43[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;		None               void
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    4
  1190 ;; This function calls:
  1191 ;;		___awdiv
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text2
  1198  000B90                     __ptext2:
  1199                           	opt stack 0
  1200  000B90                     _pwm:
  1201                           	opt stack 26
  1202                           
  1203                           ;incstack = 0
  1204                           ;pwm@color stored from wreg
  1205  000B90  6E2C               	movwf	pwm@color,c
  1206                           
  1207                           ;converter.c: 9: switch(color){
  1208  000B92  D036               	goto	l1928
  1209  000B94                     l1908:
  1210                           
  1211                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1212  000B94  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
  1213  000B98  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1214  000B9C  0E00               	movlw	0
  1215  000B9E  6E21               	movwf	___awdiv@divisor+1,c
  1216  000BA0  0E04               	movlw	4
  1217  000BA2  6E20               	movwf	___awdiv@divisor,c
  1218  000BA4  EC7D  F005         	call	___awdiv	;wreg free
  1219  000BA8  501E               	movf	?___awdiv,w,c
  1220  000BAA  010F               	movlb	15	; () banked
  1221  000BAC  6F51               	movwf	81,b	;volatile
  1222                           
  1223                           ; BSR set to: 15
  1224                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1225  000BAE  010F               	movlb	15	; () banked
  1226  000BB0  9B50               	bcf	80,5,b	;volatile
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;converter.c: 13: DC2B0=dutycycle%1;
  1230  000BB2  010F               	movlb	15	; () banked
  1231  000BB4  9950               	bcf	80,4,b	;volatile
  1232                           
  1233                           ;converter.c: 14: break;
  1234  000BB6  0012               	return	
  1235  000BB8                     l1914:
  1236                           
  1237                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1238  000BB8  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
  1239  000BBC  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1240  000BC0  0E00               	movlw	0
  1241  000BC2  6E21               	movwf	___awdiv@divisor+1,c
  1242  000BC4  0E04               	movlw	4
  1243  000BC6  6E20               	movwf	___awdiv@divisor,c
  1244  000BC8  EC7D  F005         	call	___awdiv	;wreg free
  1245  000BCC  501E               	movf	?___awdiv,w,c
  1246  000BCE  010F               	movlb	15	; () banked
  1247  000BD0  6F4E               	movwf	78,b	;volatile
  1248                           
  1249                           ; BSR set to: 15
  1250                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1251  000BD2  010F               	movlb	15	; () banked
  1252  000BD4  9B4D               	bcf	77,5,b	;volatile
  1253                           
  1254                           ; BSR set to: 15
  1255                           ;converter.c: 18: DC3B0=0;
  1256  000BD6  010F               	movlb	15	; () banked
  1257  000BD8  994D               	bcf	77,4,b	;volatile
  1258                           
  1259                           ;converter.c: 19: break;
  1260  000BDA  0012               	return	
  1261  000BDC                     l1920:
  1262                           
  1263                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1264  000BDC  C08A  F01E         	movff	pwm@dutycycle,___awdiv@dividend
  1265  000BE0  C08B  F01F         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1266  000BE4  0E00               	movlw	0
  1267  000BE6  6E21               	movwf	___awdiv@divisor+1,c
  1268  000BE8  0E04               	movlw	4
  1269  000BEA  6E20               	movwf	___awdiv@divisor,c
  1270  000BEC  EC7D  F005         	call	___awdiv	;wreg free
  1271  000BF0  501E               	movf	?___awdiv,w,c
  1272  000BF2  010F               	movlb	15	; () banked
  1273  000BF4  6F4B               	movwf	75,b	;volatile
  1274                           
  1275                           ; BSR set to: 15
  1276                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1277  000BF6  010F               	movlb	15	; () banked
  1278  000BF8  9B4A               	bcf	74,5,b	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;converter.c: 23: DC4B0=dutycycle%1;
  1282  000BFA  010F               	movlb	15	; () banked
  1283  000BFC  994A               	bcf	74,4,b	;volatile
  1284                           
  1285                           ; BSR set to: 15
  1286                           ;converter.c: 25: }
  1287                           
  1288                           ;converter.c: 24: break;
  1289  000BFE  0012               	return	
  1290  000C00                     l1928:
  1291  000C00  502C               	movf	pwm@color,w,c
  1292                           
  1293                           ; Switch size 1, requested type "space"
  1294                           ; Number of cases is 3, Range of values is 66 to 82
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte           10     6 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299  000C02  0A42               	xorlw	66	; case 66
  1300  000C04  B4D8               	btfsc	status,2,c
  1301  000C06  D7C6               	goto	l1908
  1302  000C08  0A05               	xorlw	5	; case 71
  1303  000C0A  B4D8               	btfsc	status,2,c
  1304  000C0C  D7E7               	goto	l1920
  1305  000C0E  0A15               	xorlw	21	; case 82
  1306  000C10  A4D8               	btfss	status,2,c
  1307  000C12  0012               	return	
  1308  000C14  D7D1               	goto	l1914
  1309  000C16  0012               	return		;funcret
  1310  000C18                     __end_of_pwm:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           plusw1	equ	0xFE3
  1316                           plusw2	equ	0xFDB
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function ___awdiv *****************
  1320 ;; Defined at:
  1321 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  dividend        2   29[COMRAM] int 
  1324 ;;  divisor         2   31[COMRAM] int 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  quotient        2   35[COMRAM] int 
  1327 ;;  sign            1   34[COMRAM] unsigned char 
  1328 ;;  counter         1   33[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   29[COMRAM] int 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;Total ram usage:        8 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_pwm
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353  000AFA                     __ptext3:
  1354                           	opt stack 0
  1355  000AFA                     ___awdiv:
  1356                           	opt stack 26
  1357                           
  1358                           ;incstack = 0
  1359  000AFA  0E00               	movlw	0
  1360  000AFC  6E23               	movwf	___awdiv@sign,c
  1361  000AFE  AE21               	btfss	___awdiv@divisor+1,7,c
  1362  000B00  D007               	goto	l1870
  1363  000B02  6C20               	negf	___awdiv@divisor,c
  1364  000B04  1E21               	comf	___awdiv@divisor+1,f,c
  1365  000B06  B0D8               	btfsc	status,0,c
  1366  000B08  2A21               	incf	___awdiv@divisor+1,f,c
  1367  000B0A  0E01               	movlw	1
  1368  000B0C  6E23               	movwf	___awdiv@sign,c
  1369  000B0E  D000               	goto	l1870
  1370  000B10                     l1870:
  1371  000B10  AE1F               	btfss	___awdiv@dividend+1,7,c
  1372  000B12  D007               	goto	l1876
  1373  000B14  6C1E               	negf	___awdiv@dividend,c
  1374  000B16  1E1F               	comf	___awdiv@dividend+1,f,c
  1375  000B18  B0D8               	btfsc	status,0,c
  1376  000B1A  2A1F               	incf	___awdiv@dividend+1,f,c
  1377  000B1C  0E01               	movlw	1
  1378  000B1E  1A23               	xorwf	___awdiv@sign,f,c
  1379  000B20  D000               	goto	l1876
  1380  000B22                     l1876:
  1381  000B22  0E00               	movlw	0
  1382  000B24  6E25               	movwf	___awdiv@quotient+1,c
  1383  000B26  0E00               	movlw	0
  1384  000B28  6E24               	movwf	___awdiv@quotient,c
  1385  000B2A  5020               	movf	___awdiv@divisor,w,c
  1386  000B2C  1021               	iorwf	___awdiv@divisor+1,w,c
  1387  000B2E  B4D8               	btfsc	status,2,c
  1388  000B30  D021               	goto	l1898
  1389  000B32  0E01               	movlw	1
  1390  000B34  6E22               	movwf	___awdiv@counter,c
  1391  000B36  D005               	goto	l1884
  1392  000B38                     l1882:
  1393  000B38  90D8               	bcf	status,0,c
  1394  000B3A  3620               	rlcf	___awdiv@divisor,f,c
  1395  000B3C  3621               	rlcf	___awdiv@divisor+1,f,c
  1396  000B3E  2A22               	incf	___awdiv@counter,f,c
  1397  000B40  D000               	goto	l1884
  1398  000B42                     l1884:
  1399  000B42  BE21               	btfsc	___awdiv@divisor+1,7,c
  1400  000B44  D002               	goto	l1886
  1401  000B46  D7F8               	goto	l1882
  1402  000B48  D000               	goto	l1886
  1403  000B4A                     l1886:
  1404  000B4A  90D8               	bcf	status,0,c
  1405  000B4C  3624               	rlcf	___awdiv@quotient,f,c
  1406  000B4E  3625               	rlcf	___awdiv@quotient+1,f,c
  1407  000B50  5020               	movf	___awdiv@divisor,w,c
  1408  000B52  5C1E               	subwf	___awdiv@dividend,w,c
  1409  000B54  5021               	movf	___awdiv@divisor+1,w,c
  1410  000B56  581F               	subwfb	___awdiv@dividend+1,w,c
  1411  000B58  A0D8               	btfss	status,0,c
  1412  000B5A  D006               	goto	l1894
  1413  000B5C  5020               	movf	___awdiv@divisor,w,c
  1414  000B5E  5E1E               	subwf	___awdiv@dividend,f,c
  1415  000B60  5021               	movf	___awdiv@divisor+1,w,c
  1416  000B62  5A1F               	subwfb	___awdiv@dividend+1,f,c
  1417  000B64  8024               	bsf	___awdiv@quotient,0,c
  1418  000B66  D000               	goto	l1894
  1419  000B68                     l1894:
  1420  000B68  90D8               	bcf	status,0,c
  1421  000B6A  3221               	rrcf	___awdiv@divisor+1,f,c
  1422  000B6C  3220               	rrcf	___awdiv@divisor,f,c
  1423  000B6E  2E22               	decfsz	___awdiv@counter,f,c
  1424  000B70  D7EC               	goto	l1886
  1425  000B72  D000               	goto	l1898
  1426  000B74                     l1898:
  1427  000B74  5023               	movf	___awdiv@sign,w,c
  1428  000B76  B4D8               	btfsc	status,2,c
  1429  000B78  D005               	goto	l1902
  1430  000B7A  6C24               	negf	___awdiv@quotient,c
  1431  000B7C  1E25               	comf	___awdiv@quotient+1,f,c
  1432  000B7E  B0D8               	btfsc	status,0,c
  1433  000B80  2A25               	incf	___awdiv@quotient+1,f,c
  1434  000B82  D000               	goto	l1902
  1435  000B84                     l1902:
  1436  000B84  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  1437  000B88  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  1438  000B8C  0012               	return	
  1439  000B8E  0012               	return		;funcret
  1440  000B90                     __end_of___awdiv:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           plusw1	equ	0xFE3
  1446                           plusw2	equ	0xFDB
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _initialisation *****************
  1450 ;; Defined at:
  1451 ;;		line 6 in file "init.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;		None               void
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    4
  1472 ;; This function calls:
  1473 ;;		_initADC
  1474 ;;		_initComms
  1475 ;;		_initPWM
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text4
  1482  000DC0                     __ptext4:
  1483                           	opt stack 0
  1484  000DC0                     _initialisation:
  1485                           	opt stack 26
  1486                           
  1487                           ;init.c: 10: initPWM();
  1488                           
  1489                           ;incstack = 0
  1490  000DC0  EC3A  F006         	call	_initPWM	;wreg free
  1491                           
  1492                           ;init.c: 14: initComms();
  1493  000DC4  EC86  F006         	call	_initComms	;wreg free
  1494                           
  1495                           ;init.c: 18: initADC();
  1496  000DC8  ECD2  F006         	call	_initADC	;wreg free
  1497  000DCC  0012               	return		;funcret
  1498  000DCE                     __end_of_initialisation:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           plusw1	equ	0xFE3
  1504                           plusw2	equ	0xFDB
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _initPWM *****************
  1508 ;; Defined at:
  1509 ;;		line 27 in file "init.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    3
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_initialisation
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text5
  1538  000C74                     __ptext5:
  1539                           	opt stack 0
  1540  000C74                     _initPWM:
  1541                           	opt stack 26
  1542                           
  1543                           ;init.c: 32: PR2=0xFF;
  1544                           
  1545                           ;incstack = 0
  1546  000C74  68CB               	setf	4043,c	;volatile
  1547                           
  1548                           ;init.c: 36: CCPR2L=0b00000000;
  1549  000C76  0E00               	movlw	0
  1550  000C78  010F               	movlb	15	; () banked
  1551  000C7A  6F51               	movwf	81,b	;volatile
  1552                           
  1553                           ;init.c: 37: CCPR3L=0b00000000;
  1554  000C7C  0E00               	movlw	0
  1555  000C7E  010F               	movlb	15	; () banked
  1556  000C80  6F4E               	movwf	78,b	;volatile
  1557                           
  1558                           ;init.c: 38: CCPR4L=0b00000000;
  1559  000C82  0E00               	movlw	0
  1560  000C84  010F               	movlb	15	; () banked
  1561  000C86  6F4B               	movwf	75,b	;volatile
  1562                           
  1563                           ; BSR set to: 15
  1564                           ;init.c: 39: DC2B1=0;
  1565  000C88  010F               	movlb	15	; () banked
  1566  000C8A  9B50               	bcf	80,5,b	;volatile
  1567                           
  1568                           ; BSR set to: 15
  1569                           ;init.c: 40: DC2B0=0;
  1570  000C8C  010F               	movlb	15	; () banked
  1571  000C8E  9950               	bcf	80,4,b	;volatile
  1572                           
  1573                           ; BSR set to: 15
  1574                           ;init.c: 41: DC3B1=0;
  1575  000C90  010F               	movlb	15	; () banked
  1576  000C92  9B4D               	bcf	77,5,b	;volatile
  1577                           
  1578                           ; BSR set to: 15
  1579                           ;init.c: 42: DC3B0=0;
  1580  000C94  010F               	movlb	15	; () banked
  1581  000C96  994D               	bcf	77,4,b	;volatile
  1582                           
  1583                           ; BSR set to: 15
  1584                           ;init.c: 43: DC4B1=0;
  1585  000C98  010F               	movlb	15	; () banked
  1586  000C9A  9B4A               	bcf	74,5,b	;volatile
  1587                           
  1588                           ; BSR set to: 15
  1589                           ;init.c: 44: DC4B0=0;
  1590  000C9C  010F               	movlb	15	; () banked
  1591  000C9E  994A               	bcf	74,4,b	;volatile
  1592                           
  1593                           ; BSR set to: 15
  1594                           ;init.c: 50: TRISC=TRISC & 0b00111011;
  1595  000CA0  5094               	movf	3988,w,c	;volatile
  1596  000CA2  0B3B               	andlw	59
  1597  000CA4  6E94               	movwf	3988,c	;volatile
  1598                           
  1599                           ; BSR set to: 15
  1600                           ;init.c: 53: T2CKPS1=0;
  1601  000CA6  92CA               	bcf	4042,1,c	;volatile
  1602                           
  1603                           ; BSR set to: 15
  1604                           ;init.c: 54: T2CKPS0=0;
  1605  000CA8  90CA               	bcf	4042,0,c	;volatile
  1606                           
  1607                           ; BSR set to: 15
  1608                           ;init.c: 57: TMR2ON = 1;
  1609  000CAA  84CA               	bsf	4042,2,c	;volatile
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;init.c: 60: CCP2M2=1;
  1613  000CAC  010F               	movlb	15	; () banked
  1614  000CAE  8550               	bsf	80,2,b	;volatile
  1615                           
  1616                           ; BSR set to: 15
  1617                           ;init.c: 61: CCP2M3=1;
  1618  000CB0  010F               	movlb	15	; () banked
  1619  000CB2  8750               	bsf	80,3,b	;volatile
  1620                           
  1621                           ; BSR set to: 15
  1622                           ;init.c: 62: CCP3M2=1;
  1623  000CB4  010F               	movlb	15	; () banked
  1624  000CB6  854D               	bsf	77,2,b	;volatile
  1625                           
  1626                           ; BSR set to: 15
  1627                           ;init.c: 63: CCP3M3=1;
  1628  000CB8  010F               	movlb	15	; () banked
  1629  000CBA  874D               	bsf	77,3,b	;volatile
  1630                           
  1631                           ; BSR set to: 15
  1632                           ;init.c: 64: CCP4M2=1;
  1633  000CBC  010F               	movlb	15	; () banked
  1634  000CBE  854A               	bsf	74,2,b	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;init.c: 65: CCP4M3=1;
  1638  000CC0  010F               	movlb	15	; () banked
  1639  000CC2  874A               	bsf	74,3,b	;volatile
  1640                           
  1641                           ; BSR set to: 15
  1642  000CC4  0012               	return		;funcret
  1643  000CC6                     __end_of_initPWM:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           plusw1	equ	0xFE3
  1649                           plusw2	equ	0xFDB
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _initComms *****************
  1653 ;; Defined at:
  1654 ;;		line 69 in file "init.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    3
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_initialisation
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  000D0C                     __ptext6:
  1684                           	opt stack 0
  1685  000D0C                     _initComms:
  1686                           	opt stack 26
  1687                           
  1688                           ;init.c: 71: TRISBbits.TRISB7 = 1;
  1689                           
  1690                           ; BSR set to: 15
  1691                           ;incstack = 0
  1692  000D0C  8E93               	bsf	3987,7,c	;volatile
  1693                           
  1694                           ;init.c: 72: TRISBbits.TRISB6 = 0;
  1695  000D0E  9C93               	bcf	3987,6,c	;volatile
  1696                           
  1697                           ;init.c: 75: TXSTA2bits.BRGH = 1;
  1698  000D10  84BA               	bsf	4026,2,c	;volatile
  1699                           
  1700                           ;init.c: 76: TXSTA2bits.SYNC = 0;
  1701  000D12  98BA               	bcf	4026,4,c	;volatile
  1702                           
  1703                           ;init.c: 77: SPBRGH2 = 0;
  1704  000D14  0E00               	movlw	0
  1705  000D16  6E7C               	movwf	3964,c	;volatile
  1706                           
  1707                           ;init.c: 78: SPBRG2 = 51;
  1708  000D18  0E33               	movlw	51
  1709  000D1A  6E7B               	movwf	3963,c	;volatile
  1710                           
  1711                           ;init.c: 79: BAUDCON2 = 0x08;
  1712  000D1C  0E08               	movlw	8
  1713  000D1E  6EB9               	movwf	4025,c	;volatile
  1714                           
  1715                           ;init.c: 83: TXSTA2bits.TXEN = 1;
  1716  000D20  8ABA               	bsf	4026,5,c	;volatile
  1717                           
  1718                           ;init.c: 84: RCSTA2bits.CREN = 1;
  1719  000D22  88A6               	bsf	4006,4,c	;volatile
  1720                           
  1721                           ;init.c: 85: RCSTA2bits.SPEN = 1;
  1722  000D24  8EA6               	bsf	4006,7,c	;volatile
  1723                           
  1724                           ;init.c: 88: RCONbits.IPEN = 1;
  1725  000D26  8ED0               	bsf	4048,7,c	;volatile
  1726                           
  1727                           ;init.c: 89: INTCONbits.GIE = 1;
  1728  000D28  8EF2               	bsf	intcon,7,c	;volatile
  1729                           
  1730                           ;init.c: 90: INTCONbits.PEIE = 1;
  1731  000D2A  8CF2               	bsf	intcon,6,c	;volatile
  1732                           
  1733                           ;init.c: 91: PIE3bits.RC2IE = 1;
  1734  000D2C  8AA3               	bsf	4003,5,c	;volatile
  1735                           
  1736                           ;init.c: 92: PIE3bits.TX2IE = 0;
  1737  000D2E  98A3               	bcf	4003,4,c	;volatile
  1738                           
  1739                           ;init.c: 94: RC2IF = 0;
  1740  000D30  9AA4               	bcf	4004,5,c	;volatile
  1741  000D32  0012               	return		;funcret
  1742  000D34                     __end_of_initComms:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           intcon	equ	0xFF2
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           plusw1	equ	0xFE3
  1749                           plusw2	equ	0xFDB
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _initADC *****************
  1753 ;; Defined at:
  1754 ;;		line 97 in file "init.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;		None               void
  1761 ;; Registers used:
  1762 ;;		None
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    3
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_initialisation
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text7
  1783  000DA4                     __ptext7:
  1784                           	opt stack 0
  1785  000DA4                     _initADC:
  1786                           	opt stack 26
  1787                           
  1788                           ;init.c: 99: TRIGSEL1=0;
  1789                           
  1790                           ;incstack = 0
  1791  000DA4  9EC1               	bcf	4033,7,c	;volatile
  1792                           
  1793                           ;init.c: 100: TRIGSEL0=0;
  1794  000DA6  9CC1               	bcf	4033,6,c	;volatile
  1795                           
  1796                           ;init.c: 102: VCFG1=0;
  1797  000DA8  9AC1               	bcf	4033,5,c	;volatile
  1798                           
  1799                           ;init.c: 103: VCFG0=0;
  1800  000DAA  98C1               	bcf	4033,4,c	;volatile
  1801                           
  1802                           ;init.c: 104: VNCFG=0;
  1803  000DAC  96C1               	bcf	4033,3,c	;volatile
  1804                           
  1805                           ;init.c: 108: ANSEL3=1;
  1806  000DAE  010F               	movlb	15	; () banked
  1807  000DB0  875D               	bsf	93,3,b	;volatile
  1808                           
  1809                           ;init.c: 109: ANSEL2=1;
  1810  000DB2  010F               	movlb	15	; () banked
  1811  000DB4  855D               	bsf	93,2,b	;volatile
  1812                           
  1813                           ;init.c: 110: ANSEL1=1;
  1814  000DB6  010F               	movlb	15	; () banked
  1815  000DB8  835D               	bsf	93,1,b	;volatile
  1816                           
  1817                           ;init.c: 112: ADON=1;
  1818  000DBA  80C2               	bsf	4034,0,c	;volatile
  1819                           
  1820                           ;init.c: 114: CHS0=1;
  1821  000DBC  84C2               	bsf	4034,2,c	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824  000DBE  0012               	return		;funcret
  1825  000DC0                     __end_of_initADC:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           intcon	equ	0xFF2
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           plusw1	equ	0xFE3
  1832                           plusw2	equ	0xFDB
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function ___lwtoft *****************
  1836 ;; Defined at:
  1837 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  c               2   37[COMRAM] unsigned int 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  3   37[COMRAM] float 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1851 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;Total ram usage:        3 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		___ftpack
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text8
  1866  000D5C                     __ptext8:
  1867                           	opt stack 0
  1868  000D5C                     ___lwtoft:
  1869                           	opt stack 26
  1870                           
  1871                           ; BSR set to: 15
  1872                           ;incstack = 0
  1873  000D5C  C026  F01E         	movff	___lwtoft@c,___ftpack@arg
  1874  000D60  C027  F01F         	movff	___lwtoft@c+1,___ftpack@arg+1
  1875  000D64  6A20               	clrf	___ftpack@arg+2,c
  1876  000D66  0E8E               	movlw	142
  1877  000D68  6E21               	movwf	___ftpack@exp,c
  1878  000D6A  0E00               	movlw	0
  1879  000D6C  6E22               	movwf	___ftpack@sign,c
  1880  000D6E  EC1A  F005         	call	___ftpack	;wreg free
  1881  000D72  C01E  F026         	movff	?___ftpack,?___lwtoft
  1882  000D76  C01F  F027         	movff	?___ftpack+1,?___lwtoft+1
  1883  000D7A  C020  F028         	movff	?___ftpack+2,?___lwtoft+2
  1884  000D7E  0012               	return	
  1885  000D80  0012               	return		;funcret
  1886  000D82                     __end_of___lwtoft:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           intcon	equ	0xFF2
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           plusw1	equ	0xFE3
  1893                           plusw2	equ	0xFDB
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function ___fttol *****************
  1897 ;; Defined at:
  1898 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  f1              3   27[BANK0 ] float 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  lval            4   37[BANK0 ] unsigned long 
  1903 ;;  exp1            1   41[BANK0 ] unsigned char 
  1904 ;;  sign1           1   36[BANK0 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  4   27[BANK0 ] long 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;Total ram usage:       15 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text9
  1929  0006BC                     __ptext9:
  1930                           	opt stack 0
  1931  0006BC                     ___fttol:
  1932                           	opt stack 27
  1933                           
  1934                           ;incstack = 0
  1935  0006BC  C07D  F07F         	movff	___fttol@f1+2,??___fttol
  1936  0006C0  0100               	movlb	0	; () banked
  1937  0006C2  6B80               	clrf	(??___fttol+1)& (0+255),b
  1938  0006C4  6B81               	clrf	(??___fttol+2)& (0+255),b
  1939  0006C6  0100               	movlb	0	; () banked
  1940  0006C8  357C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1941  0006CA  0100               	movlb	0	; () banked
  1942  0006CC  377F               	rlcf	??___fttol& (0+255),f,b
  1943  0006CE  E301               	bnc	u1051
  1944  0006D0  8180               	bsf	(??___fttol+1)& (0+255),0,b
  1945  0006D2                     u1051:
  1946  0006D2  0100               	movlb	0	; () banked
  1947  0006D4  517F               	movf	??___fttol& (0+255),w,b
  1948  0006D6  0100               	movlb	0	; () banked
  1949  0006D8  6F89               	movwf	___fttol@exp1& (0+255),b
  1950  0006DA  0100               	movlb	0	; () banked
  1951  0006DC  5189               	movf	___fttol@exp1& (0+255),w,b
  1952  0006DE  A4D8               	btfss	status,2,c
  1953  0006E0  D00A               	goto	l1680
  1954                           
  1955                           ; BSR set to: 0
  1956  0006E2  0E00               	movlw	0
  1957  0006E4  0100               	movlb	0	; () banked
  1958  0006E6  6F7B               	movwf	?___fttol& (0+255),b
  1959  0006E8  0E00               	movlw	0
  1960  0006EA  6F7C               	movwf	(?___fttol+1)& (0+255),b
  1961  0006EC  0E00               	movlw	0
  1962  0006EE  6F7D               	movwf	(?___fttol+2)& (0+255),b
  1963  0006F0  0E00               	movlw	0
  1964  0006F2  6F7E               	movwf	(?___fttol+3)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967  0006F4  0012               	return	
  1968  0006F6                     l1680:
  1969                           
  1970                           ; BSR set to: 0
  1971  0006F6  0E17               	movlw	23
  1972  0006F8  0100               	movlb	0	; () banked
  1973  0006FA  6F7F               	movwf	??___fttol& (0+255),b
  1974  0006FC  C07B  F080         	movff	___fttol@f1,??___fttol+1
  1975  000700  C07C  F081         	movff	___fttol@f1+1,??___fttol+2
  1976  000704  C07D  F082         	movff	___fttol@f1+2,??___fttol+3
  1977  000708  0100               	movlb	0	; () banked
  1978  00070A  297F               	incf	??___fttol& (0+255),w,b
  1979  00070C  0100               	movlb	0	; () banked
  1980  00070E  6F83               	movwf	(??___fttol+4)& (0+255),b
  1981  000710  D005               	goto	u1070
  1982  000712                     u1075:
  1983  000712  0100               	movlb	0	; () banked
  1984  000714  90D8               	bcf	status,0,c
  1985  000716  3382               	rrcf	(??___fttol+3)& (0+255),f,b
  1986  000718  3381               	rrcf	(??___fttol+2)& (0+255),f,b
  1987  00071A  3380               	rrcf	(??___fttol+1)& (0+255),f,b
  1988  00071C                     u1070:
  1989  00071C  0100               	movlb	0	; () banked
  1990  00071E  2F83               	decfsz	(??___fttol+4)& (0+255),f,b
  1991  000720  D7F8               	goto	u1075
  1992  000722  0100               	movlb	0	; () banked
  1993  000724  5180               	movf	(??___fttol+1)& (0+255),w,b
  1994  000726  0100               	movlb	0	; () banked
  1995  000728  6F84               	movwf	___fttol@sign1& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998  00072A  0100               	movlb	0	; () banked
  1999  00072C  8F7C               	bsf	(___fttol@f1+1)& (0+255),7,b
  2000                           
  2001                           ; BSR set to: 0
  2002  00072E  0EFF               	movlw	255
  2003  000730  0100               	movlb	0	; () banked
  2004  000732  177B               	andwf	___fttol@f1& (0+255),f,b
  2005  000734  0EFF               	movlw	255
  2006  000736  0100               	movlb	0	; () banked
  2007  000738  177C               	andwf	(___fttol@f1+1)& (0+255),f,b
  2008  00073A  0E00               	movlw	0
  2009  00073C  0100               	movlb	0	; () banked
  2010  00073E  177D               	andwf	(___fttol@f1+2)& (0+255),f,b
  2011                           
  2012                           ; BSR set to: 0
  2013  000740  0100               	movlb	0	; () banked
  2014  000742  517B               	movf	___fttol@f1& (0+255),w,b
  2015  000744  0100               	movlb	0	; () banked
  2016  000746  6F85               	movwf	___fttol@lval& (0+255),b
  2017  000748  0100               	movlb	0	; () banked
  2018  00074A  517C               	movf	(___fttol@f1+1)& (0+255),w,b
  2019  00074C  0100               	movlb	0	; () banked
  2020  00074E  6F86               	movwf	(___fttol@lval+1)& (0+255),b
  2021  000750  0100               	movlb	0	; () banked
  2022  000752  517D               	movf	(___fttol@f1+2)& (0+255),w,b
  2023  000754  0100               	movlb	0	; () banked
  2024  000756  6F87               	movwf	(___fttol@lval+2)& (0+255),b
  2025  000758  0100               	movlb	0	; () banked
  2026  00075A  6B88               	clrf	(___fttol@lval+3)& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029  00075C  0E8E               	movlw	142
  2030  00075E  0100               	movlb	0	; () banked
  2031  000760  5F89               	subwf	___fttol@exp1& (0+255),f,b
  2032                           
  2033                           ; BSR set to: 0
  2034  000762  0100               	movlb	0	; () banked
  2035  000764  AF89               	btfss	___fttol@exp1& (0+255),7,b
  2036  000766  D01B               	goto	l1702
  2037                           
  2038                           ; BSR set to: 0
  2039  000768  0100               	movlb	0	; () banked
  2040  00076A  5189               	movf	___fttol@exp1& (0+255),w,b
  2041  00076C  0A80               	xorlw	128
  2042  00076E  0F8F               	addlw	143
  2043  000770  B0D8               	btfsc	status,0,c
  2044  000772  D00B               	goto	l1698
  2045                           
  2046                           ; BSR set to: 0
  2047  000774  0E00               	movlw	0
  2048  000776  0100               	movlb	0	; () banked
  2049  000778  6F7B               	movwf	?___fttol& (0+255),b
  2050  00077A  0E00               	movlw	0
  2051  00077C  6F7C               	movwf	(?___fttol+1)& (0+255),b
  2052  00077E  0E00               	movlw	0
  2053  000780  6F7D               	movwf	(?___fttol+2)& (0+255),b
  2054  000782  0E00               	movlw	0
  2055  000784  6F7E               	movwf	(?___fttol+3)& (0+255),b
  2056                           
  2057                           ; BSR set to: 0
  2058  000786  0012               	return	
  2059                           
  2060                           ; BSR set to: 0
  2061  000788  D000               	goto	l1698
  2062  00078A                     l1698:
  2063                           
  2064                           ; BSR set to: 0
  2065  00078A  0100               	movlb	0	; () banked
  2066  00078C  90D8               	bcf	status,0,c
  2067  00078E  3388               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2068  000790  3387               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2069  000792  3386               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2070  000794  3385               	rrcf	___fttol@lval& (0+255),f,b
  2071                           
  2072                           ; BSR set to: 0
  2073  000796  0100               	movlb	0	; () banked
  2074  000798  3F89               	incfsz	___fttol@exp1& (0+255),f,b
  2075  00079A  D7F7               	goto	l1698
  2076                           
  2077                           ; BSR set to: 0
  2078  00079C  D01F               	goto	l1712
  2079  00079E                     l1702:
  2080                           
  2081                           ; BSR set to: 0
  2082  00079E  0E17               	movlw	23
  2083  0007A0  0100               	movlb	0	; () banked
  2084  0007A2  6589               	cpfsgt	___fttol@exp1& (0+255),b
  2085  0007A4  D014               	goto	l1710
  2086                           
  2087                           ; BSR set to: 0
  2088  0007A6  0E00               	movlw	0
  2089  0007A8  0100               	movlb	0	; () banked
  2090  0007AA  6F7B               	movwf	?___fttol& (0+255),b
  2091  0007AC  0E00               	movlw	0
  2092  0007AE  6F7C               	movwf	(?___fttol+1)& (0+255),b
  2093  0007B0  0E00               	movlw	0
  2094  0007B2  6F7D               	movwf	(?___fttol+2)& (0+255),b
  2095  0007B4  0E00               	movlw	0
  2096  0007B6  6F7E               	movwf	(?___fttol+3)& (0+255),b
  2097                           
  2098                           ; BSR set to: 0
  2099  0007B8  0012               	return	
  2100                           
  2101                           ; BSR set to: 0
  2102  0007BA  D009               	goto	l1710
  2103  0007BC                     l1708:
  2104                           
  2105                           ; BSR set to: 0
  2106  0007BC  0100               	movlb	0	; () banked
  2107  0007BE  90D8               	bcf	status,0,c
  2108  0007C0  3785               	rlcf	___fttol@lval& (0+255),f,b
  2109  0007C2  3786               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2110  0007C4  3787               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2111  0007C6  3788               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2112  0007C8  0100               	movlb	0	; () banked
  2113  0007CA  0789               	decf	___fttol@exp1& (0+255),f,b
  2114  0007CC  D000               	goto	l1710
  2115  0007CE                     l1710:
  2116                           
  2117                           ; BSR set to: 0
  2118  0007CE  0100               	movlb	0	; () banked
  2119  0007D0  5189               	movf	___fttol@exp1& (0+255),w,b
  2120  0007D2  0100               	movlb	0	; () banked
  2121  0007D4  B4D8               	btfsc	status,2,c
  2122  0007D6  D002               	goto	l1712
  2123  0007D8  D7F1               	goto	l1708
  2124                           
  2125                           ; BSR set to: 0
  2126  0007DA  D000               	goto	l1712
  2127  0007DC                     l1712:
  2128                           
  2129                           ; BSR set to: 0
  2130  0007DC  0100               	movlb	0	; () banked
  2131  0007DE  5184               	movf	___fttol@sign1& (0+255),w,b
  2132  0007E0  0100               	movlb	0	; () banked
  2133  0007E2  B4D8               	btfsc	status,2,c
  2134  0007E4  D00A               	goto	l1716
  2135                           
  2136                           ; BSR set to: 0
  2137  0007E6  0100               	movlb	0	; () banked
  2138  0007E8  1F88               	comf	(___fttol@lval+3)& (0+255),f,b
  2139  0007EA  1F87               	comf	(___fttol@lval+2)& (0+255),f,b
  2140  0007EC  1F86               	comf	(___fttol@lval+1)& (0+255),f,b
  2141  0007EE  6D85               	negf	___fttol@lval& (0+255),b
  2142  0007F0  0E00               	movlw	0
  2143  0007F2  2386               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2144  0007F4  2387               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2145  0007F6  2388               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2146  0007F8  D000               	goto	l1716
  2147  0007FA                     l1716:
  2148                           
  2149                           ; BSR set to: 0
  2150  0007FA  C085  F07B         	movff	___fttol@lval,?___fttol
  2151  0007FE  C086  F07C         	movff	___fttol@lval+1,?___fttol+1
  2152  000802  C087  F07D         	movff	___fttol@lval+2,?___fttol+2
  2153  000806  C088  F07E         	movff	___fttol@lval+3,?___fttol+3
  2154  00080A  0012               	return	
  2155                           
  2156                           ; BSR set to: 0
  2157                           
  2158                           ; BSR set to: 0
  2159  00080C  0012               	return		;funcret
  2160  00080E                     __end_of___fttol:
  2161                           	opt stack 0
  2162                           tblptru	equ	0xFF8
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           plusw1	equ	0xFE3
  2167                           plusw2	equ	0xFDB
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function ___ftmul *****************
  2171 ;; Defined at:
  2172 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  f1              3    0[BANK0 ] float 
  2175 ;;  f2              3    3[BANK0 ] float 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  2178 ;;  sign            1   11[BANK0 ] unsigned char 
  2179 ;;  cntr            1   10[BANK0 ] unsigned char 
  2180 ;;  exp             1    6[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  3    0[BANK0 ] float 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;Total ram usage:       15 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    4
  2197 ;; This function calls:
  2198 ;;		___ftpack
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text10
  2205  00055C                     __ptext10:
  2206                           	opt stack 0
  2207  00055C                     ___ftmul:
  2208                           	opt stack 26
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;incstack = 0
  2212  00055C  C062  F029         	movff	___ftmul@f1+2,??___ftmul
  2213  000560  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  2214  000562  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  2215  000564  0100               	movlb	0	; () banked
  2216  000566  3561               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2217  000568  3629               	rlcf	??___ftmul& (0+255),f,c
  2218  00056A  E301               	bnc	u1541
  2219  00056C  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  2220  00056E                     u1541:
  2221  00056E  5029               	movf	??___ftmul,w,c
  2222  000570  0100               	movlb	0	; () banked
  2223  000572  6F66               	movwf	___ftmul@exp& (0+255),b
  2224  000574  0100               	movlb	0	; () banked
  2225  000576  5166               	movf	___ftmul@exp& (0+255),w,b
  2226  000578  A4D8               	btfss	status,2,c
  2227  00057A  D00A               	goto	l1982
  2228                           
  2229                           ; BSR set to: 0
  2230  00057C  0E00               	movlw	0
  2231  00057E  0100               	movlb	0	; () banked
  2232  000580  6F60               	movwf	?___ftmul& (0+255),b
  2233  000582  0E00               	movlw	0
  2234  000584  0100               	movlb	0	; () banked
  2235  000586  6F61               	movwf	(?___ftmul+1)& (0+255),b
  2236  000588  0E00               	movlw	0
  2237  00058A  0100               	movlb	0	; () banked
  2238  00058C  6F62               	movwf	(?___ftmul+2)& (0+255),b
  2239                           
  2240                           ; BSR set to: 0
  2241  00058E  0012               	return	
  2242  000590                     l1982:
  2243                           
  2244                           ; BSR set to: 0
  2245  000590  C065  F029         	movff	___ftmul@f2+2,??___ftmul
  2246  000594  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  2247  000596  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  2248  000598  0100               	movlb	0	; () banked
  2249  00059A  3564               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2250  00059C  3629               	rlcf	??___ftmul& (0+255),f,c
  2251  00059E  E301               	bnc	u1561
  2252  0005A0  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  2253  0005A2                     u1561:
  2254  0005A2  5029               	movf	??___ftmul,w,c
  2255  0005A4  0100               	movlb	0	; () banked
  2256  0005A6  6F6B               	movwf	___ftmul@sign& (0+255),b
  2257  0005A8  0100               	movlb	0	; () banked
  2258  0005AA  516B               	movf	___ftmul@sign& (0+255),w,b
  2259  0005AC  A4D8               	btfss	status,2,c
  2260  0005AE  D00A               	goto	l1988
  2261                           
  2262                           ; BSR set to: 0
  2263  0005B0  0E00               	movlw	0
  2264  0005B2  0100               	movlb	0	; () banked
  2265  0005B4  6F60               	movwf	?___ftmul& (0+255),b
  2266  0005B6  0E00               	movlw	0
  2267  0005B8  0100               	movlb	0	; () banked
  2268  0005BA  6F61               	movwf	(?___ftmul+1)& (0+255),b
  2269  0005BC  0E00               	movlw	0
  2270  0005BE  0100               	movlb	0	; () banked
  2271  0005C0  6F62               	movwf	(?___ftmul+2)& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274  0005C2  0012               	return	
  2275  0005C4                     l1988:
  2276                           
  2277                           ; BSR set to: 0
  2278  0005C4  0100               	movlb	0	; () banked
  2279  0005C6  516B               	movf	___ftmul@sign& (0+255),w,b
  2280  0005C8  0F7B               	addlw	123
  2281  0005CA  0100               	movlb	0	; () banked
  2282  0005CC  2766               	addwf	___ftmul@exp& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 0
  2285  0005CE  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  2286  0005D2  0100               	movlb	0	; () banked
  2287  0005D4  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2288  0005D6  0100               	movlb	0	; () banked
  2289  0005D8  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  2290  0005DA  0E80               	movlw	128
  2291  0005DC  0100               	movlb	0	; () banked
  2292  0005DE  176B               	andwf	___ftmul@sign& (0+255),f,b
  2293                           
  2294                           ; BSR set to: 0
  2295  0005E0  0100               	movlb	0	; () banked
  2296  0005E2  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2297                           
  2298                           ; BSR set to: 0
  2299  0005E4  0100               	movlb	0	; () banked
  2300  0005E6  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2301                           
  2302                           ; BSR set to: 0
  2303  0005E8  0EFF               	movlw	255
  2304  0005EA  0100               	movlb	0	; () banked
  2305  0005EC  1763               	andwf	___ftmul@f2& (0+255),f,b
  2306  0005EE  0EFF               	movlw	255
  2307  0005F0  0100               	movlb	0	; () banked
  2308  0005F2  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2309  0005F4  0E00               	movlw	0
  2310  0005F6  0100               	movlb	0	; () banked
  2311  0005F8  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2312                           
  2313                           ; BSR set to: 0
  2314  0005FA  0E00               	movlw	0
  2315  0005FC  0100               	movlb	0	; () banked
  2316  0005FE  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  2317  000600  0E00               	movlw	0
  2318  000602  0100               	movlb	0	; () banked
  2319  000604  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2320  000606  0E00               	movlw	0
  2321  000608  0100               	movlb	0	; () banked
  2322  00060A  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325  00060C  0E07               	movlw	7
  2326  00060E  0100               	movlb	0	; () banked
  2327  000610  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2328  000612  D000               	goto	l2002
  2329  000614                     l2002:
  2330                           
  2331                           ; BSR set to: 0
  2332  000614  0100               	movlb	0	; () banked
  2333  000616  A160               	btfss	___ftmul@f1& (0+255),0,b
  2334  000618  D00D               	goto	l2006
  2335                           
  2336                           ; BSR set to: 0
  2337  00061A  0100               	movlb	0	; () banked
  2338  00061C  5163               	movf	___ftmul@f2& (0+255),w,b
  2339  00061E  0100               	movlb	0	; () banked
  2340  000620  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2341  000622  0100               	movlb	0	; () banked
  2342  000624  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2343  000626  0100               	movlb	0	; () banked
  2344  000628  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2345  00062A  0100               	movlb	0	; () banked
  2346  00062C  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2347  00062E  0100               	movlb	0	; () banked
  2348  000630  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2349  000632  D000               	goto	l2006
  2350  000634                     l2006:
  2351                           
  2352                           ; BSR set to: 0
  2353  000634  0100               	movlb	0	; () banked
  2354  000636  90D8               	bcf	status,0,c
  2355  000638  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2356  00063A  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2357  00063C  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2358  00063E  0100               	movlb	0	; () banked
  2359  000640  90D8               	bcf	status,0,c
  2360  000642  3763               	rlcf	___ftmul@f2& (0+255),f,b
  2361  000644  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2362  000646  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2363                           
  2364                           ; BSR set to: 0
  2365  000648  0100               	movlb	0	; () banked
  2366  00064A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2367  00064C  D7E3               	goto	l2002
  2368  00064E  D000               	goto	l2010
  2369  000650                     l2010:
  2370                           
  2371                           ; BSR set to: 0
  2372  000650  0E09               	movlw	9
  2373  000652  0100               	movlb	0	; () banked
  2374  000654  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2375  000656  D000               	goto	l2012
  2376  000658                     l2012:
  2377                           
  2378                           ; BSR set to: 0
  2379  000658  0100               	movlb	0	; () banked
  2380  00065A  A160               	btfss	___ftmul@f1& (0+255),0,b
  2381  00065C  D00D               	goto	l2016
  2382                           
  2383                           ; BSR set to: 0
  2384  00065E  0100               	movlb	0	; () banked
  2385  000660  5163               	movf	___ftmul@f2& (0+255),w,b
  2386  000662  0100               	movlb	0	; () banked
  2387  000664  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2388  000666  0100               	movlb	0	; () banked
  2389  000668  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2390  00066A  0100               	movlb	0	; () banked
  2391  00066C  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2392  00066E  0100               	movlb	0	; () banked
  2393  000670  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2394  000672  0100               	movlb	0	; () banked
  2395  000674  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2396  000676  D000               	goto	l2016
  2397  000678                     l2016:
  2398                           
  2399                           ; BSR set to: 0
  2400  000678  0100               	movlb	0	; () banked
  2401  00067A  90D8               	bcf	status,0,c
  2402  00067C  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2403  00067E  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2404  000680  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2405  000682  0100               	movlb	0	; () banked
  2406  000684  90D8               	bcf	status,0,c
  2407  000686  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2408  000688  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2409  00068A  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2410                           
  2411                           ; BSR set to: 0
  2412  00068C  0100               	movlb	0	; () banked
  2413  00068E  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2414  000690  D7E3               	goto	l2012
  2415  000692  D000               	goto	l2020
  2416  000694                     l2020:
  2417                           
  2418                           ; BSR set to: 0
  2419  000694  C067  F01E         	movff	___ftmul@f3_as_product,___ftpack@arg
  2420  000698  C068  F01F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2421  00069C  C069  F020         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2422  0006A0  C066  F021         	movff	___ftmul@exp,___ftpack@exp
  2423  0006A4  C06B  F022         	movff	___ftmul@sign,___ftpack@sign
  2424  0006A8  EC1A  F005         	call	___ftpack	;wreg free
  2425  0006AC  C01E  F060         	movff	?___ftpack,?___ftmul
  2426  0006B0  C01F  F061         	movff	?___ftpack+1,?___ftmul+1
  2427  0006B4  C020  F062         	movff	?___ftpack+2,?___ftmul+2
  2428  0006B8  0012               	return	
  2429  0006BA  0012               	return		;funcret
  2430  0006BC                     __end_of___ftmul:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           intcon	equ	0xFF2
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           plusw1	equ	0xFE3
  2437                           plusw2	equ	0xFDB
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function ___ftdiv *****************
  2441 ;; Defined at:
  2442 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  f1              3   12[BANK0 ] float 
  2445 ;;  f2              3   15[BANK0 ] float 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  f3              3   22[BANK0 ] float 
  2448 ;;  sign            1   26[BANK0 ] unsigned char 
  2449 ;;  exp             1   25[BANK0 ] unsigned char 
  2450 ;;  cntr            1   21[BANK0 ] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  3   12[BANK0 ] float 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2460 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;Total ram usage:       15 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		___ftpack
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text11
  2475  00080E                     __ptext11:
  2476                           	opt stack 0
  2477  00080E                     ___ftdiv:
  2478                           	opt stack 26
  2479                           
  2480                           ;incstack = 0
  2481  00080E  C06E  F072         	movff	___ftdiv@f1+2,??___ftdiv
  2482  000812  0100               	movlb	0	; () banked
  2483  000814  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2484  000816  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2485  000818  0100               	movlb	0	; () banked
  2486  00081A  356D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2487  00081C  0100               	movlb	0	; () banked
  2488  00081E  3772               	rlcf	??___ftdiv& (0+255),f,b
  2489  000820  E301               	bnc	u1491
  2490  000822  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2491  000824                     u1491:
  2492  000824  0100               	movlb	0	; () banked
  2493  000826  5172               	movf	??___ftdiv& (0+255),w,b
  2494  000828  0100               	movlb	0	; () banked
  2495  00082A  6F79               	movwf	___ftdiv@exp& (0+255),b
  2496  00082C  0100               	movlb	0	; () banked
  2497  00082E  5179               	movf	___ftdiv@exp& (0+255),w,b
  2498  000830  A4D8               	btfss	status,2,c
  2499  000832  D00A               	goto	l1936
  2500                           
  2501                           ; BSR set to: 0
  2502  000834  0E00               	movlw	0
  2503  000836  0100               	movlb	0	; () banked
  2504  000838  6F6C               	movwf	?___ftdiv& (0+255),b
  2505  00083A  0E00               	movlw	0
  2506  00083C  0100               	movlb	0	; () banked
  2507  00083E  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2508  000840  0E00               	movlw	0
  2509  000842  0100               	movlb	0	; () banked
  2510  000844  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513  000846  0012               	return	
  2514  000848                     l1936:
  2515                           
  2516                           ; BSR set to: 0
  2517  000848  C071  F072         	movff	___ftdiv@f2+2,??___ftdiv
  2518  00084C  0100               	movlb	0	; () banked
  2519  00084E  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2520  000850  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2521  000852  0100               	movlb	0	; () banked
  2522  000854  3570               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2523  000856  0100               	movlb	0	; () banked
  2524  000858  3772               	rlcf	??___ftdiv& (0+255),f,b
  2525  00085A  E301               	bnc	u1511
  2526  00085C  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2527  00085E                     u1511:
  2528  00085E  0100               	movlb	0	; () banked
  2529  000860  5172               	movf	??___ftdiv& (0+255),w,b
  2530  000862  0100               	movlb	0	; () banked
  2531  000864  6F7A               	movwf	___ftdiv@sign& (0+255),b
  2532  000866  0100               	movlb	0	; () banked
  2533  000868  517A               	movf	___ftdiv@sign& (0+255),w,b
  2534  00086A  A4D8               	btfss	status,2,c
  2535  00086C  D00A               	goto	l1942
  2536                           
  2537                           ; BSR set to: 0
  2538  00086E  0E00               	movlw	0
  2539  000870  0100               	movlb	0	; () banked
  2540  000872  6F6C               	movwf	?___ftdiv& (0+255),b
  2541  000874  0E00               	movlw	0
  2542  000876  0100               	movlb	0	; () banked
  2543  000878  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2544  00087A  0E00               	movlw	0
  2545  00087C  0100               	movlb	0	; () banked
  2546  00087E  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549  000880  0012               	return	
  2550  000882                     l1942:
  2551                           
  2552                           ; BSR set to: 0
  2553  000882  0E00               	movlw	0
  2554  000884  0100               	movlb	0	; () banked
  2555  000886  6F76               	movwf	___ftdiv@f3& (0+255),b
  2556  000888  0E00               	movlw	0
  2557  00088A  0100               	movlb	0	; () banked
  2558  00088C  6F77               	movwf	(___ftdiv@f3+1)& (0+255),b
  2559  00088E  0E00               	movlw	0
  2560  000890  0100               	movlb	0	; () banked
  2561  000892  6F78               	movwf	(___ftdiv@f3+2)& (0+255),b
  2562                           
  2563                           ; BSR set to: 0
  2564  000894  0100               	movlb	0	; () banked
  2565  000896  517A               	movf	___ftdiv@sign& (0+255),w,b
  2566  000898  0F89               	addlw	137
  2567  00089A  0100               	movlb	0	; () banked
  2568  00089C  5F79               	subwf	___ftdiv@exp& (0+255),f,b
  2569                           
  2570                           ; BSR set to: 0
  2571  00089E  C06E  F07A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2572                           
  2573                           ; BSR set to: 0
  2574  0008A2  0100               	movlb	0	; () banked
  2575  0008A4  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2576  0008A6  0100               	movlb	0	; () banked
  2577  0008A8  1B7A               	xorwf	___ftdiv@sign& (0+255),f,b
  2578                           
  2579                           ; BSR set to: 0
  2580  0008AA  0E80               	movlw	128
  2581  0008AC  0100               	movlb	0	; () banked
  2582  0008AE  177A               	andwf	___ftdiv@sign& (0+255),f,b
  2583                           
  2584                           ; BSR set to: 0
  2585  0008B0  0100               	movlb	0	; () banked
  2586  0008B2  8F6D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2587                           
  2588                           ; BSR set to: 0
  2589  0008B4  0EFF               	movlw	255
  2590  0008B6  0100               	movlb	0	; () banked
  2591  0008B8  176C               	andwf	___ftdiv@f1& (0+255),f,b
  2592  0008BA  0EFF               	movlw	255
  2593  0008BC  0100               	movlb	0	; () banked
  2594  0008BE  176D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2595  0008C0  0E00               	movlw	0
  2596  0008C2  0100               	movlb	0	; () banked
  2597  0008C4  176E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2598                           
  2599                           ; BSR set to: 0
  2600  0008C6  0100               	movlb	0	; () banked
  2601  0008C8  8F70               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2602                           
  2603                           ; BSR set to: 0
  2604  0008CA  0EFF               	movlw	255
  2605  0008CC  0100               	movlb	0	; () banked
  2606  0008CE  176F               	andwf	___ftdiv@f2& (0+255),f,b
  2607  0008D0  0EFF               	movlw	255
  2608  0008D2  0100               	movlb	0	; () banked
  2609  0008D4  1770               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2610  0008D6  0E00               	movlw	0
  2611  0008D8  0100               	movlb	0	; () banked
  2612  0008DA  1771               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2613                           
  2614                           ; BSR set to: 0
  2615  0008DC  0E18               	movlw	24
  2616  0008DE  0100               	movlb	0	; () banked
  2617  0008E0  6F75               	movwf	___ftdiv@cntr& (0+255),b
  2618  0008E2  D000               	goto	l1962
  2619  0008E4                     l1962:
  2620                           
  2621                           ; BSR set to: 0
  2622  0008E4  0100               	movlb	0	; () banked
  2623  0008E6  90D8               	bcf	status,0,c
  2624  0008E8  3776               	rlcf	___ftdiv@f3& (0+255),f,b
  2625  0008EA  3777               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2626  0008EC  3778               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2627                           
  2628                           ; BSR set to: 0
  2629  0008EE  0100               	movlb	0	; () banked
  2630  0008F0  516F               	movf	___ftdiv@f2& (0+255),w,b
  2631  0008F2  0100               	movlb	0	; () banked
  2632  0008F4  5D6C               	subwf	___ftdiv@f1& (0+255),w,b
  2633  0008F6  0100               	movlb	0	; () banked
  2634  0008F8  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2635  0008FA  0100               	movlb	0	; () banked
  2636  0008FC  596D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2637  0008FE  0100               	movlb	0	; () banked
  2638  000900  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2639  000902  0100               	movlb	0	; () banked
  2640  000904  596E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2641  000906  A0D8               	btfss	status,0,c
  2642  000908  D00E               	goto	l643
  2643                           
  2644                           ; BSR set to: 0
  2645  00090A  0100               	movlb	0	; () banked
  2646  00090C  516F               	movf	___ftdiv@f2& (0+255),w,b
  2647  00090E  0100               	movlb	0	; () banked
  2648  000910  5F6C               	subwf	___ftdiv@f1& (0+255),f,b
  2649  000912  0100               	movlb	0	; () banked
  2650  000914  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2651  000916  0100               	movlb	0	; () banked
  2652  000918  5B6D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2653  00091A  0100               	movlb	0	; () banked
  2654  00091C  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2655  00091E  0100               	movlb	0	; () banked
  2656  000920  5B6E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2657                           
  2658                           ; BSR set to: 0
  2659  000922  0100               	movlb	0	; () banked
  2660  000924  8176               	bsf	___ftdiv@f3& (0+255),0,b
  2661  000926                     l643:
  2662                           
  2663                           ; BSR set to: 0
  2664  000926  0100               	movlb	0	; () banked
  2665  000928  90D8               	bcf	status,0,c
  2666  00092A  376C               	rlcf	___ftdiv@f1& (0+255),f,b
  2667  00092C  376D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2668  00092E  376E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2669                           
  2670                           ; BSR set to: 0
  2671  000930  0100               	movlb	0	; () banked
  2672  000932  2F75               	decfsz	___ftdiv@cntr& (0+255),f,b
  2673  000934  D7D7               	goto	l1962
  2674  000936  D000               	goto	l1972
  2675  000938                     l1972:
  2676                           
  2677                           ; BSR set to: 0
  2678  000938  C076  F01E         	movff	___ftdiv@f3,___ftpack@arg
  2679  00093C  C077  F01F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2680  000940  C078  F020         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2681  000944  C079  F021         	movff	___ftdiv@exp,___ftpack@exp
  2682  000948  C07A  F022         	movff	___ftdiv@sign,___ftpack@sign
  2683  00094C  EC1A  F005         	call	___ftpack	;wreg free
  2684  000950  C01E  F06C         	movff	?___ftpack,?___ftdiv
  2685  000954  C01F  F06D         	movff	?___ftpack+1,?___ftdiv+1
  2686  000958  C020  F06E         	movff	?___ftpack+2,?___ftdiv+2
  2687  00095C  0012               	return	
  2688  00095E  0012               	return		;funcret
  2689  000960                     __end_of___ftdiv:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           intcon	equ	0xFF2
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           plusw1	equ	0xFE3
  2696                           plusw2	equ	0xFDB
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function ___ftpack *****************
  2700 ;; Defined at:
  2701 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  arg             3   29[COMRAM] unsigned um
  2704 ;;  exp             1   32[COMRAM] unsigned char 
  2705 ;;  sign            1   33[COMRAM] unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  3   29[COMRAM] float 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2717 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;Total ram usage:        8 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		___ftdiv
  2728 ;;		___ftmul
  2729 ;;		___lwtoft
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text12
  2734  000A34                     __ptext12:
  2735                           	opt stack 0
  2736  000A34                     ___ftpack:
  2737                           	opt stack 26
  2738                           
  2739                           ;incstack = 0
  2740  000A34  5021               	movf	___ftpack@exp,w,c
  2741  000A36  B4D8               	btfsc	status,2,c
  2742  000A38  D005               	goto	l1830
  2743  000A3A  501E               	movf	___ftpack@arg,w,c
  2744  000A3C  101F               	iorwf	___ftpack@arg+1,w,c
  2745  000A3E  1020               	iorwf	___ftpack@arg+2,w,c
  2746  000A40  A4D8               	btfss	status,2,c
  2747  000A42  D00E               	goto	l1836
  2748  000A44                     l1830:
  2749  000A44  0E00               	movlw	0
  2750  000A46  6E1E               	movwf	?___ftpack,c
  2751  000A48  0E00               	movlw	0
  2752  000A4A  6E1F               	movwf	?___ftpack+1,c
  2753  000A4C  0E00               	movlw	0
  2754  000A4E  6E20               	movwf	?___ftpack+2,c
  2755  000A50  0012               	return	
  2756  000A52  D006               	goto	l1836
  2757  000A54                     l1834:
  2758  000A54  2A21               	incf	___ftpack@exp,f,c
  2759  000A56  90D8               	bcf	status,0,c
  2760  000A58  3220               	rrcf	___ftpack@arg+2,f,c
  2761  000A5A  321F               	rrcf	___ftpack@arg+1,f,c
  2762  000A5C  321E               	rrcf	___ftpack@arg,f,c
  2763  000A5E  D000               	goto	l1836
  2764  000A60                     l1836:
  2765  000A60  0E00               	movlw	0
  2766  000A62  141E               	andwf	___ftpack@arg,w,c
  2767  000A64  6E23               	movwf	??___ftpack& (0+255),c
  2768  000A66  0E00               	movlw	0
  2769  000A68  141F               	andwf	___ftpack@arg+1,w,c
  2770  000A6A  6E24               	movwf	(??___ftpack+1)& (0+255),c
  2771  000A6C  0EFE               	movlw	254
  2772  000A6E  1420               	andwf	___ftpack@arg+2,w,c
  2773  000A70  6E25               	movwf	(??___ftpack+2)& (0+255),c
  2774  000A72  5023               	movf	??___ftpack,w,c
  2775  000A74  1024               	iorwf	??___ftpack+1,w,c
  2776  000A76  1025               	iorwf	??___ftpack+2,w,c
  2777  000A78  B4D8               	btfsc	status,2,c
  2778  000A7A  D00E               	goto	l1842
  2779  000A7C  D7EB               	goto	l1834
  2780  000A7E  D00C               	goto	l1842
  2781  000A80                     l1838:
  2782  000A80  2A21               	incf	___ftpack@exp,f,c
  2783  000A82  0E01               	movlw	1
  2784  000A84  261E               	addwf	___ftpack@arg,f,c
  2785  000A86  0E00               	movlw	0
  2786  000A88  221F               	addwfc	___ftpack@arg+1,f,c
  2787  000A8A  0E00               	movlw	0
  2788  000A8C  2220               	addwfc	___ftpack@arg+2,f,c
  2789  000A8E  90D8               	bcf	status,0,c
  2790  000A90  3220               	rrcf	___ftpack@arg+2,f,c
  2791  000A92  321F               	rrcf	___ftpack@arg+1,f,c
  2792  000A94  321E               	rrcf	___ftpack@arg,f,c
  2793  000A96  D000               	goto	l1842
  2794  000A98                     l1842:
  2795  000A98  0E00               	movlw	0
  2796  000A9A  141E               	andwf	___ftpack@arg,w,c
  2797  000A9C  6E23               	movwf	??___ftpack& (0+255),c
  2798  000A9E  0E00               	movlw	0
  2799  000AA0  141F               	andwf	___ftpack@arg+1,w,c
  2800  000AA2  6E24               	movwf	(??___ftpack+1)& (0+255),c
  2801  000AA4  0EFF               	movlw	255
  2802  000AA6  1420               	andwf	___ftpack@arg+2,w,c
  2803  000AA8  6E25               	movwf	(??___ftpack+2)& (0+255),c
  2804  000AAA  5023               	movf	??___ftpack,w,c
  2805  000AAC  1024               	iorwf	??___ftpack+1,w,c
  2806  000AAE  1025               	iorwf	??___ftpack+2,w,c
  2807  000AB0  B4D8               	btfsc	status,2,c
  2808  000AB2  D008               	goto	l1846
  2809  000AB4  D7E5               	goto	l1838
  2810  000AB6  D006               	goto	l1846
  2811  000AB8                     l1844:
  2812  000AB8  0621               	decf	___ftpack@exp,f,c
  2813  000ABA  90D8               	bcf	status,0,c
  2814  000ABC  361E               	rlcf	___ftpack@arg,f,c
  2815  000ABE  361F               	rlcf	___ftpack@arg+1,f,c
  2816  000AC0  3620               	rlcf	___ftpack@arg+2,f,c
  2817  000AC2  D000               	goto	l1846
  2818  000AC4                     l1846:
  2819  000AC4  BE1F               	btfsc	___ftpack@arg+1,7,c
  2820  000AC6  D004               	goto	l579
  2821  000AC8  0E02               	movlw	2
  2822  000ACA  6021               	cpfslt	___ftpack@exp,c
  2823  000ACC  D7F5               	goto	l1844
  2824  000ACE  D000               	goto	l579
  2825  000AD0                     l579:
  2826  000AD0  B021               	btfsc	___ftpack@exp,0,c
  2827  000AD2  D002               	goto	l1852
  2828  000AD4  9E1F               	bcf	___ftpack@arg+1,7,c
  2829  000AD6  D000               	goto	l1852
  2830  000AD8                     l1852:
  2831  000AD8  90D8               	bcf	status,0,c
  2832  000ADA  3221               	rrcf	___ftpack@exp,f,c
  2833  000ADC  5021               	movf	___ftpack@exp,w,c
  2834  000ADE  1220               	iorwf	___ftpack@arg+2,f,c
  2835  000AE0  5022               	movf	___ftpack@sign,w,c
  2836  000AE2  B4D8               	btfsc	status,2,c
  2837  000AE4  D002               	goto	l1858
  2838  000AE6  8E20               	bsf	___ftpack@arg+2,7,c
  2839  000AE8  D000               	goto	l1858
  2840  000AEA                     l1858:
  2841  000AEA  C01E  F01E         	movff	___ftpack@arg,?___ftpack
  2842  000AEE  C01F  F01F         	movff	___ftpack@arg+1,?___ftpack+1
  2843  000AF2  C020  F020         	movff	___ftpack@arg+2,?___ftpack+2
  2844  000AF6  0012               	return	
  2845  000AF8  0012               	return		;funcret
  2846  000AFA                     __end_of___ftpack:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           intcon	equ	0xFF2
  2850                           postinc0	equ	0xFEE
  2851                           wreg	equ	0xFE8
  2852                           plusw1	equ	0xFE3
  2853                           plusw2	equ	0xFDB
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function _high_isr *****************
  2857 ;; Defined at:
  2858 ;;		line 110 in file "main.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  input           2   27[COMRAM] unsigned char [2]
  2863 ;; Return value:  Size  Location     Type
  2864 ;;		None               void
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2874 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;Total ram usage:       16 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    2
  2879 ;; This function calls:
  2880 ;;		_atoi
  2881 ;; This function is called by:
  2882 ;;		Interrupt level 2
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	intcode
  2887  000008                     __pintcode:
  2888                           	opt stack 0
  2889  000008                     _high_isr:
  2890                           	opt stack 26
  2891                           
  2892                           ;incstack = 0
  2893  000008  CFFA F00E          	movff	pclath,??_high_isr
  2894  00000C  CFFB F00F          	movff	pclatu,??_high_isr+1
  2895  000010  CFE9 F010          	movff	fsr0l,??_high_isr+2
  2896  000014  CFEA F011          	movff	fsr0h,??_high_isr+3
  2897  000018  CFE1 F012          	movff	fsr1l,??_high_isr+4
  2898  00001C  CFE2 F013          	movff	fsr1h,??_high_isr+5
  2899  000020  CFD9 F014          	movff	fsr2l,??_high_isr+6
  2900  000024  CFDA F015          	movff	fsr2h,??_high_isr+7
  2901  000028  CFF3 F016          	movff	prodl,??_high_isr+8
  2902  00002C  CFF4 F017          	movff	prodh,??_high_isr+9
  2903  000030  CFF6 F018          	movff	tblptrl,??_high_isr+10
  2904  000034  CFF7 F019          	movff	tblptrh,??_high_isr+11
  2905  000038  CFF8 F01A          	movff	tblptru,??_high_isr+12
  2906  00003C  CFF5 F01B          	movff	tablat,??_high_isr+13
  2907                           
  2908                           ;main.c: 111: RC2IF = 0;
  2909  000040  9AA4               	bcf	4004,5,c	;volatile
  2910                           
  2911                           ;main.c: 113: char input[2] = "";
  2912  000042  C02D  F01C         	movff	high_isr@F19159,high_isr@input
  2913  000046  C02E  F01D         	movff	high_isr@F19159+1,high_isr@input+1
  2914                           
  2915                           ;main.c: 114: input[0] = RCREG2;
  2916  00004A  CF7A F01C          	movff	3962,high_isr@input	;volatile
  2917                           
  2918                           ;main.c: 116: if (beginR==1 | beginG==1 | beginB==1)
  2919  00004E  0431               	decf	_beginR,w,c
  2920  000050  B4D8               	btfsc	status,2,c
  2921  000052  D006               	goto	i2l1732
  2922  000054  0430               	decf	_beginG,w,c
  2923  000056  B4D8               	btfsc	status,2,c
  2924  000058  D003               	goto	i2l1732
  2925  00005A  042F               	decf	_beginB,w,c
  2926  00005C  A4D8               	btfss	status,2,c
  2927  00005E  D053               	goto	i2l1770
  2928  000060                     i2l1732:
  2929                           
  2930                           ;main.c: 117: {
  2931                           ;main.c: 118: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  2932  000060  0E52               	movlw	82
  2933  000062  181C               	xorwf	high_isr@input,w,c
  2934  000064  B4D8               	btfsc	status,2,c
  2935  000066  D014               	goto	i2l1742
  2936  000068  0E47               	movlw	71
  2937  00006A  181C               	xorwf	high_isr@input,w,c
  2938  00006C  B4D8               	btfsc	status,2,c
  2939  00006E  D010               	goto	i2l1742
  2940  000070  0E42               	movlw	66
  2941  000072  181C               	xorwf	high_isr@input,w,c
  2942  000074  B4D8               	btfsc	status,2,c
  2943  000076  D00C               	goto	i2l1742
  2944                           
  2945                           ;main.c: 119: {
  2946                           ;main.c: 120: buffer[compteur]=input[0];
  2947  000078  5032               	movf	_compteur,w,c
  2948  00007A  0D01               	mullw	1
  2949  00007C  0E33               	movlw	low _buffer
  2950  00007E  24F3               	addwf	prodl,w,c
  2951  000080  6ED9               	movwf	fsr2l,c
  2952  000082  0E00               	movlw	high _buffer
  2953  000084  20F4               	addwfc	prodh,w,c
  2954  000086  6EDA               	movwf	fsr2h,c
  2955  000088  C01C  FFDF         	movff	high_isr@input,indf2
  2956                           
  2957                           ;main.c: 121: compteur+=1;
  2958  00008C  2A32               	incf	_compteur,f,c
  2959                           
  2960                           ;main.c: 122: }
  2961  00008E  D03B               	goto	i2l1770
  2962  000090                     i2l1742:
  2963                           
  2964                           ;main.c: 124: else
  2965                           ;main.c: 125: {
  2966                           ;main.c: 126: if (beginR==1)
  2967  000090  0431               	decf	_beginR,w,c
  2968  000092  A4D8               	btfss	status,2,c
  2969  000094  D00B               	goto	i2l1746
  2970                           
  2971                           ;main.c: 127: R[0]=atoi(buffer);
  2972  000096  0E33               	movlw	low _buffer
  2973  000098  6E07               	movwf	atoi@s,c
  2974  00009A  0E00               	movlw	high _buffer
  2975  00009C  6E08               	movwf	atoi@s+1,c
  2976  00009E  ECB0  F004         	call	_atoi	;wreg free
  2977  0000A2  C007  F100         	movff	?_atoi,_R
  2978  0000A6  C008  F101         	movff	?_atoi+1,_R+1
  2979  0000AA  D000               	goto	i2l1746
  2980  0000AC                     i2l1746:
  2981                           
  2982                           ;main.c: 128: beginR=0;
  2983  0000AC  0E00               	movlw	0
  2984  0000AE  6E31               	movwf	_beginR,c
  2985                           
  2986                           ;main.c: 129: if (beginG==1)
  2987  0000B0  0430               	decf	_beginG,w,c
  2988  0000B2  A4D8               	btfss	status,2,c
  2989  0000B4  D00B               	goto	i2l1752
  2990                           
  2991                           ;main.c: 130: G[0]=atoi(buffer);
  2992  0000B6  0E33               	movlw	low _buffer
  2993  0000B8  6E07               	movwf	atoi@s,c
  2994  0000BA  0E00               	movlw	high _buffer
  2995  0000BC  6E08               	movwf	atoi@s+1,c
  2996  0000BE  ECB0  F004         	call	_atoi	;wreg free
  2997  0000C2  C007  F200         	movff	?_atoi,_G
  2998  0000C6  C008  F201         	movff	?_atoi+1,_G+1
  2999  0000CA  D000               	goto	i2l1752
  3000  0000CC                     i2l1752:
  3001                           
  3002                           ;main.c: 131: beginG=0;
  3003  0000CC  0E00               	movlw	0
  3004  0000CE  6E30               	movwf	_beginG,c
  3005                           
  3006                           ;main.c: 132: if (beginB==1)
  3007  0000D0  042F               	decf	_beginB,w,c
  3008  0000D2  A4D8               	btfss	status,2,c
  3009  0000D4  D00B               	goto	i2l1758
  3010                           
  3011                           ;main.c: 133: B[0]=atoi(buffer);
  3012  0000D6  0E33               	movlw	low _buffer
  3013  0000D8  6E07               	movwf	atoi@s,c
  3014  0000DA  0E00               	movlw	high _buffer
  3015  0000DC  6E08               	movwf	atoi@s+1,c
  3016  0000DE  ECB0  F004         	call	_atoi	;wreg free
  3017  0000E2  C007  F300         	movff	?_atoi,_B
  3018  0000E6  C008  F301         	movff	?_atoi+1,_B+1
  3019  0000EA  D000               	goto	i2l1758
  3020  0000EC                     i2l1758:
  3021                           
  3022                           ;main.c: 134: beginB=0;
  3023  0000EC  0E00               	movlw	0
  3024  0000EE  6E2F               	movwf	_beginB,c
  3025                           
  3026                           ;main.c: 137: compteur=0;
  3027  0000F0  0E00               	movlw	0
  3028  0000F2  6E32               	movwf	_compteur,c
  3029                           
  3030                           ;main.c: 138: buffer[3]='\0';
  3031  0000F4  0E00               	movlw	0
  3032  0000F6  6E36               	movwf	_buffer+3,c
  3033                           
  3034                           ;main.c: 139: buffer[2]='\0';
  3035  0000F8  0E00               	movlw	0
  3036  0000FA  6E35               	movwf	_buffer+2,c
  3037                           
  3038                           ;main.c: 140: buffer[1]='\0';
  3039  0000FC  0E00               	movlw	0
  3040  0000FE  6E34               	movwf	_buffer+1,c
  3041                           
  3042                           ;main.c: 141: buffer[0]='\0';
  3043  000100  0E00               	movlw	0
  3044  000102  6E33               	movwf	_buffer,c
  3045  000104  D000               	goto	i2l1770
  3046  000106                     i2l1770:
  3047                           
  3048                           ;main.c: 142: }
  3049                           ;main.c: 143: }
  3050                           ;main.c: 145: if (input[0]=='R')
  3051  000106  0E52               	movlw	82
  3052  000108  181C               	xorwf	high_isr@input,w,c
  3053  00010A  A4D8               	btfss	status,2,c
  3054  00010C  D003               	goto	i2l1774
  3055                           
  3056                           ;main.c: 146: beginR=1;
  3057  00010E  0E01               	movlw	1
  3058  000110  6E31               	movwf	_beginR,c
  3059  000112  D000               	goto	i2l1774
  3060  000114                     i2l1774:
  3061                           
  3062                           ;main.c: 147: if (input[0]=='G')
  3063  000114  0E47               	movlw	71
  3064  000116  181C               	xorwf	high_isr@input,w,c
  3065  000118  A4D8               	btfss	status,2,c
  3066  00011A  D003               	goto	i2l1778
  3067                           
  3068                           ;main.c: 148: beginG=1;
  3069  00011C  0E01               	movlw	1
  3070  00011E  6E30               	movwf	_beginG,c
  3071  000120  D000               	goto	i2l1778
  3072  000122                     i2l1778:
  3073                           
  3074                           ;main.c: 149: if (input[0]=='B')
  3075  000122  0E42               	movlw	66
  3076  000124  181C               	xorwf	high_isr@input,w,c
  3077  000126  A4D8               	btfss	status,2,c
  3078  000128  D003               	goto	i2l205
  3079                           
  3080                           ;main.c: 150: beginB=1;
  3081  00012A  0E01               	movlw	1
  3082  00012C  6E2F               	movwf	_beginB,c
  3083  00012E  D000               	goto	i2l205
  3084  000130                     i2l205:
  3085  000130  C01B  FFF5         	movff	??_high_isr+13,tablat
  3086  000134  C01A  FFF8         	movff	??_high_isr+12,tblptru
  3087  000138  C019  FFF7         	movff	??_high_isr+11,tblptrh
  3088  00013C  C018  FFF6         	movff	??_high_isr+10,tblptrl
  3089  000140  C017  FFF4         	movff	??_high_isr+9,prodh
  3090  000144  C016  FFF3         	movff	??_high_isr+8,prodl
  3091  000148  C015  FFDA         	movff	??_high_isr+7,fsr2h
  3092  00014C  C014  FFD9         	movff	??_high_isr+6,fsr2l
  3093  000150  C013  FFE2         	movff	??_high_isr+5,fsr1h
  3094  000154  C012  FFE1         	movff	??_high_isr+4,fsr1l
  3095  000158  C011  FFEA         	movff	??_high_isr+3,fsr0h
  3096  00015C  C010  FFE9         	movff	??_high_isr+2,fsr0l
  3097  000160  C00F  FFFB         	movff	??_high_isr+1,pclatu
  3098  000164  C00E  FFFA         	movff	??_high_isr,pclath
  3099  000168  0011               	retfie		f
  3100  00016A                     __end_of_high_isr:
  3101                           	opt stack 0
  3102                           pclatu	equ	0xFFB
  3103                           pclath	equ	0xFFA
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           postinc0	equ	0xFEE
  3112                           fsr0h	equ	0xFEA
  3113                           fsr0l	equ	0xFE9
  3114                           wreg	equ	0xFE8
  3115                           plusw1	equ	0xFE3
  3116                           fsr1h	equ	0xFE2
  3117                           fsr1l	equ	0xFE1
  3118                           indf2	equ	0xFDF
  3119                           plusw2	equ	0xFDB
  3120                           fsr2h	equ	0xFDA
  3121                           fsr2l	equ	0xFD9
  3122                           status	equ	0xFD8
  3123                           
  3124 ;; *************** function _atoi *****************
  3125 ;; Defined at:
  3126 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3129 ;;		 -> buffer(16), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  a               2   11[COMRAM] int 
  3132 ;;  sign            1   10[COMRAM] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  2    6[COMRAM] int 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;Total ram usage:        7 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    1
  3149 ;; This function calls:
  3150 ;;		___wmul
  3151 ;;		_isdigit
  3152 ;; This function is called by:
  3153 ;;		_high_isr
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text14
  3158  000960                     __ptext14:
  3159                           	opt stack 0
  3160  000960                     _atoi:
  3161                           	opt stack 26
  3162                           
  3163                           ;incstack = 0
  3164  000960  D003               	goto	i2l1536
  3165  000962                     i2l1534:
  3166  000962  4A07               	infsnz	atoi@s,f,c
  3167  000964  2A08               	incf	atoi@s+1,f,c
  3168  000966  D000               	goto	i2l1536
  3169  000968                     i2l1536:
  3170  000968  C007  FFD9         	movff	atoi@s,fsr2l
  3171  00096C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3172  000970  0E20               	movlw	32
  3173  000972  18DE               	xorwf	postinc2,w,c
  3174  000974  B4D8               	btfsc	status,2,c
  3175  000976  D7F5               	goto	i2l1534
  3176  000978  C007  FFD9         	movff	atoi@s,fsr2l
  3177  00097C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3178  000980  0E09               	movlw	9
  3179  000982  18DE               	xorwf	postinc2,w,c
  3180  000984  B4D8               	btfsc	status,2,c
  3181  000986  D7ED               	goto	i2l1534
  3182  000988  0E00               	movlw	0
  3183  00098A  6E0D               	movwf	atoi@a+1,c
  3184  00098C  0E00               	movlw	0
  3185  00098E  6E0C               	movwf	atoi@a,c
  3186  000990  0E00               	movlw	0
  3187  000992  6E0B               	movwf	atoi@sign,c
  3188  000994  C007  FFD9         	movff	atoi@s,fsr2l
  3189  000998  C008  FFDA         	movff	atoi@s+1,fsr2h
  3190  00099C  0E2D               	movlw	45
  3191  00099E  18DE               	xorwf	postinc2,w,c
  3192  0009A0  A4D8               	btfss	status,2,c
  3193  0009A2  D002               	goto	i2l1546
  3194  0009A4  2A0B               	incf	atoi@sign,f,c
  3195  0009A6  D025               	goto	i2l1552
  3196  0009A8                     i2l1546:
  3197  0009A8  C007  FFD9         	movff	atoi@s,fsr2l
  3198  0009AC  C008  FFDA         	movff	atoi@s+1,fsr2h
  3199  0009B0  0E2B               	movlw	43
  3200  0009B2  18DE               	xorwf	postinc2,w,c
  3201  0009B4  A4D8               	btfss	status,2,c
  3202  0009B6  D020               	goto	i2l1554
  3203  0009B8  D01C               	goto	i2l1552
  3204  0009BA  D01E               	goto	i2l1554
  3205  0009BC                     i2l1550:
  3206  0009BC  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3207  0009C0  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3208  0009C4  0E00               	movlw	0
  3209  0009C6  6E04               	movwf	___wmul@multiplicand+1,c
  3210  0009C8  0E0A               	movlw	10
  3211  0009CA  6E03               	movwf	___wmul@multiplicand,c
  3212  0009CC  EC9A  F006         	call	___wmul	;wreg free
  3213  0009D0  C007  FFD9         	movff	atoi@s,fsr2l
  3214  0009D4  C008  FFDA         	movff	atoi@s+1,fsr2h
  3215  0009D8  50DF               	movf	indf2,w,c
  3216  0009DA  6E09               	movwf	??_atoi& (0+255),c
  3217  0009DC  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3218  0009DE  5001               	movf	?___wmul,w,c
  3219  0009E0  2609               	addwf	??_atoi,f,c
  3220  0009E2  5002               	movf	?___wmul+1,w,c
  3221  0009E4  220A               	addwfc	??_atoi+1,f,c
  3222  0009E6  0ED0               	movlw	208
  3223  0009E8  2409               	addwf	??_atoi,w,c
  3224  0009EA  6E0C               	movwf	atoi@a,c
  3225  0009EC  0EFF               	movlw	255
  3226  0009EE  200A               	addwfc	??_atoi+1,w,c
  3227  0009F0  6E0D               	movwf	atoi@a+1,c
  3228  0009F2                     i2l1552:
  3229  0009F2  4A07               	infsnz	atoi@s,f,c
  3230  0009F4  2A08               	incf	atoi@s+1,f,c
  3231  0009F6  D000               	goto	i2l1554
  3232  0009F8                     i2l1554:
  3233  0009F8  C007  FFD9         	movff	atoi@s,fsr2l
  3234  0009FC  C008  FFDA         	movff	atoi@s+1,fsr2h
  3235  000A00  50DF               	movf	indf2,w,c
  3236  000A02  ECC1  F006         	call	_isdigit
  3237  000A06  B0D8               	btfsc	status,0,c
  3238  000A08  D7D9               	goto	i2l1550
  3239  000A0A  500B               	movf	atoi@sign,w,c
  3240  000A0C  B4D8               	btfsc	status,2,c
  3241  000A0E  D00D               	goto	i2l427
  3242  000A10  C00C  F009         	movff	atoi@a,??_atoi
  3243  000A14  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3244  000A18  1E09               	comf	??_atoi,f,c
  3245  000A1A  1E0A               	comf	??_atoi+1,f,c
  3246  000A1C  4A09               	infsnz	??_atoi,f,c
  3247  000A1E  2A0A               	incf	??_atoi+1,f,c
  3248  000A20  C009  F007         	movff	??_atoi,?_atoi
  3249  000A24  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3250  000A28  0012               	return	
  3251  000A2A                     i2l427:
  3252  000A2A  C00C  F007         	movff	atoi@a,?_atoi
  3253  000A2E  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3254  000A32  0012               	return		;funcret
  3255  000A34                     __end_of_atoi:
  3256                           	opt stack 0
  3257                           pclatu	equ	0xFFB
  3258                           pclath	equ	0xFFA
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           plusw1	equ	0xFE3
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           plusw2	equ	0xFDB
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8
  3279                           
  3280 ;; *************** function _isdigit *****************
  3281 ;; Defined at:
  3282 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  c               1    wreg     unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  c               1    2[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;Total ram usage:        3 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_atoi
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text15
  3310  000D82                     __ptext15:
  3311                           	opt stack 0
  3312  000D82                     _isdigit:
  3313                           	opt stack 26
  3314                           
  3315                           ;incstack = 0
  3316                           ;isdigit@c stored from wreg
  3317  000D82  6E03               	movwf	isdigit@c,c
  3318  000D84  0E00               	movlw	0
  3319  000D86  6E02               	movwf	_isdigit$848,c
  3320  000D88  0E3A               	movlw	58
  3321  000D8A  6003               	cpfslt	isdigit@c,c
  3322  000D8C  D006               	goto	i2l1454
  3323  000D8E  0E2F               	movlw	47
  3324  000D90  6403               	cpfsgt	isdigit@c,c
  3325  000D92  D003               	goto	i2l1454
  3326  000D94  0E01               	movlw	1
  3327  000D96  6E02               	movwf	_isdigit$848,c
  3328  000D98  D000               	goto	i2l1454
  3329  000D9A                     i2l1454:
  3330  000D9A  C002  F001         	movff	_isdigit$848,??_isdigit
  3331  000D9E  3001               	rrcf	??_isdigit,w,c
  3332  000DA0  0012               	return	
  3333  000DA2  0012               	return		;funcret
  3334  000DA4                     __end_of_isdigit:
  3335                           	opt stack 0
  3336                           pclatu	equ	0xFFB
  3337                           pclath	equ	0xFFA
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           postinc0	equ	0xFEE
  3346                           fsr0h	equ	0xFEA
  3347                           fsr0l	equ	0xFE9
  3348                           wreg	equ	0xFE8
  3349                           plusw1	equ	0xFE3
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           plusw2	equ	0xFDB
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function ___wmul *****************
  3360 ;; Defined at:
  3361 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  multiplier      2    0[COMRAM] unsigned int 
  3364 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  product         2    4[COMRAM] unsigned int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2    0[COMRAM] unsigned int 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, prodl, prodh
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;Total ram usage:        6 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_atoi
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text16
  3390  000D34                     __ptext16:
  3391                           	opt stack 0
  3392  000D34                     ___wmul:
  3393                           	opt stack 26
  3394                           
  3395                           ;incstack = 0
  3396  000D34  5001               	movf	___wmul@multiplier,w,c
  3397  000D36  0203               	mulwf	___wmul@multiplicand,c
  3398  000D38  CFF3 F005          	movff	prodl,___wmul@product
  3399  000D3C  CFF4 F006          	movff	prodh,___wmul@product+1
  3400  000D40  5001               	movf	___wmul@multiplier,w,c
  3401  000D42  0204               	mulwf	___wmul@multiplicand+1,c
  3402  000D44  50F3               	movf	prodl,w,c
  3403  000D46  2606               	addwf	___wmul@product+1,f,c
  3404  000D48  5002               	movf	___wmul@multiplier+1,w,c
  3405  000D4A  0203               	mulwf	___wmul@multiplicand,c
  3406  000D4C  50F3               	movf	prodl,w,c
  3407  000D4E  2606               	addwf	___wmul@product+1,f,c
  3408  000D50  C005  F001         	movff	___wmul@product,?___wmul
  3409  000D54  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3410  000D58  0012               	return	
  3411  000D5A  0012               	return		;funcret
  3412  000D5C                     __end_of___wmul:
  3413                           	opt stack 0
  3414  0000                     pclatu	equ	0xFFB
  3415                           pclath	equ	0xFFA
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           prodh	equ	0xFF4
  3421                           prodl	equ	0xFF3
  3422                           intcon	equ	0xFF2
  3423                           postinc0	equ	0xFEE
  3424                           fsr0h	equ	0xFEA
  3425                           fsr0l	equ	0xFE9
  3426                           wreg	equ	0xFE8
  3427                           plusw1	equ	0xFE3
  3428                           fsr1h	equ	0xFE2
  3429                           fsr1l	equ	0xFE1
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           plusw2	equ	0xFDB
  3433                           fsr2h	equ	0xFDA
  3434                           fsr2l	equ	0xFD9
  3435                           status	equ	0xFD8
  3436                           pclatu	equ	0xFFB
  3437                           pclath	equ	0xFFA
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           prodh	equ	0xFF4
  3443                           prodl	equ	0xFF3
  3444                           intcon	equ	0xFF2
  3445                           postinc0	equ	0xFEE
  3446                           fsr0h	equ	0xFEA
  3447                           fsr0l	equ	0xFE9
  3448                           wreg	equ	0xFE8
  3449                           plusw1	equ	0xFE3
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           postinc2	equ	0xFDE
  3454                           plusw2	equ	0xFDB
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459                           	psect	rparam
  3460  0000                     pclatu	equ	0xFFB
  3461                           pclath	equ	0xFFA
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           postinc0	equ	0xFEE
  3470                           fsr0h	equ	0xFEA
  3471                           fsr0l	equ	0xFE9
  3472                           wreg	equ	0xFE8
  3473                           plusw1	equ	0xFE3
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           plusw2	equ	0xFDB
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      66
    BANK0           160     76      91
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_pwm
    _pwm->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _high_isr in COMRAM

    _high_isr->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    27      5   11727
                                             44 BANK0     32    27      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      69
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1349
                                             43 COMRAM     1     1      0
                                             42 BANK0      2     0      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                             29 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2624
                                             37 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     570
                                             27 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3366
                                             40 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3298
                                             12 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2008
                                             29 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _initialisation
     _initADC
     _initComms
     _initPWM
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _readADC

 _high_isr (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      5B       5       56.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      42       1       69.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F5       6        0.0%
DATA                 0      0     2F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May 19 22:57:50 2015

                      _B 0300                        _G 0200                        _R 0100  
           ___awdiv@sign 0023      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l215 029C                      l233 0C20  
                    l235 0C24                      l236 0C2A                      l238 0C56  
                    l239 0C5A                      l643 0926                      l579 0AD0  
                    _GIE 007F97             __CFG_CPB$OFF 000000                      _RC0 007C10  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _PSA 007EAB  
                    _pwm 0B90                      prod 000FF3                      wreg 000FE8  
             _TXSTA2bits 000FBA             ___ftdiv@cntr 0075             ___ftdiv@sign 007A  
                   l2010 0650                     l2002 0614                     l2020 0694  
                   l2012 0658                     l2006 0634                     l2030 0192  
                   l2016 0678                     l2050 020C                     l2034 01B8  
                   l2052 021E                     l2036 01CA                     l2070 040C  
                   l2056 0240                     l2058 0252                     l1710 07CE  
                   l1702 079E                     l1712 07DC                     l1716 07FA  
                   l1708 07BC                     l1572 0C4E                     l1564 0C30  
                   l1830 0A44                     l1902 0B84                     l1574 0C50  
                   l1566 0C46                     l1680 06F6                     l1920 0BDC  
                   l1842 0A98                     l1834 0A54                     l1914 0BB8  
                   l1852 0AD8                     l1844 0AB8                     l1836 0A60  
                   l1908 0B94                     l1846 0AC4                     l1838 0A80  
                   l1942 0882                     l1870 0B10                     l1936 0848  
                   l1928 0C00                     l1858 0AEA                     l1962 08E4  
                   l1698 078A                     l1882 0B38                     l1972 0938  
                   l1884 0B42                     l1876 0B22                     l1982 0590  
                   l1894 0B68                     l1886 0B4A                     l1898 0B74  
                   l1988 05C4                     _ADON 007E10                     _CHS0 007E12  
                   _CHS1 007E13                     ?_pwm 008A                     _T0CS 007EAD  
                   u1051 06D2                     u1070 071C                     u1075 0712  
                   u1511 085E                     u1541 056E                     u1621 01D8  
                   u1561 05A2                     u1491 0824                     u1670 0296  
                   u1680 0298                     _PEIE 007F96         ??_initialisation 001E  
                   _atoi 0960                     _main 016E             ___ftpack@arg 001E  
           ___ftpack@exp 0021                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 016A  
          __CFG_IESO$OFF 000000             ___ftmul@cntr 006A             ___param_bank 000010  
           ___ftmul@sign 006B             ___fttol@exp1 0089             ___fttol@lval 0085  
                  ??_pwm 002C                    _DC2B0 007A84                    _DC2B1 007A85  
                  _DC3B0 007A6C                    _DC3B1 007A6D                    _DC4B0 007A54  
                  _DC4B1 007A55                    ?_atoi 0007                    ?_main 008C  
        __end_of___awdiv 0B90          __end_of___ftdiv 0960          __end_of___ftmul 06BC  
        ___awdiv@divisor 0020          __end_of___fttol 080E                    _T0PS0 007EA8  
                  _T0PS1 007EA9                    _T0PS2 007EAA                    _RC2IF 007D25  
                  i2l205 0130                    i2l427 0A2A          ___awdiv@counter 0022  
                  _VCFG0 007E0C                    _VCFG1 007E0D                    _VNCFG 007E0B  
                  _TRISC 000F94            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000          __end_of_initADC 0DC0          __end_of_readADC 0C74  
         __CFG_EBTRB$OFF 000000          __end_of_initPWM 0CC6          __end_of_isdigit 0DA4  
          ___ftpack@sign 0022                    atoi@a 000C                    atoi@s 0007  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 0CC6  
           __end_of_atoi 0A34             __end_of_main 055C            high_isr@input 001C  
                 ??_atoi 0009                   ??_main 002D            ___fttol@sign1 0084  
          __activetblptr 000002           __CFG_RETEN$OFF 000000                   _CCP2M2 007A82  
                 _CCP2M3 007A83                   _CCP3M2 007A6A                   _CCP3M3 007A6B  
                 _CCP4M2 007A52                   _CCP4M3 007A53                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000F51                   _CCPR3L 000F4E  
                 _CCPR4L 000F4B                   _T08BIT 007EAE         ___awdiv@dividend 001E  
                 _ANSEL1 007AE9                   _ANSEL2 007AEA                   _ANSEL3 007AEB  
       __end_of___ftpack 0AFA          __CFG_BBSIZ$BB2K 000000                   i2l1454 0D9A  
                 i2l1550 09BC                   i2l1534 0962                   i2l1552 09F2  
                 i2l1536 0968                   i2l1554 09F8                   i2l1546 09A8  
                 i2l1732 0060                   i2l1742 0090           __CFG_WDTEN$OFF 000000  
                 i2l1752 00CC                   i2l1746 00AC                   i2l1770 0106  
                 i2l1774 0114                   i2l1758 00EC                   i2l1778 0122  
                 _RCREG2 000F7A         __end_of___lwtoft 0D82                   _TMR0IE 007F95  
                 _SPBRG2 000F7B                   _TMR2ON 007E52                   _TXREG2 000F79  
         __CFG_XINST$OFF 000000         __end_of_high_isr 016A                   _beginB 002F  
                 _beginG 0030                   ___wmul 0D34                   _beginR 0031  
              ??___awdiv 0022           __CFG_STVREN$ON 000000                ??___ftdiv 0072  
              ??___ftmul 0029                ??___fttol 007F             readADC@tempo 0023  
                 _buffer 0033                   clear_0 0CCC                   clear_1 0CD8  
                 clear_2 0CE4                   clear_3 0CF0                   clear_4 0CFC  
       ___awdiv@quotient 0024                ??_initADC 001E    ___ftmul@f3_as_product 0067  
              ??_readADC 0020                ??_initPWM 001E                ??_isdigit 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         high_isr@F19159 002D               __accesstop 0060  __end_of__initialization 0D02  
          ___rparam_used 000001               ___ftdiv@f1 006C               ___ftdiv@f2 006F  
             ___ftdiv@f3 0076               ___ftmul@f1 0060               ___ftmul@f2 0063  
             ___fttol@f1 007B           __pcstackCOMRAM 0001               ___lwtoft@c 0026  
             __pbssBANK0 00AC               __pbssBANK1 0100               __pbssBANK2 0200  
             __pbssBANK3 0300          __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028  
         main@amplitude1 00A1           main@amplitude2 00A3           main@amplitude3 00A5  
                ?___wmul 0001                ?___ftpack 001E                  _T2CKPS0 007E50  
                _T2CKPS1 007E51                ?___lwtoft 0026         __CFG_CANMX$PORTB 000000  
                _SPBRGH2 000F7C                ?_high_isr 0001          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0AFA  
                ___ftdiv 080E          __size_of___wmul 0028                  ___ftmul 055C  
                ___fttol 06BC                  __pcinit 0CC6               ??___ftpack 0023  
                __ramtop 0F00                  __ptext0 016E                  __ptext1 0C18  
                __ptext2 0B90                  __ptext3 0AFA                  __ptext4 0DC0  
                __ptext5 0C74                  __ptext6 0D0C                  __ptext7 0DA4  
                __ptext8 0D5C                  __ptext9 06BC        __end_of_initComms 0D34  
             ??___lwtoft 0029                  _initADC 0DA4                  _readADC 0C18  
                _initPWM 0C74                  _isdigit 0D82             __size_of_pwm 0088  
      __CFG_MSSPMSK$MSK7 000000                  main@msg 0091               ??_high_isr 000E  
   end_of_initialization 0D02            __Lmediumconst 0000                  postinc0 000FEE  
                postinc2 000FDE  __size_of_initialisation 000E               main@F19165 00AC  
       __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93              ___ftdiv@exp 0079  
            ___ftmul@exp 0066           __end_of___wmul 0D5C      start_initialization 0CC6  
            __end_of_pwm 0C18                 ??___wmul 0005        __size_of___ftpack 00C6  
            __pbssCOMRAM 002D        __size_of___lwtoft 0026            __pcstackBANK0 0060  
      __size_of_high_isr 0162                __pintcode 0008           _initialisation 0DC0  
               ?___awdiv 001E                 ?___ftdiv 006C                 ?___ftmul 0060  
               ?___fttol 007B                 ?_initADC 0001                 ?_readADC 001E  
               ?_initPWM 0001                 _BAUDCON2 000FB9                 ?_isdigit 0001  
              _initComms 0D0C           ___wmul@product 0005                 _PIE3bits 000FA3  
 __end_of_initialisation 0DCE                 _PIR3bits 000FA4                 _GO_nDONE 007E11  
               _RCONbits 000FD0          main@old_SWITCH1 00A0                 _TRIGSEL0 007E0E  
               _TRIGSEL1 007E0F        ___wmul@multiplier 0001         __CFG_SOSCSEL$DIG 000000  
              main@delay 00A8               ?_initComms 0001                 __Hrparam 0000  
        ?_initialisation 0001                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awdiv 0096         __size_of___ftdiv 0152         __size_of___ftmul 0160  
       __size_of___fttol 0152           readADC@channel 0022                 ___ftpack 0A34  
            _isdigit$848 0002                 ___lwtoft 0D5C         __size_of_initADC 001C  
       __size_of_readADC 005C         __size_of_initPWM 0052         __size_of_isdigit 0022  
               __ptext10 055C                 __ptext11 080E                 __ptext12 0A34  
               __ptext14 0960                 __ptext15 0D82                 __ptext16 0D34  
               _high_isr 0008                 _compteur 0032            __size_of_atoi 00D4  
          __size_of_main 03EE                 atoi@sign 000B                 main@argc 008C  
               main@argv 008E                 main@mode 00A7      __CFG_INTOSCSEL$HIGH 000000  
             _INTCONbits 000FF2              ??_initComms 001E                 isdigit@c 0003  
               intlevel2 0000             pwm@dutycycle 008A               _RCSTA2bits 000FA6  
               pwm@color 002C       __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000  
