

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 25 14:04:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	nvBANK0
    45  0000BD                     __pnvBANK0:
    46                           	opt stack 0
    47  0000BD                     _amplitude1:
    48                           	opt stack 0
    49  0000BD                     	ds	3
    50  0000C0                     _amplitude2:
    51                           	opt stack 0
    52  0000C0                     	ds	3
    53  0000C3                     _amplitude3:
    54                           	opt stack 0
    55  0000C3                     	ds	3
    56  0000                     _CCPR2L	set	3921
    57  0000                     _CCPR3L	set	3918
    58  0000                     _CCPR4L	set	3915
    59  0000                     _ANSEL1	set	31465
    60  0000                     _ANSEL2	set	31466
    61  0000                     _ANSEL3	set	31467
    62  0000                     _CCP2M2	set	31362
    63  0000                     _CCP2M3	set	31363
    64  0000                     _CCP3M2	set	31338
    65  0000                     _CCP3M3	set	31339
    66  0000                     _CCP4M2	set	31314
    67  0000                     _CCP4M3	set	31315
    68  0000                     _DC2B0	set	31364
    69  0000                     _DC2B1	set	31365
    70  0000                     _DC3B0	set	31340
    71  0000                     _DC3B1	set	31341
    72  0000                     _DC4B0	set	31316
    73  0000                     _DC4B1	set	31317
    74  0000                     _TMR0	set	4054
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _BAUDCON2	set	4025
    78  0000                     _INTCONbits	set	4082
    79  0000                     _PIE3bits	set	4003
    80  0000                     _PIR3bits	set	4004
    81  0000                     _PR2	set	4043
    82  0000                     _RCONbits	set	4048
    83  0000                     _RCREG2	set	3962
    84  0000                     _RCSTA2bits	set	4006
    85  0000                     _SPBRG2	set	3963
    86  0000                     _SPBRGH2	set	3964
    87  0000                     _TRISBbits	set	3987
    88  0000                     _TRISC	set	3988
    89  0000                     _TXREG2	set	3961
    90  0000                     _TXSTA2bits	set	4026
    91  0000                     _ADON	set	32272
    92  0000                     _CHS0	set	32274
    93  0000                     _CHS1	set	32275
    94  0000                     _GIE	set	32663
    95  0000                     _GO_nDONE	set	32273
    96  0000                     _PEIE	set	32662
    97  0000                     _PSA	set	32427
    98  0000                     _RA6	set	31750
    99  0000                     _RC0	set	31760
   100  0000                     _RC2IF	set	32037
   101  0000                     _T08BIT	set	32430
   102  0000                     _T0CS	set	32429
   103  0000                     _T0IE	set	32661
   104  0000                     _T0IF	set	32658
   105  0000                     _T0PS0	set	32424
   106  0000                     _T0PS1	set	32425
   107  0000                     _T0PS2	set	32426
   108  0000                     _T2CKPS0	set	32336
   109  0000                     _T2CKPS1	set	32337
   110  0000                     _TMR0IE	set	32661
   111  0000                     _TMR0IP	set	32650
   112  0000                     _TMR2ON	set	32338
   113  0000                     _TRIGSEL0	set	32270
   114  0000                     _TRIGSEL1	set	32271
   115  0000                     _VCFG0	set	32268
   116  0000                     _VCFG1	set	32269
   117  0000                     _VNCFG	set	32267
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  0013A6                     __pcinit:
   123                           	opt stack 0
   124  0013A6                     start_initialization:
   125                           	opt stack 0
   126  0013A6                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to BANK3 (200 bytes)
   130  0013A6  EE03  F000         	lfsr	0,__pbssBANK3
   131  0013AA  0EC8               	movlw	200
   132  0013AC                     clear_0:
   133  0013AC  6AEE               	clrf	postinc0,c
   134  0013AE  06E8               	decf	wreg,f,c
   135  0013B0  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to BANK2 (200 bytes)
   138  0013B2  EE02  F000         	lfsr	0,__pbssBANK2
   139  0013B6  0EC8               	movlw	200
   140  0013B8                     clear_1:
   141  0013B8  6AEE               	clrf	postinc0,c
   142  0013BA  06E8               	decf	wreg,f,c
   143  0013BC  E1FD               	bnz	clear_1
   144                           
   145                           ; Clear objects allocated to BANK1 (200 bytes)
   146  0013BE  EE01  F000         	lfsr	0,__pbssBANK1
   147  0013C2  0EC8               	movlw	200
   148  0013C4                     clear_2:
   149  0013C4  6AEE               	clrf	postinc0,c
   150  0013C6  06E8               	decf	wreg,f,c
   151  0013C8  E1FD               	bnz	clear_2
   152                           
   153                           ; Clear objects allocated to BANK0 (7 bytes)
   154  0013CA  EE00  F0C6         	lfsr	0,__pbssBANK0
   155  0013CE  0E07               	movlw	7
   156  0013D0                     clear_3:
   157  0013D0  6AEE               	clrf	postinc0,c
   158  0013D2  06E8               	decf	wreg,f,c
   159  0013D4  E1FD               	bnz	clear_3
   160                           
   161                           ; Clear objects allocated to COMRAM (22 bytes)
   162  0013D6  EE00  F02D         	lfsr	0,__pbssCOMRAM
   163  0013DA  0E16               	movlw	22
   164  0013DC                     clear_4:
   165  0013DC  6AEE               	clrf	postinc0,c
   166  0013DE  06E8               	decf	wreg,f,c
   167  0013E0  E1FD               	bnz	clear_4
   168  0013E2                     end_of_initialization:
   169                           	opt stack 0
   170  0013E2                     __end_of__initialization:
   171                           	opt stack 0
   172  0013E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  0013E4  6EF8               	movwf	tblptru,c
   174  0013E6  0100               	movlb	0
   175  0013E8  EF17  F003         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  00002D                     __pbssCOMRAM:
   182                           	opt stack 0
   183  00002D                     RX2_ISR@F19173:
   184                           	opt stack 0
   185  00002D                     	ds	2
   186  00002F                     RX2_ISR@beginB:
   187                           	opt stack 0
   188  00002F                     	ds	1
   189  000030                     RX2_ISR@beginG:
   190                           	opt stack 0
   191  000030                     	ds	1
   192  000031                     RX2_ISR@beginR:
   193                           	opt stack 0
   194  000031                     	ds	1
   195  000032                     RX2_ISR@compteur:
   196                           	opt stack 0
   197  000032                     	ds	1
   198  000033                     RX2_ISR@buffer:
   199                           	opt stack 0
   200  000033                     	ds	16
   201                           tblptru	equ	0xFF8
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	bssBANK0
   206  0000C6                     __pbssBANK0:
   207                           	opt stack 0
   208  0000C6                     _millis:
   209                           	opt stack 0
   210  0000C6                     	ds	4
   211  0000CA                     _mode:
   212                           	opt stack 0
   213  0000CA                     	ds	1
   214  0000CB                     changeModeDetect@old_SWITCH1:
   215                           	opt stack 0
   216  0000CB                     	ds	1
   217  0000CC                     changeModeDetect@old_SWITCH3:
   218                           	opt stack 0
   219  0000CC                     	ds	1
   220                           tblptru	equ	0xFF8
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssBANK1
   225  000100                     __pbssBANK1:
   226                           	opt stack 0
   227  000100                     _R:
   228                           	opt stack 0
   229  000100                     	ds	200
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	bssBANK2
   235  000200                     __pbssBANK2:
   236                           	opt stack 0
   237  000200                     _G:
   238                           	opt stack 0
   239  000200                     	ds	200
   240                           tblptru	equ	0xFF8
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	bssBANK3
   245  000300                     __pbssBANK3:
   246                           	opt stack 0
   247  000300                     _B:
   248                           	opt stack 0
   249  000300                     	ds	200
   250                           tblptru	equ	0xFF8
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254                           	psect	cstackBANK0
   255  000060                     __pcstackBANK0:
   256                           	opt stack 0
   257  000060                     ??_Timer0_ISR:
   258                           
   259                           ; 0 bytes @ 0x0
   260  000060                     	ds	17
   261  000071                     ?___awdiv:
   262                           	opt stack 0
   263  000071                     ?___ftpack:
   264                           	opt stack 0
   265  000071                     ___awdiv@dividend:
   266                           	opt stack 0
   267  000071                     ___ftpack@arg:
   268                           	opt stack 0
   269                           
   270                           ; 3 bytes @ 0x11
   271  000071                     	ds	2
   272  000073                     ___awdiv@divisor:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x13
   276  000073                     	ds	1
   277  000074                     ___ftpack@exp:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x14
   281  000074                     	ds	1
   282  000075                     ___ftpack@sign:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x15
   286  000075                     	ds	1
   287  000076                     ?___lwtoft:
   288                           	opt stack 0
   289  000076                     ___lwtoft@c:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x16
   293  000076                     	ds	3
   294  000079                     ?___ftdiv:
   295                           	opt stack 0
   296  000079                     ?___ftmul:
   297                           	opt stack 0
   298  000079                     ___ftdiv@f1:
   299                           	opt stack 0
   300  000079                     ___ftmul@f1:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0x19
   304  000079                     	ds	3
   305  00007C                     ___ftdiv@f2:
   306                           	opt stack 0
   307  00007C                     ___ftmul@f2:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x1C
   311  00007C                     	ds	3
   312  00007F                     ?___ftneg:
   313                           	opt stack 0
   314  00007F                     ___ftneg@f1:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x1F
   318  00007F                     	ds	3
   319  000082                     ?___ftadd:
   320                           	opt stack 0
   321  000082                     ___ftadd@f1:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x22
   325  000082                     	ds	3
   326  000085                     ___ftadd@f2:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x25
   330  000085                     	ds	3
   331  000088                     ??___ftadd:
   332                           
   333                           ; 0 bytes @ 0x28
   334  000088                     	ds	3
   335  00008B                     ___ftadd@sign:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x2B
   339  00008B                     	ds	1
   340  00008C                     ___ftadd@exp2:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x2C
   344  00008C                     	ds	1
   345  00008D                     ___ftadd@exp1:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x2D
   349  00008D                     	ds	1
   350  00008E                     ?___fttol:
   351                           	opt stack 0
   352  00008E                     ___fttol@f1:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x2E
   356  00008E                     	ds	4
   357  000092                     ??___fttol:
   358                           
   359                           ; 0 bytes @ 0x32
   360  000092                     	ds	5
   361  000097                     ___fttol@sign1:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x37
   365  000097                     	ds	1
   366  000098                     ___fttol@lval:
   367                           	opt stack 0
   368                           
   369                           ; 4 bytes @ 0x38
   370  000098                     	ds	4
   371  00009C                     ___fttol@exp1:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x3C
   375  00009C                     	ds	1
   376  00009D                     ?___almod:
   377                           	opt stack 0
   378  00009D                     setRGB@r:
   379                           	opt stack 0
   380  00009D                     ___almod@dividend:
   381                           	opt stack 0
   382                           
   383                           ; 4 bytes @ 0x3D
   384  00009D                     	ds	2
   385  00009F                     setRGB@g:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x3F
   389  00009F                     	ds	2
   390  0000A1                     setRGB@b:
   391                           	opt stack 0
   392  0000A1                     ___almod@divisor:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x41
   396  0000A1                     	ds	4
   397  0000A5                     ___almod@counter:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x45
   401  0000A5                     	ds	1
   402  0000A6                     ___almod@sign:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x46
   406  0000A6                     	ds	1
   407  0000A7                     ??_strobe:
   408                           
   409                           ; 0 bytes @ 0x47
   410  0000A7                     	ds	5
   411  0000AC                     _strobe$1121:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x4C
   415  0000AC                     	ds	3
   416  0000AF                     _strobe$1122:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x4F
   420  0000AF                     	ds	3
   421  0000B2                     _strobe$1123:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x52
   425  0000B2                     	ds	3
   426  0000B5                     _strobe$1124:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x55
   430  0000B5                     	ds	3
   431  0000B8                     
   432                           ; 2 bytes @ 0x58
   433  0000B8                     	ds	2
   434  0000BA                     
   435                           ; 3 bytes @ 0x5A
   436  0000BA                     	ds	3
   437                           tblptru	equ	0xFF8
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           
   441                           	psect	cstackCOMRAM
   442  000001                     __pcstackCOMRAM:
   443                           	opt stack 0
   444  000001                     ??_isdigit:
   445  000001                     ?___wmul:
   446                           	opt stack 0
   447  000001                     ___wmul@multiplier:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x0
   451  000001                     	ds	1
   452  000002                     _isdigit$888:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x1
   456  000002                     	ds	1
   457  000003                     isdigit@c:
   458                           	opt stack 0
   459  000003                     ___wmul@multiplicand:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  000003                     	ds	2
   464  000005                     ___wmul@product:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x4
   468  000005                     	ds	2
   469  000007                     ?_atoi:
   470                           	opt stack 0
   471  000007                     atoi@s:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475  000007                     	ds	2
   476  000009                     ??_atoi:
   477                           
   478                           ; 0 bytes @ 0x8
   479  000009                     	ds	2
   480  00000B                     atoi@sign:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0xA
   484  00000B                     	ds	1
   485  00000C                     atoi@a:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0xB
   489  00000C                     	ds	2
   490  00000E                     ??_RX2_ISR:
   491                           
   492                           ; 0 bytes @ 0xD
   493  00000E                     	ds	14
   494  00001C                     RX2_ISR@input:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1B
   498  00001C                     	ds	2
   499  00001E                     ??___ftpack:
   500  00001E                     ?_readADC:
   501                           	opt stack 0
   502  00001E                     ___awdiv@counter:
   503                           	opt stack 0
   504  00001E                     changeModeDetect@delay:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x1D
   508  00001E                     	ds	1
   509  00001F                     ___awdiv@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1E
   513  00001F                     	ds	1
   514  000020                     ??_readADC:
   515  000020                     ___awdiv@quotient:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x1F
   519  000020                     	ds	2
   520  000022                     readADC@channel:
   521                           	opt stack 0
   522  000022                     pwm@dutycycle:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x21
   526  000022                     	ds	1
   527  000023                     readADC@tempo:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x22
   531  000023                     	ds	1
   532  000024                     ??___ftdiv:
   533  000024                     ??___ftmul:
   534  000024                     pwm@color:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x23
   538  000024                     	ds	3
   539  000027                     ___ftdiv@cntr:
   540                           	opt stack 0
   541  000027                     ___ftmul@exp:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x26
   545  000027                     	ds	1
   546  000028                     ___ftdiv@f3:
   547                           	opt stack 0
   548  000028                     ___ftmul@f3_as_product:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x27
   552  000028                     	ds	3
   553  00002B                     ___ftdiv@exp:
   554                           	opt stack 0
   555  00002B                     ___ftmul@cntr:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x2A
   559  00002B                     	ds	1
   560  00002C                     ___ftdiv@sign:
   561                           	opt stack 0
   562  00002C                     ___ftmul@sign:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x2B
   566  00002C                     	ds	1
   567  00002D                     tblptru	equ	0xFF8
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           
   571                           ; 0 bytes @ 0x2C
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 100 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  argc            2   88[BANK0 ] int 
   580 ;;  argv            3   90[BANK0 ] PTR PTR unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  2   88[BANK0 ] int 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   592 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;Total ram usage:        5 bytes
   597 ;; Hardware stack levels required when called:    8
   598 ;; This function calls:
   599 ;;		___ftmul
   600 ;;		___fttol
   601 ;;		___lwtoft
   602 ;;		_changeModeDetect
   603 ;;		_initialisation
   604 ;;		_readAllADC
   605 ;;		_setRGB
   606 ;;		_strobe
   607 ;; This function is called by:
   608 ;;		Startup code after reset
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text0
   613  00062E                     __ptext0:
   614                           	opt stack 0
   615  00062E                     _main:
   616                           	opt stack 23
   617                           
   618                           ;main.c: 102: initialisation();
   619                           
   620                           ;incstack = 0
   621  00062E  EC8C  F00A         	call	_initialisation	;wreg free
   622  000632                     l194:
   623                           
   624                           ;main.c: 110: readAllADC();
   625  000632  EC75  F008         	call	_readAllADC	;wreg free
   626                           
   627                           ;main.c: 113: changeModeDetect();
   628  000636  EC05  F007         	call	_changeModeDetect	;wreg free
   629                           
   630                           ;main.c: 116: switch (mode) {
   631  00063A  D0D2               	goto	l2551
   632  00063C                     l2543:
   633                           
   634                           ;main.c: 119: setRGB( (int)( 1023 * amplitude1),
   635                           ;main.c: 120: (int)( 1023 * amplitude2),
   636                           ;main.c: 121: (int)( 1023 * amplitude3));
   637  00063C  0EC0               	movlw	192
   638  00063E  0100               	movlb	0	; () banked
   639  000640  6F7C               	movwf	___ftmul@f2& (0+255),b
   640  000642  0E7F               	movlw	127
   641  000644  0100               	movlb	0	; () banked
   642  000646  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   643  000648  0E44               	movlw	68
   644  00064A  0100               	movlb	0	; () banked
   645  00064C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   646  00064E  C0BD  F079         	movff	_amplitude1,___ftmul@f1
   647  000652  C0BE  F07A         	movff	_amplitude1+1,___ftmul@f1+1
   648  000656  C0BF  F07B         	movff	_amplitude1+2,___ftmul@f1+2
   649  00065A  EC53  F005         	call	___ftmul	;wreg free
   650  00065E  C079  F08E         	movff	?___ftmul,___fttol@f1
   651  000662  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   652  000666  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   653  00066A  ECAA  F004         	call	___fttol	;wreg free
   654  00066E  C08E  F09D         	movff	?___fttol,setRGB@r
   655  000672  C08F  F09E         	movff	?___fttol+1,setRGB@r+1
   656  000676  0EC0               	movlw	192
   657  000678  0100               	movlb	0	; () banked
   658  00067A  6F7C               	movwf	___ftmul@f2& (0+255),b
   659  00067C  0E7F               	movlw	127
   660  00067E  0100               	movlb	0	; () banked
   661  000680  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   662  000682  0E44               	movlw	68
   663  000684  0100               	movlb	0	; () banked
   664  000686  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   665  000688  C0C0  F079         	movff	_amplitude2,___ftmul@f1
   666  00068C  C0C1  F07A         	movff	_amplitude2+1,___ftmul@f1+1
   667  000690  C0C2  F07B         	movff	_amplitude2+2,___ftmul@f1+2
   668  000694  EC53  F005         	call	___ftmul	;wreg free
   669  000698  C079  F08E         	movff	?___ftmul,___fttol@f1
   670  00069C  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   671  0006A0  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   672  0006A4  ECAA  F004         	call	___fttol	;wreg free
   673  0006A8  C08E  F09F         	movff	?___fttol,setRGB@g
   674  0006AC  C08F  F0A0         	movff	?___fttol+1,setRGB@g+1
   675  0006B0  0EC0               	movlw	192
   676  0006B2  0100               	movlb	0	; () banked
   677  0006B4  6F7C               	movwf	___ftmul@f2& (0+255),b
   678  0006B6  0E7F               	movlw	127
   679  0006B8  0100               	movlb	0	; () banked
   680  0006BA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   681  0006BC  0E44               	movlw	68
   682  0006BE  0100               	movlb	0	; () banked
   683  0006C0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   684  0006C2  C0C3  F079         	movff	_amplitude3,___ftmul@f1
   685  0006C6  C0C4  F07A         	movff	_amplitude3+1,___ftmul@f1+1
   686  0006CA  C0C5  F07B         	movff	_amplitude3+2,___ftmul@f1+2
   687  0006CE  EC53  F005         	call	___ftmul	;wreg free
   688  0006D2  C079  F08E         	movff	?___ftmul,___fttol@f1
   689  0006D6  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   690  0006DA  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   691  0006DE  ECAA  F004         	call	___fttol	;wreg free
   692  0006E2  C08E  F0A1         	movff	?___fttol,setRGB@b
   693  0006E6  C08F  F0A2         	movff	?___fttol+1,setRGB@b+1
   694  0006EA  EC0E  F00A         	call	_setRGB	;wreg free
   695                           
   696                           ;main.c: 122: break;
   697  0006EE  D7A1               	goto	l194
   698  0006F0                     l2545:
   699                           
   700                           ;main.c: 125: setRGB( (int)( (float)R[0] * amplitude1),
   701                           ;main.c: 126: (int)( (float)G[0] * amplitude2),
   702                           ;main.c: 127: (int)( (float)B[0] * amplitude3));
   703  0006F0  C0BD  F07C         	movff	_amplitude1,___ftmul@f2
   704  0006F4  C0BE  F07D         	movff	_amplitude1+1,___ftmul@f2+1
   705  0006F8  C0BF  F07E         	movff	_amplitude1+2,___ftmul@f2+2
   706  0006FC  C100  F076         	movff	_R,___lwtoft@c
   707  000700  C101  F077         	movff	_R+1,___lwtoft@c+1
   708  000704  EC24  F00A         	call	___lwtoft	;wreg free
   709  000708  C076  F079         	movff	?___lwtoft,___ftmul@f1
   710  00070C  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   711  000710  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   712  000714  EC53  F005         	call	___ftmul	;wreg free
   713  000718  C079  F08E         	movff	?___ftmul,___fttol@f1
   714  00071C  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   715  000720  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   716  000724  ECAA  F004         	call	___fttol	;wreg free
   717  000728  C08E  F09D         	movff	?___fttol,setRGB@r
   718  00072C  C08F  F09E         	movff	?___fttol+1,setRGB@r+1
   719  000730  C0C0  F07C         	movff	_amplitude2,___ftmul@f2
   720  000734  C0C1  F07D         	movff	_amplitude2+1,___ftmul@f2+1
   721  000738  C0C2  F07E         	movff	_amplitude2+2,___ftmul@f2+2
   722  00073C  C200  F076         	movff	_G,___lwtoft@c
   723  000740  C201  F077         	movff	_G+1,___lwtoft@c+1
   724  000744  EC24  F00A         	call	___lwtoft	;wreg free
   725  000748  C076  F079         	movff	?___lwtoft,___ftmul@f1
   726  00074C  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   727  000750  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   728  000754  EC53  F005         	call	___ftmul	;wreg free
   729  000758  C079  F08E         	movff	?___ftmul,___fttol@f1
   730  00075C  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   731  000760  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   732  000764  ECAA  F004         	call	___fttol	;wreg free
   733  000768  C08E  F09F         	movff	?___fttol,setRGB@g
   734  00076C  C08F  F0A0         	movff	?___fttol+1,setRGB@g+1
   735  000770  C0C3  F07C         	movff	_amplitude3,___ftmul@f2
   736  000774  C0C4  F07D         	movff	_amplitude3+1,___ftmul@f2+1
   737  000778  C0C5  F07E         	movff	_amplitude3+2,___ftmul@f2+2
   738  00077C  C300  F076         	movff	_B,___lwtoft@c
   739  000780  C301  F077         	movff	_B+1,___lwtoft@c+1
   740  000784  EC24  F00A         	call	___lwtoft	;wreg free
   741  000788  C076  F079         	movff	?___lwtoft,___ftmul@f1
   742  00078C  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   743  000790  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   744  000794  EC53  F005         	call	___ftmul	;wreg free
   745  000798  C079  F08E         	movff	?___ftmul,___fttol@f1
   746  00079C  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   747  0007A0  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   748  0007A4  ECAA  F004         	call	___fttol	;wreg free
   749  0007A8  C08E  F0A1         	movff	?___fttol,setRGB@b
   750  0007AC  C08F  F0A2         	movff	?___fttol+1,setRGB@b+1
   751  0007B0  EC0E  F00A         	call	_setRGB	;wreg free
   752                           
   753                           ;main.c: 128: break;
   754  0007B4  D73E               	goto	l194
   755  0007B6                     l2547:
   756                           
   757                           ;main.c: 131: strobe();
   758  0007B6  EC63  F000         	call	_strobe	;wreg free
   759                           
   760                           ;main.c: 132: break;
   761  0007BA  D73B               	goto	l194
   762  0007BC                     l2549:
   763                           
   764                           ;main.c: 135: setRGB(0,0,0);
   765  0007BC  0E00               	movlw	0
   766  0007BE  0100               	movlb	0	; () banked
   767  0007C0  6F9E               	movwf	(setRGB@r+1)& (0+255),b
   768  0007C2  0E00               	movlw	0
   769  0007C4  6F9D               	movwf	setRGB@r& (0+255),b
   770  0007C6  0E00               	movlw	0
   771  0007C8  0100               	movlb	0	; () banked
   772  0007CA  6FA0               	movwf	(setRGB@g+1)& (0+255),b
   773  0007CC  0E00               	movlw	0
   774  0007CE  6F9F               	movwf	setRGB@g& (0+255),b
   775  0007D0  0E00               	movlw	0
   776  0007D2  0100               	movlb	0	; () banked
   777  0007D4  6FA2               	movwf	(setRGB@b+1)& (0+255),b
   778  0007D6  0E00               	movlw	0
   779  0007D8  6FA1               	movwf	setRGB@b& (0+255),b
   780  0007DA  EC0E  F00A         	call	_setRGB	;wreg free
   781                           
   782                           ;main.c: 136: }
   783  0007DE  D729               	goto	l194
   784  0007E0                     l2551:
   785  0007E0  0100               	movlb	0	; () banked
   786  0007E2  51CA               	movf	_mode& (0+255),w,b
   787                           
   788                           ; Switch size 1, requested type "space"
   789                           ; Number of cases is 3, Range of values is 0 to 2
   790                           ; switch strategies available:
   791                           ; Name         Instructions Cycles
   792                           ; simple_byte           10     6 (average)
   793                           ;	Chosen strategy is simple_byte
   794  0007E4  0A00               	xorlw	0	; case 0
   795  0007E6  B4D8               	btfsc	status,2,c
   796  0007E8  D729               	goto	l2543
   797  0007EA  0A01               	xorlw	1	; case 1
   798  0007EC  B4D8               	btfsc	status,2,c
   799  0007EE  D780               	goto	l2545
   800  0007F0  0A03               	xorlw	3	; case 2
   801  0007F2  B4D8               	btfsc	status,2,c
   802  0007F4  D7E0               	goto	l2547
   803  0007F6  D7E2               	goto	l2549
   804                           
   805                           ; BSR set to: 0
   806                           
   807                           ; BSR set to: 0
   808  0007F8  D71C               	goto	l194
   809                           
   810                           ; BSR set to: 0
   811                           
   812                           ; BSR set to: 0
   813                           ;main.c: 137: }
   814                           ;main.c: 139: return (0);
   815                           ;	Return value of _main is never used
   816  0007FA  EF61  F000         	goto	start
   817  0007FE                     __end_of_main:
   818                           	opt stack 0
   819                           tblptru	equ	0xFF8
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _strobe *****************
   825 ;; Defined at:
   826 ;;		line 16 in file "functions.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;Total ram usage:       17 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    7
   847 ;; This function calls:
   848 ;;		___almod
   849 ;;		___ftadd
   850 ;;		___ftmul
   851 ;;		___ftneg
   852 ;;		___fttol
   853 ;;		_setRGB
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  0000C6                     __ptext1:
   861                           	opt stack 0
   862  0000C6                     _strobe:
   863                           	opt stack 23
   864                           
   865                           ;functions.c: 18: if (millis%((int)(1000*(1 - amplitude2*0.96)))<(int)(1000*(1-amplitude
      +                          2*0.96)*(amplitude3*0.94+0.06)))
   866                           
   867                           ; BSR set to: 0
   868                           ;incstack = 0
   869  0000C6  0E00               	movlw	0
   870  0000C8  0100               	movlb	0	; () banked
   871  0000CA  6F85               	movwf	___ftadd@f2& (0+255),b
   872  0000CC  0E80               	movlw	128
   873  0000CE  0100               	movlb	0	; () banked
   874  0000D0  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
   875  0000D2  0E3F               	movlw	63
   876  0000D4  0100               	movlb	0	; () banked
   877  0000D6  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
   878  0000D8  0EC3               	movlw	195
   879  0000DA  0100               	movlb	0	; () banked
   880  0000DC  6F7C               	movwf	___ftmul@f2& (0+255),b
   881  0000DE  0E75               	movlw	117
   882  0000E0  0100               	movlb	0	; () banked
   883  0000E2  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   884  0000E4  0E3F               	movlw	63
   885  0000E6  0100               	movlb	0	; () banked
   886  0000E8  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   887  0000EA  C0C0  F079         	movff	_amplitude2,___ftmul@f1
   888  0000EE  C0C1  F07A         	movff	_amplitude2+1,___ftmul@f1+1
   889  0000F2  C0C2  F07B         	movff	_amplitude2+2,___ftmul@f1+2
   890  0000F6  EC53  F005         	call	___ftmul	;wreg free
   891  0000FA  C079  F07F         	movff	?___ftmul,___ftneg@f1
   892  0000FE  C07A  F080         	movff	?___ftmul+1,___ftneg@f1+1
   893  000102  C07B  F081         	movff	?___ftmul+2,___ftneg@f1+2
   894  000106  ECF6  F009         	call	___ftneg	;wreg free
   895  00010A  C07F  F082         	movff	?___ftneg,___ftadd@f1
   896  00010E  C080  F083         	movff	?___ftneg+1,___ftadd@f1+1
   897  000112  C081  F084         	movff	?___ftneg+2,___ftadd@f1+2
   898  000116  ECD8  F001         	call	___ftadd	;wreg free
   899  00011A  C082  F0AC         	movff	?___ftadd,_strobe$1121
   900  00011E  C083  F0AD         	movff	?___ftadd+1,_strobe$1121+1
   901  000122  C084  F0AE         	movff	?___ftadd+2,_strobe$1121+2
   902                           
   903                           ;functions.c: 18: if (millis%((int)(1000*(1 - amplitude2*0.96)))<(int)(1000*(1-amplitude
      +                          2*0.96)*(amplitude3*0.94+0.06)))
   904  000126  0E00               	movlw	0
   905  000128  0100               	movlb	0	; () banked
   906  00012A  6F7C               	movwf	___ftmul@f2& (0+255),b
   907  00012C  0E7A               	movlw	122
   908  00012E  0100               	movlb	0	; () banked
   909  000130  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   910  000132  0E44               	movlw	68
   911  000134  0100               	movlb	0	; () banked
   912  000136  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   913  000138  C0AC  F079         	movff	_strobe$1121,___ftmul@f1
   914  00013C  C0AD  F07A         	movff	_strobe$1121+1,___ftmul@f1+1
   915  000140  C0AE  F07B         	movff	_strobe$1121+2,___ftmul@f1+2
   916  000144  EC53  F005         	call	___ftmul	;wreg free
   917  000148  C079  F0AF         	movff	?___ftmul,_strobe$1122
   918  00014C  C07A  F0B0         	movff	?___ftmul+1,_strobe$1122+1
   919  000150  C07B  F0B1         	movff	?___ftmul+2,_strobe$1122+2
   920                           
   921                           ;functions.c: 18: if (millis%((int)(1000*(1 - amplitude2*0.96)))<(int)(1000*(1-amplitude
      +                          2*0.96)*(amplitude3*0.94+0.06)))
   922  000154  0EC3               	movlw	195
   923  000156  0100               	movlb	0	; () banked
   924  000158  6F85               	movwf	___ftadd@f2& (0+255),b
   925  00015A  0E75               	movlw	117
   926  00015C  0100               	movlb	0	; () banked
   927  00015E  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
   928  000160  0E3D               	movlw	61
   929  000162  0100               	movlb	0	; () banked
   930  000164  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
   931  000166  0EA4               	movlw	164
   932  000168  0100               	movlb	0	; () banked
   933  00016A  6F7C               	movwf	___ftmul@f2& (0+255),b
   934  00016C  0E70               	movlw	112
   935  00016E  0100               	movlb	0	; () banked
   936  000170  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   937  000172  0E3F               	movlw	63
   938  000174  0100               	movlb	0	; () banked
   939  000176  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   940  000178  C0C3  F079         	movff	_amplitude3,___ftmul@f1
   941  00017C  C0C4  F07A         	movff	_amplitude3+1,___ftmul@f1+1
   942  000180  C0C5  F07B         	movff	_amplitude3+2,___ftmul@f1+2
   943  000184  EC53  F005         	call	___ftmul	;wreg free
   944  000188  C079  F082         	movff	?___ftmul,___ftadd@f1
   945  00018C  C07A  F083         	movff	?___ftmul+1,___ftadd@f1+1
   946  000190  C07B  F084         	movff	?___ftmul+2,___ftadd@f1+2
   947  000194  ECD8  F001         	call	___ftadd	;wreg free
   948  000198  C082  F0B2         	movff	?___ftadd,_strobe$1123
   949  00019C  C083  F0B3         	movff	?___ftadd+1,_strobe$1123+1
   950  0001A0  C084  F0B4         	movff	?___ftadd+2,_strobe$1123+2
   951                           
   952                           ;functions.c: 18: if (millis%((int)(1000*(1 - amplitude2*0.96)))<(int)(1000*(1-amplitude
      +                          2*0.96)*(amplitude3*0.94+0.06)))
   953  0001A4  0E00               	movlw	0
   954  0001A6  0100               	movlb	0	; () banked
   955  0001A8  6F85               	movwf	___ftadd@f2& (0+255),b
   956  0001AA  0E80               	movlw	128
   957  0001AC  0100               	movlb	0	; () banked
   958  0001AE  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
   959  0001B0  0E3F               	movlw	63
   960  0001B2  0100               	movlb	0	; () banked
   961  0001B4  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
   962  0001B6  0EC3               	movlw	195
   963  0001B8  0100               	movlb	0	; () banked
   964  0001BA  6F7C               	movwf	___ftmul@f2& (0+255),b
   965  0001BC  0E75               	movlw	117
   966  0001BE  0100               	movlb	0	; () banked
   967  0001C0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   968  0001C2  0E3F               	movlw	63
   969  0001C4  0100               	movlb	0	; () banked
   970  0001C6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   971  0001C8  C0C0  F079         	movff	_amplitude2,___ftmul@f1
   972  0001CC  C0C1  F07A         	movff	_amplitude2+1,___ftmul@f1+1
   973  0001D0  C0C2  F07B         	movff	_amplitude2+2,___ftmul@f1+2
   974  0001D4  EC53  F005         	call	___ftmul	;wreg free
   975  0001D8  C079  F07F         	movff	?___ftmul,___ftneg@f1
   976  0001DC  C07A  F080         	movff	?___ftmul+1,___ftneg@f1+1
   977  0001E0  C07B  F081         	movff	?___ftmul+2,___ftneg@f1+2
   978  0001E4  ECF6  F009         	call	___ftneg	;wreg free
   979  0001E8  C07F  F082         	movff	?___ftneg,___ftadd@f1
   980  0001EC  C080  F083         	movff	?___ftneg+1,___ftadd@f1+1
   981  0001F0  C081  F084         	movff	?___ftneg+2,___ftadd@f1+2
   982  0001F4  ECD8  F001         	call	___ftadd	;wreg free
   983  0001F8  C082  F0B5         	movff	?___ftadd,_strobe$1124
   984  0001FC  C083  F0B6         	movff	?___ftadd+1,_strobe$1124+1
   985  000200  C084  F0B7         	movff	?___ftadd+2,_strobe$1124+2
   986                           
   987                           ;functions.c: 18: if (millis%((int)(1000*(1 - amplitude2*0.96)))<(int)(1000*(1-amplitude
      +                          2*0.96)*(amplitude3*0.94+0.06)))
   988  000204  C0AF  F07C         	movff	_strobe$1122,___ftmul@f2
   989  000208  C0B0  F07D         	movff	_strobe$1122+1,___ftmul@f2+1
   990  00020C  C0B1  F07E         	movff	_strobe$1122+2,___ftmul@f2+2
   991  000210  C0B2  F079         	movff	_strobe$1123,___ftmul@f1
   992  000214  C0B3  F07A         	movff	_strobe$1123+1,___ftmul@f1+1
   993  000218  C0B4  F07B         	movff	_strobe$1123+2,___ftmul@f1+2
   994  00021C  EC53  F005         	call	___ftmul	;wreg free
   995  000220  C079  F08E         	movff	?___ftmul,___fttol@f1
   996  000224  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
   997  000228  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
   998  00022C  ECAA  F004         	call	___fttol	;wreg free
   999  000230  0100               	movlb	0	; () banked
  1000  000232  C08E  F0A7         	movff	?___fttol,??_strobe
  1001  000236  0100               	movlb	0	; () banked
  1002  000238  C08F  F0A8         	movff	?___fttol+1,??_strobe+1
  1003  00023C  0E00               	movlw	0
  1004  00023E  0100               	movlb	0	; () banked
  1005  000240  BFA8               	btfsc	(??_strobe+1)& (0+255),7,b
  1006  000242  0EFF               	movlw	255
  1007  000244  6FA9               	movwf	(??_strobe+2)& (0+255),b
  1008  000246  6FAA               	movwf	(??_strobe+3)& (0+255),b
  1009  000248  C0C6  F09D         	movff	_millis,___almod@dividend
  1010  00024C  C0C7  F09E         	movff	_millis+1,___almod@dividend+1
  1011  000250  C0C8  F09F         	movff	_millis+2,___almod@dividend+2
  1012  000254  C0C9  F0A0         	movff	_millis+3,___almod@dividend+3
  1013  000258  0E00               	movlw	0
  1014  00025A  0100               	movlb	0	; () banked
  1015  00025C  6F7C               	movwf	___ftmul@f2& (0+255),b
  1016  00025E  0E7A               	movlw	122
  1017  000260  0100               	movlb	0	; () banked
  1018  000262  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1019  000264  0E44               	movlw	68
  1020  000266  0100               	movlb	0	; () banked
  1021  000268  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1022  00026A  C0B5  F079         	movff	_strobe$1124,___ftmul@f1
  1023  00026E  C0B6  F07A         	movff	_strobe$1124+1,___ftmul@f1+1
  1024  000272  C0B7  F07B         	movff	_strobe$1124+2,___ftmul@f1+2
  1025  000276  EC53  F005         	call	___ftmul	;wreg free
  1026  00027A  C079  F08E         	movff	?___ftmul,___fttol@f1
  1027  00027E  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
  1028  000282  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
  1029  000286  ECAA  F004         	call	___fttol	;wreg free
  1030  00028A  0100               	movlb	0	; () banked
  1031  00028C  C08E  F0A1         	movff	?___fttol,___almod@divisor
  1032  000290  0100               	movlb	0	; () banked
  1033  000292  C08F  F0A2         	movff	?___fttol+1,___almod@divisor+1
  1034  000296  0100               	movlb	0	; () banked
  1035  000298  0E00               	movlw	0
  1036  00029A  BFA2               	btfsc	(___almod@divisor+1)& (0+255),7,b
  1037  00029C  0EFF               	movlw	-1
  1038  00029E  6FA3               	movwf	(___almod@divisor+2)& (0+255),b
  1039  0002A0  6FA4               	movwf	(___almod@divisor+3)& (0+255),b
  1040  0002A2  EC89  F007         	call	___almod	;wreg free
  1041  0002A6  0100               	movlb	0	; () banked
  1042  0002A8  51A7               	movf	??_strobe& (0+255),w,b
  1043  0002AA  0100               	movlb	0	; () banked
  1044  0002AC  5D9D               	subwf	?___almod& (0+255),w,b
  1045  0002AE  0100               	movlb	0	; () banked
  1046  0002B0  51A8               	movf	(??_strobe+1)& (0+255),w,b
  1047  0002B2  0100               	movlb	0	; () banked
  1048  0002B4  599E               	subwfb	(?___almod+1)& (0+255),w,b
  1049  0002B6  0100               	movlb	0	; () banked
  1050  0002B8  51A9               	movf	(??_strobe+2)& (0+255),w,b
  1051  0002BA  0100               	movlb	0	; () banked
  1052  0002BC  599F               	subwfb	(?___almod+2)& (0+255),w,b
  1053  0002BE  0100               	movlb	0	; () banked
  1054  0002C0  51A0               	movf	(?___almod+3)& (0+255),w,b
  1055  0002C2  0A80               	xorlw	128
  1056  0002C4  0100               	movlb	0	; () banked
  1057  0002C6  6FAB               	movwf	(??_strobe+4)& (0+255),b
  1058  0002C8  0100               	movlb	0	; () banked
  1059  0002CA  51AA               	movf	(??_strobe+3)& (0+255),w,b
  1060  0002CC  0A80               	xorlw	128
  1061  0002CE  0100               	movlb	0	; () banked
  1062  0002D0  59AB               	subwfb	(??_strobe+4)& (0+255),w,b
  1063  0002D2  B0D8               	btfsc	status,0,c
  1064  0002D4  D05A               	goto	l2539
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;functions.c: 19: setRGB( (int)(1023*amplitude1),
  1068                           ;functions.c: 20: (int)(1023*amplitude1),
  1069                           ;functions.c: 21: (int)(1023*amplitude1));
  1070  0002D6  0EC0               	movlw	192
  1071  0002D8  0100               	movlb	0	; () banked
  1072  0002DA  6F7C               	movwf	___ftmul@f2& (0+255),b
  1073  0002DC  0E7F               	movlw	127
  1074  0002DE  0100               	movlb	0	; () banked
  1075  0002E0  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1076  0002E2  0E44               	movlw	68
  1077  0002E4  0100               	movlb	0	; () banked
  1078  0002E6  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1079  0002E8  C0BD  F079         	movff	_amplitude1,___ftmul@f1
  1080  0002EC  C0BE  F07A         	movff	_amplitude1+1,___ftmul@f1+1
  1081  0002F0  C0BF  F07B         	movff	_amplitude1+2,___ftmul@f1+2
  1082  0002F4  EC53  F005         	call	___ftmul	;wreg free
  1083  0002F8  C079  F08E         	movff	?___ftmul,___fttol@f1
  1084  0002FC  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
  1085  000300  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
  1086  000304  ECAA  F004         	call	___fttol	;wreg free
  1087  000308  C08E  F09D         	movff	?___fttol,setRGB@r
  1088  00030C  C08F  F09E         	movff	?___fttol+1,setRGB@r+1
  1089  000310  0EC0               	movlw	192
  1090  000312  0100               	movlb	0	; () banked
  1091  000314  6F7C               	movwf	___ftmul@f2& (0+255),b
  1092  000316  0E7F               	movlw	127
  1093  000318  0100               	movlb	0	; () banked
  1094  00031A  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1095  00031C  0E44               	movlw	68
  1096  00031E  0100               	movlb	0	; () banked
  1097  000320  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1098  000322  C0BD  F079         	movff	_amplitude1,___ftmul@f1
  1099  000326  C0BE  F07A         	movff	_amplitude1+1,___ftmul@f1+1
  1100  00032A  C0BF  F07B         	movff	_amplitude1+2,___ftmul@f1+2
  1101  00032E  EC53  F005         	call	___ftmul	;wreg free
  1102  000332  C079  F08E         	movff	?___ftmul,___fttol@f1
  1103  000336  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
  1104  00033A  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
  1105  00033E  ECAA  F004         	call	___fttol	;wreg free
  1106  000342  C08E  F09F         	movff	?___fttol,setRGB@g
  1107  000346  C08F  F0A0         	movff	?___fttol+1,setRGB@g+1
  1108  00034A  0EC0               	movlw	192
  1109  00034C  0100               	movlb	0	; () banked
  1110  00034E  6F7C               	movwf	___ftmul@f2& (0+255),b
  1111  000350  0E7F               	movlw	127
  1112  000352  0100               	movlb	0	; () banked
  1113  000354  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1114  000356  0E44               	movlw	68
  1115  000358  0100               	movlb	0	; () banked
  1116  00035A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1117  00035C  C0BD  F079         	movff	_amplitude1,___ftmul@f1
  1118  000360  C0BE  F07A         	movff	_amplitude1+1,___ftmul@f1+1
  1119  000364  C0BF  F07B         	movff	_amplitude1+2,___ftmul@f1+2
  1120  000368  EC53  F005         	call	___ftmul	;wreg free
  1121  00036C  C079  F08E         	movff	?___ftmul,___fttol@f1
  1122  000370  C07A  F08F         	movff	?___ftmul+1,___fttol@f1+1
  1123  000374  C07B  F090         	movff	?___ftmul+2,___fttol@f1+2
  1124  000378  ECAA  F004         	call	___fttol	;wreg free
  1125  00037C  C08E  F0A1         	movff	?___fttol,setRGB@b
  1126  000380  C08F  F0A2         	movff	?___fttol+1,setRGB@b+1
  1127  000384  EC0E  F00A         	call	_setRGB	;wreg free
  1128  000388  0012               	return	
  1129  00038A                     l2539:
  1130                           
  1131                           ;functions.c: 22: else
  1132                           ;functions.c: 23: setRGB(0,0,0);
  1133  00038A  0E00               	movlw	0
  1134  00038C  0100               	movlb	0	; () banked
  1135  00038E  6F9E               	movwf	(setRGB@r+1)& (0+255),b
  1136  000390  0E00               	movlw	0
  1137  000392  6F9D               	movwf	setRGB@r& (0+255),b
  1138  000394  0E00               	movlw	0
  1139  000396  0100               	movlb	0	; () banked
  1140  000398  6FA0               	movwf	(setRGB@g+1)& (0+255),b
  1141  00039A  0E00               	movlw	0
  1142  00039C  6F9F               	movwf	setRGB@g& (0+255),b
  1143  00039E  0E00               	movlw	0
  1144  0003A0  0100               	movlb	0	; () banked
  1145  0003A2  6FA2               	movwf	(setRGB@b+1)& (0+255),b
  1146  0003A4  0E00               	movlw	0
  1147  0003A6  6FA1               	movwf	setRGB@b& (0+255),b
  1148  0003A8  EC0E  F00A         	call	_setRGB	;wreg free
  1149  0003AC  0012               	return	
  1150  0003AE  0012               	return		;funcret
  1151  0003B0                     __end_of_strobe:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _setRGB *****************
  1159 ;; Defined at:
  1160 ;;		line 9 in file "functions.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  r               2   61[BANK0 ] int 
  1163 ;;  g               2   63[BANK0 ] int 
  1164 ;;  b               2   65[BANK0 ] int 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;		None               void
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;Total ram usage:        6 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    6
  1183 ;; This function calls:
  1184 ;;		_pwm
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;;		_strobe
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text2
  1192  00141C                     __ptext2:
  1193                           	opt stack 0
  1194  00141C                     _setRGB:
  1195                           	opt stack 23
  1196                           
  1197                           ;functions.c: 11: pwm('R',r);
  1198                           
  1199                           ;incstack = 0
  1200  00141C  C09D  F022         	movff	setRGB@r,pwm@dutycycle
  1201  001420  C09E  F023         	movff	setRGB@r+1,pwm@dutycycle+1
  1202  001424  0E52               	movlw	82
  1203  001426  EC32  F009         	call	_pwm
  1204                           
  1205                           ;functions.c: 12: pwm('G',g);
  1206  00142A  C09F  F022         	movff	setRGB@g,pwm@dutycycle
  1207  00142E  C0A0  F023         	movff	setRGB@g+1,pwm@dutycycle+1
  1208  001432  0E47               	movlw	71
  1209  001434  EC32  F009         	call	_pwm
  1210                           
  1211                           ;functions.c: 13: pwm('B',b);
  1212  001438  C0A1  F022         	movff	setRGB@b,pwm@dutycycle
  1213  00143C  C0A2  F023         	movff	setRGB@b+1,pwm@dutycycle+1
  1214  001440  0E42               	movlw	66
  1215  001442  EC32  F009         	call	_pwm
  1216  001446  0012               	return		;funcret
  1217  001448                     __end_of_setRGB:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _pwm *****************
  1225 ;; Defined at:
  1226 ;;		line 4 in file "converter.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  color           1    wreg     unsigned char 
  1229 ;;  dutycycle       2   33[COMRAM] int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  color           1   35[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1244 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    5
  1248 ;; This function calls:
  1249 ;;		___awdiv
  1250 ;; This function is called by:
  1251 ;;		_setRGB
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text3
  1256  001264                     __ptext3:
  1257                           	opt stack 0
  1258  001264                     _pwm:
  1259                           	opt stack 23
  1260                           
  1261                           ;incstack = 0
  1262                           ;pwm@color stored from wreg
  1263  001264  6E24               	movwf	pwm@color,c
  1264                           
  1265                           ;converter.c: 5: switch(color){
  1266  001266  D03C               	goto	l2259
  1267  001268                     l2239:
  1268                           
  1269                           ;converter.c: 7: CCPR2L=dutycycle/4;
  1270  001268  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1271  00126C  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1272  001270  0E00               	movlw	0
  1273  001272  0100               	movlb	0	; () banked
  1274  001274  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1275  001276  0E04               	movlw	4
  1276  001278  6F73               	movwf	___awdiv@divisor& (0+255),b
  1277  00127A  ECD6  F008         	call	___awdiv	;wreg free
  1278  00127E  0100               	movlb	0	; () banked
  1279  001280  5171               	movf	?___awdiv& (0+255),w,b
  1280  001282  010F               	movlb	15	; () banked
  1281  001284  6F51               	movwf	81,b	;volatile
  1282                           
  1283                           ; BSR set to: 15
  1284                           ;converter.c: 8: DC2B1=(dutycycle/2)%1;
  1285  001286  010F               	movlb	15	; () banked
  1286  001288  9B50               	bcf	80,5,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;converter.c: 9: DC2B0=dutycycle%1;
  1290  00128A  010F               	movlb	15	; () banked
  1291  00128C  9950               	bcf	80,4,b	;volatile
  1292                           
  1293                           ;converter.c: 10: break;
  1294  00128E  0012               	return	
  1295  001290                     l2245:
  1296                           
  1297                           ;converter.c: 12: CCPR3L=dutycycle/4;
  1298  001290  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1299  001294  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1300  001298  0E00               	movlw	0
  1301  00129A  0100               	movlb	0	; () banked
  1302  00129C  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1303  00129E  0E04               	movlw	4
  1304  0012A0  6F73               	movwf	___awdiv@divisor& (0+255),b
  1305  0012A2  ECD6  F008         	call	___awdiv	;wreg free
  1306  0012A6  0100               	movlb	0	; () banked
  1307  0012A8  5171               	movf	?___awdiv& (0+255),w,b
  1308  0012AA  010F               	movlb	15	; () banked
  1309  0012AC  6F4E               	movwf	78,b	;volatile
  1310                           
  1311                           ; BSR set to: 15
  1312                           ;converter.c: 13: DC3B1=(dutycycle/2)%1;
  1313  0012AE  010F               	movlb	15	; () banked
  1314  0012B0  9B4D               	bcf	77,5,b	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317                           ;converter.c: 14: DC3B0=0;
  1318  0012B2  010F               	movlb	15	; () banked
  1319  0012B4  994D               	bcf	77,4,b	;volatile
  1320                           
  1321                           ;converter.c: 15: break;
  1322  0012B6  0012               	return	
  1323  0012B8                     l2251:
  1324                           
  1325                           ;converter.c: 17: CCPR4L=dutycycle/4;
  1326  0012B8  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1327  0012BC  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1328  0012C0  0E00               	movlw	0
  1329  0012C2  0100               	movlb	0	; () banked
  1330  0012C4  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1331  0012C6  0E04               	movlw	4
  1332  0012C8  6F73               	movwf	___awdiv@divisor& (0+255),b
  1333  0012CA  ECD6  F008         	call	___awdiv	;wreg free
  1334  0012CE  0100               	movlb	0	; () banked
  1335  0012D0  5171               	movf	?___awdiv& (0+255),w,b
  1336  0012D2  010F               	movlb	15	; () banked
  1337  0012D4  6F4B               	movwf	75,b	;volatile
  1338                           
  1339                           ; BSR set to: 15
  1340                           ;converter.c: 18: DC4B1=(dutycycle/2)%1;
  1341  0012D6  010F               	movlb	15	; () banked
  1342  0012D8  9B4A               	bcf	74,5,b	;volatile
  1343                           
  1344                           ; BSR set to: 15
  1345                           ;converter.c: 19: DC4B0=dutycycle%1;
  1346  0012DA  010F               	movlb	15	; () banked
  1347  0012DC  994A               	bcf	74,4,b	;volatile
  1348                           
  1349                           ; BSR set to: 15
  1350                           ;converter.c: 21: }
  1351                           
  1352                           ;converter.c: 20: break;
  1353  0012DE  0012               	return	
  1354  0012E0                     l2259:
  1355  0012E0  5024               	movf	pwm@color,w,c
  1356                           
  1357                           ; Switch size 1, requested type "space"
  1358                           ; Number of cases is 3, Range of values is 66 to 82
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte           10     6 (average)
  1362                           ;	Chosen strategy is simple_byte
  1363  0012E2  0A42               	xorlw	66	; case 66
  1364  0012E4  B4D8               	btfsc	status,2,c
  1365  0012E6  D7C0               	goto	l2239
  1366  0012E8  0A05               	xorlw	5	; case 71
  1367  0012EA  B4D8               	btfsc	status,2,c
  1368  0012EC  D7E5               	goto	l2251
  1369  0012EE  0A15               	xorlw	21	; case 82
  1370  0012F0  A4D8               	btfss	status,2,c
  1371  0012F2  0012               	return	
  1372  0012F4  D7CD               	goto	l2245
  1373  0012F6  0012               	return		;funcret
  1374  0012F8                     __end_of_pwm:
  1375                           	opt stack 0
  1376                           tblptru	equ	0xFF8
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function ___awdiv *****************
  1382 ;; Defined at:
  1383 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  dividend        2   17[BANK0 ] int 
  1386 ;;  divisor         2   19[BANK0 ] int 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  quotient        2   31[COMRAM] int 
  1389 ;;  sign            1   30[COMRAM] unsigned char 
  1390 ;;  counter         1   29[COMRAM] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2   17[BANK0 ] int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1401 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1403 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    4
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_pwm
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text4
  1415  0011AC                     __ptext4:
  1416                           	opt stack 0
  1417  0011AC                     ___awdiv:
  1418                           	opt stack 23
  1419                           
  1420                           ;incstack = 0
  1421  0011AC  0E00               	movlw	0
  1422  0011AE  6E1F               	movwf	___awdiv@sign,c
  1423  0011B0  0100               	movlb	0	; () banked
  1424  0011B2  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1425  0011B4  D008               	goto	l2201
  1426                           
  1427                           ; BSR set to: 0
  1428  0011B6  0100               	movlb	0	; () banked
  1429  0011B8  6D73               	negf	___awdiv@divisor& (0+255),b
  1430  0011BA  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1431  0011BC  B0D8               	btfsc	status,0,c
  1432  0011BE  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1433                           
  1434                           ; BSR set to: 0
  1435  0011C0  0E01               	movlw	1
  1436  0011C2  6E1F               	movwf	___awdiv@sign,c
  1437  0011C4  D000               	goto	l2201
  1438  0011C6                     l2201:
  1439                           
  1440                           ; BSR set to: 0
  1441  0011C6  0100               	movlb	0	; () banked
  1442  0011C8  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1443  0011CA  D008               	goto	l2207
  1444                           
  1445                           ; BSR set to: 0
  1446  0011CC  0100               	movlb	0	; () banked
  1447  0011CE  6D71               	negf	___awdiv@dividend& (0+255),b
  1448  0011D0  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1449  0011D2  B0D8               	btfsc	status,0,c
  1450  0011D4  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1451                           
  1452                           ; BSR set to: 0
  1453  0011D6  0E01               	movlw	1
  1454  0011D8  1A1F               	xorwf	___awdiv@sign,f,c
  1455  0011DA  D000               	goto	l2207
  1456  0011DC                     l2207:
  1457                           
  1458                           ; BSR set to: 0
  1459  0011DC  0E00               	movlw	0
  1460  0011DE  6E21               	movwf	___awdiv@quotient+1,c
  1461  0011E0  0E00               	movlw	0
  1462  0011E2  6E20               	movwf	___awdiv@quotient,c
  1463                           
  1464                           ; BSR set to: 0
  1465  0011E4  0100               	movlb	0	; () banked
  1466  0011E6  5173               	movf	___awdiv@divisor& (0+255),w,b
  1467  0011E8  0100               	movlb	0	; () banked
  1468  0011EA  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1469  0011EC  B4D8               	btfsc	status,2,c
  1470  0011EE  D02C               	goto	l2229
  1471                           
  1472                           ; BSR set to: 0
  1473  0011F0  0E01               	movlw	1
  1474  0011F2  6E1E               	movwf	___awdiv@counter,c
  1475  0011F4  D006               	goto	l2215
  1476  0011F6                     l2213:
  1477                           
  1478                           ; BSR set to: 0
  1479  0011F6  0100               	movlb	0	; () banked
  1480  0011F8  90D8               	bcf	status,0,c
  1481  0011FA  3773               	rlcf	___awdiv@divisor& (0+255),f,b
  1482  0011FC  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1483  0011FE  2A1E               	incf	___awdiv@counter,f,c
  1484  001200  D000               	goto	l2215
  1485  001202                     l2215:
  1486                           
  1487                           ; BSR set to: 0
  1488  001202  0100               	movlb	0	; () banked
  1489  001204  BF74               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1490  001206  D002               	goto	l2217
  1491  001208  D7F6               	goto	l2213
  1492                           
  1493                           ; BSR set to: 0
  1494  00120A  D000               	goto	l2217
  1495  00120C                     l2217:
  1496                           
  1497                           ; BSR set to: 0
  1498  00120C  90D8               	bcf	status,0,c
  1499  00120E  3620               	rlcf	___awdiv@quotient,f,c
  1500  001210  3621               	rlcf	___awdiv@quotient+1,f,c
  1501                           
  1502                           ; BSR set to: 0
  1503  001212  0100               	movlb	0	; () banked
  1504  001214  5173               	movf	___awdiv@divisor& (0+255),w,b
  1505  001216  0100               	movlb	0	; () banked
  1506  001218  5D71               	subwf	___awdiv@dividend& (0+255),w,b
  1507  00121A  0100               	movlb	0	; () banked
  1508  00121C  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1509  00121E  0100               	movlb	0	; () banked
  1510  001220  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1511  001222  A0D8               	btfss	status,0,c
  1512  001224  D00A               	goto	l2225
  1513                           
  1514                           ; BSR set to: 0
  1515  001226  0100               	movlb	0	; () banked
  1516  001228  5173               	movf	___awdiv@divisor& (0+255),w,b
  1517  00122A  0100               	movlb	0	; () banked
  1518  00122C  5F71               	subwf	___awdiv@dividend& (0+255),f,b
  1519  00122E  0100               	movlb	0	; () banked
  1520  001230  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1521  001232  0100               	movlb	0	; () banked
  1522  001234  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1523                           
  1524                           ; BSR set to: 0
  1525  001236  8020               	bsf	___awdiv@quotient,0,c
  1526  001238  D000               	goto	l2225
  1527  00123A                     l2225:
  1528                           
  1529                           ; BSR set to: 0
  1530  00123A  0100               	movlb	0	; () banked
  1531  00123C  90D8               	bcf	status,0,c
  1532  00123E  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1533  001240  3373               	rrcf	___awdiv@divisor& (0+255),f,b
  1534                           
  1535                           ; BSR set to: 0
  1536  001242  2E1E               	decfsz	___awdiv@counter,f,c
  1537  001244  D7E3               	goto	l2217
  1538                           
  1539                           ; BSR set to: 0
  1540  001246  D000               	goto	l2229
  1541  001248                     l2229:
  1542                           
  1543                           ; BSR set to: 0
  1544  001248  501F               	movf	___awdiv@sign,w,c
  1545  00124A  B4D8               	btfsc	status,2,c
  1546  00124C  D005               	goto	l2233
  1547                           
  1548                           ; BSR set to: 0
  1549  00124E  6C20               	negf	___awdiv@quotient,c
  1550  001250  1E21               	comf	___awdiv@quotient+1,f,c
  1551  001252  B0D8               	btfsc	status,0,c
  1552  001254  2A21               	incf	___awdiv@quotient+1,f,c
  1553  001256  D000               	goto	l2233
  1554  001258                     l2233:
  1555                           
  1556                           ; BSR set to: 0
  1557  001258  C020  F071         	movff	___awdiv@quotient,?___awdiv
  1558  00125C  C021  F072         	movff	___awdiv@quotient+1,?___awdiv+1
  1559  001260  0012               	return	
  1560                           
  1561                           ; BSR set to: 0
  1562                           
  1563                           ; BSR set to: 0
  1564  001262  0012               	return		;funcret
  1565  001264                     __end_of___awdiv:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function ___fttol *****************
  1573 ;; Defined at:
  1574 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  f1              3   46[BANK0 ] float 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  lval            4   56[BANK0 ] unsigned long 
  1579 ;;  exp1            1   60[BANK0 ] unsigned char 
  1580 ;;  sign1           1   55[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  4   46[BANK0 ] long 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;Total ram usage:       15 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    4
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;;		_strobe
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text5
  1606  000954                     __ptext5:
  1607                           	opt stack 0
  1608  000954                     ___fttol:
  1609                           	opt stack 25
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;incstack = 0
  1613  000954  C090  F092         	movff	___fttol@f1+2,??___fttol
  1614  000958  0100               	movlb	0	; () banked
  1615  00095A  6B93               	clrf	(??___fttol+1)& (0+255),b
  1616  00095C  6B94               	clrf	(??___fttol+2)& (0+255),b
  1617  00095E  0100               	movlb	0	; () banked
  1618  000960  358F               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1619  000962  0100               	movlb	0	; () banked
  1620  000964  3792               	rlcf	??___fttol& (0+255),f,b
  1621  000966  E301               	bnc	u1621
  1622  000968  8193               	bsf	(??___fttol+1)& (0+255),0,b
  1623  00096A                     u1621:
  1624  00096A  0100               	movlb	0	; () banked
  1625  00096C  5192               	movf	??___fttol& (0+255),w,b
  1626  00096E  0100               	movlb	0	; () banked
  1627  000970  6F9C               	movwf	___fttol@exp1& (0+255),b
  1628  000972  0100               	movlb	0	; () banked
  1629  000974  519C               	movf	___fttol@exp1& (0+255),w,b
  1630  000976  A4D8               	btfss	status,2,c
  1631  000978  D00A               	goto	l1979
  1632                           
  1633                           ; BSR set to: 0
  1634  00097A  0E00               	movlw	0
  1635  00097C  0100               	movlb	0	; () banked
  1636  00097E  6F8E               	movwf	?___fttol& (0+255),b
  1637  000980  0E00               	movlw	0
  1638  000982  6F8F               	movwf	(?___fttol+1)& (0+255),b
  1639  000984  0E00               	movlw	0
  1640  000986  6F90               	movwf	(?___fttol+2)& (0+255),b
  1641  000988  0E00               	movlw	0
  1642  00098A  6F91               	movwf	(?___fttol+3)& (0+255),b
  1643                           
  1644                           ; BSR set to: 0
  1645  00098C  0012               	return	
  1646  00098E                     l1979:
  1647                           
  1648                           ; BSR set to: 0
  1649  00098E  0E17               	movlw	23
  1650  000990  0100               	movlb	0	; () banked
  1651  000992  6F92               	movwf	??___fttol& (0+255),b
  1652  000994  C08E  F093         	movff	___fttol@f1,??___fttol+1
  1653  000998  C08F  F094         	movff	___fttol@f1+1,??___fttol+2
  1654  00099C  C090  F095         	movff	___fttol@f1+2,??___fttol+3
  1655  0009A0  0100               	movlb	0	; () banked
  1656  0009A2  2992               	incf	??___fttol& (0+255),w,b
  1657  0009A4  0100               	movlb	0	; () banked
  1658  0009A6  6F96               	movwf	(??___fttol+4)& (0+255),b
  1659  0009A8  D005               	goto	u1640
  1660  0009AA                     u1645:
  1661  0009AA  0100               	movlb	0	; () banked
  1662  0009AC  90D8               	bcf	status,0,c
  1663  0009AE  3395               	rrcf	(??___fttol+3)& (0+255),f,b
  1664  0009B0  3394               	rrcf	(??___fttol+2)& (0+255),f,b
  1665  0009B2  3393               	rrcf	(??___fttol+1)& (0+255),f,b
  1666  0009B4                     u1640:
  1667  0009B4  0100               	movlb	0	; () banked
  1668  0009B6  2F96               	decfsz	(??___fttol+4)& (0+255),f,b
  1669  0009B8  D7F8               	goto	u1645
  1670  0009BA  0100               	movlb	0	; () banked
  1671  0009BC  5193               	movf	(??___fttol+1)& (0+255),w,b
  1672  0009BE  0100               	movlb	0	; () banked
  1673  0009C0  6F97               	movwf	___fttol@sign1& (0+255),b
  1674                           
  1675                           ; BSR set to: 0
  1676  0009C2  0100               	movlb	0	; () banked
  1677  0009C4  8F8F               	bsf	(___fttol@f1+1)& (0+255),7,b
  1678                           
  1679                           ; BSR set to: 0
  1680  0009C6  0EFF               	movlw	255
  1681  0009C8  0100               	movlb	0	; () banked
  1682  0009CA  178E               	andwf	___fttol@f1& (0+255),f,b
  1683  0009CC  0EFF               	movlw	255
  1684  0009CE  0100               	movlb	0	; () banked
  1685  0009D0  178F               	andwf	(___fttol@f1+1)& (0+255),f,b
  1686  0009D2  0E00               	movlw	0
  1687  0009D4  0100               	movlb	0	; () banked
  1688  0009D6  1790               	andwf	(___fttol@f1+2)& (0+255),f,b
  1689                           
  1690                           ; BSR set to: 0
  1691  0009D8  0100               	movlb	0	; () banked
  1692  0009DA  518E               	movf	___fttol@f1& (0+255),w,b
  1693  0009DC  0100               	movlb	0	; () banked
  1694  0009DE  6F98               	movwf	___fttol@lval& (0+255),b
  1695  0009E0  0100               	movlb	0	; () banked
  1696  0009E2  518F               	movf	(___fttol@f1+1)& (0+255),w,b
  1697  0009E4  0100               	movlb	0	; () banked
  1698  0009E6  6F99               	movwf	(___fttol@lval+1)& (0+255),b
  1699  0009E8  0100               	movlb	0	; () banked
  1700  0009EA  5190               	movf	(___fttol@f1+2)& (0+255),w,b
  1701  0009EC  0100               	movlb	0	; () banked
  1702  0009EE  6F9A               	movwf	(___fttol@lval+2)& (0+255),b
  1703  0009F0  0100               	movlb	0	; () banked
  1704  0009F2  6B9B               	clrf	(___fttol@lval+3)& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707  0009F4  0E8E               	movlw	142
  1708  0009F6  0100               	movlb	0	; () banked
  1709  0009F8  5F9C               	subwf	___fttol@exp1& (0+255),f,b
  1710                           
  1711                           ; BSR set to: 0
  1712  0009FA  0100               	movlb	0	; () banked
  1713  0009FC  AF9C               	btfss	___fttol@exp1& (0+255),7,b
  1714  0009FE  D01B               	goto	l2001
  1715                           
  1716                           ; BSR set to: 0
  1717  000A00  0100               	movlb	0	; () banked
  1718  000A02  519C               	movf	___fttol@exp1& (0+255),w,b
  1719  000A04  0A80               	xorlw	128
  1720  000A06  0F8F               	addlw	143
  1721  000A08  B0D8               	btfsc	status,0,c
  1722  000A0A  D00B               	goto	l1997
  1723                           
  1724                           ; BSR set to: 0
  1725  000A0C  0E00               	movlw	0
  1726  000A0E  0100               	movlb	0	; () banked
  1727  000A10  6F8E               	movwf	?___fttol& (0+255),b
  1728  000A12  0E00               	movlw	0
  1729  000A14  6F8F               	movwf	(?___fttol+1)& (0+255),b
  1730  000A16  0E00               	movlw	0
  1731  000A18  6F90               	movwf	(?___fttol+2)& (0+255),b
  1732  000A1A  0E00               	movlw	0
  1733  000A1C  6F91               	movwf	(?___fttol+3)& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736  000A1E  0012               	return	
  1737                           
  1738                           ; BSR set to: 0
  1739  000A20  D000               	goto	l1997
  1740  000A22                     l1997:
  1741                           
  1742                           ; BSR set to: 0
  1743  000A22  0100               	movlb	0	; () banked
  1744  000A24  90D8               	bcf	status,0,c
  1745  000A26  339B               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1746  000A28  339A               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1747  000A2A  3399               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1748  000A2C  3398               	rrcf	___fttol@lval& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 0
  1751  000A2E  0100               	movlb	0	; () banked
  1752  000A30  3F9C               	incfsz	___fttol@exp1& (0+255),f,b
  1753  000A32  D7F7               	goto	l1997
  1754                           
  1755                           ; BSR set to: 0
  1756  000A34  D01F               	goto	l2011
  1757  000A36                     l2001:
  1758                           
  1759                           ; BSR set to: 0
  1760  000A36  0E17               	movlw	23
  1761  000A38  0100               	movlb	0	; () banked
  1762  000A3A  659C               	cpfsgt	___fttol@exp1& (0+255),b
  1763  000A3C  D014               	goto	l2009
  1764                           
  1765                           ; BSR set to: 0
  1766  000A3E  0E00               	movlw	0
  1767  000A40  0100               	movlb	0	; () banked
  1768  000A42  6F8E               	movwf	?___fttol& (0+255),b
  1769  000A44  0E00               	movlw	0
  1770  000A46  6F8F               	movwf	(?___fttol+1)& (0+255),b
  1771  000A48  0E00               	movlw	0
  1772  000A4A  6F90               	movwf	(?___fttol+2)& (0+255),b
  1773  000A4C  0E00               	movlw	0
  1774  000A4E  6F91               	movwf	(?___fttol+3)& (0+255),b
  1775                           
  1776                           ; BSR set to: 0
  1777  000A50  0012               	return	
  1778                           
  1779                           ; BSR set to: 0
  1780  000A52  D009               	goto	l2009
  1781  000A54                     l2007:
  1782                           
  1783                           ; BSR set to: 0
  1784  000A54  0100               	movlb	0	; () banked
  1785  000A56  90D8               	bcf	status,0,c
  1786  000A58  3798               	rlcf	___fttol@lval& (0+255),f,b
  1787  000A5A  3799               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1788  000A5C  379A               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1789  000A5E  379B               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1790  000A60  0100               	movlb	0	; () banked
  1791  000A62  079C               	decf	___fttol@exp1& (0+255),f,b
  1792  000A64  D000               	goto	l2009
  1793  000A66                     l2009:
  1794                           
  1795                           ; BSR set to: 0
  1796  000A66  0100               	movlb	0	; () banked
  1797  000A68  519C               	movf	___fttol@exp1& (0+255),w,b
  1798  000A6A  0100               	movlb	0	; () banked
  1799  000A6C  B4D8               	btfsc	status,2,c
  1800  000A6E  D002               	goto	l2011
  1801  000A70  D7F1               	goto	l2007
  1802                           
  1803                           ; BSR set to: 0
  1804  000A72  D000               	goto	l2011
  1805  000A74                     l2011:
  1806                           
  1807                           ; BSR set to: 0
  1808  000A74  0100               	movlb	0	; () banked
  1809  000A76  5197               	movf	___fttol@sign1& (0+255),w,b
  1810  000A78  0100               	movlb	0	; () banked
  1811  000A7A  B4D8               	btfsc	status,2,c
  1812  000A7C  D00A               	goto	l2015
  1813                           
  1814                           ; BSR set to: 0
  1815  000A7E  0100               	movlb	0	; () banked
  1816  000A80  1F9B               	comf	(___fttol@lval+3)& (0+255),f,b
  1817  000A82  1F9A               	comf	(___fttol@lval+2)& (0+255),f,b
  1818  000A84  1F99               	comf	(___fttol@lval+1)& (0+255),f,b
  1819  000A86  6D98               	negf	___fttol@lval& (0+255),b
  1820  000A88  0E00               	movlw	0
  1821  000A8A  2399               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1822  000A8C  239A               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1823  000A8E  239B               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1824  000A90  D000               	goto	l2015
  1825  000A92                     l2015:
  1826                           
  1827                           ; BSR set to: 0
  1828  000A92  C098  F08E         	movff	___fttol@lval,?___fttol
  1829  000A96  C099  F08F         	movff	___fttol@lval+1,?___fttol+1
  1830  000A9A  C09A  F090         	movff	___fttol@lval+2,?___fttol+2
  1831  000A9E  C09B  F091         	movff	___fttol@lval+3,?___fttol+3
  1832  000AA2  0012               	return	
  1833                           
  1834                           ; BSR set to: 0
  1835                           
  1836                           ; BSR set to: 0
  1837  000AA4  0012               	return		;funcret
  1838  000AA6                     __end_of___fttol:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function ___ftneg *****************
  1846 ;; Defined at:
  1847 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  f1              3   31[BANK0 ] float 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  3   31[BANK0 ] float 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;Total ram usage:        3 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    4
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_strobe
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text6
  1876  0013EC                     __ptext6:
  1877                           	opt stack 0
  1878  0013EC                     ___ftneg:
  1879                           	opt stack 25
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;incstack = 0
  1883  0013EC  0100               	movlb	0	; () banked
  1884  0013EE  517F               	movf	___ftneg@f1& (0+255),w,b
  1885  0013F0  0100               	movlb	0	; () banked
  1886  0013F2  1180               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  1887  0013F4  0100               	movlb	0	; () banked
  1888  0013F6  1181               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  1889  0013F8  B4D8               	btfsc	status,2,c
  1890  0013FA  D009               	goto	l738
  1891                           
  1892                           ; BSR set to: 0
  1893  0013FC  0E00               	movlw	0
  1894  0013FE  0100               	movlb	0	; () banked
  1895  001400  1B7F               	xorwf	___ftneg@f1& (0+255),f,b
  1896  001402  0E00               	movlw	0
  1897  001404  0100               	movlb	0	; () banked
  1898  001406  1B80               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  1899  001408  0E80               	movlw	128
  1900  00140A  0100               	movlb	0	; () banked
  1901  00140C  1B81               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  1902  00140E                     l738:
  1903                           
  1904                           ; BSR set to: 0
  1905  00140E  C07F  F07F         	movff	___ftneg@f1,?___ftneg
  1906  001412  C080  F080         	movff	___ftneg@f1+1,?___ftneg+1
  1907  001416  C081  F081         	movff	___ftneg@f1+2,?___ftneg+2
  1908                           
  1909                           ; BSR set to: 0
  1910  00141A  0012               	return		;funcret
  1911  00141C                     __end_of___ftneg:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function ___ftmul *****************
  1919 ;; Defined at:
  1920 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  f1              3   25[BANK0 ] float 
  1923 ;;  f2              3   28[BANK0 ] float 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  f3_as_produc    3   39[COMRAM] unsigned um
  1926 ;;  sign            1   43[COMRAM] unsigned char 
  1927 ;;  cntr            1   42[COMRAM] unsigned char 
  1928 ;;  exp             1   38[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  3   25[BANK0 ] float 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1938 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1941 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;Total ram usage:       15 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		___ftpack
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;;		_strobe
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text7
  1954  000AA6                     __ptext7:
  1955                           	opt stack 0
  1956  000AA6                     ___ftmul:
  1957                           	opt stack 24
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;incstack = 0
  1961  000AA6  C07B  F024         	movff	___ftmul@f1+2,??___ftmul
  1962  000AAA  6A25               	clrf	(??___ftmul+1)& (0+255),c
  1963  000AAC  6A26               	clrf	(??___ftmul+2)& (0+255),c
  1964  000AAE  0100               	movlb	0	; () banked
  1965  000AB0  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1966  000AB2  3624               	rlcf	??___ftmul& (0+255),f,c
  1967  000AB4  E301               	bnc	u2481
  1968  000AB6  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  1969  000AB8                     u2481:
  1970  000AB8  5024               	movf	??___ftmul,w,c
  1971  000ABA  6E27               	movwf	___ftmul@exp,c
  1972  000ABC  5027               	movf	___ftmul@exp,w,c
  1973  000ABE  A4D8               	btfss	status,2,c
  1974  000AC0  D00A               	goto	l2441
  1975                           
  1976                           ; BSR set to: 0
  1977  000AC2  0E00               	movlw	0
  1978  000AC4  0100               	movlb	0	; () banked
  1979  000AC6  6F79               	movwf	?___ftmul& (0+255),b
  1980  000AC8  0E00               	movlw	0
  1981  000ACA  0100               	movlb	0	; () banked
  1982  000ACC  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  1983  000ACE  0E00               	movlw	0
  1984  000AD0  0100               	movlb	0	; () banked
  1985  000AD2  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  1986                           
  1987                           ; BSR set to: 0
  1988  000AD4  0012               	return	
  1989  000AD6                     l2441:
  1990                           
  1991                           ; BSR set to: 0
  1992  000AD6  C07E  F024         	movff	___ftmul@f2+2,??___ftmul
  1993  000ADA  6A25               	clrf	(??___ftmul+1)& (0+255),c
  1994  000ADC  6A26               	clrf	(??___ftmul+2)& (0+255),c
  1995  000ADE  0100               	movlb	0	; () banked
  1996  000AE0  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1997  000AE2  3624               	rlcf	??___ftmul& (0+255),f,c
  1998  000AE4  E301               	bnc	u2501
  1999  000AE6  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  2000  000AE8                     u2501:
  2001  000AE8  5024               	movf	??___ftmul,w,c
  2002  000AEA  6E2C               	movwf	___ftmul@sign,c
  2003  000AEC  502C               	movf	___ftmul@sign,w,c
  2004  000AEE  A4D8               	btfss	status,2,c
  2005  000AF0  D00A               	goto	l2447
  2006                           
  2007                           ; BSR set to: 0
  2008  000AF2  0E00               	movlw	0
  2009  000AF4  0100               	movlb	0	; () banked
  2010  000AF6  6F79               	movwf	?___ftmul& (0+255),b
  2011  000AF8  0E00               	movlw	0
  2012  000AFA  0100               	movlb	0	; () banked
  2013  000AFC  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  2014  000AFE  0E00               	movlw	0
  2015  000B00  0100               	movlb	0	; () banked
  2016  000B02  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019  000B04  0012               	return	
  2020  000B06                     l2447:
  2021                           
  2022                           ; BSR set to: 0
  2023  000B06  502C               	movf	___ftmul@sign,w,c
  2024  000B08  0F7B               	addlw	123
  2025  000B0A  2627               	addwf	___ftmul@exp,f,c
  2026                           
  2027                           ; BSR set to: 0
  2028  000B0C  C07B  F02C         	movff	___ftmul@f1+2,___ftmul@sign
  2029  000B10  0100               	movlb	0	; () banked
  2030  000B12  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2031  000B14  1A2C               	xorwf	___ftmul@sign,f,c
  2032  000B16  0E80               	movlw	128
  2033  000B18  162C               	andwf	___ftmul@sign,f,c
  2034                           
  2035                           ; BSR set to: 0
  2036  000B1A  0100               	movlb	0	; () banked
  2037  000B1C  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2038                           
  2039                           ; BSR set to: 0
  2040  000B1E  0100               	movlb	0	; () banked
  2041  000B20  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2042                           
  2043                           ; BSR set to: 0
  2044  000B22  0EFF               	movlw	255
  2045  000B24  0100               	movlb	0	; () banked
  2046  000B26  177C               	andwf	___ftmul@f2& (0+255),f,b
  2047  000B28  0EFF               	movlw	255
  2048  000B2A  0100               	movlb	0	; () banked
  2049  000B2C  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2050  000B2E  0E00               	movlw	0
  2051  000B30  0100               	movlb	0	; () banked
  2052  000B32  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2053                           
  2054                           ; BSR set to: 0
  2055  000B34  0E00               	movlw	0
  2056  000B36  6E28               	movwf	___ftmul@f3_as_product,c
  2057  000B38  0E00               	movlw	0
  2058  000B3A  6E29               	movwf	___ftmul@f3_as_product+1,c
  2059  000B3C  0E00               	movlw	0
  2060  000B3E  6E2A               	movwf	___ftmul@f3_as_product+2,c
  2061                           
  2062                           ; BSR set to: 0
  2063  000B40  0E07               	movlw	7
  2064  000B42  6E2B               	movwf	___ftmul@cntr,c
  2065  000B44  D000               	goto	l2461
  2066  000B46                     l2461:
  2067                           
  2068                           ; BSR set to: 0
  2069  000B46  0100               	movlb	0	; () banked
  2070  000B48  A179               	btfss	___ftmul@f1& (0+255),0,b
  2071  000B4A  D00A               	goto	l2465
  2072                           
  2073                           ; BSR set to: 0
  2074  000B4C  0100               	movlb	0	; () banked
  2075  000B4E  517C               	movf	___ftmul@f2& (0+255),w,b
  2076  000B50  2628               	addwf	___ftmul@f3_as_product,f,c
  2077  000B52  0100               	movlb	0	; () banked
  2078  000B54  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2079  000B56  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  2080  000B58  0100               	movlb	0	; () banked
  2081  000B5A  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2082  000B5C  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  2083  000B5E  D000               	goto	l2465
  2084  000B60                     l2465:
  2085                           
  2086                           ; BSR set to: 0
  2087  000B60  0100               	movlb	0	; () banked
  2088  000B62  90D8               	bcf	status,0,c
  2089  000B64  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2090  000B66  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2091  000B68  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2092  000B6A  0100               	movlb	0	; () banked
  2093  000B6C  90D8               	bcf	status,0,c
  2094  000B6E  377C               	rlcf	___ftmul@f2& (0+255),f,b
  2095  000B70  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2096  000B72  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2097                           
  2098                           ; BSR set to: 0
  2099  000B74  2E2B               	decfsz	___ftmul@cntr,f,c
  2100  000B76  D7E7               	goto	l2461
  2101  000B78  D000               	goto	l2469
  2102  000B7A                     l2469:
  2103                           
  2104                           ; BSR set to: 0
  2105  000B7A  0E09               	movlw	9
  2106  000B7C  6E2B               	movwf	___ftmul@cntr,c
  2107  000B7E  D000               	goto	l2471
  2108  000B80                     l2471:
  2109                           
  2110                           ; BSR set to: 0
  2111  000B80  0100               	movlb	0	; () banked
  2112  000B82  A179               	btfss	___ftmul@f1& (0+255),0,b
  2113  000B84  D00A               	goto	l2475
  2114                           
  2115                           ; BSR set to: 0
  2116  000B86  0100               	movlb	0	; () banked
  2117  000B88  517C               	movf	___ftmul@f2& (0+255),w,b
  2118  000B8A  2628               	addwf	___ftmul@f3_as_product,f,c
  2119  000B8C  0100               	movlb	0	; () banked
  2120  000B8E  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2121  000B90  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  2122  000B92  0100               	movlb	0	; () banked
  2123  000B94  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2124  000B96  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  2125  000B98  D000               	goto	l2475
  2126  000B9A                     l2475:
  2127                           
  2128                           ; BSR set to: 0
  2129  000B9A  0100               	movlb	0	; () banked
  2130  000B9C  90D8               	bcf	status,0,c
  2131  000B9E  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2132  000BA0  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2133  000BA2  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2134  000BA4  90D8               	bcf	status,0,c
  2135  000BA6  322A               	rrcf	___ftmul@f3_as_product+2,f,c
  2136  000BA8  3229               	rrcf	___ftmul@f3_as_product+1,f,c
  2137  000BAA  3228               	rrcf	___ftmul@f3_as_product,f,c
  2138                           
  2139                           ; BSR set to: 0
  2140  000BAC  2E2B               	decfsz	___ftmul@cntr,f,c
  2141  000BAE  D7E8               	goto	l2471
  2142  000BB0  D000               	goto	l2479
  2143  000BB2                     l2479:
  2144                           
  2145                           ; BSR set to: 0
  2146  000BB2  C028  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  2147  000BB6  C029  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2148  000BBA  C02A  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2149  000BBE  C027  F074         	movff	___ftmul@exp,___ftpack@exp
  2150  000BC2  C02C  F075         	movff	___ftmul@sign,___ftpack@sign
  2151  000BC6  EC81  F006         	call	___ftpack	;wreg free
  2152  000BCA  C071  F079         	movff	?___ftpack,?___ftmul
  2153  000BCE  C072  F07A         	movff	?___ftpack+1,?___ftmul+1
  2154  000BD2  C073  F07B         	movff	?___ftpack+2,?___ftmul+2
  2155  000BD6  0012               	return	
  2156  000BD8  0012               	return		;funcret
  2157  000BDA                     __end_of___ftmul:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function ___ftadd *****************
  2165 ;; Defined at:
  2166 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  f1              3   34[BANK0 ] float 
  2169 ;;  f2              3   37[BANK0 ] float 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  exp1            1   45[BANK0 ] unsigned char 
  2172 ;;  exp2            1   44[BANK0 ] unsigned char 
  2173 ;;  sign            1   43[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  3   34[BANK0 ] float 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:       12 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    5
  2190 ;; This function calls:
  2191 ;;		___ftpack
  2192 ;; This function is called by:
  2193 ;;		_strobe
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text8
  2198  0003B0                     __ptext8:
  2199                           	opt stack 0
  2200  0003B0                     ___ftadd:
  2201                           	opt stack 24
  2202                           
  2203                           ;incstack = 0
  2204  0003B0  C084  F088         	movff	___ftadd@f1+2,??___ftadd
  2205  0003B4  0100               	movlb	0	; () banked
  2206  0003B6  6B89               	clrf	(??___ftadd+1)& (0+255),b
  2207  0003B8  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  2208  0003BA  0100               	movlb	0	; () banked
  2209  0003BC  3583               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2210  0003BE  0100               	movlb	0	; () banked
  2211  0003C0  3788               	rlcf	??___ftadd& (0+255),f,b
  2212  0003C2  E301               	bnc	u2221
  2213  0003C4  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  2214  0003C6                     u2221:
  2215  0003C6  0100               	movlb	0	; () banked
  2216  0003C8  5188               	movf	??___ftadd& (0+255),w,b
  2217  0003CA  0100               	movlb	0	; () banked
  2218  0003CC  6F8D               	movwf	___ftadd@exp1& (0+255),b
  2219  0003CE  C087  F088         	movff	___ftadd@f2+2,??___ftadd
  2220  0003D2  0100               	movlb	0	; () banked
  2221  0003D4  6B89               	clrf	(??___ftadd+1)& (0+255),b
  2222  0003D6  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  2223  0003D8  0100               	movlb	0	; () banked
  2224  0003DA  3586               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2225  0003DC  0100               	movlb	0	; () banked
  2226  0003DE  3788               	rlcf	??___ftadd& (0+255),f,b
  2227  0003E0  E301               	bnc	u2231
  2228  0003E2  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  2229  0003E4                     u2231:
  2230  0003E4  0100               	movlb	0	; () banked
  2231  0003E6  5188               	movf	??___ftadd& (0+255),w,b
  2232  0003E8  0100               	movlb	0	; () banked
  2233  0003EA  6F8C               	movwf	___ftadd@exp2& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236  0003EC  0100               	movlb	0	; () banked
  2237  0003EE  518D               	movf	___ftadd@exp1& (0+255),w,b
  2238  0003F0  0100               	movlb	0	; () banked
  2239  0003F2  B4D8               	btfsc	status,2,c
  2240  0003F4  D011               	goto	l681
  2241                           
  2242                           ; BSR set to: 0
  2243  0003F6  0100               	movlb	0	; () banked
  2244  0003F8  518C               	movf	___ftadd@exp2& (0+255),w,b
  2245  0003FA  0100               	movlb	0	; () banked
  2246  0003FC  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  2247  0003FE  B0D8               	btfsc	status,0,c
  2248  000400  D012               	goto	l2327
  2249                           
  2250                           ; BSR set to: 0
  2251  000402  0100               	movlb	0	; () banked
  2252  000404  518D               	movf	___ftadd@exp1& (0+255),w,b
  2253  000406  0800               	sublw	0
  2254  000408  0100               	movlb	0	; () banked
  2255  00040A  258C               	addwf	___ftadd@exp2& (0+255),w,b
  2256  00040C  0100               	movlb	0	; () banked
  2257  00040E  6F88               	movwf	??___ftadd& (0+255),b
  2258  000410  0E18               	movlw	24
  2259  000412  0100               	movlb	0	; () banked
  2260  000414  6588               	cpfsgt	??___ftadd& (0+255),b
  2261  000416  D007               	goto	l2327
  2262  000418                     l681:
  2263                           
  2264                           ; BSR set to: 0
  2265  000418  C085  F082         	movff	___ftadd@f2,?___ftadd
  2266  00041C  C086  F083         	movff	___ftadd@f2+1,?___ftadd+1
  2267  000420  C087  F084         	movff	___ftadd@f2+2,?___ftadd+2
  2268  000424  0012               	return	
  2269  000426                     l2327:
  2270                           
  2271                           ; BSR set to: 0
  2272  000426  0100               	movlb	0	; () banked
  2273  000428  518C               	movf	___ftadd@exp2& (0+255),w,b
  2274  00042A  0100               	movlb	0	; () banked
  2275  00042C  B4D8               	btfsc	status,2,c
  2276  00042E  D011               	goto	l685
  2277                           
  2278                           ; BSR set to: 0
  2279  000430  0100               	movlb	0	; () banked
  2280  000432  518D               	movf	___ftadd@exp1& (0+255),w,b
  2281  000434  0100               	movlb	0	; () banked
  2282  000436  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  2283  000438  B0D8               	btfsc	status,0,c
  2284  00043A  D012               	goto	l2333
  2285                           
  2286                           ; BSR set to: 0
  2287  00043C  0100               	movlb	0	; () banked
  2288  00043E  518C               	movf	___ftadd@exp2& (0+255),w,b
  2289  000440  0800               	sublw	0
  2290  000442  0100               	movlb	0	; () banked
  2291  000444  258D               	addwf	___ftadd@exp1& (0+255),w,b
  2292  000446  0100               	movlb	0	; () banked
  2293  000448  6F88               	movwf	??___ftadd& (0+255),b
  2294  00044A  0E18               	movlw	24
  2295  00044C  0100               	movlb	0	; () banked
  2296  00044E  6588               	cpfsgt	??___ftadd& (0+255),b
  2297  000450  D007               	goto	l2333
  2298  000452                     l685:
  2299                           
  2300                           ; BSR set to: 0
  2301  000452  C082  F082         	movff	___ftadd@f1,?___ftadd
  2302  000456  C083  F083         	movff	___ftadd@f1+1,?___ftadd+1
  2303  00045A  C084  F084         	movff	___ftadd@f1+2,?___ftadd+2
  2304  00045E  0012               	return	
  2305  000460                     l2333:
  2306                           
  2307                           ; BSR set to: 0
  2308  000460  0E06               	movlw	6
  2309  000462  0100               	movlb	0	; () banked
  2310  000464  6F8B               	movwf	___ftadd@sign& (0+255),b
  2311                           
  2312                           ; BSR set to: 0
  2313  000466  0100               	movlb	0	; () banked
  2314  000468  AF84               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2315  00046A  D003               	goto	l2339
  2316                           
  2317                           ; BSR set to: 0
  2318  00046C  0100               	movlb	0	; () banked
  2319  00046E  8F8B               	bsf	___ftadd@sign& (0+255),7,b
  2320  000470  D000               	goto	l2339
  2321  000472                     l2339:
  2322                           
  2323                           ; BSR set to: 0
  2324  000472  0100               	movlb	0	; () banked
  2325  000474  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2326  000476  D002               	goto	l687
  2327                           
  2328                           ; BSR set to: 0
  2329  000478  0100               	movlb	0	; () banked
  2330  00047A  8D8B               	bsf	___ftadd@sign& (0+255),6,b
  2331  00047C                     l687:
  2332                           
  2333                           ; BSR set to: 0
  2334  00047C  0100               	movlb	0	; () banked
  2335  00047E  8F83               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2336                           
  2337                           ; BSR set to: 0
  2338  000480  0EFF               	movlw	255
  2339  000482  0100               	movlb	0	; () banked
  2340  000484  1782               	andwf	___ftadd@f1& (0+255),f,b
  2341  000486  0EFF               	movlw	255
  2342  000488  0100               	movlb	0	; () banked
  2343  00048A  1783               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2344  00048C  0E00               	movlw	0
  2345  00048E  0100               	movlb	0	; () banked
  2346  000490  1784               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2347  000492  0100               	movlb	0	; () banked
  2348  000494  8F86               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2349                           
  2350                           ; BSR set to: 0
  2351  000496  0EFF               	movlw	255
  2352  000498  0100               	movlb	0	; () banked
  2353  00049A  1785               	andwf	___ftadd@f2& (0+255),f,b
  2354  00049C  0EFF               	movlw	255
  2355  00049E  0100               	movlb	0	; () banked
  2356  0004A0  1786               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2357  0004A2  0E00               	movlw	0
  2358  0004A4  0100               	movlb	0	; () banked
  2359  0004A6  1787               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2360                           
  2361                           ; BSR set to: 0
  2362  0004A8  0100               	movlb	0	; () banked
  2363  0004AA  518C               	movf	___ftadd@exp2& (0+255),w,b
  2364  0004AC  0100               	movlb	0	; () banked
  2365  0004AE  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  2366  0004B0  B0D8               	btfsc	status,0,c
  2367  0004B2  D028               	goto	l2359
  2368  0004B4                     l2349:
  2369                           
  2370                           ; BSR set to: 0
  2371  0004B4  0100               	movlb	0	; () banked
  2372  0004B6  90D8               	bcf	status,0,c
  2373  0004B8  3785               	rlcf	___ftadd@f2& (0+255),f,b
  2374  0004BA  3786               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2375  0004BC  3787               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2376  0004BE  0100               	movlb	0	; () banked
  2377  0004C0  078C               	decf	___ftadd@exp2& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380  0004C2  0100               	movlb	0	; () banked
  2381  0004C4  518D               	movf	___ftadd@exp1& (0+255),w,b
  2382  0004C6  0100               	movlb	0	; () banked
  2383  0004C8  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  2384  0004CA  B4D8               	btfsc	status,2,c
  2385  0004CC  D013               	goto	l2357
  2386                           
  2387                           ; BSR set to: 0
  2388  0004CE  0100               	movlb	0	; () banked
  2389  0004D0  078B               	decf	___ftadd@sign& (0+255),f,b
  2390  0004D2  C08B  F088         	movff	___ftadd@sign,??___ftadd
  2391  0004D6  0E07               	movlw	7
  2392  0004D8  0100               	movlb	0	; () banked
  2393  0004DA  1788               	andwf	??___ftadd& (0+255),f,b
  2394  0004DC  B4D8               	btfsc	status,2,c
  2395  0004DE  D00A               	goto	l2357
  2396  0004E0  D7E9               	goto	l2349
  2397                           
  2398                           ; BSR set to: 0
  2399                           
  2400                           ; BSR set to: 0
  2401  0004E2  D008               	goto	l2357
  2402  0004E4                     l2355:
  2403                           
  2404                           ; BSR set to: 0
  2405  0004E4  0100               	movlb	0	; () banked
  2406  0004E6  90D8               	bcf	status,0,c
  2407  0004E8  3384               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2408  0004EA  3383               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2409  0004EC  3382               	rrcf	___ftadd@f1& (0+255),f,b
  2410  0004EE  0100               	movlb	0	; () banked
  2411  0004F0  2B8D               	incf	___ftadd@exp1& (0+255),f,b
  2412  0004F2  D000               	goto	l2357
  2413  0004F4                     l2357:
  2414                           
  2415                           ; BSR set to: 0
  2416  0004F4  0100               	movlb	0	; () banked
  2417  0004F6  518C               	movf	___ftadd@exp2& (0+255),w,b
  2418  0004F8  0100               	movlb	0	; () banked
  2419  0004FA  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  2420  0004FC  B4D8               	btfsc	status,2,c
  2421  0004FE  D030               	goto	l696
  2422  000500  D7F1               	goto	l2355
  2423                           
  2424                           ; BSR set to: 0
  2425  000502  D02E               	goto	l696
  2426  000504                     l2359:
  2427                           
  2428                           ; BSR set to: 0
  2429  000504  0100               	movlb	0	; () banked
  2430  000506  518D               	movf	___ftadd@exp1& (0+255),w,b
  2431  000508  0100               	movlb	0	; () banked
  2432  00050A  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  2433  00050C  B0D8               	btfsc	status,0,c
  2434  00050E  D028               	goto	l696
  2435  000510                     l2361:
  2436                           
  2437                           ; BSR set to: 0
  2438  000510  0100               	movlb	0	; () banked
  2439  000512  90D8               	bcf	status,0,c
  2440  000514  3782               	rlcf	___ftadd@f1& (0+255),f,b
  2441  000516  3783               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2442  000518  3784               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2443  00051A  0100               	movlb	0	; () banked
  2444  00051C  078D               	decf	___ftadd@exp1& (0+255),f,b
  2445                           
  2446                           ; BSR set to: 0
  2447  00051E  0100               	movlb	0	; () banked
  2448  000520  518D               	movf	___ftadd@exp1& (0+255),w,b
  2449  000522  0100               	movlb	0	; () banked
  2450  000524  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  2451  000526  B4D8               	btfsc	status,2,c
  2452  000528  D013               	goto	l2369
  2453                           
  2454                           ; BSR set to: 0
  2455  00052A  0100               	movlb	0	; () banked
  2456  00052C  078B               	decf	___ftadd@sign& (0+255),f,b
  2457  00052E  C08B  F088         	movff	___ftadd@sign,??___ftadd
  2458  000532  0E07               	movlw	7
  2459  000534  0100               	movlb	0	; () banked
  2460  000536  1788               	andwf	??___ftadd& (0+255),f,b
  2461  000538  B4D8               	btfsc	status,2,c
  2462  00053A  D00A               	goto	l2369
  2463  00053C  D7E9               	goto	l2361
  2464                           
  2465                           ; BSR set to: 0
  2466                           
  2467                           ; BSR set to: 0
  2468  00053E  D008               	goto	l2369
  2469  000540                     l2367:
  2470                           
  2471                           ; BSR set to: 0
  2472  000540  0100               	movlb	0	; () banked
  2473  000542  90D8               	bcf	status,0,c
  2474  000544  3387               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2475  000546  3386               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2476  000548  3385               	rrcf	___ftadd@f2& (0+255),f,b
  2477  00054A  0100               	movlb	0	; () banked
  2478  00054C  2B8C               	incf	___ftadd@exp2& (0+255),f,b
  2479  00054E  D000               	goto	l2369
  2480  000550                     l2369:
  2481                           
  2482                           ; BSR set to: 0
  2483  000550  0100               	movlb	0	; () banked
  2484  000552  518C               	movf	___ftadd@exp2& (0+255),w,b
  2485  000554  0100               	movlb	0	; () banked
  2486  000556  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  2487  000558  B4D8               	btfsc	status,2,c
  2488  00055A  D002               	goto	l696
  2489  00055C  D7F1               	goto	l2367
  2490                           
  2491                           ; BSR set to: 0
  2492  00055E  D000               	goto	l696
  2493  000560                     l696:
  2494                           
  2495                           ; BSR set to: 0
  2496  000560  0100               	movlb	0	; () banked
  2497  000562  AF8B               	btfss	___ftadd@sign& (0+255),7,b
  2498  000564  D012               	goto	l705
  2499                           
  2500                           ; BSR set to: 0
  2501  000566  0EFF               	movlw	255
  2502  000568  0100               	movlb	0	; () banked
  2503  00056A  1B82               	xorwf	___ftadd@f1& (0+255),f,b
  2504  00056C  0EFF               	movlw	255
  2505  00056E  0100               	movlb	0	; () banked
  2506  000570  1B83               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2507  000572  0EFF               	movlw	255
  2508  000574  0100               	movlb	0	; () banked
  2509  000576  1B84               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2510  000578  0E01               	movlw	1
  2511  00057A  0100               	movlb	0	; () banked
  2512  00057C  2782               	addwf	___ftadd@f1& (0+255),f,b
  2513  00057E  0E00               	movlw	0
  2514  000580  0100               	movlb	0	; () banked
  2515  000582  2383               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2516  000584  0E00               	movlw	0
  2517  000586  0100               	movlb	0	; () banked
  2518  000588  2384               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2519  00058A                     l705:
  2520                           
  2521                           ; BSR set to: 0
  2522  00058A  0100               	movlb	0	; () banked
  2523  00058C  AD8B               	btfss	___ftadd@sign& (0+255),6,b
  2524  00058E  D013               	goto	l2375
  2525                           
  2526                           ; BSR set to: 0
  2527  000590  0EFF               	movlw	255
  2528  000592  0100               	movlb	0	; () banked
  2529  000594  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  2530  000596  0EFF               	movlw	255
  2531  000598  0100               	movlb	0	; () banked
  2532  00059A  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2533  00059C  0EFF               	movlw	255
  2534  00059E  0100               	movlb	0	; () banked
  2535  0005A0  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2536  0005A2  0E01               	movlw	1
  2537  0005A4  0100               	movlb	0	; () banked
  2538  0005A6  2785               	addwf	___ftadd@f2& (0+255),f,b
  2539  0005A8  0E00               	movlw	0
  2540  0005AA  0100               	movlb	0	; () banked
  2541  0005AC  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2542  0005AE  0E00               	movlw	0
  2543  0005B0  0100               	movlb	0	; () banked
  2544  0005B2  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2545  0005B4  D000               	goto	l2375
  2546  0005B6                     l2375:
  2547                           
  2548                           ; BSR set to: 0
  2549  0005B6  0E00               	movlw	0
  2550  0005B8  0100               	movlb	0	; () banked
  2551  0005BA  6F8B               	movwf	___ftadd@sign& (0+255),b
  2552                           
  2553                           ; BSR set to: 0
  2554  0005BC  0100               	movlb	0	; () banked
  2555  0005BE  5182               	movf	___ftadd@f1& (0+255),w,b
  2556  0005C0  0100               	movlb	0	; () banked
  2557  0005C2  2785               	addwf	___ftadd@f2& (0+255),f,b
  2558  0005C4  0100               	movlb	0	; () banked
  2559  0005C6  5183               	movf	(___ftadd@f1+1)& (0+255),w,b
  2560  0005C8  0100               	movlb	0	; () banked
  2561  0005CA  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2562  0005CC  0100               	movlb	0	; () banked
  2563  0005CE  5184               	movf	(___ftadd@f1+2)& (0+255),w,b
  2564  0005D0  0100               	movlb	0	; () banked
  2565  0005D2  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2566                           
  2567                           ; BSR set to: 0
  2568  0005D4  0100               	movlb	0	; () banked
  2569  0005D6  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2570  0005D8  D016               	goto	l2385
  2571                           
  2572                           ; BSR set to: 0
  2573  0005DA  0EFF               	movlw	255
  2574  0005DC  0100               	movlb	0	; () banked
  2575  0005DE  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  2576  0005E0  0EFF               	movlw	255
  2577  0005E2  0100               	movlb	0	; () banked
  2578  0005E4  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2579  0005E6  0EFF               	movlw	255
  2580  0005E8  0100               	movlb	0	; () banked
  2581  0005EA  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2582  0005EC  0E01               	movlw	1
  2583  0005EE  0100               	movlb	0	; () banked
  2584  0005F0  2785               	addwf	___ftadd@f2& (0+255),f,b
  2585  0005F2  0E00               	movlw	0
  2586  0005F4  0100               	movlb	0	; () banked
  2587  0005F6  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2588  0005F8  0E00               	movlw	0
  2589  0005FA  0100               	movlb	0	; () banked
  2590  0005FC  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2591                           
  2592                           ; BSR set to: 0
  2593  0005FE  0E01               	movlw	1
  2594  000600  0100               	movlb	0	; () banked
  2595  000602  6F8B               	movwf	___ftadd@sign& (0+255),b
  2596  000604  D000               	goto	l2385
  2597  000606                     l2385:
  2598                           
  2599                           ; BSR set to: 0
  2600  000606  C085  F071         	movff	___ftadd@f2,___ftpack@arg
  2601  00060A  C086  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
  2602  00060E  C087  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
  2603  000612  C08D  F074         	movff	___ftadd@exp1,___ftpack@exp
  2604  000616  C08B  F075         	movff	___ftadd@sign,___ftpack@sign
  2605  00061A  EC81  F006         	call	___ftpack	;wreg free
  2606  00061E  C071  F082         	movff	?___ftpack,?___ftadd
  2607  000622  C072  F083         	movff	?___ftpack+1,?___ftadd+1
  2608  000626  C073  F084         	movff	?___ftpack+2,?___ftadd+2
  2609  00062A  0012               	return	
  2610  00062C  0012               	return		;funcret
  2611  00062E                     __end_of___ftadd:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function ___almod *****************
  2619 ;; Defined at:
  2620 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/almod.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  dividend        4   61[BANK0 ] long 
  2623 ;;  divisor         4   65[BANK0 ] long 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  sign            1   70[BANK0 ] unsigned char 
  2626 ;;  counter         1   69[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  4   61[BANK0 ] long 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2636 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;Total ram usage:       10 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    4
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_strobe
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text9
  2651  000F12                     __ptext9:
  2652                           	opt stack 0
  2653  000F12                     ___almod:
  2654                           	opt stack 25
  2655                           
  2656                           ;incstack = 0
  2657  000F12  0E00               	movlw	0
  2658  000F14  0100               	movlb	0	; () banked
  2659  000F16  6FA6               	movwf	___almod@sign& (0+255),b
  2660                           
  2661                           ; BSR set to: 0
  2662  000F18  0100               	movlb	0	; () banked
  2663  000F1A  AFA0               	btfss	(___almod@dividend+3)& (0+255),7,b
  2664  000F1C  D00D               	goto	l1765
  2665                           
  2666                           ; BSR set to: 0
  2667  000F1E  0100               	movlb	0	; () banked
  2668  000F20  1FA0               	comf	(___almod@dividend+3)& (0+255),f,b
  2669  000F22  1F9F               	comf	(___almod@dividend+2)& (0+255),f,b
  2670  000F24  1F9E               	comf	(___almod@dividend+1)& (0+255),f,b
  2671  000F26  6D9D               	negf	___almod@dividend& (0+255),b
  2672  000F28  0E00               	movlw	0
  2673  000F2A  239E               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2674  000F2C  239F               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2675  000F2E  23A0               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2676                           
  2677                           ; BSR set to: 0
  2678  000F30  0E01               	movlw	1
  2679  000F32  0100               	movlb	0	; () banked
  2680  000F34  6FA6               	movwf	___almod@sign& (0+255),b
  2681  000F36  D000               	goto	l1765
  2682  000F38                     l1765:
  2683                           
  2684                           ; BSR set to: 0
  2685  000F38  0100               	movlb	0	; () banked
  2686  000F3A  AFA4               	btfss	(___almod@divisor+3)& (0+255),7,b
  2687  000F3C  D00A               	goto	l1769
  2688                           
  2689                           ; BSR set to: 0
  2690  000F3E  0100               	movlb	0	; () banked
  2691  000F40  1FA4               	comf	(___almod@divisor+3)& (0+255),f,b
  2692  000F42  1FA3               	comf	(___almod@divisor+2)& (0+255),f,b
  2693  000F44  1FA2               	comf	(___almod@divisor+1)& (0+255),f,b
  2694  000F46  6DA1               	negf	___almod@divisor& (0+255),b
  2695  000F48  0E00               	movlw	0
  2696  000F4A  23A2               	addwfc	(___almod@divisor+1)& (0+255),f,b
  2697  000F4C  23A3               	addwfc	(___almod@divisor+2)& (0+255),f,b
  2698  000F4E  23A4               	addwfc	(___almod@divisor+3)& (0+255),f,b
  2699  000F50  D000               	goto	l1769
  2700  000F52                     l1769:
  2701                           
  2702                           ; BSR set to: 0
  2703  000F52  0100               	movlb	0	; () banked
  2704  000F54  51A1               	movf	___almod@divisor& (0+255),w,b
  2705  000F56  0100               	movlb	0	; () banked
  2706  000F58  11A2               	iorwf	(___almod@divisor+1)& (0+255),w,b
  2707  000F5A  0100               	movlb	0	; () banked
  2708  000F5C  11A3               	iorwf	(___almod@divisor+2)& (0+255),w,b
  2709  000F5E  0100               	movlb	0	; () banked
  2710  000F60  11A4               	iorwf	(___almod@divisor+3)& (0+255),w,b
  2711  000F62  B4D8               	btfsc	status,2,c
  2712  000F64  D03F               	goto	l1785
  2713                           
  2714                           ; BSR set to: 0
  2715  000F66  0E01               	movlw	1
  2716  000F68  0100               	movlb	0	; () banked
  2717  000F6A  6FA5               	movwf	___almod@counter& (0+255),b
  2718  000F6C  D009               	goto	l1775
  2719  000F6E                     l1773:
  2720                           
  2721                           ; BSR set to: 0
  2722  000F6E  0100               	movlb	0	; () banked
  2723  000F70  90D8               	bcf	status,0,c
  2724  000F72  37A1               	rlcf	___almod@divisor& (0+255),f,b
  2725  000F74  37A2               	rlcf	(___almod@divisor+1)& (0+255),f,b
  2726  000F76  37A3               	rlcf	(___almod@divisor+2)& (0+255),f,b
  2727  000F78  37A4               	rlcf	(___almod@divisor+3)& (0+255),f,b
  2728  000F7A  0100               	movlb	0	; () banked
  2729  000F7C  2BA5               	incf	___almod@counter& (0+255),f,b
  2730  000F7E  D000               	goto	l1775
  2731  000F80                     l1775:
  2732                           
  2733                           ; BSR set to: 0
  2734  000F80  0100               	movlb	0	; () banked
  2735  000F82  BFA4               	btfsc	(___almod@divisor+3)& (0+255),7,b
  2736  000F84  D002               	goto	l1777
  2737  000F86  D7F3               	goto	l1773
  2738                           
  2739                           ; BSR set to: 0
  2740  000F88  D000               	goto	l1777
  2741  000F8A                     l1777:
  2742                           
  2743                           ; BSR set to: 0
  2744  000F8A  0100               	movlb	0	; () banked
  2745  000F8C  51A1               	movf	___almod@divisor& (0+255),w,b
  2746  000F8E  0100               	movlb	0	; () banked
  2747  000F90  5D9D               	subwf	___almod@dividend& (0+255),w,b
  2748  000F92  0100               	movlb	0	; () banked
  2749  000F94  51A2               	movf	(___almod@divisor+1)& (0+255),w,b
  2750  000F96  0100               	movlb	0	; () banked
  2751  000F98  599E               	subwfb	(___almod@dividend+1)& (0+255),w,b
  2752  000F9A  0100               	movlb	0	; () banked
  2753  000F9C  51A3               	movf	(___almod@divisor+2)& (0+255),w,b
  2754  000F9E  0100               	movlb	0	; () banked
  2755  000FA0  599F               	subwfb	(___almod@dividend+2)& (0+255),w,b
  2756  000FA2  0100               	movlb	0	; () banked
  2757  000FA4  51A4               	movf	(___almod@divisor+3)& (0+255),w,b
  2758  000FA6  0100               	movlb	0	; () banked
  2759  000FA8  59A0               	subwfb	(___almod@dividend+3)& (0+255),w,b
  2760  000FAA  A0D8               	btfss	status,0,c
  2761  000FAC  D011               	goto	l1781
  2762                           
  2763                           ; BSR set to: 0
  2764  000FAE  0100               	movlb	0	; () banked
  2765  000FB0  51A1               	movf	___almod@divisor& (0+255),w,b
  2766  000FB2  0100               	movlb	0	; () banked
  2767  000FB4  5F9D               	subwf	___almod@dividend& (0+255),f,b
  2768  000FB6  0100               	movlb	0	; () banked
  2769  000FB8  51A2               	movf	(___almod@divisor+1)& (0+255),w,b
  2770  000FBA  0100               	movlb	0	; () banked
  2771  000FBC  5B9E               	subwfb	(___almod@dividend+1)& (0+255),f,b
  2772  000FBE  0100               	movlb	0	; () banked
  2773  000FC0  51A3               	movf	(___almod@divisor+2)& (0+255),w,b
  2774  000FC2  0100               	movlb	0	; () banked
  2775  000FC4  5B9F               	subwfb	(___almod@dividend+2)& (0+255),f,b
  2776  000FC6  0100               	movlb	0	; () banked
  2777  000FC8  51A4               	movf	(___almod@divisor+3)& (0+255),w,b
  2778  000FCA  0100               	movlb	0	; () banked
  2779  000FCC  5BA0               	subwfb	(___almod@dividend+3)& (0+255),f,b
  2780  000FCE  D000               	goto	l1781
  2781  000FD0                     l1781:
  2782                           
  2783                           ; BSR set to: 0
  2784  000FD0  0100               	movlb	0	; () banked
  2785  000FD2  90D8               	bcf	status,0,c
  2786  000FD4  33A4               	rrcf	(___almod@divisor+3)& (0+255),f,b
  2787  000FD6  33A3               	rrcf	(___almod@divisor+2)& (0+255),f,b
  2788  000FD8  33A2               	rrcf	(___almod@divisor+1)& (0+255),f,b
  2789  000FDA  33A1               	rrcf	___almod@divisor& (0+255),f,b
  2790                           
  2791                           ; BSR set to: 0
  2792  000FDC  0100               	movlb	0	; () banked
  2793  000FDE  2FA5               	decfsz	___almod@counter& (0+255),f,b
  2794  000FE0  D7D4               	goto	l1777
  2795                           
  2796                           ; BSR set to: 0
  2797  000FE2  D000               	goto	l1785
  2798  000FE4                     l1785:
  2799                           
  2800                           ; BSR set to: 0
  2801  000FE4  0100               	movlb	0	; () banked
  2802  000FE6  51A6               	movf	___almod@sign& (0+255),w,b
  2803  000FE8  0100               	movlb	0	; () banked
  2804  000FEA  B4D8               	btfsc	status,2,c
  2805  000FEC  D00A               	goto	l1789
  2806                           
  2807                           ; BSR set to: 0
  2808  000FEE  0100               	movlb	0	; () banked
  2809  000FF0  1FA0               	comf	(___almod@dividend+3)& (0+255),f,b
  2810  000FF2  1F9F               	comf	(___almod@dividend+2)& (0+255),f,b
  2811  000FF4  1F9E               	comf	(___almod@dividend+1)& (0+255),f,b
  2812  000FF6  6D9D               	negf	___almod@dividend& (0+255),b
  2813  000FF8  0E00               	movlw	0
  2814  000FFA  239E               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2815  000FFC  239F               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2816  000FFE  23A0               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2817  001000  D000               	goto	l1789
  2818  001002                     l1789:
  2819                           
  2820                           ; BSR set to: 0
  2821  001002  C09D  F09D         	movff	___almod@dividend,?___almod
  2822  001006  C09E  F09E         	movff	___almod@dividend+1,?___almod+1
  2823  00100A  C09F  F09F         	movff	___almod@dividend+2,?___almod+2
  2824  00100E  C0A0  F0A0         	movff	___almod@dividend+3,?___almod+3
  2825  001012  0012               	return	
  2826                           
  2827                           ; BSR set to: 0
  2828                           
  2829                           ; BSR set to: 0
  2830  001014  0012               	return		;funcret
  2831  001016                     __end_of___almod:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           postinc0	equ	0xFEE
  2835                           wreg	equ	0xFE8
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _readAllADC *****************
  2839 ;; Defined at:
  2840 ;;		line 186 in file "main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    6
  2861 ;; This function calls:
  2862 ;;		___ftdiv
  2863 ;;		___lwtoft
  2864 ;;		_readADC
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text10
  2871  0010EA                     __ptext10:
  2872                           	opt stack 0
  2873  0010EA                     _readAllADC:
  2874                           	opt stack 24
  2875                           
  2876                           ;main.c: 189: amplitude1=(float)readADC(1)/65520.;
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;incstack = 0
  2880  0010EA  0E01               	movlw	1
  2881  0010EC  EC7C  F009         	call	_readADC
  2882  0010F0  C01E  F076         	movff	?_readADC,___lwtoft@c
  2883  0010F4  C01F  F077         	movff	?_readADC+1,___lwtoft@c+1
  2884  0010F8  EC24  F00A         	call	___lwtoft	;wreg free
  2885  0010FC  C076  F079         	movff	?___lwtoft,___ftdiv@f1
  2886  001100  C077  F07A         	movff	?___lwtoft+1,___ftdiv@f1+1
  2887  001104  C078  F07B         	movff	?___lwtoft+2,___ftdiv@f1+2
  2888  001108  0EF0               	movlw	240
  2889  00110A  0100               	movlb	0	; () banked
  2890  00110C  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2891  00110E  0E7F               	movlw	127
  2892  001110  0100               	movlb	0	; () banked
  2893  001112  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2894  001114  0E47               	movlw	71
  2895  001116  0100               	movlb	0	; () banked
  2896  001118  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2897  00111A  ECED  F005         	call	___ftdiv	;wreg free
  2898  00111E  C079  F0BD         	movff	?___ftdiv,_amplitude1
  2899  001122  C07A  F0BE         	movff	?___ftdiv+1,_amplitude1+1
  2900  001126  C07B  F0BF         	movff	?___ftdiv+2,_amplitude1+2
  2901                           
  2902                           ;main.c: 190: amplitude2=(float)readADC(2)/65520.;
  2903  00112A  0E02               	movlw	2
  2904  00112C  EC7C  F009         	call	_readADC
  2905  001130  C01E  F076         	movff	?_readADC,___lwtoft@c
  2906  001134  C01F  F077         	movff	?_readADC+1,___lwtoft@c+1
  2907  001138  EC24  F00A         	call	___lwtoft	;wreg free
  2908  00113C  C076  F079         	movff	?___lwtoft,___ftdiv@f1
  2909  001140  C077  F07A         	movff	?___lwtoft+1,___ftdiv@f1+1
  2910  001144  C078  F07B         	movff	?___lwtoft+2,___ftdiv@f1+2
  2911  001148  0EF0               	movlw	240
  2912  00114A  0100               	movlb	0	; () banked
  2913  00114C  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2914  00114E  0E7F               	movlw	127
  2915  001150  0100               	movlb	0	; () banked
  2916  001152  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2917  001154  0E47               	movlw	71
  2918  001156  0100               	movlb	0	; () banked
  2919  001158  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2920  00115A  ECED  F005         	call	___ftdiv	;wreg free
  2921  00115E  C079  F0C0         	movff	?___ftdiv,_amplitude2
  2922  001162  C07A  F0C1         	movff	?___ftdiv+1,_amplitude2+1
  2923  001166  C07B  F0C2         	movff	?___ftdiv+2,_amplitude2+2
  2924                           
  2925                           ;main.c: 191: amplitude3=(float)readADC(3)/65520.;
  2926  00116A  0E03               	movlw	3
  2927  00116C  EC7C  F009         	call	_readADC
  2928  001170  C01E  F076         	movff	?_readADC,___lwtoft@c
  2929  001174  C01F  F077         	movff	?_readADC+1,___lwtoft@c+1
  2930  001178  EC24  F00A         	call	___lwtoft	;wreg free
  2931  00117C  C076  F079         	movff	?___lwtoft,___ftdiv@f1
  2932  001180  C077  F07A         	movff	?___lwtoft+1,___ftdiv@f1+1
  2933  001184  C078  F07B         	movff	?___lwtoft+2,___ftdiv@f1+2
  2934  001188  0EF0               	movlw	240
  2935  00118A  0100               	movlb	0	; () banked
  2936  00118C  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2937  00118E  0E7F               	movlw	127
  2938  001190  0100               	movlb	0	; () banked
  2939  001192  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2940  001194  0E47               	movlw	71
  2941  001196  0100               	movlb	0	; () banked
  2942  001198  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2943  00119A  ECED  F005         	call	___ftdiv	;wreg free
  2944  00119E  C079  F0C3         	movff	?___ftdiv,_amplitude3
  2945  0011A2  C07A  F0C4         	movff	?___ftdiv+1,_amplitude3+1
  2946  0011A6  C07B  F0C5         	movff	?___ftdiv+2,_amplitude3+2
  2947  0011AA  0012               	return		;funcret
  2948  0011AC                     __end_of_readAllADC:
  2949                           	opt stack 0
  2950                           tblptru	equ	0xFF8
  2951                           postinc0	equ	0xFEE
  2952                           wreg	equ	0xFE8
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _readADC *****************
  2956 ;; Defined at:
  2957 ;;		line 154 in file "main.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  channel         1    wreg     unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  channel         1   33[COMRAM] unsigned char 
  2962 ;;  tempo           1   34[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2   29[COMRAM] unsigned int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;Total ram usage:        6 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    4
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_readAllADC
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text11
  2987  0012F8                     __ptext11:
  2988                           	opt stack 0
  2989  0012F8                     _readADC:
  2990                           	opt stack 25
  2991                           
  2992                           ;incstack = 0
  2993                           ;readADC@channel stored from wreg
  2994  0012F8  6E22               	movwf	readADC@channel,c
  2995                           
  2996                           ;main.c: 156: char tempo=0;
  2997  0012FA  0E00               	movlw	0
  2998  0012FC  6E23               	movwf	readADC@tempo,c
  2999                           
  3000                           ;main.c: 157: switch (channel)
  3001  0012FE  D008               	goto	l2303
  3002  001300                     l216:
  3003                           
  3004                           ;main.c: 160: {
  3005                           ;main.c: 161: CHS1=0;
  3006  001300  96C2               	bcf	4034,3,c	;volatile
  3007  001302  D004               	goto	L1
  3008  001304                     l218:
  3009                           
  3010                           ;main.c: 166: {
  3011                           ;main.c: 167: CHS1=1;
  3012  001304  86C2               	bsf	4034,3,c	;volatile
  3013                           
  3014                           ;main.c: 168: CHS0=0;
  3015  001306  94C2               	bcf	4034,2,c	;volatile
  3016                           
  3017                           ;main.c: 169: break;
  3018  001308  D00E               	goto	l2305
  3019  00130A                     l219:
  3020                           
  3021                           ;main.c: 172: {
  3022                           ;main.c: 173: CHS1=1;
  3023  00130A  86C2               	bsf	4034,3,c	;volatile
  3024  00130C                     L1:
  3025                           
  3026                           ;main.c: 174: CHS0=1;
  3027  00130C  84C2               	bsf	4034,2,c	;volatile
  3028                           
  3029                           ;main.c: 176: }
  3030                           ;main.c: 177: }
  3031                           
  3032                           ;main.c: 175: break;
  3033  00130E  D00B               	goto	l2305
  3034  001310                     l2303:
  3035  001310  5022               	movf	readADC@channel,w,c
  3036                           
  3037                           ; Switch size 1, requested type "space"
  3038                           ; Number of cases is 3, Range of values is 1 to 3
  3039                           ; switch strategies available:
  3040                           ; Name         Instructions Cycles
  3041                           ; simple_byte           10     6 (average)
  3042                           ;	Chosen strategy is simple_byte
  3043  001312  0A01               	xorlw	1	; case 1
  3044  001314  B4D8               	btfsc	status,2,c
  3045  001316  D7F4               	goto	l216
  3046  001318  0A03               	xorlw	3	; case 2
  3047  00131A  B4D8               	btfsc	status,2,c
  3048  00131C  D7F3               	goto	l218
  3049  00131E  0A01               	xorlw	1	; case 3
  3050  001320  B4D8               	btfsc	status,2,c
  3051  001322  D7F3               	goto	l219
  3052  001324  D000               	goto	l2305
  3053  001326                     l2305:
  3054                           
  3055                           ;main.c: 178: for(tempo=0;tempo<100;tempo++);
  3056  001326  0E00               	movlw	0
  3057  001328  6E23               	movwf	readADC@tempo,c
  3058  00132A  D002               	goto	l2313
  3059  00132C  D004               	goto	l221
  3060  00132E                     l2311:
  3061  00132E  2A23               	incf	readADC@tempo,f,c
  3062  001330                     l2313:
  3063  001330  0E63               	movlw	99
  3064  001332  6423               	cpfsgt	readADC@tempo,c
  3065  001334  D7FC               	goto	l2311
  3066  001336                     l221:
  3067                           
  3068                           ;main.c: 179: GO_nDONE = 1;
  3069  001336  82C2               	bsf	4034,1,c	;volatile
  3070                           
  3071                           ;main.c: 180: while(GO_nDONE);
  3072  001338  D000               	goto	l222
  3073  00133A                     l222:
  3074  00133A  B2C2               	btfsc	4034,1,c	;volatile
  3075  00133C  D7FE               	goto	l222
  3076                           
  3077                           ;main.c: 182: return ((ADRESH<<8)+ADRESL);
  3078  00133E  50C4               	movf	4036,w,c	;volatile
  3079  001340  6E21               	movwf	(??_readADC+1)& (0+255),c
  3080  001342  6A20               	clrf	??_readADC& (0+255),c
  3081  001344  50C3               	movf	4035,w,c	;volatile
  3082  001346  2420               	addwf	??_readADC,w,c
  3083  001348  6E1E               	movwf	?_readADC,c
  3084  00134A  0E00               	movlw	0
  3085  00134C  2021               	addwfc	??_readADC+1,w,c
  3086  00134E  6E1F               	movwf	?_readADC+1,c
  3087  001350  0012               	return	
  3088  001352  0012               	return		;funcret
  3089  001354                     __end_of_readADC:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           status	equ	0xFD8
  3095                           
  3096 ;; *************** function ___lwtoft *****************
  3097 ;; Defined at:
  3098 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  c               2   22[BANK0 ] unsigned int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  3   22[BANK0 ] float 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3115 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    5
  3119 ;; This function calls:
  3120 ;;		___ftpack
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;;		_readAllADC
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text12
  3128  001448                     __ptext12:
  3129                           	opt stack 0
  3130  001448                     ___lwtoft:
  3131                           	opt stack 24
  3132                           
  3133                           ;incstack = 0
  3134  001448  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  3135  00144C  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  3136  001450  0100               	movlb	0	; () banked
  3137  001452  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  3138  001454  0E8E               	movlw	142
  3139  001456  0100               	movlb	0	; () banked
  3140  001458  6F74               	movwf	___ftpack@exp& (0+255),b
  3141  00145A  0E00               	movlw	0
  3142  00145C  0100               	movlb	0	; () banked
  3143  00145E  6F75               	movwf	___ftpack@sign& (0+255),b
  3144  001460  EC81  F006         	call	___ftpack	;wreg free
  3145  001464  C071  F076         	movff	?___ftpack,?___lwtoft
  3146  001468  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  3147  00146C  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  3148  001470  0012               	return	
  3149  001472  0012               	return		;funcret
  3150  001474                     __end_of___lwtoft:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function ___ftdiv *****************
  3158 ;; Defined at:
  3159 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  f1              3   25[BANK0 ] float 
  3162 ;;  f2              3   28[BANK0 ] float 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  f3              3   39[COMRAM] float 
  3165 ;;  sign            1   43[COMRAM] unsigned char 
  3166 ;;  exp             1   42[COMRAM] unsigned char 
  3167 ;;  cntr            1   38[COMRAM] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  3   25[BANK0 ] float 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3177 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;Total ram usage:       15 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    5
  3184 ;; This function calls:
  3185 ;;		___ftpack
  3186 ;; This function is called by:
  3187 ;;		_readAllADC
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text13
  3192  000BDA                     __ptext13:
  3193                           	opt stack 0
  3194  000BDA                     ___ftdiv:
  3195                           	opt stack 24
  3196                           
  3197                           ;incstack = 0
  3198  000BDA  C07B  F024         	movff	___ftdiv@f1+2,??___ftdiv
  3199  000BDE  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  3200  000BE0  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  3201  000BE2  0100               	movlb	0	; () banked
  3202  000BE4  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3203  000BE6  3624               	rlcf	??___ftdiv& (0+255),f,c
  3204  000BE8  E301               	bnc	u2431
  3205  000BEA  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  3206  000BEC                     u2431:
  3207  000BEC  5024               	movf	??___ftdiv,w,c
  3208  000BEE  6E2B               	movwf	___ftdiv@exp,c
  3209  000BF0  502B               	movf	___ftdiv@exp,w,c
  3210  000BF2  A4D8               	btfss	status,2,c
  3211  000BF4  D00A               	goto	l2395
  3212                           
  3213                           ; BSR set to: 0
  3214  000BF6  0E00               	movlw	0
  3215  000BF8  0100               	movlb	0	; () banked
  3216  000BFA  6F79               	movwf	?___ftdiv& (0+255),b
  3217  000BFC  0E00               	movlw	0
  3218  000BFE  0100               	movlb	0	; () banked
  3219  000C00  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3220  000C02  0E00               	movlw	0
  3221  000C04  0100               	movlb	0	; () banked
  3222  000C06  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3223                           
  3224                           ; BSR set to: 0
  3225  000C08  0012               	return	
  3226  000C0A                     l2395:
  3227                           
  3228                           ; BSR set to: 0
  3229  000C0A  C07E  F024         	movff	___ftdiv@f2+2,??___ftdiv
  3230  000C0E  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  3231  000C10  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  3232  000C12  0100               	movlb	0	; () banked
  3233  000C14  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3234  000C16  3624               	rlcf	??___ftdiv& (0+255),f,c
  3235  000C18  E301               	bnc	u2451
  3236  000C1A  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  3237  000C1C                     u2451:
  3238  000C1C  5024               	movf	??___ftdiv,w,c
  3239  000C1E  6E2C               	movwf	___ftdiv@sign,c
  3240  000C20  502C               	movf	___ftdiv@sign,w,c
  3241  000C22  A4D8               	btfss	status,2,c
  3242  000C24  D00A               	goto	l2401
  3243                           
  3244                           ; BSR set to: 0
  3245  000C26  0E00               	movlw	0
  3246  000C28  0100               	movlb	0	; () banked
  3247  000C2A  6F79               	movwf	?___ftdiv& (0+255),b
  3248  000C2C  0E00               	movlw	0
  3249  000C2E  0100               	movlb	0	; () banked
  3250  000C30  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3251  000C32  0E00               	movlw	0
  3252  000C34  0100               	movlb	0	; () banked
  3253  000C36  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3254                           
  3255                           ; BSR set to: 0
  3256  000C38  0012               	return	
  3257  000C3A                     l2401:
  3258                           
  3259                           ; BSR set to: 0
  3260  000C3A  0E00               	movlw	0
  3261  000C3C  6E28               	movwf	___ftdiv@f3,c
  3262  000C3E  0E00               	movlw	0
  3263  000C40  6E29               	movwf	___ftdiv@f3+1,c
  3264  000C42  0E00               	movlw	0
  3265  000C44  6E2A               	movwf	___ftdiv@f3+2,c
  3266                           
  3267                           ; BSR set to: 0
  3268  000C46  502C               	movf	___ftdiv@sign,w,c
  3269  000C48  0F89               	addlw	137
  3270  000C4A  5E2B               	subwf	___ftdiv@exp,f,c
  3271                           
  3272                           ; BSR set to: 0
  3273  000C4C  C07B  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  3274                           
  3275                           ; BSR set to: 0
  3276  000C50  0100               	movlb	0	; () banked
  3277  000C52  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3278  000C54  1A2C               	xorwf	___ftdiv@sign,f,c
  3279                           
  3280                           ; BSR set to: 0
  3281  000C56  0E80               	movlw	128
  3282  000C58  162C               	andwf	___ftdiv@sign,f,c
  3283                           
  3284                           ; BSR set to: 0
  3285  000C5A  0100               	movlb	0	; () banked
  3286  000C5C  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3287                           
  3288                           ; BSR set to: 0
  3289  000C5E  0EFF               	movlw	255
  3290  000C60  0100               	movlb	0	; () banked
  3291  000C62  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3292  000C64  0EFF               	movlw	255
  3293  000C66  0100               	movlb	0	; () banked
  3294  000C68  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3295  000C6A  0E00               	movlw	0
  3296  000C6C  0100               	movlb	0	; () banked
  3297  000C6E  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3298                           
  3299                           ; BSR set to: 0
  3300  000C70  0100               	movlb	0	; () banked
  3301  000C72  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3302                           
  3303                           ; BSR set to: 0
  3304  000C74  0EFF               	movlw	255
  3305  000C76  0100               	movlb	0	; () banked
  3306  000C78  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3307  000C7A  0EFF               	movlw	255
  3308  000C7C  0100               	movlb	0	; () banked
  3309  000C7E  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3310  000C80  0E00               	movlw	0
  3311  000C82  0100               	movlb	0	; () banked
  3312  000C84  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3313                           
  3314                           ; BSR set to: 0
  3315  000C86  0E18               	movlw	24
  3316  000C88  6E27               	movwf	___ftdiv@cntr,c
  3317  000C8A  D000               	goto	l2421
  3318  000C8C                     l2421:
  3319                           
  3320                           ; BSR set to: 0
  3321  000C8C  90D8               	bcf	status,0,c
  3322  000C8E  3628               	rlcf	___ftdiv@f3,f,c
  3323  000C90  3629               	rlcf	___ftdiv@f3+1,f,c
  3324  000C92  362A               	rlcf	___ftdiv@f3+2,f,c
  3325                           
  3326                           ; BSR set to: 0
  3327  000C94  0100               	movlb	0	; () banked
  3328  000C96  517C               	movf	___ftdiv@f2& (0+255),w,b
  3329  000C98  0100               	movlb	0	; () banked
  3330  000C9A  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3331  000C9C  0100               	movlb	0	; () banked
  3332  000C9E  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3333  000CA0  0100               	movlb	0	; () banked
  3334  000CA2  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3335  000CA4  0100               	movlb	0	; () banked
  3336  000CA6  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3337  000CA8  0100               	movlb	0	; () banked
  3338  000CAA  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3339  000CAC  A0D8               	btfss	status,0,c
  3340  000CAE  D00D               	goto	l716
  3341                           
  3342                           ; BSR set to: 0
  3343  000CB0  0100               	movlb	0	; () banked
  3344  000CB2  517C               	movf	___ftdiv@f2& (0+255),w,b
  3345  000CB4  0100               	movlb	0	; () banked
  3346  000CB6  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3347  000CB8  0100               	movlb	0	; () banked
  3348  000CBA  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3349  000CBC  0100               	movlb	0	; () banked
  3350  000CBE  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3351  000CC0  0100               	movlb	0	; () banked
  3352  000CC2  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3353  000CC4  0100               	movlb	0	; () banked
  3354  000CC6  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3355                           
  3356                           ; BSR set to: 0
  3357  000CC8  8028               	bsf	___ftdiv@f3,0,c
  3358  000CCA                     l716:
  3359                           
  3360                           ; BSR set to: 0
  3361  000CCA  0100               	movlb	0	; () banked
  3362  000CCC  90D8               	bcf	status,0,c
  3363  000CCE  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3364  000CD0  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3365  000CD2  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3366                           
  3367                           ; BSR set to: 0
  3368  000CD4  2E27               	decfsz	___ftdiv@cntr,f,c
  3369  000CD6  D7DA               	goto	l2421
  3370  000CD8  D000               	goto	l2431
  3371  000CDA                     l2431:
  3372                           
  3373                           ; BSR set to: 0
  3374  000CDA  C028  F071         	movff	___ftdiv@f3,___ftpack@arg
  3375  000CDE  C029  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3376  000CE2  C02A  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3377  000CE6  C02B  F074         	movff	___ftdiv@exp,___ftpack@exp
  3378  000CEA  C02C  F075         	movff	___ftdiv@sign,___ftpack@sign
  3379  000CEE  EC81  F006         	call	___ftpack	;wreg free
  3380  000CF2  C071  F079         	movff	?___ftpack,?___ftdiv
  3381  000CF6  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3382  000CFA  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3383  000CFE  0012               	return	
  3384  000D00  0012               	return		;funcret
  3385  000D02                     __end_of___ftdiv:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function ___ftpack *****************
  3393 ;; Defined at:
  3394 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  arg             3   17[BANK0 ] unsigned um
  3397 ;;  exp             1   20[BANK0 ] unsigned char 
  3398 ;;  sign            1   21[BANK0 ] unsigned char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  3   17[BANK0 ] float 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3410 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;Total ram usage:        8 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    4
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		___ftadd
  3421 ;;		___ftdiv
  3422 ;;		___ftmul
  3423 ;;		___lwtoft
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text14
  3428  000D02                     __ptext14:
  3429                           	opt stack 0
  3430  000D02                     ___ftpack:
  3431                           	opt stack 24
  3432                           
  3433                           ;incstack = 0
  3434  000D02  0100               	movlb	0	; () banked
  3435  000D04  5174               	movf	___ftpack@exp& (0+255),w,b
  3436  000D06  0100               	movlb	0	; () banked
  3437  000D08  B4D8               	btfsc	status,2,c
  3438  000D0A  D008               	goto	l2265
  3439                           
  3440                           ; BSR set to: 0
  3441  000D0C  0100               	movlb	0	; () banked
  3442  000D0E  5171               	movf	___ftpack@arg& (0+255),w,b
  3443  000D10  0100               	movlb	0	; () banked
  3444  000D12  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3445  000D14  0100               	movlb	0	; () banked
  3446  000D16  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3447  000D18  A4D8               	btfss	status,2,c
  3448  000D1A  D013               	goto	l2271
  3449  000D1C                     l2265:
  3450                           
  3451                           ; BSR set to: 0
  3452  000D1C  0E00               	movlw	0
  3453  000D1E  0100               	movlb	0	; () banked
  3454  000D20  6F71               	movwf	?___ftpack& (0+255),b
  3455  000D22  0E00               	movlw	0
  3456  000D24  0100               	movlb	0	; () banked
  3457  000D26  6F72               	movwf	(?___ftpack+1)& (0+255),b
  3458  000D28  0E00               	movlw	0
  3459  000D2A  0100               	movlb	0	; () banked
  3460  000D2C  6F73               	movwf	(?___ftpack+2)& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463  000D2E  0012               	return	
  3464                           
  3465                           ; BSR set to: 0
  3466  000D30  D008               	goto	l2271
  3467  000D32                     l2269:
  3468                           
  3469                           ; BSR set to: 0
  3470  000D32  0100               	movlb	0	; () banked
  3471  000D34  2B74               	incf	___ftpack@exp& (0+255),f,b
  3472  000D36  0100               	movlb	0	; () banked
  3473  000D38  90D8               	bcf	status,0,c
  3474  000D3A  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3475  000D3C  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3476  000D3E  3371               	rrcf	___ftpack@arg& (0+255),f,b
  3477  000D40  D000               	goto	l2271
  3478  000D42                     l2271:
  3479                           
  3480                           ; BSR set to: 0
  3481  000D42  0E00               	movlw	0
  3482  000D44  0100               	movlb	0	; () banked
  3483  000D46  1571               	andwf	___ftpack@arg& (0+255),w,b
  3484  000D48  6E1E               	movwf	??___ftpack& (0+255),c
  3485  000D4A  0E00               	movlw	0
  3486  000D4C  0100               	movlb	0	; () banked
  3487  000D4E  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3488  000D50  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3489  000D52  0EFE               	movlw	254
  3490  000D54  0100               	movlb	0	; () banked
  3491  000D56  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3492  000D58  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3493  000D5A  501E               	movf	??___ftpack,w,c
  3494  000D5C  101F               	iorwf	??___ftpack+1,w,c
  3495  000D5E  1020               	iorwf	??___ftpack+2,w,c
  3496  000D60  B4D8               	btfsc	status,2,c
  3497  000D62  D013               	goto	l2277
  3498  000D64  D7E6               	goto	l2269
  3499                           
  3500                           ; BSR set to: 0
  3501  000D66  D011               	goto	l2277
  3502  000D68                     l2273:
  3503                           
  3504                           ; BSR set to: 0
  3505  000D68  0100               	movlb	0	; () banked
  3506  000D6A  2B74               	incf	___ftpack@exp& (0+255),f,b
  3507                           
  3508                           ; BSR set to: 0
  3509  000D6C  0E01               	movlw	1
  3510  000D6E  0100               	movlb	0	; () banked
  3511  000D70  2771               	addwf	___ftpack@arg& (0+255),f,b
  3512  000D72  0E00               	movlw	0
  3513  000D74  0100               	movlb	0	; () banked
  3514  000D76  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3515  000D78  0E00               	movlw	0
  3516  000D7A  0100               	movlb	0	; () banked
  3517  000D7C  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3518  000D7E  0100               	movlb	0	; () banked
  3519  000D80  90D8               	bcf	status,0,c
  3520  000D82  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3521  000D84  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3522  000D86  3371               	rrcf	___ftpack@arg& (0+255),f,b
  3523  000D88  D000               	goto	l2277
  3524  000D8A                     l2277:
  3525                           
  3526                           ; BSR set to: 0
  3527  000D8A  0E00               	movlw	0
  3528  000D8C  0100               	movlb	0	; () banked
  3529  000D8E  1571               	andwf	___ftpack@arg& (0+255),w,b
  3530  000D90  6E1E               	movwf	??___ftpack& (0+255),c
  3531  000D92  0E00               	movlw	0
  3532  000D94  0100               	movlb	0	; () banked
  3533  000D96  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3534  000D98  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3535  000D9A  0EFF               	movlw	255
  3536  000D9C  0100               	movlb	0	; () banked
  3537  000D9E  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3538  000DA0  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3539  000DA2  501E               	movf	??___ftpack,w,c
  3540  000DA4  101F               	iorwf	??___ftpack+1,w,c
  3541  000DA6  1020               	iorwf	??___ftpack+2,w,c
  3542  000DA8  B4D8               	btfsc	status,2,c
  3543  000DAA  D00A               	goto	l2281
  3544  000DAC  D7DD               	goto	l2273
  3545                           
  3546                           ; BSR set to: 0
  3547  000DAE  D008               	goto	l2281
  3548  000DB0                     l2279:
  3549                           
  3550                           ; BSR set to: 0
  3551  000DB0  0100               	movlb	0	; () banked
  3552  000DB2  0774               	decf	___ftpack@exp& (0+255),f,b
  3553  000DB4  0100               	movlb	0	; () banked
  3554  000DB6  90D8               	bcf	status,0,c
  3555  000DB8  3771               	rlcf	___ftpack@arg& (0+255),f,b
  3556  000DBA  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3557  000DBC  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3558  000DBE  D000               	goto	l2281
  3559  000DC0                     l2281:
  3560                           
  3561                           ; BSR set to: 0
  3562  000DC0  0100               	movlb	0	; () banked
  3563  000DC2  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3564  000DC4  D005               	goto	l652
  3565                           
  3566                           ; BSR set to: 0
  3567  000DC6  0E02               	movlw	2
  3568  000DC8  0100               	movlb	0	; () banked
  3569  000DCA  6174               	cpfslt	___ftpack@exp& (0+255),b
  3570  000DCC  D7F1               	goto	l2279
  3571  000DCE  D000               	goto	l652
  3572  000DD0                     l652:
  3573                           
  3574                           ; BSR set to: 0
  3575  000DD0  0100               	movlb	0	; () banked
  3576  000DD2  B174               	btfsc	___ftpack@exp& (0+255),0,b
  3577  000DD4  D003               	goto	l2287
  3578                           
  3579                           ; BSR set to: 0
  3580  000DD6  0100               	movlb	0	; () banked
  3581  000DD8  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3582  000DDA  D000               	goto	l2287
  3583  000DDC                     l2287:
  3584                           
  3585                           ; BSR set to: 0
  3586  000DDC  0100               	movlb	0	; () banked
  3587  000DDE  90D8               	bcf	status,0,c
  3588  000DE0  3374               	rrcf	___ftpack@exp& (0+255),f,b
  3589  000DE2  0100               	movlb	0	; () banked
  3590  000DE4  5174               	movf	___ftpack@exp& (0+255),w,b
  3591  000DE6  0100               	movlb	0	; () banked
  3592  000DE8  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3593                           
  3594                           ; BSR set to: 0
  3595  000DEA  0100               	movlb	0	; () banked
  3596  000DEC  5175               	movf	___ftpack@sign& (0+255),w,b
  3597  000DEE  0100               	movlb	0	; () banked
  3598  000DF0  B4D8               	btfsc	status,2,c
  3599  000DF2  D003               	goto	l2293
  3600                           
  3601                           ; BSR set to: 0
  3602  000DF4  0100               	movlb	0	; () banked
  3603  000DF6  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3604  000DF8  D000               	goto	l2293
  3605  000DFA                     l2293:
  3606                           
  3607                           ; BSR set to: 0
  3608  000DFA  C071  F071         	movff	___ftpack@arg,?___ftpack
  3609  000DFE  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
  3610  000E02  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
  3611  000E06  0012               	return	
  3612                           
  3613                           ; BSR set to: 0
  3614                           
  3615                           ; BSR set to: 0
  3616  000E08  0012               	return		;funcret
  3617  000E0A                     __end_of___ftpack:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _initialisation *****************
  3625 ;; Defined at:
  3626 ;;		line 3 in file "init.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    5
  3647 ;; This function calls:
  3648 ;;		_initADC
  3649 ;;		_initComms
  3650 ;;		_initPWM
  3651 ;;		_initTimer0
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text15
  3658  001518                     __ptext15:
  3659                           	opt stack 0
  3660  001518                     _initialisation:
  3661                           	opt stack 25
  3662                           
  3663                           ;init.c: 7: initPWM();
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;incstack = 0
  3667  001518  ECAA  F009         	call	_initPWM	;wreg free
  3668                           
  3669                           ;init.c: 11: initComms();
  3670  00151C  EC3A  F00A         	call	_initComms	;wreg free
  3671                           
  3672                           ;init.c: 15: initADC();
  3673  001520  EC73  F00A         	call	_initADC	;wreg free
  3674                           
  3675                           ;init.c: 19: initTimer0();
  3676  001524  EC81  F00A         	call	_initTimer0	;wreg free
  3677  001528  0012               	return		;funcret
  3678  00152A                     __end_of_initialisation:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function _initTimer0 *****************
  3686 ;; Defined at:
  3687 ;;		line 114 in file "init.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;		None               void
  3694 ;; Registers used:
  3695 ;;		None
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;Total ram usage:        0 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    4
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_initialisation
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text16
  3716  001502                     __ptext16:
  3717                           	opt stack 0
  3718  001502                     _initTimer0:
  3719                           	opt stack 25
  3720                           
  3721                           ;init.c: 117: T0PS2 = 0;
  3722                           
  3723                           ;incstack = 0
  3724  001502  94D5               	bcf	4053,2,c	;volatile
  3725                           
  3726                           ;init.c: 118: T0PS1 = 1;
  3727  001504  82D5               	bsf	4053,1,c	;volatile
  3728                           
  3729                           ;init.c: 119: T0PS0 = 0;
  3730  001506  90D5               	bcf	4053,0,c	;volatile
  3731                           
  3732                           ;init.c: 120: PSA = 0;
  3733  001508  96D5               	bcf	4053,3,c	;volatile
  3734                           
  3735                           ;init.c: 121: T0CS = 0;
  3736  00150A  9AD5               	bcf	4053,5,c	;volatile
  3737                           
  3738                           ;init.c: 122: T08BIT = 1;
  3739  00150C  8CD5               	bsf	4053,6,c	;volatile
  3740                           
  3741                           ;init.c: 123: TMR0IP = 0;
  3742  00150E  94F1               	bcf	intcon2,2,c	;volatile
  3743                           
  3744                           ;init.c: 124: TMR0IE = 1;
  3745  001510  8AF2               	bsf	intcon,5,c	;volatile
  3746                           
  3747                           ;init.c: 125: PEIE = 1;
  3748  001512  8CF2               	bsf	intcon,6,c	;volatile
  3749                           
  3750                           ;init.c: 126: GIE = 1;
  3751  001514  8EF2               	bsf	intcon,7,c	;volatile
  3752  001516  0012               	return		;funcret
  3753  001518                     __end_of_initTimer0:
  3754                           	opt stack 0
  3755                           tblptru	equ	0xFF8
  3756                           intcon	equ	0xFF2
  3757                           intcon2	equ	0xFF1
  3758                           postinc0	equ	0xFEE
  3759                           wreg	equ	0xFE8
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _initPWM *****************
  3763 ;; Defined at:
  3764 ;;		line 24 in file "init.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_initialisation
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text17
  3793  001354                     __ptext17:
  3794                           	opt stack 0
  3795  001354                     _initPWM:
  3796                           	opt stack 25
  3797                           
  3798                           ;init.c: 29: PR2=0xFF;
  3799                           
  3800                           ;incstack = 0
  3801  001354  68CB               	setf	4043,c	;volatile
  3802                           
  3803                           ;init.c: 33: CCPR2L=0b00000000;
  3804  001356  0E00               	movlw	0
  3805  001358  010F               	movlb	15	; () banked
  3806  00135A  6F51               	movwf	81,b	;volatile
  3807                           
  3808                           ;init.c: 34: CCPR3L=0b00000000;
  3809  00135C  0E00               	movlw	0
  3810  00135E  010F               	movlb	15	; () banked
  3811  001360  6F4E               	movwf	78,b	;volatile
  3812                           
  3813                           ;init.c: 35: CCPR4L=0b00000000;
  3814  001362  0E00               	movlw	0
  3815  001364  010F               	movlb	15	; () banked
  3816  001366  6F4B               	movwf	75,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819                           ;init.c: 36: DC2B1=0;
  3820  001368  010F               	movlb	15	; () banked
  3821  00136A  9B50               	bcf	80,5,b	;volatile
  3822                           
  3823                           ; BSR set to: 15
  3824                           ;init.c: 37: DC2B0=0;
  3825  00136C  010F               	movlb	15	; () banked
  3826  00136E  9950               	bcf	80,4,b	;volatile
  3827                           
  3828                           ; BSR set to: 15
  3829                           ;init.c: 38: DC3B1=0;
  3830  001370  010F               	movlb	15	; () banked
  3831  001372  9B4D               	bcf	77,5,b	;volatile
  3832                           
  3833                           ; BSR set to: 15
  3834                           ;init.c: 39: DC3B0=0;
  3835  001374  010F               	movlb	15	; () banked
  3836  001376  994D               	bcf	77,4,b	;volatile
  3837                           
  3838                           ; BSR set to: 15
  3839                           ;init.c: 40: DC4B1=0;
  3840  001378  010F               	movlb	15	; () banked
  3841  00137A  9B4A               	bcf	74,5,b	;volatile
  3842                           
  3843                           ; BSR set to: 15
  3844                           ;init.c: 41: DC4B0=0;
  3845  00137C  010F               	movlb	15	; () banked
  3846  00137E  994A               	bcf	74,4,b	;volatile
  3847                           
  3848                           ; BSR set to: 15
  3849                           ;init.c: 47: TRISC=TRISC & 0b00111011;
  3850  001380  5094               	movf	3988,w,c	;volatile
  3851  001382  0B3B               	andlw	59
  3852  001384  6E94               	movwf	3988,c	;volatile
  3853                           
  3854                           ; BSR set to: 15
  3855                           ;init.c: 50: T2CKPS1=0;
  3856  001386  92CA               	bcf	4042,1,c	;volatile
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;init.c: 51: T2CKPS0=0;
  3860  001388  90CA               	bcf	4042,0,c	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;init.c: 54: TMR2ON = 1;
  3864  00138A  84CA               	bsf	4042,2,c	;volatile
  3865                           
  3866                           ; BSR set to: 15
  3867                           ;init.c: 57: CCP2M2=1;
  3868  00138C  010F               	movlb	15	; () banked
  3869  00138E  8550               	bsf	80,2,b	;volatile
  3870                           
  3871                           ; BSR set to: 15
  3872                           ;init.c: 58: CCP2M3=1;
  3873  001390  010F               	movlb	15	; () banked
  3874  001392  8750               	bsf	80,3,b	;volatile
  3875                           
  3876                           ; BSR set to: 15
  3877                           ;init.c: 59: CCP3M2=1;
  3878  001394  010F               	movlb	15	; () banked
  3879  001396  854D               	bsf	77,2,b	;volatile
  3880                           
  3881                           ; BSR set to: 15
  3882                           ;init.c: 60: CCP3M3=1;
  3883  001398  010F               	movlb	15	; () banked
  3884  00139A  874D               	bsf	77,3,b	;volatile
  3885                           
  3886                           ; BSR set to: 15
  3887                           ;init.c: 61: CCP4M2=1;
  3888  00139C  010F               	movlb	15	; () banked
  3889  00139E  854A               	bsf	74,2,b	;volatile
  3890                           
  3891                           ; BSR set to: 15
  3892                           ;init.c: 62: CCP4M3=1;
  3893  0013A0  010F               	movlb	15	; () banked
  3894  0013A2  874A               	bsf	74,3,b	;volatile
  3895                           
  3896                           ; BSR set to: 15
  3897  0013A4  0012               	return		;funcret
  3898  0013A6                     __end_of_initPWM:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           intcon	equ	0xFF2
  3902                           intcon2	equ	0xFF1
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _initComms *****************
  3908 ;; Defined at:
  3909 ;;		line 66 in file "init.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;		None               void
  3916 ;; Registers used:
  3917 ;;		wreg, status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    4
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_initialisation
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text18
  3938  001474                     __ptext18:
  3939                           	opt stack 0
  3940  001474                     _initComms:
  3941                           	opt stack 25
  3942                           
  3943                           ;init.c: 68: TRISBbits.TRISB7 = 1;
  3944                           
  3945                           ; BSR set to: 15
  3946                           ;incstack = 0
  3947  001474  8E93               	bsf	3987,7,c	;volatile
  3948                           
  3949                           ;init.c: 69: TRISBbits.TRISB6 = 0;
  3950  001476  9C93               	bcf	3987,6,c	;volatile
  3951                           
  3952                           ;init.c: 72: TXSTA2bits.BRGH = 1;
  3953  001478  84BA               	bsf	4026,2,c	;volatile
  3954                           
  3955                           ;init.c: 73: TXSTA2bits.SYNC = 0;
  3956  00147A  98BA               	bcf	4026,4,c	;volatile
  3957                           
  3958                           ;init.c: 74: SPBRGH2 = 0;
  3959  00147C  0E00               	movlw	0
  3960  00147E  6E7C               	movwf	3964,c	;volatile
  3961                           
  3962                           ;init.c: 75: SPBRG2 = 51;
  3963  001480  0E33               	movlw	51
  3964  001482  6E7B               	movwf	3963,c	;volatile
  3965                           
  3966                           ;init.c: 76: BAUDCON2 = 0x08;
  3967  001484  0E08               	movlw	8
  3968  001486  6EB9               	movwf	4025,c	;volatile
  3969                           
  3970                           ;init.c: 80: TXSTA2bits.TXEN = 1;
  3971  001488  8ABA               	bsf	4026,5,c	;volatile
  3972                           
  3973                           ;init.c: 81: RCSTA2bits.CREN = 1;
  3974  00148A  88A6               	bsf	4006,4,c	;volatile
  3975                           
  3976                           ;init.c: 82: RCSTA2bits.SPEN = 1;
  3977  00148C  8EA6               	bsf	4006,7,c	;volatile
  3978                           
  3979                           ;init.c: 85: RCONbits.IPEN = 1;
  3980  00148E  8ED0               	bsf	4048,7,c	;volatile
  3981                           
  3982                           ;init.c: 86: INTCONbits.GIE = 1;
  3983  001490  8EF2               	bsf	intcon,7,c	;volatile
  3984                           
  3985                           ;init.c: 87: INTCONbits.PEIE = 1;
  3986  001492  8CF2               	bsf	intcon,6,c	;volatile
  3987                           
  3988                           ;init.c: 88: PIE3bits.RC2IE = 1;
  3989  001494  8AA3               	bsf	4003,5,c	;volatile
  3990                           
  3991                           ;init.c: 89: PIE3bits.TX2IE = 0;
  3992  001496  98A3               	bcf	4003,4,c	;volatile
  3993                           
  3994                           ;init.c: 91: RC2IF = 0;
  3995  001498  9AA4               	bcf	4004,5,c	;volatile
  3996  00149A  0012               	return		;funcret
  3997  00149C                     __end_of_initComms:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           intcon	equ	0xFF2
  4001                           intcon2	equ	0xFF1
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _initADC *****************
  4007 ;; Defined at:
  4008 ;;		line 94 in file "init.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;		None               void
  4015 ;; Registers used:
  4016 ;;		None
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    4
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_initialisation
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text19
  4037  0014E6                     __ptext19:
  4038                           	opt stack 0
  4039  0014E6                     _initADC:
  4040                           	opt stack 25
  4041                           
  4042                           ;init.c: 96: TRIGSEL1=0;
  4043                           
  4044                           ;incstack = 0
  4045  0014E6  9EC1               	bcf	4033,7,c	;volatile
  4046                           
  4047                           ;init.c: 97: TRIGSEL0=0;
  4048  0014E8  9CC1               	bcf	4033,6,c	;volatile
  4049                           
  4050                           ;init.c: 99: VCFG1=0;
  4051  0014EA  9AC1               	bcf	4033,5,c	;volatile
  4052                           
  4053                           ;init.c: 100: VCFG0=0;
  4054  0014EC  98C1               	bcf	4033,4,c	;volatile
  4055                           
  4056                           ;init.c: 101: VNCFG=0;
  4057  0014EE  96C1               	bcf	4033,3,c	;volatile
  4058                           
  4059                           ;init.c: 105: ANSEL3=1;
  4060  0014F0  010F               	movlb	15	; () banked
  4061  0014F2  875D               	bsf	93,3,b	;volatile
  4062                           
  4063                           ;init.c: 106: ANSEL2=1;
  4064  0014F4  010F               	movlb	15	; () banked
  4065  0014F6  855D               	bsf	93,2,b	;volatile
  4066                           
  4067                           ;init.c: 107: ANSEL1=1;
  4068  0014F8  010F               	movlb	15	; () banked
  4069  0014FA  835D               	bsf	93,1,b	;volatile
  4070                           
  4071                           ;init.c: 109: ADON=1;
  4072  0014FC  80C2               	bsf	4034,0,c	;volatile
  4073                           
  4074                           ;init.c: 111: CHS0=1;
  4075  0014FE  84C2               	bsf	4034,2,c	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078  001500  0012               	return		;funcret
  4079  001502                     __end_of_initADC:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           intcon	equ	0xFF2
  4083                           intcon2	equ	0xFF1
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _changeModeDetect *****************
  4089 ;; Defined at:
  4090 ;;		line 194 in file "main.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  delay           4   29[COMRAM] long 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;		None               void
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;Total ram usage:        4 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    4
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_main
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text20
  4119  000E0A                     __ptext20:
  4120                           	opt stack 0
  4121  000E0A                     _changeModeDetect:
  4122                           	opt stack 26
  4123                           
  4124                           ;main.c: 196: long int delay=0;
  4125                           
  4126                           ; BSR set to: 15
  4127                           ;incstack = 0
  4128  000E0A  0E00               	movlw	0
  4129  000E0C  6E1E               	movwf	changeModeDetect@delay,c
  4130  000E0E  0E00               	movlw	0
  4131  000E10  6E1F               	movwf	changeModeDetect@delay+1,c
  4132  000E12  0E00               	movlw	0
  4133  000E14  6E20               	movwf	changeModeDetect@delay+2,c
  4134  000E16  0E00               	movlw	0
  4135  000E18  6E21               	movwf	changeModeDetect@delay+3,c
  4136                           
  4137                           ;main.c: 200: static char old_SWITCH1=0;
  4138                           ;main.c: 202: if (RC0==0 && old_SWITCH1==1)
  4139  000E1A  B082               	btfsc	3970,0,c	;volatile
  4140  000E1C  D036               	goto	l2511
  4141  000E1E  0100               	movlb	0	; () banked
  4142  000E20  05CB               	decf	changeModeDetect@old_SWITCH1& (0+255),w,b
  4143  000E22  A4D8               	btfss	status,2,c
  4144  000E24  D032               	goto	l2511
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;main.c: 203: {
  4148                           ;main.c: 204: for(delay=0;delay<10000;delay++);
  4149  000E26  0E00               	movlw	0
  4150  000E28  6E1E               	movwf	changeModeDetect@delay,c
  4151  000E2A  0E00               	movlw	0
  4152  000E2C  6E1F               	movwf	changeModeDetect@delay+1,c
  4153  000E2E  0E00               	movlw	0
  4154  000E30  6E20               	movwf	changeModeDetect@delay+2,c
  4155  000E32  0E00               	movlw	0
  4156  000E34  6E21               	movwf	changeModeDetect@delay+3,c
  4157                           
  4158                           ; BSR set to: 0
  4159  000E36  BE21               	btfsc	changeModeDetect@delay+3,7,c
  4160  000E38  D00B               	goto	l2501
  4161  000E3A  5021               	movf	changeModeDetect@delay+3,w,c
  4162  000E3C  1020               	iorwf	changeModeDetect@delay+2,w,c
  4163  000E3E  E114               	bnz	l235
  4164  000E40  0E10               	movlw	16
  4165  000E42  5C1E               	subwf	changeModeDetect@delay,w,c
  4166  000E44  0E27               	movlw	39
  4167  000E46  581F               	subwfb	changeModeDetect@delay+1,w,c
  4168  000E48  B0D8               	btfsc	status,0,c
  4169  000E4A  D00E               	goto	l235
  4170  000E4C  D001               	goto	l2501
  4171                           
  4172                           ; BSR set to: 0
  4173  000E4E  D00C               	goto	l235
  4174  000E50                     l2501:
  4175  000E50  0E01               	movlw	1
  4176  000E52  261E               	addwf	changeModeDetect@delay,f,c
  4177  000E54  0E00               	movlw	0
  4178  000E56  221F               	addwfc	changeModeDetect@delay+1,f,c
  4179  000E58  2220               	addwfc	changeModeDetect@delay+2,f,c
  4180  000E5A  2221               	addwfc	changeModeDetect@delay+3,f,c
  4181  000E5C  BE21               	btfsc	changeModeDetect@delay+3,7,c
  4182  000E5E  D7F8               	goto	l2501
  4183  000E60  5021               	movf	changeModeDetect@delay+3,w,c
  4184  000E62  1020               	iorwf	changeModeDetect@delay+2,w,c
  4185  000E64  E101               	bnz	u2570
  4186  000E66  D7EC               	goto	L2
  4187  000E68                     u2570:
  4188  000E68                     l235:
  4189                           
  4190                           ;main.c: 205: if (RC0==0 && old_SWITCH1==1)
  4191  000E68  B082               	btfsc	3970,0,c	;volatile
  4192  000E6A  D00F               	goto	l2511
  4193  000E6C  0100               	movlb	0	; () banked
  4194  000E6E  05CB               	decf	changeModeDetect@old_SWITCH1& (0+255),w,b
  4195  000E70  A4D8               	btfss	status,2,c
  4196  000E72  D00B               	goto	l2511
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;main.c: 206: {
  4200                           ;main.c: 207: if (mode==0)
  4201  000E74  0100               	movlb	0	; () banked
  4202  000E76  51CA               	movf	_mode& (0+255),w,b
  4203  000E78  A4D8               	btfss	status,2,c
  4204  000E7A  D004               	goto	l2509
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 208: mode=2;
  4208  000E7C  0E02               	movlw	2
  4209  000E7E  0100               	movlb	0	; () banked
  4210  000E80  6FCA               	movwf	_mode& (0+255),b
  4211  000E82  D003               	goto	l2511
  4212  000E84                     l2509:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;main.c: 209: else
  4216                           ;main.c: 210: mode-=1;
  4217  000E84  0100               	movlb	0	; () banked
  4218  000E86  07CA               	decf	_mode& (0+255),f,b
  4219                           
  4220                           ; BSR set to: 0
  4221                           
  4222                           ; BSR set to: 0
  4223  000E88  D000               	goto	l2511
  4224  000E8A                     l2511:
  4225                           
  4226                           ;main.c: 211: }
  4227                           ;main.c: 212: }
  4228                           ;main.c: 213: old_SWITCH1=RC0;
  4229  000E8A  0E00               	movlw	0
  4230  000E8C  B082               	btfsc	3970,0,c	;volatile
  4231  000E8E  0E01               	movlw	1
  4232  000E90  0100               	movlb	0	; () banked
  4233  000E92  6FCB               	movwf	changeModeDetect@old_SWITCH1& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;main.c: 217: static char old_SWITCH3=0;
  4237                           ;main.c: 219: if (RA6==0 && old_SWITCH3==1)
  4238  000E94  BC80               	btfsc	3968,6,c	;volatile
  4239  000E96  D037               	goto	l2533
  4240                           
  4241                           ; BSR set to: 0
  4242  000E98  0100               	movlb	0	; () banked
  4243  000E9A  05CC               	decf	changeModeDetect@old_SWITCH3& (0+255),w,b
  4244  000E9C  A4D8               	btfss	status,2,c
  4245  000E9E  D033               	goto	l2533
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;main.c: 220: {
  4249                           ;main.c: 221: for(delay=0;delay<10000;delay++);
  4250  000EA0  0E00               	movlw	0
  4251  000EA2  6E1E               	movwf	changeModeDetect@delay,c
  4252  000EA4  0E00               	movlw	0
  4253  000EA6  6E1F               	movwf	changeModeDetect@delay+1,c
  4254  000EA8  0E00               	movlw	0
  4255  000EAA  6E20               	movwf	changeModeDetect@delay+2,c
  4256  000EAC  0E00               	movlw	0
  4257  000EAE  6E21               	movwf	changeModeDetect@delay+3,c
  4258                           
  4259                           ; BSR set to: 0
  4260  000EB0  BE21               	btfsc	changeModeDetect@delay+3,7,c
  4261  000EB2  D00B               	goto	l2523
  4262  000EB4  5021               	movf	changeModeDetect@delay+3,w,c
  4263  000EB6  1020               	iorwf	changeModeDetect@delay+2,w,c
  4264  000EB8  E114               	bnz	l243
  4265  000EBA  0E10               	movlw	16
  4266  000EBC  5C1E               	subwf	changeModeDetect@delay,w,c
  4267  000EBE  0E27               	movlw	39
  4268  000EC0  581F               	subwfb	changeModeDetect@delay+1,w,c
  4269  000EC2  B0D8               	btfsc	status,0,c
  4270  000EC4  D00E               	goto	l243
  4271  000EC6  D001               	goto	l2523
  4272                           
  4273                           ; BSR set to: 0
  4274  000EC8  D00C               	goto	l243
  4275  000ECA                     l2523:
  4276  000ECA  0E01               	movlw	1
  4277  000ECC  261E               	addwf	changeModeDetect@delay,f,c
  4278  000ECE  0E00               	movlw	0
  4279  000ED0  221F               	addwfc	changeModeDetect@delay+1,f,c
  4280  000ED2  2220               	addwfc	changeModeDetect@delay+2,f,c
  4281  000ED4  2221               	addwfc	changeModeDetect@delay+3,f,c
  4282  000ED6  BE21               	btfsc	changeModeDetect@delay+3,7,c
  4283  000ED8  D7F8               	goto	l2523
  4284  000EDA  5021               	movf	changeModeDetect@delay+3,w,c
  4285  000EDC  1020               	iorwf	changeModeDetect@delay+2,w,c
  4286  000EDE  E101               	bnz	u2640
  4287  000EE0  D7EC               	goto	L3
  4288  000EE2                     u2640:
  4289  000EE2                     l243:
  4290                           
  4291                           ;main.c: 222: if (RA6==0 && old_SWITCH3==1)
  4292  000EE2  BC80               	btfsc	3968,6,c	;volatile
  4293  000EE4  D010               	goto	l2533
  4294  000EE6  0100               	movlb	0	; () banked
  4295  000EE8  05CC               	decf	changeModeDetect@old_SWITCH3& (0+255),w,b
  4296  000EEA  A4D8               	btfss	status,2,c
  4297  000EEC  D00C               	goto	l2533
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;main.c: 223: {
  4301                           ;main.c: 224: if (mode==2)
  4302  000EEE  0E02               	movlw	2
  4303  000EF0  0100               	movlb	0	; () banked
  4304  000EF2  19CA               	xorwf	_mode& (0+255),w,b
  4305  000EF4  A4D8               	btfss	status,2,c
  4306  000EF6  D004               	goto	l2531
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 225: mode=0;
  4310  000EF8  0E00               	movlw	0
  4311  000EFA  0100               	movlb	0	; () banked
  4312  000EFC  6FCA               	movwf	_mode& (0+255),b
  4313  000EFE  D003               	goto	l2533
  4314  000F00                     l2531:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;main.c: 226: else
  4318                           ;main.c: 227: mode+=1;
  4319  000F00  0100               	movlb	0	; () banked
  4320  000F02  2BCA               	incf	_mode& (0+255),f,b
  4321                           
  4322                           ; BSR set to: 0
  4323                           
  4324                           ; BSR set to: 0
  4325  000F04  D000               	goto	l2533
  4326  000F06                     l2533:
  4327                           
  4328                           ;main.c: 228: }
  4329                           ;main.c: 229: }
  4330                           ;main.c: 230: old_SWITCH3=RA6;
  4331  000F06  0E00               	movlw	0
  4332  000F08  BC80               	btfsc	3968,6,c	;volatile
  4333  000F0A  0E01               	movlw	1
  4334  000F0C  0100               	movlb	0	; () banked
  4335  000F0E  6FCC               	movwf	changeModeDetect@old_SWITCH3& (0+255),b
  4336                           
  4337                           ; BSR set to: 0
  4338  000F10  0012               	return		;funcret
  4339  000F12                     __end_of_changeModeDetect:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           intcon	equ	0xFF2
  4343                           intcon2	equ	0xFF1
  4344                           postinc0	equ	0xFEE
  4345                           wreg	equ	0xFE8
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _Timer0_ISR *****************
  4349 ;; Defined at:
  4350 ;;		line 7 in file "interrupts.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;Total ram usage:       17 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    3
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		Interrupt level 1
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	intcodelo
  4379  000018                     __pintcodelo:
  4380                           	opt stack 0
  4381  000018                     _Timer0_ISR:
  4382                           	opt stack 23
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;incstack = 0
  4386  000018  CFD8 F060          	movff	status,??_Timer0_ISR
  4387  00001C  CFE8 F061          	movff	wreg,??_Timer0_ISR+1
  4388  000020  CFE0 F062          	movff	bsr,??_Timer0_ISR+2
  4389  000024  CFFA F063          	movff	pclath,??_Timer0_ISR+3
  4390  000028  CFFB F064          	movff	pclatu,??_Timer0_ISR+4
  4391  00002C  CFE9 F065          	movff	fsr0l,??_Timer0_ISR+5
  4392  000030  CFEA F066          	movff	fsr0h,??_Timer0_ISR+6
  4393  000034  CFE1 F067          	movff	fsr1l,??_Timer0_ISR+7
  4394  000038  CFE2 F068          	movff	fsr1h,??_Timer0_ISR+8
  4395  00003C  CFD9 F069          	movff	fsr2l,??_Timer0_ISR+9
  4396  000040  CFDA F06A          	movff	fsr2h,??_Timer0_ISR+10
  4397  000044  CFF3 F06B          	movff	prodl,??_Timer0_ISR+11
  4398  000048  CFF4 F06C          	movff	prodh,??_Timer0_ISR+12
  4399  00004C  CFF6 F06D          	movff	tblptrl,??_Timer0_ISR+13
  4400  000050  CFF7 F06E          	movff	tblptrh,??_Timer0_ISR+14
  4401  000054  CFF8 F06F          	movff	tblptru,??_Timer0_ISR+15
  4402  000058  CFF5 F070          	movff	tablat,??_Timer0_ISR+16
  4403                           
  4404                           ;interrupts.c: 12: if (T0IE && T0IF)
  4405  00005C  BAF2               	btfsc	intcon,5,c	;volatile
  4406  00005E  A4F2               	btfss	intcon,2,c	;volatile
  4407  000060  D00D               	goto	i1l265
  4408                           
  4409                           ;interrupts.c: 13: {
  4410                           ;interrupts.c: 14: T0IF=0;
  4411  000062  94F2               	bcf	intcon,2,c	;volatile
  4412                           
  4413                           ;interrupts.c: 16: TMR0=15;
  4414  000064  0E00               	movlw	0
  4415  000066  6ED7               	movwf	4055,c	;volatile
  4416  000068  0E0F               	movlw	15
  4417  00006A  6ED6               	movwf	4054,c	;volatile
  4418                           
  4419                           ;interrupts.c: 18: millis++;
  4420  00006C  0E01               	movlw	1
  4421  00006E  0100               	movlb	0	; () banked
  4422  000070  27C6               	addwf	_millis& (0+255),f,b
  4423  000072  0E00               	movlw	0
  4424  000074  23C7               	addwfc	(_millis+1)& (0+255),f,b
  4425  000076  23C8               	addwfc	(_millis+2)& (0+255),f,b
  4426  000078  23C9               	addwfc	(_millis+3)& (0+255),f,b
  4427  00007A  D000               	goto	i1l265
  4428  00007C                     i1l265:
  4429  00007C  C070  FFF5         	movff	??_Timer0_ISR+16,tablat
  4430  000080  C06F  FFF8         	movff	??_Timer0_ISR+15,tblptru
  4431  000084  C06E  FFF7         	movff	??_Timer0_ISR+14,tblptrh
  4432  000088  C06D  FFF6         	movff	??_Timer0_ISR+13,tblptrl
  4433  00008C  C06C  FFF4         	movff	??_Timer0_ISR+12,prodh
  4434  000090  C06B  FFF3         	movff	??_Timer0_ISR+11,prodl
  4435  000094  C06A  FFDA         	movff	??_Timer0_ISR+10,fsr2h
  4436  000098  C069  FFD9         	movff	??_Timer0_ISR+9,fsr2l
  4437  00009C  C068  FFE2         	movff	??_Timer0_ISR+8,fsr1h
  4438  0000A0  C067  FFE1         	movff	??_Timer0_ISR+7,fsr1l
  4439  0000A4  C066  FFEA         	movff	??_Timer0_ISR+6,fsr0h
  4440  0000A8  C065  FFE9         	movff	??_Timer0_ISR+5,fsr0l
  4441  0000AC  C064  FFFB         	movff	??_Timer0_ISR+4,pclatu
  4442  0000B0  C063  FFFA         	movff	??_Timer0_ISR+3,pclath
  4443  0000B4  C062  FFE0         	movff	??_Timer0_ISR+2,bsr
  4444  0000B8  C061  FFE8         	movff	??_Timer0_ISR+1,wreg
  4445  0000BC  C060  FFD8         	movff	??_Timer0_ISR,status
  4446  0000C0  0010               	retfie	
  4447  0000C2                     __end_of_Timer0_ISR:
  4448                           	opt stack 0
  4449                           pclatu	equ	0xFFB
  4450                           pclath	equ	0xFFA
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           intcon2	equ	0xFF1
  4459                           postinc0	equ	0xFEE
  4460                           fsr0h	equ	0xFEA
  4461                           fsr0l	equ	0xFE9
  4462                           wreg	equ	0xFE8
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           bsr	equ	0xFE0
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _RX2_ISR *****************
  4471 ;; Defined at:
  4472 ;;		line 25 in file "interrupts.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  input           2   27[COMRAM] unsigned char [2]
  4477 ;; Return value:  Size  Location     Type
  4478 ;;		None               void
  4479 ;; Registers used:
  4480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;Total ram usage:       16 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    2
  4493 ;; This function calls:
  4494 ;;		_atoi
  4495 ;; This function is called by:
  4496 ;;		Interrupt level 2
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	intcode
  4501  000008                     __pintcode:
  4502                           	opt stack 0
  4503  000008                     _RX2_ISR:
  4504                           	opt stack 23
  4505                           
  4506                           ;incstack = 0
  4507  000008  CFFA F00E          	movff	pclath,??_RX2_ISR
  4508  00000C  CFFB F00F          	movff	pclatu,??_RX2_ISR+1
  4509  000010  CFE9 F010          	movff	fsr0l,??_RX2_ISR+2
  4510  000014  EFFF  F003         	goto	int_func
  4511                           pclatu	equ	0xFFB
  4512                           pclath	equ	0xFFA
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           prodh	equ	0xFF4
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           intcon2	equ	0xFF1
  4521                           postinc0	equ	0xFEE
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           bsr	equ	0xFE0
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532                           	psect	intcode_body
  4533  0007FE                     __pintcode_body:
  4534                           	opt stack 23
  4535  0007FE                     int_func:
  4536                           	opt stack 23
  4537  0007FE  CFEA F011          	movff	fsr0h,??_RX2_ISR+3
  4538  000802  CFE1 F012          	movff	fsr1l,??_RX2_ISR+4
  4539  000806  CFE2 F013          	movff	fsr1h,??_RX2_ISR+5
  4540  00080A  CFD9 F014          	movff	fsr2l,??_RX2_ISR+6
  4541  00080E  CFDA F015          	movff	fsr2h,??_RX2_ISR+7
  4542  000812  CFF3 F016          	movff	prodl,??_RX2_ISR+8
  4543  000816  CFF4 F017          	movff	prodh,??_RX2_ISR+9
  4544  00081A  CFF6 F018          	movff	tblptrl,??_RX2_ISR+10
  4545  00081E  CFF7 F019          	movff	tblptrh,??_RX2_ISR+11
  4546  000822  CFF8 F01A          	movff	tblptru,??_RX2_ISR+12
  4547  000826  CFF5 F01B          	movff	tablat,??_RX2_ISR+13
  4548                           
  4549                           ;interrupts.c: 26: RC2IF = 0;
  4550  00082A  9AA4               	bcf	4004,5,c	;volatile
  4551                           
  4552                           ;interrupts.c: 28: extern unsigned int R[100];
  4553                           ;interrupts.c: 29: extern unsigned int G[100];
  4554                           ;interrupts.c: 30: extern unsigned int B[100];
  4555                           ;interrupts.c: 32: static char compteur=0;
  4556                           ;interrupts.c: 33: static char buffer[16]="";
  4557                           ;interrupts.c: 34: static char beginR=0;
  4558                           ;interrupts.c: 35: static char beginG=0;
  4559                           ;interrupts.c: 36: static char beginB=0;
  4560                           ;interrupts.c: 38: char input[2] = "";
  4561  00082C  C02D  F01C         	movff	RX2_ISR@F19173,RX2_ISR@input
  4562  000830  C02E  F01D         	movff	RX2_ISR@F19173+1,RX2_ISR@input+1
  4563                           
  4564                           ;interrupts.c: 39: input[0] = RCREG2;
  4565  000834  CF7A F01C          	movff	3962,RX2_ISR@input	;volatile
  4566                           
  4567                           ;interrupts.c: 41: if (beginR==1 | beginG==1 | beginB==1)
  4568  000838  0431               	decf	RX2_ISR@beginR,w,c
  4569  00083A  B4D8               	btfsc	status,2,c
  4570  00083C  D006               	goto	i2l2143
  4571  00083E  0430               	decf	RX2_ISR@beginG,w,c
  4572  000840  B4D8               	btfsc	status,2,c
  4573  000842  D003               	goto	i2l2143
  4574  000844  042F               	decf	RX2_ISR@beginB,w,c
  4575  000846  A4D8               	btfss	status,2,c
  4576  000848  D053               	goto	i2l2181
  4577  00084A                     i2l2143:
  4578                           
  4579                           ;interrupts.c: 42: {
  4580                           ;interrupts.c: 43: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  4581  00084A  0E52               	movlw	82
  4582  00084C  181C               	xorwf	RX2_ISR@input,w,c
  4583  00084E  B4D8               	btfsc	status,2,c
  4584  000850  D014               	goto	i2l2153
  4585  000852  0E47               	movlw	71
  4586  000854  181C               	xorwf	RX2_ISR@input,w,c
  4587  000856  B4D8               	btfsc	status,2,c
  4588  000858  D010               	goto	i2l2153
  4589  00085A  0E42               	movlw	66
  4590  00085C  181C               	xorwf	RX2_ISR@input,w,c
  4591  00085E  B4D8               	btfsc	status,2,c
  4592  000860  D00C               	goto	i2l2153
  4593                           
  4594                           ;interrupts.c: 44: {
  4595                           ;interrupts.c: 45: buffer[compteur]=input[0];
  4596  000862  5032               	movf	RX2_ISR@compteur,w,c
  4597  000864  0D01               	mullw	1
  4598  000866  0E33               	movlw	low RX2_ISR@buffer
  4599  000868  24F3               	addwf	prodl,w,c
  4600  00086A  6ED9               	movwf	fsr2l,c
  4601  00086C  0E00               	movlw	high RX2_ISR@buffer
  4602  00086E  20F4               	addwfc	prodh,w,c
  4603  000870  6EDA               	movwf	fsr2h,c
  4604  000872  C01C  FFDF         	movff	RX2_ISR@input,indf2
  4605                           
  4606                           ;interrupts.c: 46: compteur+=1;
  4607  000876  2A32               	incf	RX2_ISR@compteur,f,c
  4608                           
  4609                           ;interrupts.c: 47: }
  4610  000878  D03B               	goto	i2l2181
  4611  00087A                     i2l2153:
  4612                           
  4613                           ;interrupts.c: 49: else
  4614                           ;interrupts.c: 50: {
  4615                           ;interrupts.c: 51: if (beginR==1)
  4616  00087A  0431               	decf	RX2_ISR@beginR,w,c
  4617  00087C  A4D8               	btfss	status,2,c
  4618  00087E  D00B               	goto	i2l2157
  4619                           
  4620                           ;interrupts.c: 52: R[0]=atoi(buffer);
  4621  000880  0E33               	movlw	low RX2_ISR@buffer
  4622  000882  6E07               	movwf	atoi@s,c
  4623  000884  0E00               	movlw	high RX2_ISR@buffer
  4624  000886  6E08               	movwf	atoi@s+1,c
  4625  000888  EC0B  F008         	call	_atoi	;wreg free
  4626  00088C  C007  F100         	movff	?_atoi,_R
  4627  000890  C008  F101         	movff	?_atoi+1,_R+1
  4628  000894  D000               	goto	i2l2157
  4629  000896                     i2l2157:
  4630                           
  4631                           ;interrupts.c: 53: beginR=0;
  4632  000896  0E00               	movlw	0
  4633  000898  6E31               	movwf	RX2_ISR@beginR,c
  4634                           
  4635                           ;interrupts.c: 54: if (beginG==1)
  4636  00089A  0430               	decf	RX2_ISR@beginG,w,c
  4637  00089C  A4D8               	btfss	status,2,c
  4638  00089E  D00B               	goto	i2l2163
  4639                           
  4640                           ;interrupts.c: 55: G[0]=atoi(buffer);
  4641  0008A0  0E33               	movlw	low RX2_ISR@buffer
  4642  0008A2  6E07               	movwf	atoi@s,c
  4643  0008A4  0E00               	movlw	high RX2_ISR@buffer
  4644  0008A6  6E08               	movwf	atoi@s+1,c
  4645  0008A8  EC0B  F008         	call	_atoi	;wreg free
  4646  0008AC  C007  F200         	movff	?_atoi,_G
  4647  0008B0  C008  F201         	movff	?_atoi+1,_G+1
  4648  0008B4  D000               	goto	i2l2163
  4649  0008B6                     i2l2163:
  4650                           
  4651                           ;interrupts.c: 56: beginG=0;
  4652  0008B6  0E00               	movlw	0
  4653  0008B8  6E30               	movwf	RX2_ISR@beginG,c
  4654                           
  4655                           ;interrupts.c: 57: if (beginB==1)
  4656  0008BA  042F               	decf	RX2_ISR@beginB,w,c
  4657  0008BC  A4D8               	btfss	status,2,c
  4658  0008BE  D00B               	goto	i2l2169
  4659                           
  4660                           ;interrupts.c: 58: B[0]=atoi(buffer);
  4661  0008C0  0E33               	movlw	low RX2_ISR@buffer
  4662  0008C2  6E07               	movwf	atoi@s,c
  4663  0008C4  0E00               	movlw	high RX2_ISR@buffer
  4664  0008C6  6E08               	movwf	atoi@s+1,c
  4665  0008C8  EC0B  F008         	call	_atoi	;wreg free
  4666  0008CC  C007  F300         	movff	?_atoi,_B
  4667  0008D0  C008  F301         	movff	?_atoi+1,_B+1
  4668  0008D4  D000               	goto	i2l2169
  4669  0008D6                     i2l2169:
  4670                           
  4671                           ;interrupts.c: 59: beginB=0;
  4672  0008D6  0E00               	movlw	0
  4673  0008D8  6E2F               	movwf	RX2_ISR@beginB,c
  4674                           
  4675                           ;interrupts.c: 62: compteur=0;
  4676  0008DA  0E00               	movlw	0
  4677  0008DC  6E32               	movwf	RX2_ISR@compteur,c
  4678                           
  4679                           ;interrupts.c: 63: buffer[3]='\0';
  4680  0008DE  0E00               	movlw	0
  4681  0008E0  6E36               	movwf	RX2_ISR@buffer+3,c
  4682                           
  4683                           ;interrupts.c: 64: buffer[2]='\0';
  4684  0008E2  0E00               	movlw	0
  4685  0008E4  6E35               	movwf	RX2_ISR@buffer+2,c
  4686                           
  4687                           ;interrupts.c: 65: buffer[1]='\0';
  4688  0008E6  0E00               	movlw	0
  4689  0008E8  6E34               	movwf	RX2_ISR@buffer+1,c
  4690                           
  4691                           ;interrupts.c: 66: buffer[0]='\0';
  4692  0008EA  0E00               	movlw	0
  4693  0008EC  6E33               	movwf	RX2_ISR@buffer,c
  4694  0008EE  D000               	goto	i2l2181
  4695  0008F0                     i2l2181:
  4696                           
  4697                           ;interrupts.c: 67: }
  4698                           ;interrupts.c: 68: }
  4699                           ;interrupts.c: 70: if (input[0]=='R')
  4700  0008F0  0E52               	movlw	82
  4701  0008F2  181C               	xorwf	RX2_ISR@input,w,c
  4702  0008F4  A4D8               	btfss	status,2,c
  4703  0008F6  D003               	goto	i2l2185
  4704                           
  4705                           ;interrupts.c: 71: beginR=1;
  4706  0008F8  0E01               	movlw	1
  4707  0008FA  6E31               	movwf	RX2_ISR@beginR,c
  4708  0008FC  D000               	goto	i2l2185
  4709  0008FE                     i2l2185:
  4710                           
  4711                           ;interrupts.c: 72: if (input[0]=='G')
  4712  0008FE  0E47               	movlw	71
  4713  000900  181C               	xorwf	RX2_ISR@input,w,c
  4714  000902  A4D8               	btfss	status,2,c
  4715  000904  D003               	goto	i2l2189
  4716                           
  4717                           ;interrupts.c: 73: beginG=1;
  4718  000906  0E01               	movlw	1
  4719  000908  6E30               	movwf	RX2_ISR@beginG,c
  4720  00090A  D000               	goto	i2l2189
  4721  00090C                     i2l2189:
  4722                           
  4723                           ;interrupts.c: 74: if (input[0]=='B')
  4724  00090C  0E42               	movlw	66
  4725  00090E  181C               	xorwf	RX2_ISR@input,w,c
  4726  000910  A4D8               	btfss	status,2,c
  4727  000912  D003               	goto	i2l297
  4728                           
  4729                           ;interrupts.c: 75: beginB=1;
  4730  000914  0E01               	movlw	1
  4731  000916  6E2F               	movwf	RX2_ISR@beginB,c
  4732  000918  D000               	goto	i2l297
  4733  00091A                     i2l297:
  4734  00091A  C01B  FFF5         	movff	??_RX2_ISR+13,tablat
  4735  00091E  C01A  FFF8         	movff	??_RX2_ISR+12,tblptru
  4736  000922  C019  FFF7         	movff	??_RX2_ISR+11,tblptrh
  4737  000926  C018  FFF6         	movff	??_RX2_ISR+10,tblptrl
  4738  00092A  C017  FFF4         	movff	??_RX2_ISR+9,prodh
  4739  00092E  C016  FFF3         	movff	??_RX2_ISR+8,prodl
  4740  000932  C015  FFDA         	movff	??_RX2_ISR+7,fsr2h
  4741  000936  C014  FFD9         	movff	??_RX2_ISR+6,fsr2l
  4742  00093A  C013  FFE2         	movff	??_RX2_ISR+5,fsr1h
  4743  00093E  C012  FFE1         	movff	??_RX2_ISR+4,fsr1l
  4744  000942  C011  FFEA         	movff	??_RX2_ISR+3,fsr0h
  4745  000946  C010  FFE9         	movff	??_RX2_ISR+2,fsr0l
  4746  00094A  C00F  FFFB         	movff	??_RX2_ISR+1,pclatu
  4747  00094E  C00E  FFFA         	movff	??_RX2_ISR,pclath
  4748  000952  0011               	retfie		f
  4749  000954                     __end_of_RX2_ISR:
  4750                           	opt stack 0
  4751                           pclatu	equ	0xFFB
  4752                           pclath	equ	0xFFA
  4753                           tblptru	equ	0xFF8
  4754                           tblptrh	equ	0xFF7
  4755                           tblptrl	equ	0xFF6
  4756                           tablat	equ	0xFF5
  4757                           prodh	equ	0xFF4
  4758                           prodl	equ	0xFF3
  4759                           intcon	equ	0xFF2
  4760                           intcon2	equ	0xFF1
  4761                           postinc0	equ	0xFEE
  4762                           fsr0h	equ	0xFEA
  4763                           fsr0l	equ	0xFE9
  4764                           wreg	equ	0xFE8
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           bsr	equ	0xFE0
  4768                           indf2	equ	0xFDF
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function _atoi *****************
  4774 ;; Defined at:
  4775 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4778 ;;		 -> RX2_ISR@buffer(16), 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  a               2   11[COMRAM] int 
  4781 ;;  sign            1   10[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2    6[COMRAM] int 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4795 ;;Total ram usage:        7 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    1
  4798 ;; This function calls:
  4799 ;;		___wmul
  4800 ;;		_isdigit
  4801 ;; This function is called by:
  4802 ;;		_RX2_ISR
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text23
  4807  001016                     __ptext23:
  4808                           	opt stack 0
  4809  001016                     _atoi:
  4810                           	opt stack 23
  4811                           
  4812                           ;incstack = 0
  4813  001016  D003               	goto	i2l2089
  4814  001018                     i2l2087:
  4815  001018  4A07               	infsnz	atoi@s,f,c
  4816  00101A  2A08               	incf	atoi@s+1,f,c
  4817  00101C  D000               	goto	i2l2089
  4818  00101E                     i2l2089:
  4819  00101E  C007  FFD9         	movff	atoi@s,fsr2l
  4820  001022  C008  FFDA         	movff	atoi@s+1,fsr2h
  4821  001026  0E20               	movlw	32
  4822  001028  18DE               	xorwf	postinc2,w,c
  4823  00102A  B4D8               	btfsc	status,2,c
  4824  00102C  D7F5               	goto	i2l2087
  4825  00102E  C007  FFD9         	movff	atoi@s,fsr2l
  4826  001032  C008  FFDA         	movff	atoi@s+1,fsr2h
  4827  001036  0E09               	movlw	9
  4828  001038  18DE               	xorwf	postinc2,w,c
  4829  00103A  B4D8               	btfsc	status,2,c
  4830  00103C  D7ED               	goto	i2l2087
  4831  00103E  0E00               	movlw	0
  4832  001040  6E0D               	movwf	atoi@a+1,c
  4833  001042  0E00               	movlw	0
  4834  001044  6E0C               	movwf	atoi@a,c
  4835  001046  0E00               	movlw	0
  4836  001048  6E0B               	movwf	atoi@sign,c
  4837  00104A  C007  FFD9         	movff	atoi@s,fsr2l
  4838  00104E  C008  FFDA         	movff	atoi@s+1,fsr2h
  4839  001052  0E2D               	movlw	45
  4840  001054  18DE               	xorwf	postinc2,w,c
  4841  001056  A4D8               	btfss	status,2,c
  4842  001058  D002               	goto	i2l2099
  4843  00105A  2A0B               	incf	atoi@sign,f,c
  4844  00105C  D025               	goto	i2l2105
  4845  00105E                     i2l2099:
  4846  00105E  C007  FFD9         	movff	atoi@s,fsr2l
  4847  001062  C008  FFDA         	movff	atoi@s+1,fsr2h
  4848  001066  0E2B               	movlw	43
  4849  001068  18DE               	xorwf	postinc2,w,c
  4850  00106A  A4D8               	btfss	status,2,c
  4851  00106C  D020               	goto	i2l2107
  4852  00106E  D01C               	goto	i2l2105
  4853  001070  D01E               	goto	i2l2107
  4854  001072                     i2l2103:
  4855  001072  C00C  F001         	movff	atoi@a,___wmul@multiplier
  4856  001076  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  4857  00107A  0E00               	movlw	0
  4858  00107C  6E04               	movwf	___wmul@multiplicand+1,c
  4859  00107E  0E0A               	movlw	10
  4860  001080  6E03               	movwf	___wmul@multiplicand,c
  4861  001082  EC4E  F00A         	call	___wmul	;wreg free
  4862  001086  C007  FFD9         	movff	atoi@s,fsr2l
  4863  00108A  C008  FFDA         	movff	atoi@s+1,fsr2h
  4864  00108E  50DF               	movf	indf2,w,c
  4865  001090  6E09               	movwf	??_atoi& (0+255),c
  4866  001092  6A0A               	clrf	(??_atoi+1)& (0+255),c
  4867  001094  5001               	movf	?___wmul,w,c
  4868  001096  2609               	addwf	??_atoi,f,c
  4869  001098  5002               	movf	?___wmul+1,w,c
  4870  00109A  220A               	addwfc	??_atoi+1,f,c
  4871  00109C  0ED0               	movlw	208
  4872  00109E  2409               	addwf	??_atoi,w,c
  4873  0010A0  6E0C               	movwf	atoi@a,c
  4874  0010A2  0EFF               	movlw	255
  4875  0010A4  200A               	addwfc	??_atoi+1,w,c
  4876  0010A6  6E0D               	movwf	atoi@a+1,c
  4877  0010A8                     i2l2105:
  4878  0010A8  4A07               	infsnz	atoi@s,f,c
  4879  0010AA  2A08               	incf	atoi@s+1,f,c
  4880  0010AC  D000               	goto	i2l2107
  4881  0010AE                     i2l2107:
  4882  0010AE  C007  FFD9         	movff	atoi@s,fsr2l
  4883  0010B2  C008  FFDA         	movff	atoi@s+1,fsr2h
  4884  0010B6  50DF               	movf	indf2,w,c
  4885  0010B8  EC62  F00A         	call	_isdigit
  4886  0010BC  B0D8               	btfsc	status,0,c
  4887  0010BE  D7D9               	goto	i2l2103
  4888  0010C0  500B               	movf	atoi@sign,w,c
  4889  0010C2  B4D8               	btfsc	status,2,c
  4890  0010C4  D00D               	goto	i2l500
  4891  0010C6  C00C  F009         	movff	atoi@a,??_atoi
  4892  0010CA  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  4893  0010CE  1E09               	comf	??_atoi,f,c
  4894  0010D0  1E0A               	comf	??_atoi+1,f,c
  4895  0010D2  4A09               	infsnz	??_atoi,f,c
  4896  0010D4  2A0A               	incf	??_atoi+1,f,c
  4897  0010D6  C009  F007         	movff	??_atoi,?_atoi
  4898  0010DA  C00A  F008         	movff	??_atoi+1,?_atoi+1
  4899  0010DE  0012               	return	
  4900  0010E0                     i2l500:
  4901  0010E0  C00C  F007         	movff	atoi@a,?_atoi
  4902  0010E4  C00D  F008         	movff	atoi@a+1,?_atoi+1
  4903  0010E8  0012               	return		;funcret
  4904  0010EA                     __end_of_atoi:
  4905                           	opt stack 0
  4906                           pclatu	equ	0xFFB
  4907                           pclath	equ	0xFFA
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           postinc0	equ	0xFEE
  4917                           fsr0h	equ	0xFEA
  4918                           fsr0l	equ	0xFE9
  4919                           wreg	equ	0xFE8
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           bsr	equ	0xFE0
  4923                           indf2	equ	0xFDF
  4924                           postinc2	equ	0xFDE
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _isdigit *****************
  4930 ;; Defined at:
  4931 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  c               1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  c               1    2[COMRAM] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;Total ram usage:        3 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_atoi
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text24
  4959  0014C4                     __ptext24:
  4960                           	opt stack 0
  4961  0014C4                     _isdigit:
  4962                           	opt stack 23
  4963                           
  4964                           ;incstack = 0
  4965                           ;isdigit@c stored from wreg
  4966  0014C4  6E03               	movwf	isdigit@c,c
  4967  0014C6  0E00               	movlw	0
  4968  0014C8  6E02               	movwf	_isdigit$888,c
  4969  0014CA  0E3A               	movlw	58
  4970  0014CC  6003               	cpfslt	isdigit@c,c
  4971  0014CE  D006               	goto	i2l1965
  4972  0014D0  0E2F               	movlw	47
  4973  0014D2  6403               	cpfsgt	isdigit@c,c
  4974  0014D4  D003               	goto	i2l1965
  4975  0014D6  0E01               	movlw	1
  4976  0014D8  6E02               	movwf	_isdigit$888,c
  4977  0014DA  D000               	goto	i2l1965
  4978  0014DC                     i2l1965:
  4979  0014DC  C002  F001         	movff	_isdigit$888,??_isdigit
  4980  0014E0  3001               	rrcf	??_isdigit,w,c
  4981  0014E2  0012               	return	
  4982  0014E4  0012               	return		;funcret
  4983  0014E6                     __end_of_isdigit:
  4984                           	opt stack 0
  4985                           pclatu	equ	0xFFB
  4986                           pclath	equ	0xFFA
  4987                           tblptru	equ	0xFF8
  4988                           tblptrh	equ	0xFF7
  4989                           tblptrl	equ	0xFF6
  4990                           tablat	equ	0xFF5
  4991                           prodh	equ	0xFF4
  4992                           prodl	equ	0xFF3
  4993                           intcon	equ	0xFF2
  4994                           intcon2	equ	0xFF1
  4995                           postinc0	equ	0xFEE
  4996                           fsr0h	equ	0xFEA
  4997                           fsr0l	equ	0xFE9
  4998                           wreg	equ	0xFE8
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           bsr	equ	0xFE0
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           fsr2h	equ	0xFDA
  5005                           fsr2l	equ	0xFD9
  5006                           status	equ	0xFD8
  5007                           
  5008 ;; *************** function ___wmul *****************
  5009 ;; Defined at:
  5010 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  multiplier      2    0[COMRAM] unsigned int 
  5013 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  product         2    4[COMRAM] unsigned int 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  2    0[COMRAM] unsigned int 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, prodl, prodh
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;Total ram usage:        6 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_atoi
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text25
  5039  00149C                     __ptext25:
  5040                           	opt stack 0
  5041  00149C                     ___wmul:
  5042                           	opt stack 23
  5043                           
  5044                           ;incstack = 0
  5045  00149C  5001               	movf	___wmul@multiplier,w,c
  5046  00149E  0203               	mulwf	___wmul@multiplicand,c
  5047  0014A0  CFF3 F005          	movff	prodl,___wmul@product
  5048  0014A4  CFF4 F006          	movff	prodh,___wmul@product+1
  5049  0014A8  5001               	movf	___wmul@multiplier,w,c
  5050  0014AA  0204               	mulwf	___wmul@multiplicand+1,c
  5051  0014AC  50F3               	movf	prodl,w,c
  5052  0014AE  2606               	addwf	___wmul@product+1,f,c
  5053  0014B0  5002               	movf	___wmul@multiplier+1,w,c
  5054  0014B2  0203               	mulwf	___wmul@multiplicand,c
  5055  0014B4  50F3               	movf	prodl,w,c
  5056  0014B6  2606               	addwf	___wmul@product+1,f,c
  5057  0014B8  C005  F001         	movff	___wmul@product,?___wmul
  5058  0014BC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5059  0014C0  0012               	return	
  5060  0014C2  0012               	return		;funcret
  5061  0014C4                     __end_of___wmul:
  5062                           	opt stack 0
  5063  0000                     pclatu	equ	0xFFB
  5064                           pclath	equ	0xFFA
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           prodh	equ	0xFF4
  5070                           prodl	equ	0xFF3
  5071                           intcon	equ	0xFF2
  5072                           intcon2	equ	0xFF1
  5073                           postinc0	equ	0xFEE
  5074                           fsr0h	equ	0xFEA
  5075                           fsr0l	equ	0xFE9
  5076                           wreg	equ	0xFE8
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           bsr	equ	0xFE0
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           pclatu	equ	0xFFB
  5086                           pclath	equ	0xFFA
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           intcon2	equ	0xFF1
  5095                           postinc0	equ	0xFEE
  5096                           fsr0h	equ	0xFEA
  5097                           fsr0l	equ	0xFE9
  5098                           wreg	equ	0xFE8
  5099                           fsr1h	equ	0xFE2
  5100                           fsr1l	equ	0xFE1
  5101                           bsr	equ	0xFE0
  5102                           indf2	equ	0xFDF
  5103                           postinc2	equ	0xFDE
  5104                           fsr2h	equ	0xFDA
  5105                           fsr2l	equ	0xFD9
  5106                           status	equ	0xFD8
  5107                           
  5108                           	psect	rparam
  5109  0000                     pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           intcon2	equ	0xFF1
  5119                           postinc0	equ	0xFEE
  5120                           fsr0h	equ	0xFEA
  5121                           fsr0l	equ	0xFE9
  5122                           wreg	equ	0xFE8
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           bsr	equ	0xFE0
  5126                           indf2	equ	0xFDF
  5127                           postinc2	equ	0xFDE
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         629
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      66
    BANK0           160     93     109
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> RX2_ISR@buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _strobe->___ftmul
    _setRGB->___ftmul
    _pwm->___awdiv
    ___fttol->___ftmul
    ___ftneg->___ftmul
    ___ftadd->___ftmul
    ___almod->___ftmul
    _readAllADC->___ftdiv
    ___lwtoft->_readADC
    ___ftdiv->_readADC

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _RX2_ISR in COMRAM

    _RX2_ISR->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_strobe
    _strobe->___almod
    _setRGB->___fttol
    _pwm->___awdiv
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftneg
    ___almod->___fttol
    _readAllADC->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _RX2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _RX2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _RX2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _RX2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _RX2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Critical Paths under _RX2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_ISR in BANK6

    None.

Critical Paths under _RX2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_ISR in BANK7

    None.

Critical Paths under _RX2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_ISR in BANK8

    None.

Critical Paths under _RX2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_ISR in BANK9

    None.

Critical Paths under _RX2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_ISR in BANK10

    None.

Critical Paths under _RX2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_ISR in BANK11

    None.

Critical Paths under _RX2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_ISR in BANK12

    None.

Critical Paths under _RX2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_ISR in BANK13

    None.

Critical Paths under _RX2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_ISR in BANK14

    None.

Critical Paths under _RX2_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   28045
                                             88 BANK0      5     0      5
                            ___ftmul
                            ___fttol
                           ___lwtoft
                   _changeModeDetect
                     _initialisation
                         _readAllADC
                             _setRGB
                             _strobe
 ---------------------------------------------------------------------------------
 (1) _strobe                                              17    17      0   12205
                                             71 BANK0     17    17      0
                            ___almod
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _setRGB
 ---------------------------------------------------------------------------------
 (2) _setRGB                                               6     0      6    2222
                                             61 BANK0      6     0      6
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                                _pwm
 ---------------------------------------------------------------------------------
 (3) _pwm                                                  3     1      2    1154
                                             33 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     835
                                             29 COMRAM     4     4      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     835
                                             46 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                             31 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4596
                                             35 COMRAM     9     9      0
                                             25 BANK0      6     0      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3863
                                             34 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     402
                                             61 BANK0     10     2      8
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _readAllADC                                           0     0      0    5559
                            ___ftdiv
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              6     4      2     102
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2489
                                             22 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2968
                                             35 COMRAM     9     9      0
                                             25 BANK0      6     0      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                             29 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeModeDetect                                     4     4      0     139
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                          17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _RX2_ISR                                             16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (7) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
   ___lwtoft
     ___ftpack
     _readADC (ARG)
   _changeModeDetect
   _initialisation
     _initADC
     _initComms
     _initPWM
     _initTimer0
   _readAllADC
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _setRGB
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _readADC (ARG)
     _pwm (ARG)
       ___awdiv
   _strobe
     ___almod
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 _readADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
     _setRGB
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 _readADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _pwm (ARG)
         ___awdiv

 _Timer0_ISR (ROOT)

 _RX2_ISR (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      6D       5       68.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      42       1       69.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     307       6        0.0%
DATA                 0      0     307       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 25 14:04:50 2015

                          _B 0300                            _G 0200                            _R 0100  
               ___awdiv@sign 001F                           bsr 000FE0          ___wmul@multiplicand 0003  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                 ___ftadd@exp1 008D  
               ___ftadd@exp2 008C                 ___ftadd@sign 008B                          l221 1336  
                        l222 133A                          l216 1300                          l218 1304  
                        l243 0EE2                          l235 0E68                          l219 130A  
                        l194 0632                          l705 058A                          l652 0DD0  
                        l716 0CCA                          l681 0418                          l738 140E  
                        l685 0452                          l687 047C                          l696 0560  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _RC0 007C10  
                        _RA6 007C06                          _PR2 000FCB                 __CFG_CPD$OFF 000000  
                        _PSA 007EAB             _changeModeDetect 0E0A                          _pwm 1264  
                        prod 000FF3                          wreg 000FE8                   _TXSTA2bits 000FBA  
               ___ftdiv@cntr 0027                 ___ftdiv@sign 002C                         l2001 0A36  
                       l2011 0A74                  _strobe$1121 00AC                         l2015 0A92  
                       l2007 0A54                  _strobe$1122 00AF                  _strobe$1123 00B2  
                       l2009 0A66                         l2201 11C6                  _strobe$1124 00B5  
                       l2213 11F6                         l2311 132E                         l2303 1310  
                       l2215 1202                         l2207 11DC                         l2401 0C3A  
                       l2313 1330                         l2305 1326                         l2233 1258  
                       l2225 123A                         l2217 120C                         l2251 12B8  
                       l2501 0E50                         l2421 0C8C                         l2333 0460  
                       l2229 1248                         l2245 1290                         l2511 0E8A  
                       l2271 0D42                         l2431 0CDA                         l2327 0426  
                       l2239 1268                         l2281 0DC0                         l2273 0D68  
                       l2265 0D1C                         l2361 0510                         l2441 0AD6  
                       l2531 0F00                         l2523 0ECA                         l2355 04E4  
                       l2339 0472                         l2259 12E0                         l2533 0F06  
                       l2509 0E84                         l2293 0DFA                         l2277 0D8A  
                       l2269 0D32                         l2357 04F4                         l2349 04B4  
                       l2461 0B46                         l2287 0DDC                         l2279 0DB0  
                       l2375 05B6                         l2367 0540                         l2359 0504  
                       l2471 0B80                         l2447 0B06                         l2543 063C  
                       l2551 07E0                         l2385 0606                         l2369 0550  
                       l2465 0B60                         l2545 06F0                         l2395 0C0A  
                       l2475 0B9A                         l2539 038A                         l2547 07B6  
                       l1781 0FD0                         l1773 0F6E                         l1765 0F38  
                       l2469 0B7A                         l2549 07BC                         l1775 0F80  
                       l2479 0BB2                         l1777 0F8A                         l1785 0FE4  
                       l1769 0F52                         l1789 1002                         l1979 098E  
                       l1997 0A22                         _ADON 007E10                         _CHS0 007E12  
                       _CHS1 007E13                         ?_pwm 0022                         _T0IE 007F95  
                       _T0IF 007F92                         _T0CS 007EAD                         u2221 03C6  
                       u2231 03E4                         u2501 0AE8                         u1621 096A  
                       u2431 0BEC                         u1640 09B4                         u2451 0C1C  
                       u1645 09AA                         u2640 0EE2                         u2481 0AB8  
                       u2570 0E68                         _PEIE 007F96                         _TMR0 000FD6  
           ??_initialisation 001E              __end_of_RX2_ISR 0954                         _atoi 1016  
                       _main 062E                 ___ftpack@arg 0071                         _mode 00CA  
               ___ftpack@exp 0074                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3                         start 00C2  
              __CFG_IESO$OFF 000000                 ___ftmul@cntr 002B                 ___param_bank 000010  
               ___ftmul@sign 002C                 ___fttol@exp1 009C                 ___fttol@lval 0098  
                      ??_pwm 0024                        _DC2B0 007A84                        _DC2B1 007A85  
                      _DC3B0 007A6C                        _DC3B1 007A6D                        _DC4B0 007A54  
                      _DC4B1 007A55                        ?_atoi 0007              __end_of___almod 1016  
                      ?_main 00B8              __end_of___awdiv 1264              __end_of___ftadd 062E  
            __end_of___ftdiv 0D02              __end_of___ftneg 141C              __end_of___ftmul 0BDA  
            ___awdiv@divisor 0073              __end_of___fttol 0AA6                        _T0PS0 007EA8  
                      _T0PS1 007EA9                        _T0PS2 007EAA                        _RC2IF 007D25  
                      i1l265 007C                        i2l500 10E0                        i2l297 091A  
            ___awdiv@counter 001E                        _VCFG0 007E0C                        _VCFG1 007E0D  
                      _VNCFG 007E0B                        _TRISC 000F94                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initADC 1502  
            __end_of_readADC 1354               __CFG_EBTRB$OFF 000000              __end_of_initPWM 13A6  
            __end_of_isdigit 14E6                ___ftpack@sign 0075                        atoi@a 000C  
                      atoi@s 0007                        tablat 000FF5                        status 000FD8  
             __CFG_MCLRE$OFF 000000              __initialization 13A6                 __end_of_atoi 10EA  
               __end_of_main 07FE                       ??_atoi 0009                       ??_main 002D  
              ___fttol@sign1 0097                __activetblptr 000002               __CFG_RETEN$OFF 000000  
                  ??_RX2_ISR 000E                       _CCP2M2 007A82                       _CCP2M3 007A83  
                     _CCP3M2 007A6A                       _CCP3M3 007A6B                       _CCP4M2 007A52  
                     _CCP4M3 007A53                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     _CCPR2L 000F51                       _CCPR3L 000F4E                       _CCPR4L 000F4B  
                     _T08BIT 007EAE             ___awdiv@dividend 0071                       _ANSEL1 007AE9  
                     _ANSEL2 007AEA                       _ANSEL3 007AEB             __end_of___ftpack 0E0A  
                     i2l2103 1072              __CFG_BBSIZ$BB2K 000000                       i2l2105 10A8  
                     i2l2107 10AE                       i2l2143 084A                       i2l2153 087A  
                     i2l2163 08B6                       i2l2157 0896                       i2l2181 08F0  
                     i2l2087 1018                       i2l2089 101E                       i2l2185 08FE  
                     i2l2169 08D6                       i2l2099 105E                       i2l2189 090C  
             __CFG_WDTEN$OFF 000000                       i2l1965 14DC                       _RCREG2 000F7A  
           __end_of___lwtoft 1474                       _TMR0IE 007F95                       _SPBRG2 000F7B  
                     _TMR0IP 007F8A                       _TMR2ON 007E52                       _TXREG2 000F79  
                 _Timer0_ISR 0018               __CFG_XINST$OFF 000000                    ??___almod 002D  
                     ___wmul 149C                    ??___awdiv 001E                    ??___ftadd 0088  
             __CFG_STVREN$ON 000000                    ??___ftdiv 0024                    ??___ftneg 002D  
                  ??___ftmul 0024                    ??___fttol 0092                 readADC@tempo 0023  
                     _setRGB 141C                       _millis 00C6                       clear_0 13AC  
                     clear_1 13B8                       clear_2 13C4                       clear_3 13D0  
                     clear_4 13DC             ___awdiv@quotient 0020                       _strobe 00C6  
                  ??_initADC 001E        ___ftmul@f3_as_product 0028                    ??_readADC 0020  
                  ??_initPWM 001E                    ??_isdigit 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 13E2                   ___ftadd@f1 0082                   ___ftadd@f2 0085  
              ___rparam_used 000001                   ___ftdiv@f1 0079                   ___ftdiv@f2 007C  
                 ___ftdiv@f3 0028     __end_of_changeModeDetect 0F12                   ___ftneg@f1 007F  
                 ___ftmul@f1 0079                   ___ftmul@f2 007C                   ___fttol@f1 008E  
             __pcstackCOMRAM 0001                   ___lwtoft@c 0076                   __pbssBANK0 00C6  
                 __pbssBANK1 0100                   __pbssBANK2 0200                   __pbssBANK3 0300  
            __CFG_PLLCFG$OFF 000000           __size_of_initComms 0028                  ?_Timer0_ISR 0001  
                    ?___wmul 0001                      ?_setRGB 009D                    ?___ftpack 0071  
                    ?_strobe 0001                      _T2CKPS0 007E50                      _T2CKPS1 007E51  
                  ?___lwtoft 0076                   _amplitude1 00BD                   _amplitude2 00C0  
                 _amplitude3 00C3             __CFG_CANMX$PORTB 000000                      _SPBRGH2 000F7C  
                    _RX2_ISR 0008              __CFG_PWRTEN$OFF 000000                      __Hparam 0000  
                 _readAllADC 10EA                      __Lparam 0000                      ___almod 0F12  
                 _initTimer0 1502                      ___awdiv 11AC                      ___ftadd 03B0  
                    ___ftdiv 0BDA                      ___ftneg 13EC              __size_of___wmul 0028  
                    ___ftmul 0AA6                      ___fttol 0954                      __pcinit 13A6  
                 ??___ftpack 001E              __size_of_setRGB 002C                      __ramtop 0F00  
                    __ptext0 062E                      __ptext1 00C6                      __ptext2 141C  
                    __ptext3 1264                      __ptext4 11AC                      __ptext5 0954  
                    __ptext6 13EC                      __ptext7 0AA6                      __ptext8 03B0  
                    __ptext9 0F12            __end_of_initComms 149C                   ??___lwtoft 0024  
                    _initADC 14E6                      _readADC 12F8              __size_of_strobe 02EA  
                    _initPWM 1354                      _isdigit 14C4                 __size_of_pwm 0094  
          __CFG_MSSPMSK$MSK7 000000          __size_of_Timer0_ISR 00AA               __pintcode_body 07FE  
       end_of_initialization 13E2                      setRGB@b 00A1                      setRGB@g 009F  
                    setRGB@r 009D                __Lmediumconst 0000                      int_func 07FE  
                    postinc0 000FEE                      postinc2 000FDE      __size_of_initialisation 0012  
           __CFG_FOSC$INTIO2 000000                    _TRISBbits 000F93                  ___ftdiv@exp 002B  
          ?_changeModeDetect 0001                  ?_readAllADC 0001                  ___ftmul@exp 0027  
         ??_changeModeDetect 001E                  ?_initTimer0 0001               __end_of___wmul 14C4  
             __end_of_setRGB 1448               __end_of_strobe 03B0          start_initialization 13A6  
changeModeDetect@old_SWITCH1 00CB  changeModeDetect@old_SWITCH3 00CC                  __end_of_pwm 12F8  
               ??_Timer0_ISR 0060                     ??___wmul 0005                     ??_setRGB 002D  
                   ??_strobe 00A7            __size_of___ftpack 0108                  __pbssCOMRAM 002D  
          __size_of___lwtoft 002C                __pcstackBANK0 0060          __size_of_readAllADC 00C2  
                   ?_RX2_ISR 0001           __end_of_Timer0_ISR 00C2                RX2_ISR@F19173 002D  
        __size_of_initTimer0 0016                    __pnvBANK0 00BD                    __pintcode 0008  
             _initialisation 1518                     ?___almod 009D                     ?___awdiv 0071  
                   ?___ftadd 0082                     ?___ftdiv 0079                     ?___ftneg 007F  
                   ?___ftmul 0079                     ?___fttol 008E                RX2_ISR@beginB 002F  
              RX2_ISR@beginG 0030                RX2_ISR@beginR 0031                  __pintcodelo 0018  
           ___almod@dividend 009D                RX2_ISR@buffer 0033                     ?_initADC 0001  
                   ?_readADC 001E                     ?_initPWM 0001                     _BAUDCON2 000FB9  
                   ?_isdigit 0001                    _initComms 1474               ___wmul@product 0005  
                   _PIE3bits 000FA3       __end_of_initialisation 152A                     _PIR3bits 000FA4  
                   _GO_nDONE 007E11                     _RCONbits 000FD0              RX2_ISR@compteur 0032  
                   _TRIGSEL0 007E0E                     _TRIGSEL1 007E0F            ___wmul@multiplier 0001  
           __CFG_SOSCSEL$DIG 000000                   ?_initComms 0001             __size_of_RX2_ISR 094C  
      changeModeDetect@delay 001E                     __Hrparam 0000              ?_initialisation 0001  
               ??_readAllADC 002D                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
               ??_initTimer0 001E             __size_of___almod 0104             __size_of___awdiv 00B8  
           __size_of___ftadd 027E             __size_of___ftdiv 0128             __size_of___ftneg 0030  
           __size_of___ftmul 0134             __size_of___fttol 0152               readADC@channel 0022  
                   ___ftpack 0D02                  _isdigit$888 0002                     ___lwtoft 1448  
  __size_of_changeModeDetect 0108             __size_of_initADC 001C             __size_of_readADC 005C  
           __size_of_initPWM 0052             __size_of_isdigit 0022                     __ptext10 10EA  
                   __ptext11 12F8                     __ptext20 0E0A                     __ptext12 1448  
                   __ptext13 0BDA                     __ptext14 0D02                     __ptext23 1016  
                   __ptext15 1518                     __ptext24 14C4                     __ptext16 1502  
                   __ptext25 149C                     __ptext17 1354                     __ptext18 1474  
                   __ptext19 14E6           __end_of_readAllADC 11AC              ___almod@divisor 00A1  
               RX2_ISR@input 001C              ___almod@counter 00A5           __end_of_initTimer0 1518  
              __size_of_atoi 00D4                __size_of_main 01D0                     atoi@sign 000B  
                   main@argc 00B8                     main@argv 00BA          __CFG_INTOSCSEL$HIGH 000000  
                 _INTCONbits 000FF2                  ??_initComms 001E                     isdigit@c 0003  
                   intlevel1 0000                     intlevel2 0000                 pwm@dutycycle 0022  
                 _RCSTA2bits 000FA6                     pwm@color 0024           __CFG_WDTPS$1048576 000000  
               ___almod@sign 00A6          __CFG_BORPWR$ZPBORMV 000000  
