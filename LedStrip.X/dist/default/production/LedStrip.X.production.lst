

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun May 24 18:40:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	nvBANK0
    42  0000B8                     __pnvBANK0:
    43                           	opt stack 0
    44  0000B8                     _amplitude1:
    45                           	opt stack 0
    46  0000B8                     	ds	2
    47  0000BA                     _amplitude2:
    48                           	opt stack 0
    49  0000BA                     	ds	2
    50  0000BC                     _amplitude3:
    51                           	opt stack 0
    52  0000BC                     	ds	2
    53  0000                     _CCPR2L	set	3921
    54  0000                     _CCPR3L	set	3918
    55  0000                     _CCPR4L	set	3915
    56  0000                     _ANSEL1	set	31465
    57  0000                     _ANSEL2	set	31466
    58  0000                     _ANSEL3	set	31467
    59  0000                     _CCP2M2	set	31362
    60  0000                     _CCP2M3	set	31363
    61  0000                     _CCP3M2	set	31338
    62  0000                     _CCP3M3	set	31339
    63  0000                     _CCP4M2	set	31314
    64  0000                     _CCP4M3	set	31315
    65  0000                     _DC2B0	set	31364
    66  0000                     _DC2B1	set	31365
    67  0000                     _DC3B0	set	31340
    68  0000                     _DC3B1	set	31341
    69  0000                     _DC4B0	set	31316
    70  0000                     _DC4B1	set	31317
    71  0000                     _TMR0	set	4054
    72  0000                     _ADRESH	set	4036
    73  0000                     _ADRESL	set	4035
    74  0000                     _BAUDCON2	set	4025
    75  0000                     _INTCONbits	set	4082
    76  0000                     _PIE3bits	set	4003
    77  0000                     _PIR3bits	set	4004
    78  0000                     _PR2	set	4043
    79  0000                     _RCONbits	set	4048
    80  0000                     _RCREG2	set	3962
    81  0000                     _RCSTA2bits	set	4006
    82  0000                     _SPBRG2	set	3963
    83  0000                     _SPBRGH2	set	3964
    84  0000                     _TRISBbits	set	3987
    85  0000                     _TRISC	set	3988
    86  0000                     _TXREG2	set	3961
    87  0000                     _TXSTA2bits	set	4026
    88  0000                     _ADON	set	32272
    89  0000                     _CHS0	set	32274
    90  0000                     _CHS1	set	32275
    91  0000                     _GIE	set	32663
    92  0000                     _GO_nDONE	set	32273
    93  0000                     _PEIE	set	32662
    94  0000                     _PSA	set	32427
    95  0000                     _RA6	set	31750
    96  0000                     _RC0	set	31760
    97  0000                     _RC2IF	set	32037
    98  0000                     _T08BIT	set	32430
    99  0000                     _T0CS	set	32429
   100  0000                     _T0IE	set	32661
   101  0000                     _T0IF	set	32658
   102  0000                     _T0PS0	set	32424
   103  0000                     _T0PS1	set	32425
   104  0000                     _T0PS2	set	32426
   105  0000                     _T2CKPS0	set	32336
   106  0000                     _T2CKPS1	set	32337
   107  0000                     _TMR0IE	set	32661
   108  0000                     _TMR0IP	set	32650
   109  0000                     _TMR2ON	set	32338
   110  0000                     _TRIGSEL0	set	32270
   111  0000                     _TRIGSEL1	set	32271
   112  0000                     _VCFG0	set	32268
   113  0000                     _VCFG1	set	32269
   114  0000                     _VNCFG	set	32267
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  0011C2                     __pcinit:
   120                           	opt stack 0
   121  0011C2                     start_initialization:
   122                           	opt stack 0
   123  0011C2                     __initialization:
   124                           	opt stack 0
   125                           
   126                           ; Clear objects allocated to BANK3 (200 bytes)
   127  0011C2  EE03  F000         	lfsr	0,__pbssBANK3
   128  0011C6  0EC8               	movlw	200
   129  0011C8                     clear_0:
   130  0011C8  6AEE               	clrf	postinc0,c
   131  0011CA  06E8               	decf	wreg,f,c
   132  0011CC  E1FD               	bnz	clear_0
   133                           
   134                           ; Clear objects allocated to BANK2 (200 bytes)
   135  0011CE  EE02  F000         	lfsr	0,__pbssBANK2
   136  0011D2  0EC8               	movlw	200
   137  0011D4                     clear_1:
   138  0011D4  6AEE               	clrf	postinc0,c
   139  0011D6  06E8               	decf	wreg,f,c
   140  0011D8  E1FD               	bnz	clear_1
   141                           
   142                           ; Clear objects allocated to BANK1 (200 bytes)
   143  0011DA  EE01  F000         	lfsr	0,__pbssBANK1
   144  0011DE  0EC8               	movlw	200
   145  0011E0                     clear_2:
   146  0011E0  6AEE               	clrf	postinc0,c
   147  0011E2  06E8               	decf	wreg,f,c
   148  0011E4  E1FD               	bnz	clear_2
   149                           
   150                           ; Clear objects allocated to BANK0 (7 bytes)
   151  0011E6  EE00  F0B1         	lfsr	0,__pbssBANK0
   152  0011EA  0E07               	movlw	7
   153  0011EC                     clear_3:
   154  0011EC  6AEE               	clrf	postinc0,c
   155  0011EE  06E8               	decf	wreg,f,c
   156  0011F0  E1FD               	bnz	clear_3
   157                           
   158                           ; Clear objects allocated to COMRAM (22 bytes)
   159  0011F2  EE00  F02D         	lfsr	0,__pbssCOMRAM
   160  0011F6  0E16               	movlw	22
   161  0011F8                     clear_4:
   162  0011F8  6AEE               	clrf	postinc0,c
   163  0011FA  06E8               	decf	wreg,f,c
   164  0011FC  E1FD               	bnz	clear_4
   165  0011FE                     end_of_initialization:
   166                           	opt stack 0
   167  0011FE                     __end_of__initialization:
   168                           	opt stack 0
   169  0011FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  001200  6EF8               	movwf	tblptru,c
   171  001202  0100               	movlb	0
   172  001204  EF63  F000         	goto	_main	;jump to C main() function
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	bssCOMRAM
   178  00002D                     __pbssCOMRAM:
   179                           	opt stack 0
   180  00002D                     RX2_ISR@F19171:
   181                           	opt stack 0
   182  00002D                     	ds	2
   183  00002F                     RX2_ISR@beginB:
   184                           	opt stack 0
   185  00002F                     	ds	1
   186  000030                     RX2_ISR@beginG:
   187                           	opt stack 0
   188  000030                     	ds	1
   189  000031                     RX2_ISR@beginR:
   190                           	opt stack 0
   191  000031                     	ds	1
   192  000032                     RX2_ISR@compteur:
   193                           	opt stack 0
   194  000032                     	ds	1
   195  000033                     RX2_ISR@buffer:
   196                           	opt stack 0
   197  000033                     	ds	16
   198                           tblptru	equ	0xFF8
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	bssBANK0
   203  0000B1                     __pbssBANK0:
   204                           	opt stack 0
   205  0000B1                     _millis:
   206                           	opt stack 0
   207  0000B1                     	ds	4
   208  0000B5                     _mode:
   209                           	opt stack 0
   210  0000B5                     	ds	1
   211  0000B6                     changeModeDetect@old_SWITCH1:
   212                           	opt stack 0
   213  0000B6                     	ds	1
   214  0000B7                     changeModeDetect@old_SWITCH3:
   215                           	opt stack 0
   216  0000B7                     	ds	1
   217                           tblptru	equ	0xFF8
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           
   221                           	psect	bssBANK1
   222  000100                     __pbssBANK1:
   223                           	opt stack 0
   224  000100                     _R:
   225                           	opt stack 0
   226  000100                     	ds	200
   227                           tblptru	equ	0xFF8
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           
   231                           	psect	bssBANK2
   232  000200                     __pbssBANK2:
   233                           	opt stack 0
   234  000200                     _G:
   235                           	opt stack 0
   236  000200                     	ds	200
   237                           tblptru	equ	0xFF8
   238                           postinc0	equ	0xFEE
   239                           wreg	equ	0xFE8
   240                           
   241                           	psect	bssBANK3
   242  000300                     __pbssBANK3:
   243                           	opt stack 0
   244  000300                     _B:
   245                           	opt stack 0
   246  000300                     	ds	200
   247                           tblptru	equ	0xFF8
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	cstackBANK0
   252  000060                     __pcstackBANK0:
   253                           	opt stack 0
   254  000060                     ??_Timer0_ISR:
   255                           
   256                           ; 0 bytes @ 0x0
   257  000060                     	ds	17
   258  000071                     ?___awdiv:
   259                           	opt stack 0
   260  000071                     ?___ftpack:
   261                           	opt stack 0
   262  000071                     ___awdiv@dividend:
   263                           	opt stack 0
   264  000071                     ___ftpack@arg:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0x11
   268  000071                     	ds	2
   269  000073                     ___awdiv@divisor:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x13
   273  000073                     	ds	1
   274  000074                     ___ftpack@exp:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x14
   278  000074                     	ds	1
   279  000075                     ___ftpack@sign:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x15
   283  000075                     	ds	1
   284  000076                     ?___lwtoft:
   285                           	opt stack 0
   286  000076                     ___lwtoft@c:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x16
   290  000076                     	ds	3
   291  000079                     ?___ftmul:
   292                           	opt stack 0
   293  000079                     ___ftmul@f1:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x19
   297  000079                     	ds	3
   298  00007C                     ___ftmul@f2:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x1C
   302  00007C                     	ds	3
   303  00007F                     ?___ftdiv:
   304                           	opt stack 0
   305  00007F                     ___ftdiv@f1:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x1F
   309  00007F                     	ds	3
   310  000082                     ___ftdiv@f2:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x22
   314  000082                     	ds	3
   315  000085                     ___ftdiv@cntr:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x25
   319  000085                     	ds	1
   320  000086                     ___ftdiv@f3:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0x26
   324  000086                     	ds	3
   325  000089                     ___ftdiv@exp:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x29
   329  000089                     	ds	1
   330  00008A                     ___ftdiv@sign:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x2A
   334  00008A                     	ds	1
   335  00008B                     ?___fttol:
   336                           	opt stack 0
   337  00008B                     ___fttol@f1:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0x2B
   341  00008B                     	ds	4
   342  00008F                     ??___fttol:
   343                           
   344                           ; 0 bytes @ 0x2F
   345  00008F                     	ds	5
   346  000094                     ___fttol@sign1:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x34
   350  000094                     	ds	1
   351  000095                     ___fttol@lval:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0x35
   355  000095                     	ds	4
   356  000099                     ___fttol@exp1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x39
   360  000099                     	ds	1
   361  00009A                     ?___almod:
   362                           	opt stack 0
   363  00009A                     setRGB@r:
   364                           	opt stack 0
   365  00009A                     ___almod@dividend:
   366                           	opt stack 0
   367                           
   368                           ; 4 bytes @ 0x3A
   369  00009A                     	ds	2
   370  00009C                     setRGB@g:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x3C
   374  00009C                     	ds	2
   375  00009E                     setRGB@b:
   376                           	opt stack 0
   377  00009E                     ___almod@divisor:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x3E
   381  00009E                     	ds	4
   382  0000A2                     ___almod@counter:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x42
   386  0000A2                     	ds	1
   387  0000A3                     ___almod@sign:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x43
   391  0000A3                     	ds	1
   392  0000A4                     ??_strobe:
   393                           
   394                           ; 0 bytes @ 0x44
   395  0000A4                     	ds	5
   396  0000A9                     _strobe$1118:
   397                           	opt stack 0
   398                           
   399                           ; 3 bytes @ 0x49
   400  0000A9                     	ds	3
   401  0000AC                     
   402                           ; 2 bytes @ 0x4C
   403  0000AC                     	ds	2
   404  0000AE                     
   405                           ; 3 bytes @ 0x4E
   406  0000AE                     	ds	3
   407                           tblptru	equ	0xFF8
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	cstackCOMRAM
   412  000001                     __pcstackCOMRAM:
   413                           	opt stack 0
   414  000001                     ??_isdigit:
   415  000001                     ?___wmul:
   416                           	opt stack 0
   417  000001                     ___wmul@multiplier:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  000001                     	ds	1
   422  000002                     _isdigit$887:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x1
   426  000002                     	ds	1
   427  000003                     isdigit@c:
   428                           	opt stack 0
   429  000003                     ___wmul@multiplicand:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000003                     	ds	2
   434  000005                     ___wmul@product:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  000005                     	ds	2
   439  000007                     ?_atoi:
   440                           	opt stack 0
   441  000007                     atoi@s:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  000007                     	ds	2
   446  000009                     ??_atoi:
   447                           
   448                           ; 0 bytes @ 0x8
   449  000009                     	ds	2
   450  00000B                     atoi@sign:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0xA
   454  00000B                     	ds	1
   455  00000C                     atoi@a:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0xB
   459  00000C                     	ds	2
   460  00000E                     ??_RX2_ISR:
   461                           
   462                           ; 0 bytes @ 0xD
   463  00000E                     	ds	14
   464  00001C                     RX2_ISR@input:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x1B
   468  00001C                     	ds	2
   469  00001E                     ??___ftpack:
   470  00001E                     ?_readADC:
   471                           	opt stack 0
   472  00001E                     ___awdiv@counter:
   473                           	opt stack 0
   474  00001E                     changeModeDetect@delay:
   475                           	opt stack 0
   476                           
   477                           ; 4 bytes @ 0x1D
   478  00001E                     	ds	1
   479  00001F                     ___awdiv@sign:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x1E
   483  00001F                     	ds	1
   484  000020                     ??_readADC:
   485  000020                     ___awdiv@quotient:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x1F
   489  000020                     	ds	1
   490  000021                     ??___ftmul:
   491  000021                     
   492                           ; 0 bytes @ 0x20
   493  000021                     	ds	1
   494  000022                     readADC@channel:
   495                           	opt stack 0
   496  000022                     pwm@dutycycle:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x21
   500  000022                     	ds	1
   501  000023                     readADC@tempo:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x22
   505  000023                     	ds	1
   506  000024                     pwm@color:
   507                           	opt stack 0
   508  000024                     ___ftmul@exp:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x23
   512  000024                     	ds	1
   513  000025                     ___ftmul@f3_as_product:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0x24
   517  000025                     	ds	3
   518  000028                     ___ftmul@cntr:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x27
   522  000028                     	ds	1
   523  000029                     ___ftmul@sign:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x28
   527  000029                     	ds	1
   528  00002A                     ??___ftdiv:
   529                           
   530                           ; 0 bytes @ 0x29
   531  00002A                     	ds	3
   532  00002D                     tblptru	equ	0xFF8
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           
   536                           ; 0 bytes @ 0x2C
   537 ;;
   538 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   539 ;;
   540 ;; *************** function _main *****************
   541 ;; Defined at:
   542 ;;		line 100 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  argc            2   76[BANK0 ] int 
   545 ;;  argv            3   78[BANK0 ] PTR PTR unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2   76[BANK0 ] int 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   557 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   560 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   561 ;;Total ram usage:        5 bytes
   562 ;; Hardware stack levels required when called:    8
   563 ;; This function calls:
   564 ;;		___ftdiv
   565 ;;		___ftmul
   566 ;;		___fttol
   567 ;;		___lwtoft
   568 ;;		_changeModeDetect
   569 ;;		_initialisation
   570 ;;		_readADC
   571 ;;		_setRGB
   572 ;;		_strobe
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579  0000C6                     __ptext0:
   580                           	opt stack 0
   581  0000C6                     _main:
   582                           	opt stack 23
   583                           
   584                           ;main.c: 102: initialisation();
   585                           
   586                           ;incstack = 0
   587  0000C6  EC82  F009         	call	_initialisation	;wreg free
   588  0000CA                     l194:
   589                           
   590                           ;main.c: 109: amplitude1=readADC(1);
   591  0000CA  0E01               	movlw	1
   592  0000CC  EC8A  F008         	call	_readADC
   593  0000D0  C01E  F0B8         	movff	?_readADC,_amplitude1
   594  0000D4  C01F  F0B9         	movff	?_readADC+1,_amplitude1+1
   595                           
   596                           ;main.c: 110: amplitude2=readADC(2);
   597  0000D8  0E02               	movlw	2
   598  0000DA  EC8A  F008         	call	_readADC
   599  0000DE  C01E  F0BA         	movff	?_readADC,_amplitude2
   600  0000E2  C01F  F0BB         	movff	?_readADC+1,_amplitude2+1
   601                           
   602                           ;main.c: 111: amplitude3=readADC(3);
   603  0000E6  0E03               	movlw	3
   604  0000E8  EC8A  F008         	call	_readADC
   605  0000EC  C01E  F0BC         	movff	?_readADC,_amplitude3
   606  0000F0  C01F  F0BD         	movff	?_readADC+1,_amplitude3+1
   607                           
   608                           ;main.c: 113: changeModeDetect();
   609  0000F4  EC74  F006         	call	_changeModeDetect	;wreg free
   610                           
   611                           ;main.c: 116: switch (mode) {
   612  0000F8  D15C               	goto	l2324
   613  0000FA                     l2316:
   614                           
   615                           ;main.c: 119: setRGB( (int)( 1023 * (float)amplitude1/65520.),
   616                           ;main.c: 120: (int)( 1023 * (float)amplitude2/65520.),
   617                           ;main.c: 121: (int)( 1023 * (float)amplitude3/65520.));
   618  0000FA  0EF0               	movlw	240
   619  0000FC  0100               	movlb	0	; () banked
   620  0000FE  6F82               	movwf	___ftdiv@f2& (0+255),b
   621  000100  0E7F               	movlw	127
   622  000102  0100               	movlb	0	; () banked
   623  000104  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   624  000106  0E47               	movlw	71
   625  000108  0100               	movlb	0	; () banked
   626  00010A  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   627  00010C  0EC0               	movlw	192
   628  00010E  0100               	movlb	0	; () banked
   629  000110  6F7C               	movwf	___ftmul@f2& (0+255),b
   630  000112  0E7F               	movlw	127
   631  000114  0100               	movlb	0	; () banked
   632  000116  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   633  000118  0E44               	movlw	68
   634  00011A  0100               	movlb	0	; () banked
   635  00011C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   636  00011E  C0B8  F076         	movff	_amplitude1,___lwtoft@c
   637  000122  C0B9  F077         	movff	_amplitude1+1,___lwtoft@c+1
   638  000126  EC1A  F009         	call	___lwtoft	;wreg free
   639  00012A  C076  F079         	movff	?___lwtoft,___ftmul@f1
   640  00012E  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   641  000132  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   642  000136  EC56  F005         	call	___ftmul	;wreg free
   643  00013A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   644  00013E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   645  000142  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   646  000146  ECB3  F004         	call	___ftdiv	;wreg free
   647  00014A  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   648  00014E  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   649  000152  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   650  000156  EC0A  F004         	call	___fttol	;wreg free
   651  00015A  C08B  F09A         	movff	?___fttol,setRGB@r
   652  00015E  C08C  F09B         	movff	?___fttol+1,setRGB@r+1
   653  000162  0EF0               	movlw	240
   654  000164  0100               	movlb	0	; () banked
   655  000166  6F82               	movwf	___ftdiv@f2& (0+255),b
   656  000168  0E7F               	movlw	127
   657  00016A  0100               	movlb	0	; () banked
   658  00016C  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   659  00016E  0E47               	movlw	71
   660  000170  0100               	movlb	0	; () banked
   661  000172  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   662  000174  0EC0               	movlw	192
   663  000176  0100               	movlb	0	; () banked
   664  000178  6F7C               	movwf	___ftmul@f2& (0+255),b
   665  00017A  0E7F               	movlw	127
   666  00017C  0100               	movlb	0	; () banked
   667  00017E  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   668  000180  0E44               	movlw	68
   669  000182  0100               	movlb	0	; () banked
   670  000184  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   671  000186  C0BA  F076         	movff	_amplitude2,___lwtoft@c
   672  00018A  C0BB  F077         	movff	_amplitude2+1,___lwtoft@c+1
   673  00018E  EC1A  F009         	call	___lwtoft	;wreg free
   674  000192  C076  F079         	movff	?___lwtoft,___ftmul@f1
   675  000196  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   676  00019A  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   677  00019E  EC56  F005         	call	___ftmul	;wreg free
   678  0001A2  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   679  0001A6  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   680  0001AA  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   681  0001AE  ECB3  F004         	call	___ftdiv	;wreg free
   682  0001B2  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   683  0001B6  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   684  0001BA  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   685  0001BE  EC0A  F004         	call	___fttol	;wreg free
   686  0001C2  C08B  F09C         	movff	?___fttol,setRGB@g
   687  0001C6  C08C  F09D         	movff	?___fttol+1,setRGB@g+1
   688  0001CA  0EF0               	movlw	240
   689  0001CC  0100               	movlb	0	; () banked
   690  0001CE  6F82               	movwf	___ftdiv@f2& (0+255),b
   691  0001D0  0E7F               	movlw	127
   692  0001D2  0100               	movlb	0	; () banked
   693  0001D4  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   694  0001D6  0E47               	movlw	71
   695  0001D8  0100               	movlb	0	; () banked
   696  0001DA  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   697  0001DC  0EC0               	movlw	192
   698  0001DE  0100               	movlb	0	; () banked
   699  0001E0  6F7C               	movwf	___ftmul@f2& (0+255),b
   700  0001E2  0E7F               	movlw	127
   701  0001E4  0100               	movlb	0	; () banked
   702  0001E6  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   703  0001E8  0E44               	movlw	68
   704  0001EA  0100               	movlb	0	; () banked
   705  0001EC  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   706  0001EE  C0BC  F076         	movff	_amplitude3,___lwtoft@c
   707  0001F2  C0BD  F077         	movff	_amplitude3+1,___lwtoft@c+1
   708  0001F6  EC1A  F009         	call	___lwtoft	;wreg free
   709  0001FA  C076  F079         	movff	?___lwtoft,___ftmul@f1
   710  0001FE  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   711  000202  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   712  000206  EC56  F005         	call	___ftmul	;wreg free
   713  00020A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   714  00020E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   715  000212  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   716  000216  ECB3  F004         	call	___ftdiv	;wreg free
   717  00021A  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   718  00021E  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   719  000222  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   720  000226  EC0A  F004         	call	___fttol	;wreg free
   721  00022A  C08B  F09E         	movff	?___fttol,setRGB@b
   722  00022E  C08C  F09F         	movff	?___fttol+1,setRGB@b+1
   723  000232  EC04  F009         	call	_setRGB	;wreg free
   724                           
   725                           ;main.c: 122: break;
   726  000236  D749               	goto	l194
   727  000238                     l2318:
   728                           
   729                           ;main.c: 125: setRGB( (int)( (float)R[0] * (float)amplitude1/65520.),
   730                           ;main.c: 126: (int)( (float)R[0] * (float)amplitude2/65520.),
   731                           ;main.c: 127: (int)( (float)R[0] * (float)amplitude3/65520.));
   732  000238  0EF0               	movlw	240
   733  00023A  0100               	movlb	0	; () banked
   734  00023C  6F82               	movwf	___ftdiv@f2& (0+255),b
   735  00023E  0E7F               	movlw	127
   736  000240  0100               	movlb	0	; () banked
   737  000242  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   738  000244  0E47               	movlw	71
   739  000246  0100               	movlb	0	; () banked
   740  000248  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   741  00024A  C0B8  F076         	movff	_amplitude1,___lwtoft@c
   742  00024E  C0B9  F077         	movff	_amplitude1+1,___lwtoft@c+1
   743  000252  EC1A  F009         	call	___lwtoft	;wreg free
   744  000256  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   745  00025A  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   746  00025E  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   747  000262  C100  F076         	movff	_R,___lwtoft@c
   748  000266  C101  F077         	movff	_R+1,___lwtoft@c+1
   749  00026A  EC1A  F009         	call	___lwtoft	;wreg free
   750  00026E  C076  F079         	movff	?___lwtoft,___ftmul@f1
   751  000272  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   752  000276  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   753  00027A  EC56  F005         	call	___ftmul	;wreg free
   754  00027E  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   755  000282  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   756  000286  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   757  00028A  ECB3  F004         	call	___ftdiv	;wreg free
   758  00028E  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   759  000292  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   760  000296  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   761  00029A  EC0A  F004         	call	___fttol	;wreg free
   762  00029E  C08B  F09A         	movff	?___fttol,setRGB@r
   763  0002A2  C08C  F09B         	movff	?___fttol+1,setRGB@r+1
   764  0002A6  0EF0               	movlw	240
   765  0002A8  0100               	movlb	0	; () banked
   766  0002AA  6F82               	movwf	___ftdiv@f2& (0+255),b
   767  0002AC  0E7F               	movlw	127
   768  0002AE  0100               	movlb	0	; () banked
   769  0002B0  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   770  0002B2  0E47               	movlw	71
   771  0002B4  0100               	movlb	0	; () banked
   772  0002B6  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   773  0002B8  C0BA  F076         	movff	_amplitude2,___lwtoft@c
   774  0002BC  C0BB  F077         	movff	_amplitude2+1,___lwtoft@c+1
   775  0002C0  EC1A  F009         	call	___lwtoft	;wreg free
   776  0002C4  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   777  0002C8  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   778  0002CC  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   779  0002D0  C100  F076         	movff	_R,___lwtoft@c
   780  0002D4  C101  F077         	movff	_R+1,___lwtoft@c+1
   781  0002D8  EC1A  F009         	call	___lwtoft	;wreg free
   782  0002DC  C076  F079         	movff	?___lwtoft,___ftmul@f1
   783  0002E0  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   784  0002E4  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   785  0002E8  EC56  F005         	call	___ftmul	;wreg free
   786  0002EC  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   787  0002F0  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   788  0002F4  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   789  0002F8  ECB3  F004         	call	___ftdiv	;wreg free
   790  0002FC  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   791  000300  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   792  000304  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   793  000308  EC0A  F004         	call	___fttol	;wreg free
   794  00030C  C08B  F09C         	movff	?___fttol,setRGB@g
   795  000310  C08C  F09D         	movff	?___fttol+1,setRGB@g+1
   796  000314  0EF0               	movlw	240
   797  000316  0100               	movlb	0	; () banked
   798  000318  6F82               	movwf	___ftdiv@f2& (0+255),b
   799  00031A  0E7F               	movlw	127
   800  00031C  0100               	movlb	0	; () banked
   801  00031E  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   802  000320  0E47               	movlw	71
   803  000322  0100               	movlb	0	; () banked
   804  000324  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   805  000326  C0BC  F076         	movff	_amplitude3,___lwtoft@c
   806  00032A  C0BD  F077         	movff	_amplitude3+1,___lwtoft@c+1
   807  00032E  EC1A  F009         	call	___lwtoft	;wreg free
   808  000332  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   809  000336  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   810  00033A  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   811  00033E  C100  F076         	movff	_R,___lwtoft@c
   812  000342  C101  F077         	movff	_R+1,___lwtoft@c+1
   813  000346  EC1A  F009         	call	___lwtoft	;wreg free
   814  00034A  C076  F079         	movff	?___lwtoft,___ftmul@f1
   815  00034E  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   816  000352  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   817  000356  EC56  F005         	call	___ftmul	;wreg free
   818  00035A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   819  00035E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   820  000362  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   821  000366  ECB3  F004         	call	___ftdiv	;wreg free
   822  00036A  C07F  F08B         	movff	?___ftdiv,___fttol@f1
   823  00036E  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
   824  000372  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
   825  000376  EC0A  F004         	call	___fttol	;wreg free
   826  00037A  C08B  F09E         	movff	?___fttol,setRGB@b
   827  00037E  C08C  F09F         	movff	?___fttol+1,setRGB@b+1
   828  000382  EC04  F009         	call	_setRGB	;wreg free
   829                           
   830                           ;main.c: 128: break;
   831  000386  D6A1               	goto	l194
   832  000388                     l2320:
   833                           
   834                           ;main.c: 131: strobe();
   835  000388  ECE8  F001         	call	_strobe	;wreg free
   836                           
   837                           ;main.c: 132: break;
   838  00038C  D69E               	goto	l194
   839  00038E                     l2322:
   840                           
   841                           ;main.c: 135: setRGB(0,0,0);
   842  00038E  0E00               	movlw	0
   843  000390  0100               	movlb	0	; () banked
   844  000392  6F9B               	movwf	(setRGB@r+1)& (0+255),b
   845  000394  0E00               	movlw	0
   846  000396  6F9A               	movwf	setRGB@r& (0+255),b
   847  000398  0E00               	movlw	0
   848  00039A  0100               	movlb	0	; () banked
   849  00039C  6F9D               	movwf	(setRGB@g+1)& (0+255),b
   850  00039E  0E00               	movlw	0
   851  0003A0  6F9C               	movwf	setRGB@g& (0+255),b
   852  0003A2  0E00               	movlw	0
   853  0003A4  0100               	movlb	0	; () banked
   854  0003A6  6F9F               	movwf	(setRGB@b+1)& (0+255),b
   855  0003A8  0E00               	movlw	0
   856  0003AA  6F9E               	movwf	setRGB@b& (0+255),b
   857  0003AC  EC04  F009         	call	_setRGB	;wreg free
   858                           
   859                           ;main.c: 137: }
   860  0003B0  D68C               	goto	l194
   861  0003B2                     l2324:
   862  0003B2  0100               	movlb	0	; () banked
   863  0003B4  51B5               	movf	_mode& (0+255),w,b
   864                           
   865                           ; Switch size 1, requested type "space"
   866                           ; Number of cases is 3, Range of values is 0 to 2
   867                           ; switch strategies available:
   868                           ; Name         Instructions Cycles
   869                           ; simple_byte           10     6 (average)
   870                           ;	Chosen strategy is simple_byte
   871  0003B6  0A00               	xorlw	0	; case 0
   872  0003B8  B4D8               	btfsc	status,2,c
   873  0003BA  D69F               	goto	l2316
   874  0003BC  0A01               	xorlw	1	; case 1
   875  0003BE  B4D8               	btfsc	status,2,c
   876  0003C0  D73B               	goto	l2318
   877  0003C2  0A03               	xorlw	3	; case 2
   878  0003C4  B4D8               	btfsc	status,2,c
   879  0003C6  D7E0               	goto	l2320
   880  0003C8  D7E2               	goto	l2322
   881                           
   882                           ; BSR set to: 0
   883                           
   884                           ; BSR set to: 0
   885  0003CA  D67F               	goto	l194
   886                           
   887                           ; BSR set to: 0
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 139: }
   891                           ;main.c: 141: return (0);
   892                           ;	Return value of _main is never used
   893  0003CC  EF61  F000         	goto	start
   894  0003D0                     __end_of_main:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _strobe *****************
   902 ;; Defined at:
   903 ;;		line 16 in file "functions.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;		None               void
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   918 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;Total ram usage:        8 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    7
   924 ;; This function calls:
   925 ;;		___almod
   926 ;;		___ftdiv
   927 ;;		___ftmul
   928 ;;		___fttol
   929 ;;		___lwtoft
   930 ;;		_setRGB
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text1
   937  0003D0                     __ptext1:
   938                           	opt stack 0
   939  0003D0                     _strobe:
   940                           	opt stack 23
   941                           
   942                           ;functions.c: 18: if (millis%((int)(400*(float)amplitude2/65520.))<(int)((400*(float)amp
      +                          litude3/65520.)*(float)amplitude2/65520.))
   943                           
   944                           ; BSR set to: 0
   945                           ;incstack = 0
   946  0003D0  0EF0               	movlw	240
   947  0003D2  0100               	movlb	0	; () banked
   948  0003D4  6F82               	movwf	___ftdiv@f2& (0+255),b
   949  0003D6  0E7F               	movlw	127
   950  0003D8  0100               	movlb	0	; () banked
   951  0003DA  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   952  0003DC  0E47               	movlw	71
   953  0003DE  0100               	movlb	0	; () banked
   954  0003E0  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   955  0003E2  0E00               	movlw	0
   956  0003E4  0100               	movlb	0	; () banked
   957  0003E6  6F7C               	movwf	___ftmul@f2& (0+255),b
   958  0003E8  0EC8               	movlw	200
   959  0003EA  0100               	movlb	0	; () banked
   960  0003EC  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
   961  0003EE  0E43               	movlw	67
   962  0003F0  0100               	movlb	0	; () banked
   963  0003F2  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
   964  0003F4  C0BC  F076         	movff	_amplitude3,___lwtoft@c
   965  0003F8  C0BD  F077         	movff	_amplitude3+1,___lwtoft@c+1
   966  0003FC  EC1A  F009         	call	___lwtoft	;wreg free
   967  000400  C076  F079         	movff	?___lwtoft,___ftmul@f1
   968  000404  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   969  000408  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   970  00040C  EC56  F005         	call	___ftmul	;wreg free
   971  000410  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   972  000414  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   973  000418  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   974  00041C  ECB3  F004         	call	___ftdiv	;wreg free
   975  000420  C07F  F0A9         	movff	?___ftdiv,_strobe$1118
   976  000424  C080  F0AA         	movff	?___ftdiv+1,_strobe$1118+1
   977  000428  C081  F0AB         	movff	?___ftdiv+2,_strobe$1118+2
   978                           
   979                           ;functions.c: 18: if (millis%((int)(400*(float)amplitude2/65520.))<(int)((400*(float)amp
      +                          litude3/65520.)*(float)amplitude2/65520.))
   980  00042C  0EF0               	movlw	240
   981  00042E  0100               	movlb	0	; () banked
   982  000430  6F82               	movwf	___ftdiv@f2& (0+255),b
   983  000432  0E7F               	movlw	127
   984  000434  0100               	movlb	0	; () banked
   985  000436  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   986  000438  0E47               	movlw	71
   987  00043A  0100               	movlb	0	; () banked
   988  00043C  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   989  00043E  C0BA  F076         	movff	_amplitude2,___lwtoft@c
   990  000442  C0BB  F077         	movff	_amplitude2+1,___lwtoft@c+1
   991  000446  EC1A  F009         	call	___lwtoft	;wreg free
   992  00044A  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   993  00044E  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   994  000452  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   995  000456  C0A9  F079         	movff	_strobe$1118,___ftmul@f1
   996  00045A  C0AA  F07A         	movff	_strobe$1118+1,___ftmul@f1+1
   997  00045E  C0AB  F07B         	movff	_strobe$1118+2,___ftmul@f1+2
   998  000462  EC56  F005         	call	___ftmul	;wreg free
   999  000466  C079  F07F         	movff	?___ftmul,___ftdiv@f1
  1000  00046A  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
  1001  00046E  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
  1002  000472  ECB3  F004         	call	___ftdiv	;wreg free
  1003  000476  C07F  F08B         	movff	?___ftdiv,___fttol@f1
  1004  00047A  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
  1005  00047E  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
  1006  000482  EC0A  F004         	call	___fttol	;wreg free
  1007  000486  0100               	movlb	0	; () banked
  1008  000488  C08B  F0A4         	movff	?___fttol,??_strobe
  1009  00048C  0100               	movlb	0	; () banked
  1010  00048E  C08C  F0A5         	movff	?___fttol+1,??_strobe+1
  1011  000492  0E00               	movlw	0
  1012  000494  0100               	movlb	0	; () banked
  1013  000496  BFA5               	btfsc	(??_strobe+1)& (0+255),7,b
  1014  000498  0EFF               	movlw	255
  1015  00049A  6FA6               	movwf	(??_strobe+2)& (0+255),b
  1016  00049C  6FA7               	movwf	(??_strobe+3)& (0+255),b
  1017  00049E  C0B1  F09A         	movff	_millis,___almod@dividend
  1018  0004A2  C0B2  F09B         	movff	_millis+1,___almod@dividend+1
  1019  0004A6  C0B3  F09C         	movff	_millis+2,___almod@dividend+2
  1020  0004AA  C0B4  F09D         	movff	_millis+3,___almod@dividend+3
  1021  0004AE  0EF0               	movlw	240
  1022  0004B0  0100               	movlb	0	; () banked
  1023  0004B2  6F82               	movwf	___ftdiv@f2& (0+255),b
  1024  0004B4  0E7F               	movlw	127
  1025  0004B6  0100               	movlb	0	; () banked
  1026  0004B8  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
  1027  0004BA  0E47               	movlw	71
  1028  0004BC  0100               	movlb	0	; () banked
  1029  0004BE  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
  1030  0004C0  0E00               	movlw	0
  1031  0004C2  0100               	movlb	0	; () banked
  1032  0004C4  6F7C               	movwf	___ftmul@f2& (0+255),b
  1033  0004C6  0EC8               	movlw	200
  1034  0004C8  0100               	movlb	0	; () banked
  1035  0004CA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1036  0004CC  0E43               	movlw	67
  1037  0004CE  0100               	movlb	0	; () banked
  1038  0004D0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1039  0004D2  C0BA  F076         	movff	_amplitude2,___lwtoft@c
  1040  0004D6  C0BB  F077         	movff	_amplitude2+1,___lwtoft@c+1
  1041  0004DA  EC1A  F009         	call	___lwtoft	;wreg free
  1042  0004DE  C076  F079         	movff	?___lwtoft,___ftmul@f1
  1043  0004E2  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
  1044  0004E6  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
  1045  0004EA  EC56  F005         	call	___ftmul	;wreg free
  1046  0004EE  C079  F07F         	movff	?___ftmul,___ftdiv@f1
  1047  0004F2  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
  1048  0004F6  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
  1049  0004FA  ECB3  F004         	call	___ftdiv	;wreg free
  1050  0004FE  C07F  F08B         	movff	?___ftdiv,___fttol@f1
  1051  000502  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
  1052  000506  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
  1053  00050A  EC0A  F004         	call	___fttol	;wreg free
  1054  00050E  0100               	movlb	0	; () banked
  1055  000510  C08B  F09E         	movff	?___fttol,___almod@divisor
  1056  000514  0100               	movlb	0	; () banked
  1057  000516  C08C  F09F         	movff	?___fttol+1,___almod@divisor+1
  1058  00051A  0100               	movlb	0	; () banked
  1059  00051C  0E00               	movlw	0
  1060  00051E  BF9F               	btfsc	(___almod@divisor+1)& (0+255),7,b
  1061  000520  0EFF               	movlw	-1
  1062  000522  6FA0               	movwf	(___almod@divisor+2)& (0+255),b
  1063  000524  6FA1               	movwf	(___almod@divisor+3)& (0+255),b
  1064  000526  ECF8  F006         	call	___almod	;wreg free
  1065  00052A  0100               	movlb	0	; () banked
  1066  00052C  51A4               	movf	??_strobe& (0+255),w,b
  1067  00052E  0100               	movlb	0	; () banked
  1068  000530  5D9A               	subwf	?___almod& (0+255),w,b
  1069  000532  0100               	movlb	0	; () banked
  1070  000534  51A5               	movf	(??_strobe+1)& (0+255),w,b
  1071  000536  0100               	movlb	0	; () banked
  1072  000538  599B               	subwfb	(?___almod+1)& (0+255),w,b
  1073  00053A  0100               	movlb	0	; () banked
  1074  00053C  51A6               	movf	(??_strobe+2)& (0+255),w,b
  1075  00053E  0100               	movlb	0	; () banked
  1076  000540  599C               	subwfb	(?___almod+2)& (0+255),w,b
  1077  000542  0100               	movlb	0	; () banked
  1078  000544  519D               	movf	(?___almod+3)& (0+255),w,b
  1079  000546  0A80               	xorlw	128
  1080  000548  0100               	movlb	0	; () banked
  1081  00054A  6FA8               	movwf	(??_strobe+4)& (0+255),b
  1082  00054C  0100               	movlb	0	; () banked
  1083  00054E  51A7               	movf	(??_strobe+3)& (0+255),w,b
  1084  000550  0A80               	xorlw	128
  1085  000552  0100               	movlb	0	; () banked
  1086  000554  59A8               	subwfb	(??_strobe+4)& (0+255),w,b
  1087  000556  B0D8               	btfsc	status,0,c
  1088  000558  D09F               	goto	l2312
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;functions.c: 19: setRGB( (int)(1023*(float)amplitude1/65520.),
  1092                           ;functions.c: 20: (int)(1023*(float)amplitude1/65520.),
  1093                           ;functions.c: 21: (int)(1023*(float)amplitude1/65520.));
  1094  00055A  0EF0               	movlw	240
  1095  00055C  0100               	movlb	0	; () banked
  1096  00055E  6F82               	movwf	___ftdiv@f2& (0+255),b
  1097  000560  0E7F               	movlw	127
  1098  000562  0100               	movlb	0	; () banked
  1099  000564  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
  1100  000566  0E47               	movlw	71
  1101  000568  0100               	movlb	0	; () banked
  1102  00056A  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
  1103  00056C  0EC0               	movlw	192
  1104  00056E  0100               	movlb	0	; () banked
  1105  000570  6F7C               	movwf	___ftmul@f2& (0+255),b
  1106  000572  0E7F               	movlw	127
  1107  000574  0100               	movlb	0	; () banked
  1108  000576  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1109  000578  0E44               	movlw	68
  1110  00057A  0100               	movlb	0	; () banked
  1111  00057C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1112  00057E  C0B8  F076         	movff	_amplitude1,___lwtoft@c
  1113  000582  C0B9  F077         	movff	_amplitude1+1,___lwtoft@c+1
  1114  000586  EC1A  F009         	call	___lwtoft	;wreg free
  1115  00058A  C076  F079         	movff	?___lwtoft,___ftmul@f1
  1116  00058E  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
  1117  000592  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
  1118  000596  EC56  F005         	call	___ftmul	;wreg free
  1119  00059A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
  1120  00059E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
  1121  0005A2  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
  1122  0005A6  ECB3  F004         	call	___ftdiv	;wreg free
  1123  0005AA  C07F  F08B         	movff	?___ftdiv,___fttol@f1
  1124  0005AE  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
  1125  0005B2  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
  1126  0005B6  EC0A  F004         	call	___fttol	;wreg free
  1127  0005BA  C08B  F09A         	movff	?___fttol,setRGB@r
  1128  0005BE  C08C  F09B         	movff	?___fttol+1,setRGB@r+1
  1129  0005C2  0EF0               	movlw	240
  1130  0005C4  0100               	movlb	0	; () banked
  1131  0005C6  6F82               	movwf	___ftdiv@f2& (0+255),b
  1132  0005C8  0E7F               	movlw	127
  1133  0005CA  0100               	movlb	0	; () banked
  1134  0005CC  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
  1135  0005CE  0E47               	movlw	71
  1136  0005D0  0100               	movlb	0	; () banked
  1137  0005D2  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
  1138  0005D4  0EC0               	movlw	192
  1139  0005D6  0100               	movlb	0	; () banked
  1140  0005D8  6F7C               	movwf	___ftmul@f2& (0+255),b
  1141  0005DA  0E7F               	movlw	127
  1142  0005DC  0100               	movlb	0	; () banked
  1143  0005DE  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1144  0005E0  0E44               	movlw	68
  1145  0005E2  0100               	movlb	0	; () banked
  1146  0005E4  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1147  0005E6  C0B8  F076         	movff	_amplitude1,___lwtoft@c
  1148  0005EA  C0B9  F077         	movff	_amplitude1+1,___lwtoft@c+1
  1149  0005EE  EC1A  F009         	call	___lwtoft	;wreg free
  1150  0005F2  C076  F079         	movff	?___lwtoft,___ftmul@f1
  1151  0005F6  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
  1152  0005FA  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
  1153  0005FE  EC56  F005         	call	___ftmul	;wreg free
  1154  000602  C079  F07F         	movff	?___ftmul,___ftdiv@f1
  1155  000606  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
  1156  00060A  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
  1157  00060E  ECB3  F004         	call	___ftdiv	;wreg free
  1158  000612  C07F  F08B         	movff	?___ftdiv,___fttol@f1
  1159  000616  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
  1160  00061A  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
  1161  00061E  EC0A  F004         	call	___fttol	;wreg free
  1162  000622  C08B  F09C         	movff	?___fttol,setRGB@g
  1163  000626  C08C  F09D         	movff	?___fttol+1,setRGB@g+1
  1164  00062A  0EF0               	movlw	240
  1165  00062C  0100               	movlb	0	; () banked
  1166  00062E  6F82               	movwf	___ftdiv@f2& (0+255),b
  1167  000630  0E7F               	movlw	127
  1168  000632  0100               	movlb	0	; () banked
  1169  000634  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
  1170  000636  0E47               	movlw	71
  1171  000638  0100               	movlb	0	; () banked
  1172  00063A  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
  1173  00063C  0EC0               	movlw	192
  1174  00063E  0100               	movlb	0	; () banked
  1175  000640  6F7C               	movwf	___ftmul@f2& (0+255),b
  1176  000642  0E7F               	movlw	127
  1177  000644  0100               	movlb	0	; () banked
  1178  000646  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  1179  000648  0E44               	movlw	68
  1180  00064A  0100               	movlb	0	; () banked
  1181  00064C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  1182  00064E  C0B8  F076         	movff	_amplitude1,___lwtoft@c
  1183  000652  C0B9  F077         	movff	_amplitude1+1,___lwtoft@c+1
  1184  000656  EC1A  F009         	call	___lwtoft	;wreg free
  1185  00065A  C076  F079         	movff	?___lwtoft,___ftmul@f1
  1186  00065E  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
  1187  000662  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
  1188  000666  EC56  F005         	call	___ftmul	;wreg free
  1189  00066A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
  1190  00066E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
  1191  000672  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
  1192  000676  ECB3  F004         	call	___ftdiv	;wreg free
  1193  00067A  C07F  F08B         	movff	?___ftdiv,___fttol@f1
  1194  00067E  C080  F08C         	movff	?___ftdiv+1,___fttol@f1+1
  1195  000682  C081  F08D         	movff	?___ftdiv+2,___fttol@f1+2
  1196  000686  EC0A  F004         	call	___fttol	;wreg free
  1197  00068A  C08B  F09E         	movff	?___fttol,setRGB@b
  1198  00068E  C08C  F09F         	movff	?___fttol+1,setRGB@b+1
  1199  000692  EC04  F009         	call	_setRGB	;wreg free
  1200  000696  0012               	return	
  1201  000698                     l2312:
  1202                           
  1203                           ;functions.c: 22: else
  1204                           ;functions.c: 23: setRGB(0,0,0);
  1205  000698  0E00               	movlw	0
  1206  00069A  0100               	movlb	0	; () banked
  1207  00069C  6F9B               	movwf	(setRGB@r+1)& (0+255),b
  1208  00069E  0E00               	movlw	0
  1209  0006A0  6F9A               	movwf	setRGB@r& (0+255),b
  1210  0006A2  0E00               	movlw	0
  1211  0006A4  0100               	movlb	0	; () banked
  1212  0006A6  6F9D               	movwf	(setRGB@g+1)& (0+255),b
  1213  0006A8  0E00               	movlw	0
  1214  0006AA  6F9C               	movwf	setRGB@g& (0+255),b
  1215  0006AC  0E00               	movlw	0
  1216  0006AE  0100               	movlb	0	; () banked
  1217  0006B0  6F9F               	movwf	(setRGB@b+1)& (0+255),b
  1218  0006B2  0E00               	movlw	0
  1219  0006B4  6F9E               	movwf	setRGB@b& (0+255),b
  1220  0006B6  EC04  F009         	call	_setRGB	;wreg free
  1221  0006BA  0012               	return	
  1222  0006BC  0012               	return		;funcret
  1223  0006BE                     __end_of_strobe:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           status	equ	0xFD8
  1229                           
  1230 ;; *************** function _setRGB *****************
  1231 ;; Defined at:
  1232 ;;		line 9 in file "functions.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  r               2   58[BANK0 ] int 
  1235 ;;  g               2   60[BANK0 ] int 
  1236 ;;  b               2   62[BANK0 ] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1248 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    6
  1255 ;; This function calls:
  1256 ;;		_pwm
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;;		_strobe
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text2
  1264  001208                     __ptext2:
  1265                           	opt stack 0
  1266  001208                     _setRGB:
  1267                           	opt stack 23
  1268                           
  1269                           ;functions.c: 11: pwm('R',r);
  1270                           
  1271                           ;incstack = 0
  1272  001208  C09A  F022         	movff	setRGB@r,pwm@dutycycle
  1273  00120C  C09B  F023         	movff	setRGB@r+1,pwm@dutycycle+1
  1274  001210  0E52               	movlw	82
  1275  001212  EC40  F008         	call	_pwm
  1276                           
  1277                           ;functions.c: 12: pwm('G',g);
  1278  001216  C09C  F022         	movff	setRGB@g,pwm@dutycycle
  1279  00121A  C09D  F023         	movff	setRGB@g+1,pwm@dutycycle+1
  1280  00121E  0E47               	movlw	71
  1281  001220  EC40  F008         	call	_pwm
  1282                           
  1283                           ;functions.c: 13: pwm('B',b);
  1284  001224  C09E  F022         	movff	setRGB@b,pwm@dutycycle
  1285  001228  C09F  F023         	movff	setRGB@b+1,pwm@dutycycle+1
  1286  00122C  0E42               	movlw	66
  1287  00122E  EC40  F008         	call	_pwm
  1288  001232  0012               	return		;funcret
  1289  001234                     __end_of_setRGB:
  1290                           	opt stack 0
  1291                           tblptru	equ	0xFF8
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _pwm *****************
  1297 ;; Defined at:
  1298 ;;		line 4 in file "converter.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  color           1    wreg     unsigned char 
  1301 ;;  dutycycle       2   33[COMRAM] int 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  color           1   35[COMRAM] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;		None               void
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1317 ;;Total ram usage:        3 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    5
  1320 ;; This function calls:
  1321 ;;		___awdiv
  1322 ;; This function is called by:
  1323 ;;		_setRGB
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text3
  1328  001080                     __ptext3:
  1329                           	opt stack 0
  1330  001080                     _pwm:
  1331                           	opt stack 23
  1332                           
  1333                           ;incstack = 0
  1334                           ;pwm@color stored from wreg
  1335  001080  6E24               	movwf	pwm@color,c
  1336                           
  1337                           ;converter.c: 5: switch(color){
  1338  001082  D03C               	goto	l2104
  1339  001084                     l2084:
  1340                           
  1341                           ;converter.c: 7: CCPR2L=dutycycle/4;
  1342  001084  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1343  001088  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1344  00108C  0E00               	movlw	0
  1345  00108E  0100               	movlb	0	; () banked
  1346  001090  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1347  001092  0E04               	movlw	4
  1348  001094  6F73               	movwf	___awdiv@divisor& (0+255),b
  1349  001096  ECE4  F007         	call	___awdiv	;wreg free
  1350  00109A  0100               	movlb	0	; () banked
  1351  00109C  5171               	movf	?___awdiv& (0+255),w,b
  1352  00109E  010F               	movlb	15	; () banked
  1353  0010A0  6F51               	movwf	81,b	;volatile
  1354                           
  1355                           ; BSR set to: 15
  1356                           ;converter.c: 8: DC2B1=(dutycycle/2)%1;
  1357  0010A2  010F               	movlb	15	; () banked
  1358  0010A4  9B50               	bcf	80,5,b	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;converter.c: 9: DC2B0=dutycycle%1;
  1362  0010A6  010F               	movlb	15	; () banked
  1363  0010A8  9950               	bcf	80,4,b	;volatile
  1364                           
  1365                           ;converter.c: 10: break;
  1366  0010AA  0012               	return	
  1367  0010AC                     l2090:
  1368                           
  1369                           ;converter.c: 12: CCPR3L=dutycycle/4;
  1370  0010AC  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1371  0010B0  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1372  0010B4  0E00               	movlw	0
  1373  0010B6  0100               	movlb	0	; () banked
  1374  0010B8  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1375  0010BA  0E04               	movlw	4
  1376  0010BC  6F73               	movwf	___awdiv@divisor& (0+255),b
  1377  0010BE  ECE4  F007         	call	___awdiv	;wreg free
  1378  0010C2  0100               	movlb	0	; () banked
  1379  0010C4  5171               	movf	?___awdiv& (0+255),w,b
  1380  0010C6  010F               	movlb	15	; () banked
  1381  0010C8  6F4E               	movwf	78,b	;volatile
  1382                           
  1383                           ; BSR set to: 15
  1384                           ;converter.c: 13: DC3B1=(dutycycle/2)%1;
  1385  0010CA  010F               	movlb	15	; () banked
  1386  0010CC  9B4D               	bcf	77,5,b	;volatile
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;converter.c: 14: DC3B0=0;
  1390  0010CE  010F               	movlb	15	; () banked
  1391  0010D0  994D               	bcf	77,4,b	;volatile
  1392                           
  1393                           ;converter.c: 15: break;
  1394  0010D2  0012               	return	
  1395  0010D4                     l2096:
  1396                           
  1397                           ;converter.c: 17: CCPR4L=dutycycle/4;
  1398  0010D4  C022  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1399  0010D8  C023  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1400  0010DC  0E00               	movlw	0
  1401  0010DE  0100               	movlb	0	; () banked
  1402  0010E0  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1403  0010E2  0E04               	movlw	4
  1404  0010E4  6F73               	movwf	___awdiv@divisor& (0+255),b
  1405  0010E6  ECE4  F007         	call	___awdiv	;wreg free
  1406  0010EA  0100               	movlb	0	; () banked
  1407  0010EC  5171               	movf	?___awdiv& (0+255),w,b
  1408  0010EE  010F               	movlb	15	; () banked
  1409  0010F0  6F4B               	movwf	75,b	;volatile
  1410                           
  1411                           ; BSR set to: 15
  1412                           ;converter.c: 18: DC4B1=(dutycycle/2)%1;
  1413  0010F2  010F               	movlb	15	; () banked
  1414  0010F4  9B4A               	bcf	74,5,b	;volatile
  1415                           
  1416                           ; BSR set to: 15
  1417                           ;converter.c: 19: DC4B0=dutycycle%1;
  1418  0010F6  010F               	movlb	15	; () banked
  1419  0010F8  994A               	bcf	74,4,b	;volatile
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;converter.c: 21: }
  1423                           
  1424                           ;converter.c: 20: break;
  1425  0010FA  0012               	return	
  1426  0010FC                     l2104:
  1427  0010FC  5024               	movf	pwm@color,w,c
  1428                           
  1429                           ; Switch size 1, requested type "space"
  1430                           ; Number of cases is 3, Range of values is 66 to 82
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           10     6 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  0010FE  0A42               	xorlw	66	; case 66
  1436  001100  B4D8               	btfsc	status,2,c
  1437  001102  D7C0               	goto	l2084
  1438  001104  0A05               	xorlw	5	; case 71
  1439  001106  B4D8               	btfsc	status,2,c
  1440  001108  D7E5               	goto	l2096
  1441  00110A  0A15               	xorlw	21	; case 82
  1442  00110C  A4D8               	btfss	status,2,c
  1443  00110E  0012               	return	
  1444  001110  D7CD               	goto	l2090
  1445  001112  0012               	return		;funcret
  1446  001114                     __end_of_pwm:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           postinc0	equ	0xFEE
  1450                           wreg	equ	0xFE8
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function ___awdiv *****************
  1454 ;; Defined at:
  1455 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  dividend        2   17[BANK0 ] int 
  1458 ;;  divisor         2   19[BANK0 ] int 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  quotient        2   31[COMRAM] int 
  1461 ;;  sign            1   30[COMRAM] unsigned char 
  1462 ;;  counter         1   29[COMRAM] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2   17[BANK0 ] int 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;Total ram usage:        8 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    4
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_pwm
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text4
  1487  000FC8                     __ptext4:
  1488                           	opt stack 0
  1489  000FC8                     ___awdiv:
  1490                           	opt stack 23
  1491                           
  1492                           ;incstack = 0
  1493  000FC8  0E00               	movlw	0
  1494  000FCA  6E1F               	movwf	___awdiv@sign,c
  1495  000FCC  0100               	movlb	0	; () banked
  1496  000FCE  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1497  000FD0  D008               	goto	l2046
  1498                           
  1499                           ; BSR set to: 0
  1500  000FD2  0100               	movlb	0	; () banked
  1501  000FD4  6D73               	negf	___awdiv@divisor& (0+255),b
  1502  000FD6  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1503  000FD8  B0D8               	btfsc	status,0,c
  1504  000FDA  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1505                           
  1506                           ; BSR set to: 0
  1507  000FDC  0E01               	movlw	1
  1508  000FDE  6E1F               	movwf	___awdiv@sign,c
  1509  000FE0  D000               	goto	l2046
  1510  000FE2                     l2046:
  1511                           
  1512                           ; BSR set to: 0
  1513  000FE2  0100               	movlb	0	; () banked
  1514  000FE4  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1515  000FE6  D008               	goto	l2052
  1516                           
  1517                           ; BSR set to: 0
  1518  000FE8  0100               	movlb	0	; () banked
  1519  000FEA  6D71               	negf	___awdiv@dividend& (0+255),b
  1520  000FEC  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1521  000FEE  B0D8               	btfsc	status,0,c
  1522  000FF0  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1523                           
  1524                           ; BSR set to: 0
  1525  000FF2  0E01               	movlw	1
  1526  000FF4  1A1F               	xorwf	___awdiv@sign,f,c
  1527  000FF6  D000               	goto	l2052
  1528  000FF8                     l2052:
  1529                           
  1530                           ; BSR set to: 0
  1531  000FF8  0E00               	movlw	0
  1532  000FFA  6E21               	movwf	___awdiv@quotient+1,c
  1533  000FFC  0E00               	movlw	0
  1534  000FFE  6E20               	movwf	___awdiv@quotient,c
  1535                           
  1536                           ; BSR set to: 0
  1537  001000  0100               	movlb	0	; () banked
  1538  001002  5173               	movf	___awdiv@divisor& (0+255),w,b
  1539  001004  0100               	movlb	0	; () banked
  1540  001006  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1541  001008  B4D8               	btfsc	status,2,c
  1542  00100A  D02C               	goto	l2074
  1543                           
  1544                           ; BSR set to: 0
  1545  00100C  0E01               	movlw	1
  1546  00100E  6E1E               	movwf	___awdiv@counter,c
  1547  001010  D006               	goto	l2060
  1548  001012                     l2058:
  1549                           
  1550                           ; BSR set to: 0
  1551  001012  0100               	movlb	0	; () banked
  1552  001014  90D8               	bcf	status,0,c
  1553  001016  3773               	rlcf	___awdiv@divisor& (0+255),f,b
  1554  001018  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1555  00101A  2A1E               	incf	___awdiv@counter,f,c
  1556  00101C  D000               	goto	l2060
  1557  00101E                     l2060:
  1558                           
  1559                           ; BSR set to: 0
  1560  00101E  0100               	movlb	0	; () banked
  1561  001020  BF74               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1562  001022  D002               	goto	l2062
  1563  001024  D7F6               	goto	l2058
  1564                           
  1565                           ; BSR set to: 0
  1566  001026  D000               	goto	l2062
  1567  001028                     l2062:
  1568                           
  1569                           ; BSR set to: 0
  1570  001028  90D8               	bcf	status,0,c
  1571  00102A  3620               	rlcf	___awdiv@quotient,f,c
  1572  00102C  3621               	rlcf	___awdiv@quotient+1,f,c
  1573                           
  1574                           ; BSR set to: 0
  1575  00102E  0100               	movlb	0	; () banked
  1576  001030  5173               	movf	___awdiv@divisor& (0+255),w,b
  1577  001032  0100               	movlb	0	; () banked
  1578  001034  5D71               	subwf	___awdiv@dividend& (0+255),w,b
  1579  001036  0100               	movlb	0	; () banked
  1580  001038  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1581  00103A  0100               	movlb	0	; () banked
  1582  00103C  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1583  00103E  A0D8               	btfss	status,0,c
  1584  001040  D00A               	goto	l2070
  1585                           
  1586                           ; BSR set to: 0
  1587  001042  0100               	movlb	0	; () banked
  1588  001044  5173               	movf	___awdiv@divisor& (0+255),w,b
  1589  001046  0100               	movlb	0	; () banked
  1590  001048  5F71               	subwf	___awdiv@dividend& (0+255),f,b
  1591  00104A  0100               	movlb	0	; () banked
  1592  00104C  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1593  00104E  0100               	movlb	0	; () banked
  1594  001050  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1595                           
  1596                           ; BSR set to: 0
  1597  001052  8020               	bsf	___awdiv@quotient,0,c
  1598  001054  D000               	goto	l2070
  1599  001056                     l2070:
  1600                           
  1601                           ; BSR set to: 0
  1602  001056  0100               	movlb	0	; () banked
  1603  001058  90D8               	bcf	status,0,c
  1604  00105A  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1605  00105C  3373               	rrcf	___awdiv@divisor& (0+255),f,b
  1606                           
  1607                           ; BSR set to: 0
  1608  00105E  2E1E               	decfsz	___awdiv@counter,f,c
  1609  001060  D7E3               	goto	l2062
  1610                           
  1611                           ; BSR set to: 0
  1612  001062  D000               	goto	l2074
  1613  001064                     l2074:
  1614                           
  1615                           ; BSR set to: 0
  1616  001064  501F               	movf	___awdiv@sign,w,c
  1617  001066  B4D8               	btfsc	status,2,c
  1618  001068  D005               	goto	l2078
  1619                           
  1620                           ; BSR set to: 0
  1621  00106A  6C20               	negf	___awdiv@quotient,c
  1622  00106C  1E21               	comf	___awdiv@quotient+1,f,c
  1623  00106E  B0D8               	btfsc	status,0,c
  1624  001070  2A21               	incf	___awdiv@quotient+1,f,c
  1625  001072  D000               	goto	l2078
  1626  001074                     l2078:
  1627                           
  1628                           ; BSR set to: 0
  1629  001074  C020  F071         	movff	___awdiv@quotient,?___awdiv
  1630  001078  C021  F072         	movff	___awdiv@quotient+1,?___awdiv+1
  1631  00107C  0012               	return	
  1632                           
  1633                           ; BSR set to: 0
  1634                           
  1635                           ; BSR set to: 0
  1636  00107E  0012               	return		;funcret
  1637  001080                     __end_of___awdiv:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function ___lwtoft *****************
  1645 ;; Defined at:
  1646 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  c               2   22[BANK0 ] unsigned int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  3   22[BANK0 ] float 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;Total ram usage:        3 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    5
  1667 ;; This function calls:
  1668 ;;		___ftpack
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;;		_strobe
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text5
  1676  001234                     __ptext5:
  1677                           	opt stack 0
  1678  001234                     ___lwtoft:
  1679                           	opt stack 24
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;incstack = 0
  1683  001234  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  1684  001238  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  1685  00123C  0100               	movlb	0	; () banked
  1686  00123E  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  1687  001240  0E8E               	movlw	142
  1688  001242  0100               	movlb	0	; () banked
  1689  001244  6F74               	movwf	___ftpack@exp& (0+255),b
  1690  001246  0E00               	movlw	0
  1691  001248  0100               	movlb	0	; () banked
  1692  00124A  6F75               	movwf	___ftpack@sign& (0+255),b
  1693  00124C  ECF0  F005         	call	___ftpack	;wreg free
  1694  001250  C071  F076         	movff	?___ftpack,?___lwtoft
  1695  001254  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  1696  001258  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  1697  00125C  0012               	return	
  1698  00125E  0012               	return		;funcret
  1699  001260                     __end_of___lwtoft:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function ___fttol *****************
  1707 ;; Defined at:
  1708 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  f1              3   43[BANK0 ] float 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  lval            4   53[BANK0 ] unsigned long 
  1713 ;;  exp1            1   57[BANK0 ] unsigned char 
  1714 ;;  sign1           1   52[BANK0 ] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  4   43[BANK0 ] long 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1724 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;Total ram usage:       15 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    4
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;;		_strobe
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text6
  1740  000814                     __ptext6:
  1741                           	opt stack 0
  1742  000814                     ___fttol:
  1743                           	opt stack 25
  1744                           
  1745                           ;incstack = 0
  1746  000814  C08D  F08F         	movff	___fttol@f1+2,??___fttol
  1747  000818  0100               	movlb	0	; () banked
  1748  00081A  6B90               	clrf	(??___fttol+1)& (0+255),b
  1749  00081C  6B91               	clrf	(??___fttol+2)& (0+255),b
  1750  00081E  0100               	movlb	0	; () banked
  1751  000820  358C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1752  000822  0100               	movlb	0	; () banked
  1753  000824  378F               	rlcf	??___fttol& (0+255),f,b
  1754  000826  E301               	bnc	u1151
  1755  000828  8190               	bsf	(??___fttol+1)& (0+255),0,b
  1756  00082A                     u1151:
  1757  00082A  0100               	movlb	0	; () banked
  1758  00082C  518F               	movf	??___fttol& (0+255),w,b
  1759  00082E  0100               	movlb	0	; () banked
  1760  000830  6F99               	movwf	___fttol@exp1& (0+255),b
  1761  000832  0100               	movlb	0	; () banked
  1762  000834  5199               	movf	___fttol@exp1& (0+255),w,b
  1763  000836  A4D8               	btfss	status,2,c
  1764  000838  D00A               	goto	l1806
  1765                           
  1766                           ; BSR set to: 0
  1767  00083A  0E00               	movlw	0
  1768  00083C  0100               	movlb	0	; () banked
  1769  00083E  6F8B               	movwf	?___fttol& (0+255),b
  1770  000840  0E00               	movlw	0
  1771  000842  6F8C               	movwf	(?___fttol+1)& (0+255),b
  1772  000844  0E00               	movlw	0
  1773  000846  6F8D               	movwf	(?___fttol+2)& (0+255),b
  1774  000848  0E00               	movlw	0
  1775  00084A  6F8E               	movwf	(?___fttol+3)& (0+255),b
  1776                           
  1777                           ; BSR set to: 0
  1778  00084C  0012               	return	
  1779  00084E                     l1806:
  1780                           
  1781                           ; BSR set to: 0
  1782  00084E  0E17               	movlw	23
  1783  000850  0100               	movlb	0	; () banked
  1784  000852  6F8F               	movwf	??___fttol& (0+255),b
  1785  000854  C08B  F090         	movff	___fttol@f1,??___fttol+1
  1786  000858  C08C  F091         	movff	___fttol@f1+1,??___fttol+2
  1787  00085C  C08D  F092         	movff	___fttol@f1+2,??___fttol+3
  1788  000860  0100               	movlb	0	; () banked
  1789  000862  298F               	incf	??___fttol& (0+255),w,b
  1790  000864  0100               	movlb	0	; () banked
  1791  000866  6F93               	movwf	(??___fttol+4)& (0+255),b
  1792  000868  D005               	goto	u1170
  1793  00086A                     u1175:
  1794  00086A  0100               	movlb	0	; () banked
  1795  00086C  90D8               	bcf	status,0,c
  1796  00086E  3392               	rrcf	(??___fttol+3)& (0+255),f,b
  1797  000870  3391               	rrcf	(??___fttol+2)& (0+255),f,b
  1798  000872  3390               	rrcf	(??___fttol+1)& (0+255),f,b
  1799  000874                     u1170:
  1800  000874  0100               	movlb	0	; () banked
  1801  000876  2F93               	decfsz	(??___fttol+4)& (0+255),f,b
  1802  000878  D7F8               	goto	u1175
  1803  00087A  0100               	movlb	0	; () banked
  1804  00087C  5190               	movf	(??___fttol+1)& (0+255),w,b
  1805  00087E  0100               	movlb	0	; () banked
  1806  000880  6F94               	movwf	___fttol@sign1& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809  000882  0100               	movlb	0	; () banked
  1810  000884  8F8C               	bsf	(___fttol@f1+1)& (0+255),7,b
  1811                           
  1812                           ; BSR set to: 0
  1813  000886  0EFF               	movlw	255
  1814  000888  0100               	movlb	0	; () banked
  1815  00088A  178B               	andwf	___fttol@f1& (0+255),f,b
  1816  00088C  0EFF               	movlw	255
  1817  00088E  0100               	movlb	0	; () banked
  1818  000890  178C               	andwf	(___fttol@f1+1)& (0+255),f,b
  1819  000892  0E00               	movlw	0
  1820  000894  0100               	movlb	0	; () banked
  1821  000896  178D               	andwf	(___fttol@f1+2)& (0+255),f,b
  1822                           
  1823                           ; BSR set to: 0
  1824  000898  0100               	movlb	0	; () banked
  1825  00089A  518B               	movf	___fttol@f1& (0+255),w,b
  1826  00089C  0100               	movlb	0	; () banked
  1827  00089E  6F95               	movwf	___fttol@lval& (0+255),b
  1828  0008A0  0100               	movlb	0	; () banked
  1829  0008A2  518C               	movf	(___fttol@f1+1)& (0+255),w,b
  1830  0008A4  0100               	movlb	0	; () banked
  1831  0008A6  6F96               	movwf	(___fttol@lval+1)& (0+255),b
  1832  0008A8  0100               	movlb	0	; () banked
  1833  0008AA  518D               	movf	(___fttol@f1+2)& (0+255),w,b
  1834  0008AC  0100               	movlb	0	; () banked
  1835  0008AE  6F97               	movwf	(___fttol@lval+2)& (0+255),b
  1836  0008B0  0100               	movlb	0	; () banked
  1837  0008B2  6B98               	clrf	(___fttol@lval+3)& (0+255),b
  1838                           
  1839                           ; BSR set to: 0
  1840  0008B4  0E8E               	movlw	142
  1841  0008B6  0100               	movlb	0	; () banked
  1842  0008B8  5F99               	subwf	___fttol@exp1& (0+255),f,b
  1843                           
  1844                           ; BSR set to: 0
  1845  0008BA  0100               	movlb	0	; () banked
  1846  0008BC  AF99               	btfss	___fttol@exp1& (0+255),7,b
  1847  0008BE  D01B               	goto	l1828
  1848                           
  1849                           ; BSR set to: 0
  1850  0008C0  0100               	movlb	0	; () banked
  1851  0008C2  5199               	movf	___fttol@exp1& (0+255),w,b
  1852  0008C4  0A80               	xorlw	128
  1853  0008C6  0F8F               	addlw	143
  1854  0008C8  B0D8               	btfsc	status,0,c
  1855  0008CA  D00B               	goto	l1824
  1856                           
  1857                           ; BSR set to: 0
  1858  0008CC  0E00               	movlw	0
  1859  0008CE  0100               	movlb	0	; () banked
  1860  0008D0  6F8B               	movwf	?___fttol& (0+255),b
  1861  0008D2  0E00               	movlw	0
  1862  0008D4  6F8C               	movwf	(?___fttol+1)& (0+255),b
  1863  0008D6  0E00               	movlw	0
  1864  0008D8  6F8D               	movwf	(?___fttol+2)& (0+255),b
  1865  0008DA  0E00               	movlw	0
  1866  0008DC  6F8E               	movwf	(?___fttol+3)& (0+255),b
  1867                           
  1868                           ; BSR set to: 0
  1869  0008DE  0012               	return	
  1870                           
  1871                           ; BSR set to: 0
  1872  0008E0  D000               	goto	l1824
  1873  0008E2                     l1824:
  1874                           
  1875                           ; BSR set to: 0
  1876  0008E2  0100               	movlb	0	; () banked
  1877  0008E4  90D8               	bcf	status,0,c
  1878  0008E6  3398               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1879  0008E8  3397               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1880  0008EA  3396               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1881  0008EC  3395               	rrcf	___fttol@lval& (0+255),f,b
  1882                           
  1883                           ; BSR set to: 0
  1884  0008EE  0100               	movlb	0	; () banked
  1885  0008F0  3F99               	incfsz	___fttol@exp1& (0+255),f,b
  1886  0008F2  D7F7               	goto	l1824
  1887                           
  1888                           ; BSR set to: 0
  1889  0008F4  D01F               	goto	l1838
  1890  0008F6                     l1828:
  1891                           
  1892                           ; BSR set to: 0
  1893  0008F6  0E17               	movlw	23
  1894  0008F8  0100               	movlb	0	; () banked
  1895  0008FA  6599               	cpfsgt	___fttol@exp1& (0+255),b
  1896  0008FC  D014               	goto	l1836
  1897                           
  1898                           ; BSR set to: 0
  1899  0008FE  0E00               	movlw	0
  1900  000900  0100               	movlb	0	; () banked
  1901  000902  6F8B               	movwf	?___fttol& (0+255),b
  1902  000904  0E00               	movlw	0
  1903  000906  6F8C               	movwf	(?___fttol+1)& (0+255),b
  1904  000908  0E00               	movlw	0
  1905  00090A  6F8D               	movwf	(?___fttol+2)& (0+255),b
  1906  00090C  0E00               	movlw	0
  1907  00090E  6F8E               	movwf	(?___fttol+3)& (0+255),b
  1908                           
  1909                           ; BSR set to: 0
  1910  000910  0012               	return	
  1911                           
  1912                           ; BSR set to: 0
  1913  000912  D009               	goto	l1836
  1914  000914                     l1834:
  1915                           
  1916                           ; BSR set to: 0
  1917  000914  0100               	movlb	0	; () banked
  1918  000916  90D8               	bcf	status,0,c
  1919  000918  3795               	rlcf	___fttol@lval& (0+255),f,b
  1920  00091A  3796               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1921  00091C  3797               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1922  00091E  3798               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1923  000920  0100               	movlb	0	; () banked
  1924  000922  0799               	decf	___fttol@exp1& (0+255),f,b
  1925  000924  D000               	goto	l1836
  1926  000926                     l1836:
  1927                           
  1928                           ; BSR set to: 0
  1929  000926  0100               	movlb	0	; () banked
  1930  000928  5199               	movf	___fttol@exp1& (0+255),w,b
  1931  00092A  0100               	movlb	0	; () banked
  1932  00092C  B4D8               	btfsc	status,2,c
  1933  00092E  D002               	goto	l1838
  1934  000930  D7F1               	goto	l1834
  1935                           
  1936                           ; BSR set to: 0
  1937  000932  D000               	goto	l1838
  1938  000934                     l1838:
  1939                           
  1940                           ; BSR set to: 0
  1941  000934  0100               	movlb	0	; () banked
  1942  000936  5194               	movf	___fttol@sign1& (0+255),w,b
  1943  000938  0100               	movlb	0	; () banked
  1944  00093A  B4D8               	btfsc	status,2,c
  1945  00093C  D00A               	goto	l1842
  1946                           
  1947                           ; BSR set to: 0
  1948  00093E  0100               	movlb	0	; () banked
  1949  000940  1F98               	comf	(___fttol@lval+3)& (0+255),f,b
  1950  000942  1F97               	comf	(___fttol@lval+2)& (0+255),f,b
  1951  000944  1F96               	comf	(___fttol@lval+1)& (0+255),f,b
  1952  000946  6D95               	negf	___fttol@lval& (0+255),b
  1953  000948  0E00               	movlw	0
  1954  00094A  2396               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1955  00094C  2397               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1956  00094E  2398               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1957  000950  D000               	goto	l1842
  1958  000952                     l1842:
  1959                           
  1960                           ; BSR set to: 0
  1961  000952  C095  F08B         	movff	___fttol@lval,?___fttol
  1962  000956  C096  F08C         	movff	___fttol@lval+1,?___fttol+1
  1963  00095A  C097  F08D         	movff	___fttol@lval+2,?___fttol+2
  1964  00095E  C098  F08E         	movff	___fttol@lval+3,?___fttol+3
  1965  000962  0012               	return	
  1966                           
  1967                           ; BSR set to: 0
  1968                           
  1969                           ; BSR set to: 0
  1970  000964  0012               	return		;funcret
  1971  000966                     __end_of___fttol:
  1972                           	opt stack 0
  1973                           tblptru	equ	0xFF8
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function ___ftmul *****************
  1979 ;; Defined at:
  1980 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  f1              3   25[BANK0 ] float 
  1983 ;;  f2              3   28[BANK0 ] float 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1986 ;;  sign            1   40[COMRAM] unsigned char 
  1987 ;;  cntr            1   39[COMRAM] unsigned char 
  1988 ;;  exp             1   35[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  3   25[BANK0 ] float 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1998 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;Total ram usage:       15 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    5
  2005 ;; This function calls:
  2006 ;;		___ftpack
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;;		_strobe
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text7
  2014  000AAC                     __ptext7:
  2015                           	opt stack 0
  2016  000AAC                     ___ftmul:
  2017                           	opt stack 24
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;incstack = 0
  2021  000AAC  C07B  F021         	movff	___ftmul@f1+2,??___ftmul
  2022  000AB0  6A22               	clrf	(??___ftmul+1)& (0+255),c
  2023  000AB2  6A23               	clrf	(??___ftmul+2)& (0+255),c
  2024  000AB4  0100               	movlb	0	; () banked
  2025  000AB6  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2026  000AB8  3621               	rlcf	??___ftmul& (0+255),f,c
  2027  000ABA  E301               	bnc	u1801
  2028  000ABC  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  2029  000ABE                     u1801:
  2030  000ABE  5021               	movf	??___ftmul,w,c
  2031  000AC0  6E24               	movwf	___ftmul@exp,c
  2032  000AC2  5024               	movf	___ftmul@exp,w,c
  2033  000AC4  A4D8               	btfss	status,2,c
  2034  000AC6  D00A               	goto	l2196
  2035                           
  2036                           ; BSR set to: 0
  2037  000AC8  0E00               	movlw	0
  2038  000ACA  0100               	movlb	0	; () banked
  2039  000ACC  6F79               	movwf	?___ftmul& (0+255),b
  2040  000ACE  0E00               	movlw	0
  2041  000AD0  0100               	movlb	0	; () banked
  2042  000AD2  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  2043  000AD4  0E00               	movlw	0
  2044  000AD6  0100               	movlb	0	; () banked
  2045  000AD8  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048  000ADA  0012               	return	
  2049  000ADC                     l2196:
  2050                           
  2051                           ; BSR set to: 0
  2052  000ADC  C07E  F021         	movff	___ftmul@f2+2,??___ftmul
  2053  000AE0  6A22               	clrf	(??___ftmul+1)& (0+255),c
  2054  000AE2  6A23               	clrf	(??___ftmul+2)& (0+255),c
  2055  000AE4  0100               	movlb	0	; () banked
  2056  000AE6  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2057  000AE8  3621               	rlcf	??___ftmul& (0+255),f,c
  2058  000AEA  E301               	bnc	u1821
  2059  000AEC  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  2060  000AEE                     u1821:
  2061  000AEE  5021               	movf	??___ftmul,w,c
  2062  000AF0  6E29               	movwf	___ftmul@sign,c
  2063  000AF2  5029               	movf	___ftmul@sign,w,c
  2064  000AF4  A4D8               	btfss	status,2,c
  2065  000AF6  D00A               	goto	l2202
  2066                           
  2067                           ; BSR set to: 0
  2068  000AF8  0E00               	movlw	0
  2069  000AFA  0100               	movlb	0	; () banked
  2070  000AFC  6F79               	movwf	?___ftmul& (0+255),b
  2071  000AFE  0E00               	movlw	0
  2072  000B00  0100               	movlb	0	; () banked
  2073  000B02  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  2074  000B04  0E00               	movlw	0
  2075  000B06  0100               	movlb	0	; () banked
  2076  000B08  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  2077                           
  2078                           ; BSR set to: 0
  2079  000B0A  0012               	return	
  2080  000B0C                     l2202:
  2081                           
  2082                           ; BSR set to: 0
  2083  000B0C  5029               	movf	___ftmul@sign,w,c
  2084  000B0E  0F7B               	addlw	123
  2085  000B10  2624               	addwf	___ftmul@exp,f,c
  2086                           
  2087                           ; BSR set to: 0
  2088  000B12  C07B  F029         	movff	___ftmul@f1+2,___ftmul@sign
  2089  000B16  0100               	movlb	0	; () banked
  2090  000B18  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2091  000B1A  1A29               	xorwf	___ftmul@sign,f,c
  2092  000B1C  0E80               	movlw	128
  2093  000B1E  1629               	andwf	___ftmul@sign,f,c
  2094                           
  2095                           ; BSR set to: 0
  2096  000B20  0100               	movlb	0	; () banked
  2097  000B22  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2098                           
  2099                           ; BSR set to: 0
  2100  000B24  0100               	movlb	0	; () banked
  2101  000B26  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2102                           
  2103                           ; BSR set to: 0
  2104  000B28  0EFF               	movlw	255
  2105  000B2A  0100               	movlb	0	; () banked
  2106  000B2C  177C               	andwf	___ftmul@f2& (0+255),f,b
  2107  000B2E  0EFF               	movlw	255
  2108  000B30  0100               	movlb	0	; () banked
  2109  000B32  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2110  000B34  0E00               	movlw	0
  2111  000B36  0100               	movlb	0	; () banked
  2112  000B38  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2113                           
  2114                           ; BSR set to: 0
  2115  000B3A  0E00               	movlw	0
  2116  000B3C  6E25               	movwf	___ftmul@f3_as_product,c
  2117  000B3E  0E00               	movlw	0
  2118  000B40  6E26               	movwf	___ftmul@f3_as_product+1,c
  2119  000B42  0E00               	movlw	0
  2120  000B44  6E27               	movwf	___ftmul@f3_as_product+2,c
  2121                           
  2122                           ; BSR set to: 0
  2123  000B46  0E07               	movlw	7
  2124  000B48  6E28               	movwf	___ftmul@cntr,c
  2125  000B4A  D000               	goto	l2216
  2126  000B4C                     l2216:
  2127                           
  2128                           ; BSR set to: 0
  2129  000B4C  0100               	movlb	0	; () banked
  2130  000B4E  A179               	btfss	___ftmul@f1& (0+255),0,b
  2131  000B50  D00A               	goto	l2220
  2132                           
  2133                           ; BSR set to: 0
  2134  000B52  0100               	movlb	0	; () banked
  2135  000B54  517C               	movf	___ftmul@f2& (0+255),w,b
  2136  000B56  2625               	addwf	___ftmul@f3_as_product,f,c
  2137  000B58  0100               	movlb	0	; () banked
  2138  000B5A  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2139  000B5C  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  2140  000B5E  0100               	movlb	0	; () banked
  2141  000B60  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2142  000B62  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  2143  000B64  D000               	goto	l2220
  2144  000B66                     l2220:
  2145                           
  2146                           ; BSR set to: 0
  2147  000B66  0100               	movlb	0	; () banked
  2148  000B68  90D8               	bcf	status,0,c
  2149  000B6A  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2150  000B6C  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2151  000B6E  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2152  000B70  0100               	movlb	0	; () banked
  2153  000B72  90D8               	bcf	status,0,c
  2154  000B74  377C               	rlcf	___ftmul@f2& (0+255),f,b
  2155  000B76  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2156  000B78  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2157                           
  2158                           ; BSR set to: 0
  2159  000B7A  2E28               	decfsz	___ftmul@cntr,f,c
  2160  000B7C  D7E7               	goto	l2216
  2161  000B7E  D000               	goto	l2224
  2162  000B80                     l2224:
  2163                           
  2164                           ; BSR set to: 0
  2165  000B80  0E09               	movlw	9
  2166  000B82  6E28               	movwf	___ftmul@cntr,c
  2167  000B84  D000               	goto	l2226
  2168  000B86                     l2226:
  2169                           
  2170                           ; BSR set to: 0
  2171  000B86  0100               	movlb	0	; () banked
  2172  000B88  A179               	btfss	___ftmul@f1& (0+255),0,b
  2173  000B8A  D00A               	goto	l2230
  2174                           
  2175                           ; BSR set to: 0
  2176  000B8C  0100               	movlb	0	; () banked
  2177  000B8E  517C               	movf	___ftmul@f2& (0+255),w,b
  2178  000B90  2625               	addwf	___ftmul@f3_as_product,f,c
  2179  000B92  0100               	movlb	0	; () banked
  2180  000B94  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2181  000B96  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  2182  000B98  0100               	movlb	0	; () banked
  2183  000B9A  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2184  000B9C  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  2185  000B9E  D000               	goto	l2230
  2186  000BA0                     l2230:
  2187                           
  2188                           ; BSR set to: 0
  2189  000BA0  0100               	movlb	0	; () banked
  2190  000BA2  90D8               	bcf	status,0,c
  2191  000BA4  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2192  000BA6  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2193  000BA8  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2194  000BAA  90D8               	bcf	status,0,c
  2195  000BAC  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  2196  000BAE  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  2197  000BB0  3225               	rrcf	___ftmul@f3_as_product,f,c
  2198                           
  2199                           ; BSR set to: 0
  2200  000BB2  2E28               	decfsz	___ftmul@cntr,f,c
  2201  000BB4  D7E8               	goto	l2226
  2202  000BB6  D000               	goto	l2234
  2203  000BB8                     l2234:
  2204                           
  2205                           ; BSR set to: 0
  2206  000BB8  C025  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  2207  000BBC  C026  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2208  000BC0  C027  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2209  000BC4  C024  F074         	movff	___ftmul@exp,___ftpack@exp
  2210  000BC8  C029  F075         	movff	___ftmul@sign,___ftpack@sign
  2211  000BCC  ECF0  F005         	call	___ftpack	;wreg free
  2212  000BD0  C071  F079         	movff	?___ftpack,?___ftmul
  2213  000BD4  C072  F07A         	movff	?___ftpack+1,?___ftmul+1
  2214  000BD8  C073  F07B         	movff	?___ftpack+2,?___ftmul+2
  2215  000BDC  0012               	return	
  2216  000BDE  0012               	return		;funcret
  2217  000BE0                     __end_of___ftmul:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           postinc0	equ	0xFEE
  2221                           wreg	equ	0xFE8
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function ___ftdiv *****************
  2225 ;; Defined at:
  2226 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  f1              3   31[BANK0 ] float 
  2229 ;;  f2              3   34[BANK0 ] float 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  f3              3   38[BANK0 ] float 
  2232 ;;  sign            1   42[BANK0 ] unsigned char 
  2233 ;;  exp             1   41[BANK0 ] unsigned char 
  2234 ;;  cntr            1   37[BANK0 ] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  3   31[BANK0 ] float 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2244 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;Total ram usage:       15 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    5
  2251 ;; This function calls:
  2252 ;;		___ftpack
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;;		_strobe
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text8
  2260  000966                     __ptext8:
  2261                           	opt stack 0
  2262  000966                     ___ftdiv:
  2263                           	opt stack 24
  2264                           
  2265                           ;incstack = 0
  2266  000966  C081  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  2267  00096A  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  2268  00096C  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  2269  00096E  0100               	movlb	0	; () banked
  2270  000970  3580               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2271  000972  362A               	rlcf	??___ftdiv& (0+255),f,c
  2272  000974  E301               	bnc	u1751
  2273  000976  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  2274  000978                     u1751:
  2275  000978  502A               	movf	??___ftdiv,w,c
  2276  00097A  0100               	movlb	0	; () banked
  2277  00097C  6F89               	movwf	___ftdiv@exp& (0+255),b
  2278  00097E  0100               	movlb	0	; () banked
  2279  000980  5189               	movf	___ftdiv@exp& (0+255),w,b
  2280  000982  A4D8               	btfss	status,2,c
  2281  000984  D00A               	goto	l2150
  2282                           
  2283                           ; BSR set to: 0
  2284  000986  0E00               	movlw	0
  2285  000988  0100               	movlb	0	; () banked
  2286  00098A  6F7F               	movwf	?___ftdiv& (0+255),b
  2287  00098C  0E00               	movlw	0
  2288  00098E  0100               	movlb	0	; () banked
  2289  000990  6F80               	movwf	(?___ftdiv+1)& (0+255),b
  2290  000992  0E00               	movlw	0
  2291  000994  0100               	movlb	0	; () banked
  2292  000996  6F81               	movwf	(?___ftdiv+2)& (0+255),b
  2293                           
  2294                           ; BSR set to: 0
  2295  000998  0012               	return	
  2296  00099A                     l2150:
  2297                           
  2298                           ; BSR set to: 0
  2299  00099A  C084  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  2300  00099E  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  2301  0009A0  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  2302  0009A2  0100               	movlb	0	; () banked
  2303  0009A4  3583               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2304  0009A6  362A               	rlcf	??___ftdiv& (0+255),f,c
  2305  0009A8  E301               	bnc	u1771
  2306  0009AA  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  2307  0009AC                     u1771:
  2308  0009AC  502A               	movf	??___ftdiv,w,c
  2309  0009AE  0100               	movlb	0	; () banked
  2310  0009B0  6F8A               	movwf	___ftdiv@sign& (0+255),b
  2311  0009B2  0100               	movlb	0	; () banked
  2312  0009B4  518A               	movf	___ftdiv@sign& (0+255),w,b
  2313  0009B6  A4D8               	btfss	status,2,c
  2314  0009B8  D00A               	goto	l2156
  2315                           
  2316                           ; BSR set to: 0
  2317  0009BA  0E00               	movlw	0
  2318  0009BC  0100               	movlb	0	; () banked
  2319  0009BE  6F7F               	movwf	?___ftdiv& (0+255),b
  2320  0009C0  0E00               	movlw	0
  2321  0009C2  0100               	movlb	0	; () banked
  2322  0009C4  6F80               	movwf	(?___ftdiv+1)& (0+255),b
  2323  0009C6  0E00               	movlw	0
  2324  0009C8  0100               	movlb	0	; () banked
  2325  0009CA  6F81               	movwf	(?___ftdiv+2)& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328  0009CC  0012               	return	
  2329  0009CE                     l2156:
  2330                           
  2331                           ; BSR set to: 0
  2332  0009CE  0E00               	movlw	0
  2333  0009D0  0100               	movlb	0	; () banked
  2334  0009D2  6F86               	movwf	___ftdiv@f3& (0+255),b
  2335  0009D4  0E00               	movlw	0
  2336  0009D6  0100               	movlb	0	; () banked
  2337  0009D8  6F87               	movwf	(___ftdiv@f3+1)& (0+255),b
  2338  0009DA  0E00               	movlw	0
  2339  0009DC  0100               	movlb	0	; () banked
  2340  0009DE  6F88               	movwf	(___ftdiv@f3+2)& (0+255),b
  2341                           
  2342                           ; BSR set to: 0
  2343  0009E0  0100               	movlb	0	; () banked
  2344  0009E2  518A               	movf	___ftdiv@sign& (0+255),w,b
  2345  0009E4  0F89               	addlw	137
  2346  0009E6  0100               	movlb	0	; () banked
  2347  0009E8  5F89               	subwf	___ftdiv@exp& (0+255),f,b
  2348                           
  2349                           ; BSR set to: 0
  2350  0009EA  C081  F08A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2351                           
  2352                           ; BSR set to: 0
  2353  0009EE  0100               	movlb	0	; () banked
  2354  0009F0  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2355  0009F2  0100               	movlb	0	; () banked
  2356  0009F4  1B8A               	xorwf	___ftdiv@sign& (0+255),f,b
  2357                           
  2358                           ; BSR set to: 0
  2359  0009F6  0E80               	movlw	128
  2360  0009F8  0100               	movlb	0	; () banked
  2361  0009FA  178A               	andwf	___ftdiv@sign& (0+255),f,b
  2362                           
  2363                           ; BSR set to: 0
  2364  0009FC  0100               	movlb	0	; () banked
  2365  0009FE  8F80               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2366                           
  2367                           ; BSR set to: 0
  2368  000A00  0EFF               	movlw	255
  2369  000A02  0100               	movlb	0	; () banked
  2370  000A04  177F               	andwf	___ftdiv@f1& (0+255),f,b
  2371  000A06  0EFF               	movlw	255
  2372  000A08  0100               	movlb	0	; () banked
  2373  000A0A  1780               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2374  000A0C  0E00               	movlw	0
  2375  000A0E  0100               	movlb	0	; () banked
  2376  000A10  1781               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2377                           
  2378                           ; BSR set to: 0
  2379  000A12  0100               	movlb	0	; () banked
  2380  000A14  8F83               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2381                           
  2382                           ; BSR set to: 0
  2383  000A16  0EFF               	movlw	255
  2384  000A18  0100               	movlb	0	; () banked
  2385  000A1A  1782               	andwf	___ftdiv@f2& (0+255),f,b
  2386  000A1C  0EFF               	movlw	255
  2387  000A1E  0100               	movlb	0	; () banked
  2388  000A20  1783               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2389  000A22  0E00               	movlw	0
  2390  000A24  0100               	movlb	0	; () banked
  2391  000A26  1784               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2392                           
  2393                           ; BSR set to: 0
  2394  000A28  0E18               	movlw	24
  2395  000A2A  0100               	movlb	0	; () banked
  2396  000A2C  6F85               	movwf	___ftdiv@cntr& (0+255),b
  2397  000A2E  D000               	goto	l2176
  2398  000A30                     l2176:
  2399                           
  2400                           ; BSR set to: 0
  2401  000A30  0100               	movlb	0	; () banked
  2402  000A32  90D8               	bcf	status,0,c
  2403  000A34  3786               	rlcf	___ftdiv@f3& (0+255),f,b
  2404  000A36  3787               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2405  000A38  3788               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2406                           
  2407                           ; BSR set to: 0
  2408  000A3A  0100               	movlb	0	; () banked
  2409  000A3C  5182               	movf	___ftdiv@f2& (0+255),w,b
  2410  000A3E  0100               	movlb	0	; () banked
  2411  000A40  5D7F               	subwf	___ftdiv@f1& (0+255),w,b
  2412  000A42  0100               	movlb	0	; () banked
  2413  000A44  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2414  000A46  0100               	movlb	0	; () banked
  2415  000A48  5980               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2416  000A4A  0100               	movlb	0	; () banked
  2417  000A4C  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2418  000A4E  0100               	movlb	0	; () banked
  2419  000A50  5981               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2420  000A52  A0D8               	btfss	status,0,c
  2421  000A54  D00E               	goto	l713
  2422                           
  2423                           ; BSR set to: 0
  2424  000A56  0100               	movlb	0	; () banked
  2425  000A58  5182               	movf	___ftdiv@f2& (0+255),w,b
  2426  000A5A  0100               	movlb	0	; () banked
  2427  000A5C  5F7F               	subwf	___ftdiv@f1& (0+255),f,b
  2428  000A5E  0100               	movlb	0	; () banked
  2429  000A60  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2430  000A62  0100               	movlb	0	; () banked
  2431  000A64  5B80               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2432  000A66  0100               	movlb	0	; () banked
  2433  000A68  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2434  000A6A  0100               	movlb	0	; () banked
  2435  000A6C  5B81               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2436                           
  2437                           ; BSR set to: 0
  2438  000A6E  0100               	movlb	0	; () banked
  2439  000A70  8186               	bsf	___ftdiv@f3& (0+255),0,b
  2440  000A72                     l713:
  2441                           
  2442                           ; BSR set to: 0
  2443  000A72  0100               	movlb	0	; () banked
  2444  000A74  90D8               	bcf	status,0,c
  2445  000A76  377F               	rlcf	___ftdiv@f1& (0+255),f,b
  2446  000A78  3780               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2447  000A7A  3781               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2448                           
  2449                           ; BSR set to: 0
  2450  000A7C  0100               	movlb	0	; () banked
  2451  000A7E  2F85               	decfsz	___ftdiv@cntr& (0+255),f,b
  2452  000A80  D7D7               	goto	l2176
  2453  000A82  D000               	goto	l2186
  2454  000A84                     l2186:
  2455                           
  2456                           ; BSR set to: 0
  2457  000A84  C086  F071         	movff	___ftdiv@f3,___ftpack@arg
  2458  000A88  C087  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2459  000A8C  C088  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2460  000A90  C089  F074         	movff	___ftdiv@exp,___ftpack@exp
  2461  000A94  C08A  F075         	movff	___ftdiv@sign,___ftpack@sign
  2462  000A98  ECF0  F005         	call	___ftpack	;wreg free
  2463  000A9C  C071  F07F         	movff	?___ftpack,?___ftdiv
  2464  000AA0  C072  F080         	movff	?___ftpack+1,?___ftdiv+1
  2465  000AA4  C073  F081         	movff	?___ftpack+2,?___ftdiv+2
  2466  000AA8  0012               	return	
  2467  000AAA  0012               	return		;funcret
  2468  000AAC                     __end_of___ftdiv:
  2469                           	opt stack 0
  2470                           tblptru	equ	0xFF8
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function ___ftpack *****************
  2476 ;; Defined at:
  2477 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  arg             3   17[BANK0 ] unsigned um
  2480 ;;  exp             1   20[BANK0 ] unsigned char 
  2481 ;;  sign            1   21[BANK0 ] unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  3   17[BANK0 ] float 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2493 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;Total ram usage:        8 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    4
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		___ftdiv
  2504 ;;		___ftmul
  2505 ;;		___lwtoft
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text9
  2510  000BE0                     __ptext9:
  2511                           	opt stack 0
  2512  000BE0                     ___ftpack:
  2513                           	opt stack 24
  2514                           
  2515                           ;incstack = 0
  2516  000BE0  0100               	movlb	0	; () banked
  2517  000BE2  5174               	movf	___ftpack@exp& (0+255),w,b
  2518  000BE4  0100               	movlb	0	; () banked
  2519  000BE6  B4D8               	btfsc	status,2,c
  2520  000BE8  D008               	goto	l2110
  2521                           
  2522                           ; BSR set to: 0
  2523  000BEA  0100               	movlb	0	; () banked
  2524  000BEC  5171               	movf	___ftpack@arg& (0+255),w,b
  2525  000BEE  0100               	movlb	0	; () banked
  2526  000BF0  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2527  000BF2  0100               	movlb	0	; () banked
  2528  000BF4  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2529  000BF6  A4D8               	btfss	status,2,c
  2530  000BF8  D013               	goto	l2116
  2531  000BFA                     l2110:
  2532                           
  2533                           ; BSR set to: 0
  2534  000BFA  0E00               	movlw	0
  2535  000BFC  0100               	movlb	0	; () banked
  2536  000BFE  6F71               	movwf	?___ftpack& (0+255),b
  2537  000C00  0E00               	movlw	0
  2538  000C02  0100               	movlb	0	; () banked
  2539  000C04  6F72               	movwf	(?___ftpack+1)& (0+255),b
  2540  000C06  0E00               	movlw	0
  2541  000C08  0100               	movlb	0	; () banked
  2542  000C0A  6F73               	movwf	(?___ftpack+2)& (0+255),b
  2543                           
  2544                           ; BSR set to: 0
  2545  000C0C  0012               	return	
  2546                           
  2547                           ; BSR set to: 0
  2548  000C0E  D008               	goto	l2116
  2549  000C10                     l2114:
  2550                           
  2551                           ; BSR set to: 0
  2552  000C10  0100               	movlb	0	; () banked
  2553  000C12  2B74               	incf	___ftpack@exp& (0+255),f,b
  2554  000C14  0100               	movlb	0	; () banked
  2555  000C16  90D8               	bcf	status,0,c
  2556  000C18  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2557  000C1A  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2558  000C1C  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2559  000C1E  D000               	goto	l2116
  2560  000C20                     l2116:
  2561                           
  2562                           ; BSR set to: 0
  2563  000C20  0E00               	movlw	0
  2564  000C22  0100               	movlb	0	; () banked
  2565  000C24  1571               	andwf	___ftpack@arg& (0+255),w,b
  2566  000C26  6E1E               	movwf	??___ftpack& (0+255),c
  2567  000C28  0E00               	movlw	0
  2568  000C2A  0100               	movlb	0	; () banked
  2569  000C2C  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2570  000C2E  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2571  000C30  0EFE               	movlw	254
  2572  000C32  0100               	movlb	0	; () banked
  2573  000C34  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2574  000C36  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2575  000C38  501E               	movf	??___ftpack,w,c
  2576  000C3A  101F               	iorwf	??___ftpack+1,w,c
  2577  000C3C  1020               	iorwf	??___ftpack+2,w,c
  2578  000C3E  B4D8               	btfsc	status,2,c
  2579  000C40  D013               	goto	l2122
  2580  000C42  D7E6               	goto	l2114
  2581                           
  2582                           ; BSR set to: 0
  2583  000C44  D011               	goto	l2122
  2584  000C46                     l2118:
  2585                           
  2586                           ; BSR set to: 0
  2587  000C46  0100               	movlb	0	; () banked
  2588  000C48  2B74               	incf	___ftpack@exp& (0+255),f,b
  2589                           
  2590                           ; BSR set to: 0
  2591  000C4A  0E01               	movlw	1
  2592  000C4C  0100               	movlb	0	; () banked
  2593  000C4E  2771               	addwf	___ftpack@arg& (0+255),f,b
  2594  000C50  0E00               	movlw	0
  2595  000C52  0100               	movlb	0	; () banked
  2596  000C54  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2597  000C56  0E00               	movlw	0
  2598  000C58  0100               	movlb	0	; () banked
  2599  000C5A  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2600  000C5C  0100               	movlb	0	; () banked
  2601  000C5E  90D8               	bcf	status,0,c
  2602  000C60  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2603  000C62  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2604  000C64  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2605  000C66  D000               	goto	l2122
  2606  000C68                     l2122:
  2607                           
  2608                           ; BSR set to: 0
  2609  000C68  0E00               	movlw	0
  2610  000C6A  0100               	movlb	0	; () banked
  2611  000C6C  1571               	andwf	___ftpack@arg& (0+255),w,b
  2612  000C6E  6E1E               	movwf	??___ftpack& (0+255),c
  2613  000C70  0E00               	movlw	0
  2614  000C72  0100               	movlb	0	; () banked
  2615  000C74  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2616  000C76  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2617  000C78  0EFF               	movlw	255
  2618  000C7A  0100               	movlb	0	; () banked
  2619  000C7C  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2620  000C7E  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2621  000C80  501E               	movf	??___ftpack,w,c
  2622  000C82  101F               	iorwf	??___ftpack+1,w,c
  2623  000C84  1020               	iorwf	??___ftpack+2,w,c
  2624  000C86  B4D8               	btfsc	status,2,c
  2625  000C88  D00A               	goto	l2126
  2626  000C8A  D7DD               	goto	l2118
  2627                           
  2628                           ; BSR set to: 0
  2629  000C8C  D008               	goto	l2126
  2630  000C8E                     l2124:
  2631                           
  2632                           ; BSR set to: 0
  2633  000C8E  0100               	movlb	0	; () banked
  2634  000C90  0774               	decf	___ftpack@exp& (0+255),f,b
  2635  000C92  0100               	movlb	0	; () banked
  2636  000C94  90D8               	bcf	status,0,c
  2637  000C96  3771               	rlcf	___ftpack@arg& (0+255),f,b
  2638  000C98  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2639  000C9A  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2640  000C9C  D000               	goto	l2126
  2641  000C9E                     l2126:
  2642                           
  2643                           ; BSR set to: 0
  2644  000C9E  0100               	movlb	0	; () banked
  2645  000CA0  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2646  000CA2  D005               	goto	l649
  2647                           
  2648                           ; BSR set to: 0
  2649  000CA4  0E02               	movlw	2
  2650  000CA6  0100               	movlb	0	; () banked
  2651  000CA8  6174               	cpfslt	___ftpack@exp& (0+255),b
  2652  000CAA  D7F1               	goto	l2124
  2653  000CAC  D000               	goto	l649
  2654  000CAE                     l649:
  2655                           
  2656                           ; BSR set to: 0
  2657  000CAE  0100               	movlb	0	; () banked
  2658  000CB0  B174               	btfsc	___ftpack@exp& (0+255),0,b
  2659  000CB2  D003               	goto	l2132
  2660                           
  2661                           ; BSR set to: 0
  2662  000CB4  0100               	movlb	0	; () banked
  2663  000CB6  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2664  000CB8  D000               	goto	l2132
  2665  000CBA                     l2132:
  2666                           
  2667                           ; BSR set to: 0
  2668  000CBA  0100               	movlb	0	; () banked
  2669  000CBC  90D8               	bcf	status,0,c
  2670  000CBE  3374               	rrcf	___ftpack@exp& (0+255),f,b
  2671  000CC0  0100               	movlb	0	; () banked
  2672  000CC2  5174               	movf	___ftpack@exp& (0+255),w,b
  2673  000CC4  0100               	movlb	0	; () banked
  2674  000CC6  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2675                           
  2676                           ; BSR set to: 0
  2677  000CC8  0100               	movlb	0	; () banked
  2678  000CCA  5175               	movf	___ftpack@sign& (0+255),w,b
  2679  000CCC  0100               	movlb	0	; () banked
  2680  000CCE  B4D8               	btfsc	status,2,c
  2681  000CD0  D003               	goto	l2138
  2682                           
  2683                           ; BSR set to: 0
  2684  000CD2  0100               	movlb	0	; () banked
  2685  000CD4  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2686  000CD6  D000               	goto	l2138
  2687  000CD8                     l2138:
  2688                           
  2689                           ; BSR set to: 0
  2690  000CD8  C071  F071         	movff	___ftpack@arg,?___ftpack
  2691  000CDC  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
  2692  000CE0  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
  2693  000CE4  0012               	return	
  2694                           
  2695                           ; BSR set to: 0
  2696                           
  2697                           ; BSR set to: 0
  2698  000CE6  0012               	return		;funcret
  2699  000CE8                     __end_of___ftpack:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function ___almod *****************
  2707 ;; Defined at:
  2708 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/almod.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  dividend        4   58[BANK0 ] long 
  2711 ;;  divisor         4   62[BANK0 ] long 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  sign            1   67[BANK0 ] unsigned char 
  2714 ;;  counter         1   66[BANK0 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  4   58[BANK0 ] long 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2724 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;Total ram usage:       10 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    4
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_strobe
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text10
  2739  000DF0                     __ptext10:
  2740                           	opt stack 0
  2741  000DF0                     ___almod:
  2742                           	opt stack 25
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;incstack = 0
  2746  000DF0  0E00               	movlw	0
  2747  000DF2  0100               	movlb	0	; () banked
  2748  000DF4  6FA3               	movwf	___almod@sign& (0+255),b
  2749                           
  2750                           ; BSR set to: 0
  2751  000DF6  0100               	movlb	0	; () banked
  2752  000DF8  AF9D               	btfss	(___almod@dividend+3)& (0+255),7,b
  2753  000DFA  D00D               	goto	l1666
  2754                           
  2755                           ; BSR set to: 0
  2756  000DFC  0100               	movlb	0	; () banked
  2757  000DFE  1F9D               	comf	(___almod@dividend+3)& (0+255),f,b
  2758  000E00  1F9C               	comf	(___almod@dividend+2)& (0+255),f,b
  2759  000E02  1F9B               	comf	(___almod@dividend+1)& (0+255),f,b
  2760  000E04  6D9A               	negf	___almod@dividend& (0+255),b
  2761  000E06  0E00               	movlw	0
  2762  000E08  239B               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2763  000E0A  239C               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2764  000E0C  239D               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2765                           
  2766                           ; BSR set to: 0
  2767  000E0E  0E01               	movlw	1
  2768  000E10  0100               	movlb	0	; () banked
  2769  000E12  6FA3               	movwf	___almod@sign& (0+255),b
  2770  000E14  D000               	goto	l1666
  2771  000E16                     l1666:
  2772                           
  2773                           ; BSR set to: 0
  2774  000E16  0100               	movlb	0	; () banked
  2775  000E18  AFA1               	btfss	(___almod@divisor+3)& (0+255),7,b
  2776  000E1A  D00A               	goto	l1670
  2777                           
  2778                           ; BSR set to: 0
  2779  000E1C  0100               	movlb	0	; () banked
  2780  000E1E  1FA1               	comf	(___almod@divisor+3)& (0+255),f,b
  2781  000E20  1FA0               	comf	(___almod@divisor+2)& (0+255),f,b
  2782  000E22  1F9F               	comf	(___almod@divisor+1)& (0+255),f,b
  2783  000E24  6D9E               	negf	___almod@divisor& (0+255),b
  2784  000E26  0E00               	movlw	0
  2785  000E28  239F               	addwfc	(___almod@divisor+1)& (0+255),f,b
  2786  000E2A  23A0               	addwfc	(___almod@divisor+2)& (0+255),f,b
  2787  000E2C  23A1               	addwfc	(___almod@divisor+3)& (0+255),f,b
  2788  000E2E  D000               	goto	l1670
  2789  000E30                     l1670:
  2790                           
  2791                           ; BSR set to: 0
  2792  000E30  0100               	movlb	0	; () banked
  2793  000E32  519E               	movf	___almod@divisor& (0+255),w,b
  2794  000E34  0100               	movlb	0	; () banked
  2795  000E36  119F               	iorwf	(___almod@divisor+1)& (0+255),w,b
  2796  000E38  0100               	movlb	0	; () banked
  2797  000E3A  11A0               	iorwf	(___almod@divisor+2)& (0+255),w,b
  2798  000E3C  0100               	movlb	0	; () banked
  2799  000E3E  11A1               	iorwf	(___almod@divisor+3)& (0+255),w,b
  2800  000E40  B4D8               	btfsc	status,2,c
  2801  000E42  D03F               	goto	l1686
  2802                           
  2803                           ; BSR set to: 0
  2804  000E44  0E01               	movlw	1
  2805  000E46  0100               	movlb	0	; () banked
  2806  000E48  6FA2               	movwf	___almod@counter& (0+255),b
  2807  000E4A  D009               	goto	l1676
  2808  000E4C                     l1674:
  2809                           
  2810                           ; BSR set to: 0
  2811  000E4C  0100               	movlb	0	; () banked
  2812  000E4E  90D8               	bcf	status,0,c
  2813  000E50  379E               	rlcf	___almod@divisor& (0+255),f,b
  2814  000E52  379F               	rlcf	(___almod@divisor+1)& (0+255),f,b
  2815  000E54  37A0               	rlcf	(___almod@divisor+2)& (0+255),f,b
  2816  000E56  37A1               	rlcf	(___almod@divisor+3)& (0+255),f,b
  2817  000E58  0100               	movlb	0	; () banked
  2818  000E5A  2BA2               	incf	___almod@counter& (0+255),f,b
  2819  000E5C  D000               	goto	l1676
  2820  000E5E                     l1676:
  2821                           
  2822                           ; BSR set to: 0
  2823  000E5E  0100               	movlb	0	; () banked
  2824  000E60  BFA1               	btfsc	(___almod@divisor+3)& (0+255),7,b
  2825  000E62  D002               	goto	l1678
  2826  000E64  D7F3               	goto	l1674
  2827                           
  2828                           ; BSR set to: 0
  2829  000E66  D000               	goto	l1678
  2830  000E68                     l1678:
  2831                           
  2832                           ; BSR set to: 0
  2833  000E68  0100               	movlb	0	; () banked
  2834  000E6A  519E               	movf	___almod@divisor& (0+255),w,b
  2835  000E6C  0100               	movlb	0	; () banked
  2836  000E6E  5D9A               	subwf	___almod@dividend& (0+255),w,b
  2837  000E70  0100               	movlb	0	; () banked
  2838  000E72  519F               	movf	(___almod@divisor+1)& (0+255),w,b
  2839  000E74  0100               	movlb	0	; () banked
  2840  000E76  599B               	subwfb	(___almod@dividend+1)& (0+255),w,b
  2841  000E78  0100               	movlb	0	; () banked
  2842  000E7A  51A0               	movf	(___almod@divisor+2)& (0+255),w,b
  2843  000E7C  0100               	movlb	0	; () banked
  2844  000E7E  599C               	subwfb	(___almod@dividend+2)& (0+255),w,b
  2845  000E80  0100               	movlb	0	; () banked
  2846  000E82  51A1               	movf	(___almod@divisor+3)& (0+255),w,b
  2847  000E84  0100               	movlb	0	; () banked
  2848  000E86  599D               	subwfb	(___almod@dividend+3)& (0+255),w,b
  2849  000E88  A0D8               	btfss	status,0,c
  2850  000E8A  D011               	goto	l1682
  2851                           
  2852                           ; BSR set to: 0
  2853  000E8C  0100               	movlb	0	; () banked
  2854  000E8E  519E               	movf	___almod@divisor& (0+255),w,b
  2855  000E90  0100               	movlb	0	; () banked
  2856  000E92  5F9A               	subwf	___almod@dividend& (0+255),f,b
  2857  000E94  0100               	movlb	0	; () banked
  2858  000E96  519F               	movf	(___almod@divisor+1)& (0+255),w,b
  2859  000E98  0100               	movlb	0	; () banked
  2860  000E9A  5B9B               	subwfb	(___almod@dividend+1)& (0+255),f,b
  2861  000E9C  0100               	movlb	0	; () banked
  2862  000E9E  51A0               	movf	(___almod@divisor+2)& (0+255),w,b
  2863  000EA0  0100               	movlb	0	; () banked
  2864  000EA2  5B9C               	subwfb	(___almod@dividend+2)& (0+255),f,b
  2865  000EA4  0100               	movlb	0	; () banked
  2866  000EA6  51A1               	movf	(___almod@divisor+3)& (0+255),w,b
  2867  000EA8  0100               	movlb	0	; () banked
  2868  000EAA  5B9D               	subwfb	(___almod@dividend+3)& (0+255),f,b
  2869  000EAC  D000               	goto	l1682
  2870  000EAE                     l1682:
  2871                           
  2872                           ; BSR set to: 0
  2873  000EAE  0100               	movlb	0	; () banked
  2874  000EB0  90D8               	bcf	status,0,c
  2875  000EB2  33A1               	rrcf	(___almod@divisor+3)& (0+255),f,b
  2876  000EB4  33A0               	rrcf	(___almod@divisor+2)& (0+255),f,b
  2877  000EB6  339F               	rrcf	(___almod@divisor+1)& (0+255),f,b
  2878  000EB8  339E               	rrcf	___almod@divisor& (0+255),f,b
  2879                           
  2880                           ; BSR set to: 0
  2881  000EBA  0100               	movlb	0	; () banked
  2882  000EBC  2FA2               	decfsz	___almod@counter& (0+255),f,b
  2883  000EBE  D7D4               	goto	l1678
  2884                           
  2885                           ; BSR set to: 0
  2886  000EC0  D000               	goto	l1686
  2887  000EC2                     l1686:
  2888                           
  2889                           ; BSR set to: 0
  2890  000EC2  0100               	movlb	0	; () banked
  2891  000EC4  51A3               	movf	___almod@sign& (0+255),w,b
  2892  000EC6  0100               	movlb	0	; () banked
  2893  000EC8  B4D8               	btfsc	status,2,c
  2894  000ECA  D00A               	goto	l1690
  2895                           
  2896                           ; BSR set to: 0
  2897  000ECC  0100               	movlb	0	; () banked
  2898  000ECE  1F9D               	comf	(___almod@dividend+3)& (0+255),f,b
  2899  000ED0  1F9C               	comf	(___almod@dividend+2)& (0+255),f,b
  2900  000ED2  1F9B               	comf	(___almod@dividend+1)& (0+255),f,b
  2901  000ED4  6D9A               	negf	___almod@dividend& (0+255),b
  2902  000ED6  0E00               	movlw	0
  2903  000ED8  239B               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2904  000EDA  239C               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2905  000EDC  239D               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2906  000EDE  D000               	goto	l1690
  2907  000EE0                     l1690:
  2908                           
  2909                           ; BSR set to: 0
  2910  000EE0  C09A  F09A         	movff	___almod@dividend,?___almod
  2911  000EE4  C09B  F09B         	movff	___almod@dividend+1,?___almod+1
  2912  000EE8  C09C  F09C         	movff	___almod@dividend+2,?___almod+2
  2913  000EEC  C09D  F09D         	movff	___almod@dividend+3,?___almod+3
  2914  000EF0  0012               	return	
  2915                           
  2916                           ; BSR set to: 0
  2917                           
  2918                           ; BSR set to: 0
  2919  000EF2  0012               	return		;funcret
  2920  000EF4                     __end_of___almod:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _readADC *****************
  2928 ;; Defined at:
  2929 ;;		line 155 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  channel         1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  channel         1   33[COMRAM] unsigned char 
  2934 ;;  tempo           1   34[COMRAM] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2   29[COMRAM] unsigned int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;Total ram usage:        6 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    4
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text11
  2959  001114                     __ptext11:
  2960                           	opt stack 0
  2961  001114                     _readADC:
  2962                           	opt stack 26
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;incstack = 0
  2966                           ;readADC@channel stored from wreg
  2967  001114  6E22               	movwf	readADC@channel,c
  2968                           
  2969                           ;main.c: 157: char tempo=0;
  2970  001116  0E00               	movlw	0
  2971  001118  6E23               	movwf	readADC@tempo,c
  2972                           
  2973                           ;main.c: 158: switch (channel)
  2974  00111A  D008               	goto	l2246
  2975  00111C                     l216:
  2976                           
  2977                           ;main.c: 161: {
  2978                           ;main.c: 162: CHS1=0;
  2979  00111C  96C2               	bcf	4034,3,c	;volatile
  2980  00111E  D004               	goto	L1
  2981  001120                     l218:
  2982                           
  2983                           ;main.c: 167: {
  2984                           ;main.c: 168: CHS1=1;
  2985  001120  86C2               	bsf	4034,3,c	;volatile
  2986                           
  2987                           ;main.c: 169: CHS0=0;
  2988  001122  94C2               	bcf	4034,2,c	;volatile
  2989                           
  2990                           ;main.c: 170: break;
  2991  001124  D00E               	goto	l2248
  2992  001126                     l219:
  2993                           
  2994                           ;main.c: 173: {
  2995                           ;main.c: 174: CHS1=1;
  2996  001126  86C2               	bsf	4034,3,c	;volatile
  2997  001128                     L1:
  2998                           
  2999                           ;main.c: 175: CHS0=1;
  3000  001128  84C2               	bsf	4034,2,c	;volatile
  3001                           
  3002                           ;main.c: 177: }
  3003                           ;main.c: 178: }
  3004                           
  3005                           ;main.c: 176: break;
  3006  00112A  D00B               	goto	l2248
  3007  00112C                     l2246:
  3008  00112C  5022               	movf	readADC@channel,w,c
  3009                           
  3010                           ; Switch size 1, requested type "space"
  3011                           ; Number of cases is 3, Range of values is 1 to 3
  3012                           ; switch strategies available:
  3013                           ; Name         Instructions Cycles
  3014                           ; simple_byte           10     6 (average)
  3015                           ;	Chosen strategy is simple_byte
  3016  00112E  0A01               	xorlw	1	; case 1
  3017  001130  B4D8               	btfsc	status,2,c
  3018  001132  D7F4               	goto	l216
  3019  001134  0A03               	xorlw	3	; case 2
  3020  001136  B4D8               	btfsc	status,2,c
  3021  001138  D7F3               	goto	l218
  3022  00113A  0A01               	xorlw	1	; case 3
  3023  00113C  B4D8               	btfsc	status,2,c
  3024  00113E  D7F3               	goto	l219
  3025  001140  D000               	goto	l2248
  3026  001142                     l2248:
  3027                           
  3028                           ;main.c: 179: for(tempo=0;tempo<100;tempo++);
  3029  001142  0E00               	movlw	0
  3030  001144  6E23               	movwf	readADC@tempo,c
  3031  001146  D002               	goto	l2256
  3032  001148  D004               	goto	l221
  3033  00114A                     l2254:
  3034  00114A  2A23               	incf	readADC@tempo,f,c
  3035  00114C                     l2256:
  3036  00114C  0E63               	movlw	99
  3037  00114E  6423               	cpfsgt	readADC@tempo,c
  3038  001150  D7FC               	goto	l2254
  3039  001152                     l221:
  3040                           
  3041                           ;main.c: 180: GO_nDONE = 1;
  3042  001152  82C2               	bsf	4034,1,c	;volatile
  3043                           
  3044                           ;main.c: 181: while(GO_nDONE);
  3045  001154  D000               	goto	l222
  3046  001156                     l222:
  3047  001156  B2C2               	btfsc	4034,1,c	;volatile
  3048  001158  D7FE               	goto	l222
  3049                           
  3050                           ;main.c: 183: return ((ADRESH<<8)+ADRESL);
  3051  00115A  50C4               	movf	4036,w,c	;volatile
  3052  00115C  6E21               	movwf	(??_readADC+1)& (0+255),c
  3053  00115E  6A20               	clrf	??_readADC& (0+255),c
  3054  001160  50C3               	movf	4035,w,c	;volatile
  3055  001162  2420               	addwf	??_readADC,w,c
  3056  001164  6E1E               	movwf	?_readADC,c
  3057  001166  0E00               	movlw	0
  3058  001168  2021               	addwfc	??_readADC+1,w,c
  3059  00116A  6E1F               	movwf	?_readADC+1,c
  3060  00116C  0012               	return	
  3061  00116E  0012               	return		;funcret
  3062  001170                     __end_of_readADC:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _initialisation *****************
  3070 ;; Defined at:
  3071 ;;		line 3 in file "init.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    5
  3092 ;; This function calls:
  3093 ;;		_initADC
  3094 ;;		_initComms
  3095 ;;		_initPWM
  3096 ;;		_initTimer0
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text12
  3103  001304                     __ptext12:
  3104                           	opt stack 0
  3105  001304                     _initialisation:
  3106                           	opt stack 25
  3107                           
  3108                           ;init.c: 7: initPWM();
  3109                           
  3110                           ;incstack = 0
  3111  001304  ECB8  F008         	call	_initPWM	;wreg free
  3112                           
  3113                           ;init.c: 11: initComms();
  3114  001308  EC30  F009         	call	_initComms	;wreg free
  3115                           
  3116                           ;init.c: 15: initADC();
  3117  00130C  EC69  F009         	call	_initADC	;wreg free
  3118                           
  3119                           ;init.c: 19: initTimer0();
  3120  001310  EC77  F009         	call	_initTimer0	;wreg free
  3121  001314  0012               	return		;funcret
  3122  001316                     __end_of_initialisation:
  3123                           	opt stack 0
  3124                           tblptru	equ	0xFF8
  3125                           postinc0	equ	0xFEE
  3126                           wreg	equ	0xFE8
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _initTimer0 *****************
  3130 ;; Defined at:
  3131 ;;		line 114 in file "init.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		None
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    4
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_initialisation
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text13
  3160  0012EE                     __ptext13:
  3161                           	opt stack 0
  3162  0012EE                     _initTimer0:
  3163                           	opt stack 25
  3164                           
  3165                           ;init.c: 117: T0PS2 = 0;
  3166                           
  3167                           ;incstack = 0
  3168  0012EE  94D5               	bcf	4053,2,c	;volatile
  3169                           
  3170                           ;init.c: 118: T0PS1 = 1;
  3171  0012F0  82D5               	bsf	4053,1,c	;volatile
  3172                           
  3173                           ;init.c: 119: T0PS0 = 0;
  3174  0012F2  90D5               	bcf	4053,0,c	;volatile
  3175                           
  3176                           ;init.c: 120: PSA = 0;
  3177  0012F4  96D5               	bcf	4053,3,c	;volatile
  3178                           
  3179                           ;init.c: 121: T0CS = 0;
  3180  0012F6  9AD5               	bcf	4053,5,c	;volatile
  3181                           
  3182                           ;init.c: 122: T08BIT = 1;
  3183  0012F8  8CD5               	bsf	4053,6,c	;volatile
  3184                           
  3185                           ;init.c: 123: TMR0IP = 0;
  3186  0012FA  94F1               	bcf	intcon2,2,c	;volatile
  3187                           
  3188                           ;init.c: 124: TMR0IE = 1;
  3189  0012FC  8AF2               	bsf	intcon,5,c	;volatile
  3190                           
  3191                           ;init.c: 125: PEIE = 1;
  3192  0012FE  8CF2               	bsf	intcon,6,c	;volatile
  3193                           
  3194                           ;init.c: 126: GIE = 1;
  3195  001300  8EF2               	bsf	intcon,7,c	;volatile
  3196  001302  0012               	return		;funcret
  3197  001304                     __end_of_initTimer0:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           intcon	equ	0xFF2
  3201                           intcon2	equ	0xFF1
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _initPWM *****************
  3207 ;; Defined at:
  3208 ;;		line 24 in file "init.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;		None               void
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    4
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_initialisation
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text14
  3237  001170                     __ptext14:
  3238                           	opt stack 0
  3239  001170                     _initPWM:
  3240                           	opt stack 25
  3241                           
  3242                           ;init.c: 29: PR2=0xFF;
  3243                           
  3244                           ;incstack = 0
  3245  001170  68CB               	setf	4043,c	;volatile
  3246                           
  3247                           ;init.c: 33: CCPR2L=0b00000000;
  3248  001172  0E00               	movlw	0
  3249  001174  010F               	movlb	15	; () banked
  3250  001176  6F51               	movwf	81,b	;volatile
  3251                           
  3252                           ;init.c: 34: CCPR3L=0b00000000;
  3253  001178  0E00               	movlw	0
  3254  00117A  010F               	movlb	15	; () banked
  3255  00117C  6F4E               	movwf	78,b	;volatile
  3256                           
  3257                           ;init.c: 35: CCPR4L=0b00000000;
  3258  00117E  0E00               	movlw	0
  3259  001180  010F               	movlb	15	; () banked
  3260  001182  6F4B               	movwf	75,b	;volatile
  3261                           
  3262                           ; BSR set to: 15
  3263                           ;init.c: 36: DC2B1=0;
  3264  001184  010F               	movlb	15	; () banked
  3265  001186  9B50               	bcf	80,5,b	;volatile
  3266                           
  3267                           ; BSR set to: 15
  3268                           ;init.c: 37: DC2B0=0;
  3269  001188  010F               	movlb	15	; () banked
  3270  00118A  9950               	bcf	80,4,b	;volatile
  3271                           
  3272                           ; BSR set to: 15
  3273                           ;init.c: 38: DC3B1=0;
  3274  00118C  010F               	movlb	15	; () banked
  3275  00118E  9B4D               	bcf	77,5,b	;volatile
  3276                           
  3277                           ; BSR set to: 15
  3278                           ;init.c: 39: DC3B0=0;
  3279  001190  010F               	movlb	15	; () banked
  3280  001192  994D               	bcf	77,4,b	;volatile
  3281                           
  3282                           ; BSR set to: 15
  3283                           ;init.c: 40: DC4B1=0;
  3284  001194  010F               	movlb	15	; () banked
  3285  001196  9B4A               	bcf	74,5,b	;volatile
  3286                           
  3287                           ; BSR set to: 15
  3288                           ;init.c: 41: DC4B0=0;
  3289  001198  010F               	movlb	15	; () banked
  3290  00119A  994A               	bcf	74,4,b	;volatile
  3291                           
  3292                           ; BSR set to: 15
  3293                           ;init.c: 47: TRISC=TRISC & 0b00111011;
  3294  00119C  5094               	movf	3988,w,c	;volatile
  3295  00119E  0B3B               	andlw	59
  3296  0011A0  6E94               	movwf	3988,c	;volatile
  3297                           
  3298                           ; BSR set to: 15
  3299                           ;init.c: 50: T2CKPS1=0;
  3300  0011A2  92CA               	bcf	4042,1,c	;volatile
  3301                           
  3302                           ; BSR set to: 15
  3303                           ;init.c: 51: T2CKPS0=0;
  3304  0011A4  90CA               	bcf	4042,0,c	;volatile
  3305                           
  3306                           ; BSR set to: 15
  3307                           ;init.c: 54: TMR2ON = 1;
  3308  0011A6  84CA               	bsf	4042,2,c	;volatile
  3309                           
  3310                           ; BSR set to: 15
  3311                           ;init.c: 57: CCP2M2=1;
  3312  0011A8  010F               	movlb	15	; () banked
  3313  0011AA  8550               	bsf	80,2,b	;volatile
  3314                           
  3315                           ; BSR set to: 15
  3316                           ;init.c: 58: CCP2M3=1;
  3317  0011AC  010F               	movlb	15	; () banked
  3318  0011AE  8750               	bsf	80,3,b	;volatile
  3319                           
  3320                           ; BSR set to: 15
  3321                           ;init.c: 59: CCP3M2=1;
  3322  0011B0  010F               	movlb	15	; () banked
  3323  0011B2  854D               	bsf	77,2,b	;volatile
  3324                           
  3325                           ; BSR set to: 15
  3326                           ;init.c: 60: CCP3M3=1;
  3327  0011B4  010F               	movlb	15	; () banked
  3328  0011B6  874D               	bsf	77,3,b	;volatile
  3329                           
  3330                           ; BSR set to: 15
  3331                           ;init.c: 61: CCP4M2=1;
  3332  0011B8  010F               	movlb	15	; () banked
  3333  0011BA  854A               	bsf	74,2,b	;volatile
  3334                           
  3335                           ; BSR set to: 15
  3336                           ;init.c: 62: CCP4M3=1;
  3337  0011BC  010F               	movlb	15	; () banked
  3338  0011BE  874A               	bsf	74,3,b	;volatile
  3339                           
  3340                           ; BSR set to: 15
  3341  0011C0  0012               	return		;funcret
  3342  0011C2                     __end_of_initPWM:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           intcon	equ	0xFF2
  3346                           intcon2	equ	0xFF1
  3347                           postinc0	equ	0xFEE
  3348                           wreg	equ	0xFE8
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _initComms *****************
  3352 ;; Defined at:
  3353 ;;		line 66 in file "init.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    4
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_initialisation
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text15
  3382  001260                     __ptext15:
  3383                           	opt stack 0
  3384  001260                     _initComms:
  3385                           	opt stack 25
  3386                           
  3387                           ;init.c: 68: TRISBbits.TRISB7 = 1;
  3388                           
  3389                           ; BSR set to: 15
  3390                           ;incstack = 0
  3391  001260  8E93               	bsf	3987,7,c	;volatile
  3392                           
  3393                           ;init.c: 69: TRISBbits.TRISB6 = 0;
  3394  001262  9C93               	bcf	3987,6,c	;volatile
  3395                           
  3396                           ;init.c: 72: TXSTA2bits.BRGH = 1;
  3397  001264  84BA               	bsf	4026,2,c	;volatile
  3398                           
  3399                           ;init.c: 73: TXSTA2bits.SYNC = 0;
  3400  001266  98BA               	bcf	4026,4,c	;volatile
  3401                           
  3402                           ;init.c: 74: SPBRGH2 = 0;
  3403  001268  0E00               	movlw	0
  3404  00126A  6E7C               	movwf	3964,c	;volatile
  3405                           
  3406                           ;init.c: 75: SPBRG2 = 51;
  3407  00126C  0E33               	movlw	51
  3408  00126E  6E7B               	movwf	3963,c	;volatile
  3409                           
  3410                           ;init.c: 76: BAUDCON2 = 0x08;
  3411  001270  0E08               	movlw	8
  3412  001272  6EB9               	movwf	4025,c	;volatile
  3413                           
  3414                           ;init.c: 80: TXSTA2bits.TXEN = 1;
  3415  001274  8ABA               	bsf	4026,5,c	;volatile
  3416                           
  3417                           ;init.c: 81: RCSTA2bits.CREN = 1;
  3418  001276  88A6               	bsf	4006,4,c	;volatile
  3419                           
  3420                           ;init.c: 82: RCSTA2bits.SPEN = 1;
  3421  001278  8EA6               	bsf	4006,7,c	;volatile
  3422                           
  3423                           ;init.c: 85: RCONbits.IPEN = 1;
  3424  00127A  8ED0               	bsf	4048,7,c	;volatile
  3425                           
  3426                           ;init.c: 86: INTCONbits.GIE = 1;
  3427  00127C  8EF2               	bsf	intcon,7,c	;volatile
  3428                           
  3429                           ;init.c: 87: INTCONbits.PEIE = 1;
  3430  00127E  8CF2               	bsf	intcon,6,c	;volatile
  3431                           
  3432                           ;init.c: 88: PIE3bits.RC2IE = 1;
  3433  001280  8AA3               	bsf	4003,5,c	;volatile
  3434                           
  3435                           ;init.c: 89: PIE3bits.TX2IE = 0;
  3436  001282  98A3               	bcf	4003,4,c	;volatile
  3437                           
  3438                           ;init.c: 91: RC2IF = 0;
  3439  001284  9AA4               	bcf	4004,5,c	;volatile
  3440  001286  0012               	return		;funcret
  3441  001288                     __end_of_initComms:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           intcon	equ	0xFF2
  3445                           intcon2	equ	0xFF1
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _initADC *****************
  3451 ;; Defined at:
  3452 ;;		line 94 in file "init.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;		None               void
  3459 ;; Registers used:
  3460 ;;		None
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    4
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_initialisation
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text16
  3481  0012D2                     __ptext16:
  3482                           	opt stack 0
  3483  0012D2                     _initADC:
  3484                           	opt stack 25
  3485                           
  3486                           ;init.c: 96: TRIGSEL1=0;
  3487                           
  3488                           ;incstack = 0
  3489  0012D2  9EC1               	bcf	4033,7,c	;volatile
  3490                           
  3491                           ;init.c: 97: TRIGSEL0=0;
  3492  0012D4  9CC1               	bcf	4033,6,c	;volatile
  3493                           
  3494                           ;init.c: 99: VCFG1=0;
  3495  0012D6  9AC1               	bcf	4033,5,c	;volatile
  3496                           
  3497                           ;init.c: 100: VCFG0=0;
  3498  0012D8  98C1               	bcf	4033,4,c	;volatile
  3499                           
  3500                           ;init.c: 101: VNCFG=0;
  3501  0012DA  96C1               	bcf	4033,3,c	;volatile
  3502                           
  3503                           ;init.c: 105: ANSEL3=1;
  3504  0012DC  010F               	movlb	15	; () banked
  3505  0012DE  875D               	bsf	93,3,b	;volatile
  3506                           
  3507                           ;init.c: 106: ANSEL2=1;
  3508  0012E0  010F               	movlb	15	; () banked
  3509  0012E2  855D               	bsf	93,2,b	;volatile
  3510                           
  3511                           ;init.c: 107: ANSEL1=1;
  3512  0012E4  010F               	movlb	15	; () banked
  3513  0012E6  835D               	bsf	93,1,b	;volatile
  3514                           
  3515                           ;init.c: 109: ADON=1;
  3516  0012E8  80C2               	bsf	4034,0,c	;volatile
  3517                           
  3518                           ;init.c: 111: CHS0=1;
  3519  0012EA  84C2               	bsf	4034,2,c	;volatile
  3520                           
  3521                           ; BSR set to: 15
  3522  0012EC  0012               	return		;funcret
  3523  0012EE                     __end_of_initADC:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           intcon	equ	0xFF2
  3527                           intcon2	equ	0xFF1
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _changeModeDetect *****************
  3533 ;; Defined at:
  3534 ;;		line 186 in file "main.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  delay           4   29[COMRAM] long 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3549 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;Total ram usage:        4 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    4
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text17
  3563  000CE8                     __ptext17:
  3564                           	opt stack 0
  3565  000CE8                     _changeModeDetect:
  3566                           	opt stack 26
  3567                           
  3568                           ;main.c: 188: long int delay=0;
  3569                           
  3570                           ; BSR set to: 15
  3571                           ;incstack = 0
  3572  000CE8  0E00               	movlw	0
  3573  000CEA  6E1E               	movwf	changeModeDetect@delay,c
  3574  000CEC  0E00               	movlw	0
  3575  000CEE  6E1F               	movwf	changeModeDetect@delay+1,c
  3576  000CF0  0E00               	movlw	0
  3577  000CF2  6E20               	movwf	changeModeDetect@delay+2,c
  3578  000CF4  0E00               	movlw	0
  3579  000CF6  6E21               	movwf	changeModeDetect@delay+3,c
  3580                           
  3581                           ;main.c: 192: static char old_SWITCH1=0;
  3582                           ;main.c: 194: if (RC0==0 && old_SWITCH1==1)
  3583  000CF8  B082               	btfsc	3970,0,c	;volatile
  3584  000CFA  D036               	goto	l2284
  3585  000CFC  0100               	movlb	0	; () banked
  3586  000CFE  05B6               	decf	changeModeDetect@old_SWITCH1& (0+255),w,b
  3587  000D00  A4D8               	btfss	status,2,c
  3588  000D02  D032               	goto	l2284
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 195: {
  3592                           ;main.c: 196: for(delay=0;delay<10000;delay++);
  3593  000D04  0E00               	movlw	0
  3594  000D06  6E1E               	movwf	changeModeDetect@delay,c
  3595  000D08  0E00               	movlw	0
  3596  000D0A  6E1F               	movwf	changeModeDetect@delay+1,c
  3597  000D0C  0E00               	movlw	0
  3598  000D0E  6E20               	movwf	changeModeDetect@delay+2,c
  3599  000D10  0E00               	movlw	0
  3600  000D12  6E21               	movwf	changeModeDetect@delay+3,c
  3601                           
  3602                           ; BSR set to: 0
  3603  000D14  BE21               	btfsc	changeModeDetect@delay+3,7,c
  3604  000D16  D00B               	goto	l2274
  3605  000D18  5021               	movf	changeModeDetect@delay+3,w,c
  3606  000D1A  1020               	iorwf	changeModeDetect@delay+2,w,c
  3607  000D1C  E114               	bnz	l232
  3608  000D1E  0E10               	movlw	16
  3609  000D20  5C1E               	subwf	changeModeDetect@delay,w,c
  3610  000D22  0E27               	movlw	39
  3611  000D24  581F               	subwfb	changeModeDetect@delay+1,w,c
  3612  000D26  B0D8               	btfsc	status,0,c
  3613  000D28  D00E               	goto	l232
  3614  000D2A  D001               	goto	l2274
  3615                           
  3616                           ; BSR set to: 0
  3617  000D2C  D00C               	goto	l232
  3618  000D2E                     l2274:
  3619  000D2E  0E01               	movlw	1
  3620  000D30  261E               	addwf	changeModeDetect@delay,f,c
  3621  000D32  0E00               	movlw	0
  3622  000D34  221F               	addwfc	changeModeDetect@delay+1,f,c
  3623  000D36  2220               	addwfc	changeModeDetect@delay+2,f,c
  3624  000D38  2221               	addwfc	changeModeDetect@delay+3,f,c
  3625  000D3A  BE21               	btfsc	changeModeDetect@delay+3,7,c
  3626  000D3C  D7F8               	goto	l2274
  3627  000D3E  5021               	movf	changeModeDetect@delay+3,w,c
  3628  000D40  1020               	iorwf	changeModeDetect@delay+2,w,c
  3629  000D42  E101               	bnz	u1920
  3630  000D44  D7EC               	goto	L2
  3631  000D46                     u1920:
  3632  000D46                     l232:
  3633                           
  3634                           ;main.c: 197: if (RC0==0 && old_SWITCH1==1)
  3635  000D46  B082               	btfsc	3970,0,c	;volatile
  3636  000D48  D00F               	goto	l2284
  3637  000D4A  0100               	movlb	0	; () banked
  3638  000D4C  05B6               	decf	changeModeDetect@old_SWITCH1& (0+255),w,b
  3639  000D4E  A4D8               	btfss	status,2,c
  3640  000D50  D00B               	goto	l2284
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 198: {
  3644                           ;main.c: 199: if (mode==0)
  3645  000D52  0100               	movlb	0	; () banked
  3646  000D54  51B5               	movf	_mode& (0+255),w,b
  3647  000D56  A4D8               	btfss	status,2,c
  3648  000D58  D004               	goto	l2282
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;main.c: 200: mode=2;
  3652  000D5A  0E02               	movlw	2
  3653  000D5C  0100               	movlb	0	; () banked
  3654  000D5E  6FB5               	movwf	_mode& (0+255),b
  3655  000D60  D003               	goto	l2284
  3656  000D62                     l2282:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;main.c: 201: else
  3660                           ;main.c: 202: mode-=1;
  3661  000D62  0100               	movlb	0	; () banked
  3662  000D64  07B5               	decf	_mode& (0+255),f,b
  3663                           
  3664                           ; BSR set to: 0
  3665                           
  3666                           ; BSR set to: 0
  3667  000D66  D000               	goto	l2284
  3668  000D68                     l2284:
  3669                           
  3670                           ;main.c: 203: }
  3671                           ;main.c: 204: }
  3672                           ;main.c: 205: old_SWITCH1=RC0;
  3673  000D68  0E00               	movlw	0
  3674  000D6A  B082               	btfsc	3970,0,c	;volatile
  3675  000D6C  0E01               	movlw	1
  3676  000D6E  0100               	movlb	0	; () banked
  3677  000D70  6FB6               	movwf	changeModeDetect@old_SWITCH1& (0+255),b
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;main.c: 209: static char old_SWITCH3=0;
  3681                           ;main.c: 211: if (RA6==0 && old_SWITCH3==1)
  3682  000D72  BC80               	btfsc	3968,6,c	;volatile
  3683  000D74  D037               	goto	l2306
  3684                           
  3685                           ; BSR set to: 0
  3686  000D76  0100               	movlb	0	; () banked
  3687  000D78  05B7               	decf	changeModeDetect@old_SWITCH3& (0+255),w,b
  3688  000D7A  A4D8               	btfss	status,2,c
  3689  000D7C  D033               	goto	l2306
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 212: {
  3693                           ;main.c: 213: for(delay=0;delay<10000;delay++);
  3694  000D7E  0E00               	movlw	0
  3695  000D80  6E1E               	movwf	changeModeDetect@delay,c
  3696  000D82  0E00               	movlw	0
  3697  000D84  6E1F               	movwf	changeModeDetect@delay+1,c
  3698  000D86  0E00               	movlw	0
  3699  000D88  6E20               	movwf	changeModeDetect@delay+2,c
  3700  000D8A  0E00               	movlw	0
  3701  000D8C  6E21               	movwf	changeModeDetect@delay+3,c
  3702                           
  3703                           ; BSR set to: 0
  3704  000D8E  BE21               	btfsc	changeModeDetect@delay+3,7,c
  3705  000D90  D00B               	goto	l2296
  3706  000D92  5021               	movf	changeModeDetect@delay+3,w,c
  3707  000D94  1020               	iorwf	changeModeDetect@delay+2,w,c
  3708  000D96  E114               	bnz	l240
  3709  000D98  0E10               	movlw	16
  3710  000D9A  5C1E               	subwf	changeModeDetect@delay,w,c
  3711  000D9C  0E27               	movlw	39
  3712  000D9E  581F               	subwfb	changeModeDetect@delay+1,w,c
  3713  000DA0  B0D8               	btfsc	status,0,c
  3714  000DA2  D00E               	goto	l240
  3715  000DA4  D001               	goto	l2296
  3716                           
  3717                           ; BSR set to: 0
  3718  000DA6  D00C               	goto	l240
  3719  000DA8                     l2296:
  3720  000DA8  0E01               	movlw	1
  3721  000DAA  261E               	addwf	changeModeDetect@delay,f,c
  3722  000DAC  0E00               	movlw	0
  3723  000DAE  221F               	addwfc	changeModeDetect@delay+1,f,c
  3724  000DB0  2220               	addwfc	changeModeDetect@delay+2,f,c
  3725  000DB2  2221               	addwfc	changeModeDetect@delay+3,f,c
  3726  000DB4  BE21               	btfsc	changeModeDetect@delay+3,7,c
  3727  000DB6  D7F8               	goto	l2296
  3728  000DB8  5021               	movf	changeModeDetect@delay+3,w,c
  3729  000DBA  1020               	iorwf	changeModeDetect@delay+2,w,c
  3730  000DBC  E101               	bnz	u1990
  3731  000DBE  D7EC               	goto	L3
  3732  000DC0                     u1990:
  3733  000DC0                     l240:
  3734                           
  3735                           ;main.c: 214: if (RA6==0 && old_SWITCH3==1)
  3736  000DC0  BC80               	btfsc	3968,6,c	;volatile
  3737  000DC2  D010               	goto	l2306
  3738  000DC4  0100               	movlb	0	; () banked
  3739  000DC6  05B7               	decf	changeModeDetect@old_SWITCH3& (0+255),w,b
  3740  000DC8  A4D8               	btfss	status,2,c
  3741  000DCA  D00C               	goto	l2306
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;main.c: 215: {
  3745                           ;main.c: 216: if (mode==2)
  3746  000DCC  0E02               	movlw	2
  3747  000DCE  0100               	movlb	0	; () banked
  3748  000DD0  19B5               	xorwf	_mode& (0+255),w,b
  3749  000DD2  A4D8               	btfss	status,2,c
  3750  000DD4  D004               	goto	l2304
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;main.c: 217: mode=0;
  3754  000DD6  0E00               	movlw	0
  3755  000DD8  0100               	movlb	0	; () banked
  3756  000DDA  6FB5               	movwf	_mode& (0+255),b
  3757  000DDC  D003               	goto	l2306
  3758  000DDE                     l2304:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;main.c: 218: else
  3762                           ;main.c: 219: mode+=1;
  3763  000DDE  0100               	movlb	0	; () banked
  3764  000DE0  2BB5               	incf	_mode& (0+255),f,b
  3765                           
  3766                           ; BSR set to: 0
  3767                           
  3768                           ; BSR set to: 0
  3769  000DE2  D000               	goto	l2306
  3770  000DE4                     l2306:
  3771                           
  3772                           ;main.c: 220: }
  3773                           ;main.c: 221: }
  3774                           ;main.c: 222: old_SWITCH3=RA6;
  3775  000DE4  0E00               	movlw	0
  3776  000DE6  BC80               	btfsc	3968,6,c	;volatile
  3777  000DE8  0E01               	movlw	1
  3778  000DEA  0100               	movlb	0	; () banked
  3779  000DEC  6FB7               	movwf	changeModeDetect@old_SWITCH3& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782  000DEE  0012               	return		;funcret
  3783  000DF0                     __end_of_changeModeDetect:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           intcon	equ	0xFF2
  3787                           intcon2	equ	0xFF1
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _Timer0_ISR *****************
  3793 ;; Defined at:
  3794 ;;		line 7 in file "interrupts.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;		None               void
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:       17 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    3
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		Interrupt level 1
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	intcodelo
  3823  000018                     __pintcodelo:
  3824                           	opt stack 0
  3825  000018                     _Timer0_ISR:
  3826                           	opt stack 23
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;incstack = 0
  3830  000018  CFD8 F060          	movff	status,??_Timer0_ISR
  3831  00001C  CFE8 F061          	movff	wreg,??_Timer0_ISR+1
  3832  000020  CFE0 F062          	movff	bsr,??_Timer0_ISR+2
  3833  000024  CFFA F063          	movff	pclath,??_Timer0_ISR+3
  3834  000028  CFFB F064          	movff	pclatu,??_Timer0_ISR+4
  3835  00002C  CFE9 F065          	movff	fsr0l,??_Timer0_ISR+5
  3836  000030  CFEA F066          	movff	fsr0h,??_Timer0_ISR+6
  3837  000034  CFE1 F067          	movff	fsr1l,??_Timer0_ISR+7
  3838  000038  CFE2 F068          	movff	fsr1h,??_Timer0_ISR+8
  3839  00003C  CFD9 F069          	movff	fsr2l,??_Timer0_ISR+9
  3840  000040  CFDA F06A          	movff	fsr2h,??_Timer0_ISR+10
  3841  000044  CFF3 F06B          	movff	prodl,??_Timer0_ISR+11
  3842  000048  CFF4 F06C          	movff	prodh,??_Timer0_ISR+12
  3843  00004C  CFF6 F06D          	movff	tblptrl,??_Timer0_ISR+13
  3844  000050  CFF7 F06E          	movff	tblptrh,??_Timer0_ISR+14
  3845  000054  CFF8 F06F          	movff	tblptru,??_Timer0_ISR+15
  3846  000058  CFF5 F070          	movff	tablat,??_Timer0_ISR+16
  3847                           
  3848                           ;interrupts.c: 12: if (T0IE && T0IF)
  3849  00005C  BAF2               	btfsc	intcon,5,c	;volatile
  3850  00005E  A4F2               	btfss	intcon,2,c	;volatile
  3851  000060  D00D               	goto	i1l262
  3852                           
  3853                           ;interrupts.c: 13: {
  3854                           ;interrupts.c: 14: T0IF=0;
  3855  000062  94F2               	bcf	intcon,2,c	;volatile
  3856                           
  3857                           ;interrupts.c: 16: TMR0=15;
  3858  000064  0E00               	movlw	0
  3859  000066  6ED7               	movwf	4055,c	;volatile
  3860  000068  0E0F               	movlw	15
  3861  00006A  6ED6               	movwf	4054,c	;volatile
  3862                           
  3863                           ;interrupts.c: 18: millis++;
  3864  00006C  0E01               	movlw	1
  3865  00006E  0100               	movlb	0	; () banked
  3866  000070  27B1               	addwf	_millis& (0+255),f,b
  3867  000072  0E00               	movlw	0
  3868  000074  23B2               	addwfc	(_millis+1)& (0+255),f,b
  3869  000076  23B3               	addwfc	(_millis+2)& (0+255),f,b
  3870  000078  23B4               	addwfc	(_millis+3)& (0+255),f,b
  3871  00007A  D000               	goto	i1l262
  3872  00007C                     i1l262:
  3873  00007C  C070  FFF5         	movff	??_Timer0_ISR+16,tablat
  3874  000080  C06F  FFF8         	movff	??_Timer0_ISR+15,tblptru
  3875  000084  C06E  FFF7         	movff	??_Timer0_ISR+14,tblptrh
  3876  000088  C06D  FFF6         	movff	??_Timer0_ISR+13,tblptrl
  3877  00008C  C06C  FFF4         	movff	??_Timer0_ISR+12,prodh
  3878  000090  C06B  FFF3         	movff	??_Timer0_ISR+11,prodl
  3879  000094  C06A  FFDA         	movff	??_Timer0_ISR+10,fsr2h
  3880  000098  C069  FFD9         	movff	??_Timer0_ISR+9,fsr2l
  3881  00009C  C068  FFE2         	movff	??_Timer0_ISR+8,fsr1h
  3882  0000A0  C067  FFE1         	movff	??_Timer0_ISR+7,fsr1l
  3883  0000A4  C066  FFEA         	movff	??_Timer0_ISR+6,fsr0h
  3884  0000A8  C065  FFE9         	movff	??_Timer0_ISR+5,fsr0l
  3885  0000AC  C064  FFFB         	movff	??_Timer0_ISR+4,pclatu
  3886  0000B0  C063  FFFA         	movff	??_Timer0_ISR+3,pclath
  3887  0000B4  C062  FFE0         	movff	??_Timer0_ISR+2,bsr
  3888  0000B8  C061  FFE8         	movff	??_Timer0_ISR+1,wreg
  3889  0000BC  C060  FFD8         	movff	??_Timer0_ISR,status
  3890  0000C0  0010               	retfie	
  3891  0000C2                     __end_of_Timer0_ISR:
  3892                           	opt stack 0
  3893                           pclatu	equ	0xFFB
  3894                           pclath	equ	0xFFA
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           prodh	equ	0xFF4
  3900                           prodl	equ	0xFF3
  3901                           intcon	equ	0xFF2
  3902                           intcon2	equ	0xFF1
  3903                           postinc0	equ	0xFEE
  3904                           fsr0h	equ	0xFEA
  3905                           fsr0l	equ	0xFE9
  3906                           wreg	equ	0xFE8
  3907                           fsr1h	equ	0xFE2
  3908                           fsr1l	equ	0xFE1
  3909                           bsr	equ	0xFE0
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function _RX2_ISR *****************
  3915 ;; Defined at:
  3916 ;;		line 25 in file "interrupts.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  input           2   27[COMRAM] unsigned char [2]
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;Total ram usage:       16 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    2
  3937 ;; This function calls:
  3938 ;;		_atoi
  3939 ;; This function is called by:
  3940 ;;		Interrupt level 2
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	intcode
  3945  000008                     __pintcode:
  3946                           	opt stack 0
  3947  000008                     _RX2_ISR:
  3948                           	opt stack 23
  3949                           
  3950                           ;incstack = 0
  3951  000008  CFFA F00E          	movff	pclath,??_RX2_ISR
  3952  00000C  CFFB F00F          	movff	pclatu,??_RX2_ISR+1
  3953  000010  CFE9 F010          	movff	fsr0l,??_RX2_ISR+2
  3954  000014  EF5F  F003         	goto	int_func
  3955                           pclatu	equ	0xFFB
  3956                           pclath	equ	0xFFA
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           prodh	equ	0xFF4
  3962                           prodl	equ	0xFF3
  3963                           intcon	equ	0xFF2
  3964                           intcon2	equ	0xFF1
  3965                           postinc0	equ	0xFEE
  3966                           fsr0h	equ	0xFEA
  3967                           fsr0l	equ	0xFE9
  3968                           wreg	equ	0xFE8
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           bsr	equ	0xFE0
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976                           	psect	intcode_body
  3977  0006BE                     __pintcode_body:
  3978                           	opt stack 23
  3979  0006BE                     int_func:
  3980                           	opt stack 23
  3981  0006BE  CFEA F011          	movff	fsr0h,??_RX2_ISR+3
  3982  0006C2  CFE1 F012          	movff	fsr1l,??_RX2_ISR+4
  3983  0006C6  CFE2 F013          	movff	fsr1h,??_RX2_ISR+5
  3984  0006CA  CFD9 F014          	movff	fsr2l,??_RX2_ISR+6
  3985  0006CE  CFDA F015          	movff	fsr2h,??_RX2_ISR+7
  3986  0006D2  CFF3 F016          	movff	prodl,??_RX2_ISR+8
  3987  0006D6  CFF4 F017          	movff	prodh,??_RX2_ISR+9
  3988  0006DA  CFF6 F018          	movff	tblptrl,??_RX2_ISR+10
  3989  0006DE  CFF7 F019          	movff	tblptrh,??_RX2_ISR+11
  3990  0006E2  CFF8 F01A          	movff	tblptru,??_RX2_ISR+12
  3991  0006E6  CFF5 F01B          	movff	tablat,??_RX2_ISR+13
  3992                           
  3993                           ;interrupts.c: 26: RC2IF = 0;
  3994  0006EA  9AA4               	bcf	4004,5,c	;volatile
  3995                           
  3996                           ;interrupts.c: 28: extern unsigned int R[100];
  3997                           ;interrupts.c: 29: extern unsigned int G[100];
  3998                           ;interrupts.c: 30: extern unsigned int B[100];
  3999                           ;interrupts.c: 32: static char compteur=0;
  4000                           ;interrupts.c: 33: static char buffer[16]="";
  4001                           ;interrupts.c: 34: static char beginR=0;
  4002                           ;interrupts.c: 35: static char beginG=0;
  4003                           ;interrupts.c: 36: static char beginB=0;
  4004                           ;interrupts.c: 38: char input[2] = "";
  4005  0006EC  C02D  F01C         	movff	RX2_ISR@F19171,RX2_ISR@input
  4006  0006F0  C02E  F01D         	movff	RX2_ISR@F19171+1,RX2_ISR@input+1
  4007                           
  4008                           ;interrupts.c: 39: input[0] = RCREG2;
  4009  0006F4  CF7A F01C          	movff	3962,RX2_ISR@input	;volatile
  4010                           
  4011                           ;interrupts.c: 41: if (beginR==1 | beginG==1 | beginB==1)
  4012  0006F8  0431               	decf	RX2_ISR@beginR,w,c
  4013  0006FA  B4D8               	btfsc	status,2,c
  4014  0006FC  D006               	goto	i2l1988
  4015  0006FE  0430               	decf	RX2_ISR@beginG,w,c
  4016  000700  B4D8               	btfsc	status,2,c
  4017  000702  D003               	goto	i2l1988
  4018  000704  042F               	decf	RX2_ISR@beginB,w,c
  4019  000706  A4D8               	btfss	status,2,c
  4020  000708  D053               	goto	i2l2026
  4021  00070A                     i2l1988:
  4022                           
  4023                           ;interrupts.c: 42: {
  4024                           ;interrupts.c: 43: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  4025  00070A  0E52               	movlw	82
  4026  00070C  181C               	xorwf	RX2_ISR@input,w,c
  4027  00070E  B4D8               	btfsc	status,2,c
  4028  000710  D014               	goto	i2l1998
  4029  000712  0E47               	movlw	71
  4030  000714  181C               	xorwf	RX2_ISR@input,w,c
  4031  000716  B4D8               	btfsc	status,2,c
  4032  000718  D010               	goto	i2l1998
  4033  00071A  0E42               	movlw	66
  4034  00071C  181C               	xorwf	RX2_ISR@input,w,c
  4035  00071E  B4D8               	btfsc	status,2,c
  4036  000720  D00C               	goto	i2l1998
  4037                           
  4038                           ;interrupts.c: 44: {
  4039                           ;interrupts.c: 45: buffer[compteur]=input[0];
  4040  000722  5032               	movf	RX2_ISR@compteur,w,c
  4041  000724  0D01               	mullw	1
  4042  000726  0E33               	movlw	low RX2_ISR@buffer
  4043  000728  24F3               	addwf	prodl,w,c
  4044  00072A  6ED9               	movwf	fsr2l,c
  4045  00072C  0E00               	movlw	high RX2_ISR@buffer
  4046  00072E  20F4               	addwfc	prodh,w,c
  4047  000730  6EDA               	movwf	fsr2h,c
  4048  000732  C01C  FFDF         	movff	RX2_ISR@input,indf2
  4049                           
  4050                           ;interrupts.c: 46: compteur+=1;
  4051  000736  2A32               	incf	RX2_ISR@compteur,f,c
  4052                           
  4053                           ;interrupts.c: 47: }
  4054  000738  D03B               	goto	i2l2026
  4055  00073A                     i2l1998:
  4056                           
  4057                           ;interrupts.c: 49: else
  4058                           ;interrupts.c: 50: {
  4059                           ;interrupts.c: 51: if (beginR==1)
  4060  00073A  0431               	decf	RX2_ISR@beginR,w,c
  4061  00073C  A4D8               	btfss	status,2,c
  4062  00073E  D00B               	goto	i2l2002
  4063                           
  4064                           ;interrupts.c: 52: R[0]=atoi(buffer);
  4065  000740  0E33               	movlw	low RX2_ISR@buffer
  4066  000742  6E07               	movwf	atoi@s,c
  4067  000744  0E00               	movlw	high RX2_ISR@buffer
  4068  000746  6E08               	movwf	atoi@s+1,c
  4069  000748  EC7A  F007         	call	_atoi	;wreg free
  4070  00074C  C007  F100         	movff	?_atoi,_R
  4071  000750  C008  F101         	movff	?_atoi+1,_R+1
  4072  000754  D000               	goto	i2l2002
  4073  000756                     i2l2002:
  4074                           
  4075                           ;interrupts.c: 53: beginR=0;
  4076  000756  0E00               	movlw	0
  4077  000758  6E31               	movwf	RX2_ISR@beginR,c
  4078                           
  4079                           ;interrupts.c: 54: if (beginG==1)
  4080  00075A  0430               	decf	RX2_ISR@beginG,w,c
  4081  00075C  A4D8               	btfss	status,2,c
  4082  00075E  D00B               	goto	i2l2008
  4083                           
  4084                           ;interrupts.c: 55: G[0]=atoi(buffer);
  4085  000760  0E33               	movlw	low RX2_ISR@buffer
  4086  000762  6E07               	movwf	atoi@s,c
  4087  000764  0E00               	movlw	high RX2_ISR@buffer
  4088  000766  6E08               	movwf	atoi@s+1,c
  4089  000768  EC7A  F007         	call	_atoi	;wreg free
  4090  00076C  C007  F200         	movff	?_atoi,_G
  4091  000770  C008  F201         	movff	?_atoi+1,_G+1
  4092  000774  D000               	goto	i2l2008
  4093  000776                     i2l2008:
  4094                           
  4095                           ;interrupts.c: 56: beginG=0;
  4096  000776  0E00               	movlw	0
  4097  000778  6E30               	movwf	RX2_ISR@beginG,c
  4098                           
  4099                           ;interrupts.c: 57: if (beginB==1)
  4100  00077A  042F               	decf	RX2_ISR@beginB,w,c
  4101  00077C  A4D8               	btfss	status,2,c
  4102  00077E  D00B               	goto	i2l2014
  4103                           
  4104                           ;interrupts.c: 58: B[0]=atoi(buffer);
  4105  000780  0E33               	movlw	low RX2_ISR@buffer
  4106  000782  6E07               	movwf	atoi@s,c
  4107  000784  0E00               	movlw	high RX2_ISR@buffer
  4108  000786  6E08               	movwf	atoi@s+1,c
  4109  000788  EC7A  F007         	call	_atoi	;wreg free
  4110  00078C  C007  F300         	movff	?_atoi,_B
  4111  000790  C008  F301         	movff	?_atoi+1,_B+1
  4112  000794  D000               	goto	i2l2014
  4113  000796                     i2l2014:
  4114                           
  4115                           ;interrupts.c: 59: beginB=0;
  4116  000796  0E00               	movlw	0
  4117  000798  6E2F               	movwf	RX2_ISR@beginB,c
  4118                           
  4119                           ;interrupts.c: 62: compteur=0;
  4120  00079A  0E00               	movlw	0
  4121  00079C  6E32               	movwf	RX2_ISR@compteur,c
  4122                           
  4123                           ;interrupts.c: 63: buffer[3]='\0';
  4124  00079E  0E00               	movlw	0
  4125  0007A0  6E36               	movwf	RX2_ISR@buffer+3,c
  4126                           
  4127                           ;interrupts.c: 64: buffer[2]='\0';
  4128  0007A2  0E00               	movlw	0
  4129  0007A4  6E35               	movwf	RX2_ISR@buffer+2,c
  4130                           
  4131                           ;interrupts.c: 65: buffer[1]='\0';
  4132  0007A6  0E00               	movlw	0
  4133  0007A8  6E34               	movwf	RX2_ISR@buffer+1,c
  4134                           
  4135                           ;interrupts.c: 66: buffer[0]='\0';
  4136  0007AA  0E00               	movlw	0
  4137  0007AC  6E33               	movwf	RX2_ISR@buffer,c
  4138  0007AE  D000               	goto	i2l2026
  4139  0007B0                     i2l2026:
  4140                           
  4141                           ;interrupts.c: 67: }
  4142                           ;interrupts.c: 68: }
  4143                           ;interrupts.c: 70: if (input[0]=='R')
  4144  0007B0  0E52               	movlw	82
  4145  0007B2  181C               	xorwf	RX2_ISR@input,w,c
  4146  0007B4  A4D8               	btfss	status,2,c
  4147  0007B6  D003               	goto	i2l2030
  4148                           
  4149                           ;interrupts.c: 71: beginR=1;
  4150  0007B8  0E01               	movlw	1
  4151  0007BA  6E31               	movwf	RX2_ISR@beginR,c
  4152  0007BC  D000               	goto	i2l2030
  4153  0007BE                     i2l2030:
  4154                           
  4155                           ;interrupts.c: 72: if (input[0]=='G')
  4156  0007BE  0E47               	movlw	71
  4157  0007C0  181C               	xorwf	RX2_ISR@input,w,c
  4158  0007C2  A4D8               	btfss	status,2,c
  4159  0007C4  D003               	goto	i2l2034
  4160                           
  4161                           ;interrupts.c: 73: beginG=1;
  4162  0007C6  0E01               	movlw	1
  4163  0007C8  6E30               	movwf	RX2_ISR@beginG,c
  4164  0007CA  D000               	goto	i2l2034
  4165  0007CC                     i2l2034:
  4166                           
  4167                           ;interrupts.c: 74: if (input[0]=='B')
  4168  0007CC  0E42               	movlw	66
  4169  0007CE  181C               	xorwf	RX2_ISR@input,w,c
  4170  0007D0  A4D8               	btfss	status,2,c
  4171  0007D2  D003               	goto	i2l294
  4172                           
  4173                           ;interrupts.c: 75: beginB=1;
  4174  0007D4  0E01               	movlw	1
  4175  0007D6  6E2F               	movwf	RX2_ISR@beginB,c
  4176  0007D8  D000               	goto	i2l294
  4177  0007DA                     i2l294:
  4178  0007DA  C01B  FFF5         	movff	??_RX2_ISR+13,tablat
  4179  0007DE  C01A  FFF8         	movff	??_RX2_ISR+12,tblptru
  4180  0007E2  C019  FFF7         	movff	??_RX2_ISR+11,tblptrh
  4181  0007E6  C018  FFF6         	movff	??_RX2_ISR+10,tblptrl
  4182  0007EA  C017  FFF4         	movff	??_RX2_ISR+9,prodh
  4183  0007EE  C016  FFF3         	movff	??_RX2_ISR+8,prodl
  4184  0007F2  C015  FFDA         	movff	??_RX2_ISR+7,fsr2h
  4185  0007F6  C014  FFD9         	movff	??_RX2_ISR+6,fsr2l
  4186  0007FA  C013  FFE2         	movff	??_RX2_ISR+5,fsr1h
  4187  0007FE  C012  FFE1         	movff	??_RX2_ISR+4,fsr1l
  4188  000802  C011  FFEA         	movff	??_RX2_ISR+3,fsr0h
  4189  000806  C010  FFE9         	movff	??_RX2_ISR+2,fsr0l
  4190  00080A  C00F  FFFB         	movff	??_RX2_ISR+1,pclatu
  4191  00080E  C00E  FFFA         	movff	??_RX2_ISR,pclath
  4192  000812  0011               	retfie		f
  4193  000814                     __end_of_RX2_ISR:
  4194                           	opt stack 0
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           intcon2	equ	0xFF1
  4205                           postinc0	equ	0xFEE
  4206                           fsr0h	equ	0xFEA
  4207                           fsr0l	equ	0xFE9
  4208                           wreg	equ	0xFE8
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           bsr	equ	0xFE0
  4212                           indf2	equ	0xFDF
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _atoi *****************
  4218 ;; Defined at:
  4219 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4222 ;;		 -> RX2_ISR@buffer(16), 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  a               2   11[COMRAM] int 
  4225 ;;  sign            1   10[COMRAM] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    6[COMRAM] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4239 ;;Total ram usage:        7 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    1
  4242 ;; This function calls:
  4243 ;;		___wmul
  4244 ;;		_isdigit
  4245 ;; This function is called by:
  4246 ;;		_RX2_ISR
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text20
  4251  000EF4                     __ptext20:
  4252                           	opt stack 0
  4253  000EF4                     _atoi:
  4254                           	opt stack 23
  4255                           
  4256                           ;incstack = 0
  4257  000EF4  D003               	goto	i2l1934
  4258  000EF6                     i2l1932:
  4259  000EF6  4A07               	infsnz	atoi@s,f,c
  4260  000EF8  2A08               	incf	atoi@s+1,f,c
  4261  000EFA  D000               	goto	i2l1934
  4262  000EFC                     i2l1934:
  4263  000EFC  C007  FFD9         	movff	atoi@s,fsr2l
  4264  000F00  C008  FFDA         	movff	atoi@s+1,fsr2h
  4265  000F04  0E20               	movlw	32
  4266  000F06  18DE               	xorwf	postinc2,w,c
  4267  000F08  B4D8               	btfsc	status,2,c
  4268  000F0A  D7F5               	goto	i2l1932
  4269  000F0C  C007  FFD9         	movff	atoi@s,fsr2l
  4270  000F10  C008  FFDA         	movff	atoi@s+1,fsr2h
  4271  000F14  0E09               	movlw	9
  4272  000F16  18DE               	xorwf	postinc2,w,c
  4273  000F18  B4D8               	btfsc	status,2,c
  4274  000F1A  D7ED               	goto	i2l1932
  4275  000F1C  0E00               	movlw	0
  4276  000F1E  6E0D               	movwf	atoi@a+1,c
  4277  000F20  0E00               	movlw	0
  4278  000F22  6E0C               	movwf	atoi@a,c
  4279  000F24  0E00               	movlw	0
  4280  000F26  6E0B               	movwf	atoi@sign,c
  4281  000F28  C007  FFD9         	movff	atoi@s,fsr2l
  4282  000F2C  C008  FFDA         	movff	atoi@s+1,fsr2h
  4283  000F30  0E2D               	movlw	45
  4284  000F32  18DE               	xorwf	postinc2,w,c
  4285  000F34  A4D8               	btfss	status,2,c
  4286  000F36  D002               	goto	i2l1944
  4287  000F38  2A0B               	incf	atoi@sign,f,c
  4288  000F3A  D025               	goto	i2l1950
  4289  000F3C                     i2l1944:
  4290  000F3C  C007  FFD9         	movff	atoi@s,fsr2l
  4291  000F40  C008  FFDA         	movff	atoi@s+1,fsr2h
  4292  000F44  0E2B               	movlw	43
  4293  000F46  18DE               	xorwf	postinc2,w,c
  4294  000F48  A4D8               	btfss	status,2,c
  4295  000F4A  D020               	goto	i2l1952
  4296  000F4C  D01C               	goto	i2l1950
  4297  000F4E  D01E               	goto	i2l1952
  4298  000F50                     i2l1948:
  4299  000F50  C00C  F001         	movff	atoi@a,___wmul@multiplier
  4300  000F54  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  4301  000F58  0E00               	movlw	0
  4302  000F5A  6E04               	movwf	___wmul@multiplicand+1,c
  4303  000F5C  0E0A               	movlw	10
  4304  000F5E  6E03               	movwf	___wmul@multiplicand,c
  4305  000F60  EC44  F009         	call	___wmul	;wreg free
  4306  000F64  C007  FFD9         	movff	atoi@s,fsr2l
  4307  000F68  C008  FFDA         	movff	atoi@s+1,fsr2h
  4308  000F6C  50DF               	movf	indf2,w,c
  4309  000F6E  6E09               	movwf	??_atoi& (0+255),c
  4310  000F70  6A0A               	clrf	(??_atoi+1)& (0+255),c
  4311  000F72  5001               	movf	?___wmul,w,c
  4312  000F74  2609               	addwf	??_atoi,f,c
  4313  000F76  5002               	movf	?___wmul+1,w,c
  4314  000F78  220A               	addwfc	??_atoi+1,f,c
  4315  000F7A  0ED0               	movlw	208
  4316  000F7C  2409               	addwf	??_atoi,w,c
  4317  000F7E  6E0C               	movwf	atoi@a,c
  4318  000F80  0EFF               	movlw	255
  4319  000F82  200A               	addwfc	??_atoi+1,w,c
  4320  000F84  6E0D               	movwf	atoi@a+1,c
  4321  000F86                     i2l1950:
  4322  000F86  4A07               	infsnz	atoi@s,f,c
  4323  000F88  2A08               	incf	atoi@s+1,f,c
  4324  000F8A  D000               	goto	i2l1952
  4325  000F8C                     i2l1952:
  4326  000F8C  C007  FFD9         	movff	atoi@s,fsr2l
  4327  000F90  C008  FFDA         	movff	atoi@s+1,fsr2h
  4328  000F94  50DF               	movf	indf2,w,c
  4329  000F96  EC58  F009         	call	_isdigit
  4330  000F9A  B0D8               	btfsc	status,0,c
  4331  000F9C  D7D9               	goto	i2l1948
  4332  000F9E  500B               	movf	atoi@sign,w,c
  4333  000FA0  B4D8               	btfsc	status,2,c
  4334  000FA2  D00D               	goto	i2l497
  4335  000FA4  C00C  F009         	movff	atoi@a,??_atoi
  4336  000FA8  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  4337  000FAC  1E09               	comf	??_atoi,f,c
  4338  000FAE  1E0A               	comf	??_atoi+1,f,c
  4339  000FB0  4A09               	infsnz	??_atoi,f,c
  4340  000FB2  2A0A               	incf	??_atoi+1,f,c
  4341  000FB4  C009  F007         	movff	??_atoi,?_atoi
  4342  000FB8  C00A  F008         	movff	??_atoi+1,?_atoi+1
  4343  000FBC  0012               	return	
  4344  000FBE                     i2l497:
  4345  000FBE  C00C  F007         	movff	atoi@a,?_atoi
  4346  000FC2  C00D  F008         	movff	atoi@a+1,?_atoi+1
  4347  000FC6  0012               	return		;funcret
  4348  000FC8                     __end_of_atoi:
  4349                           	opt stack 0
  4350                           pclatu	equ	0xFFB
  4351                           pclath	equ	0xFFA
  4352                           tblptru	equ	0xFF8
  4353                           tblptrh	equ	0xFF7
  4354                           tblptrl	equ	0xFF6
  4355                           tablat	equ	0xFF5
  4356                           prodh	equ	0xFF4
  4357                           prodl	equ	0xFF3
  4358                           intcon	equ	0xFF2
  4359                           intcon2	equ	0xFF1
  4360                           postinc0	equ	0xFEE
  4361                           fsr0h	equ	0xFEA
  4362                           fsr0l	equ	0xFE9
  4363                           wreg	equ	0xFE8
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           bsr	equ	0xFE0
  4367                           indf2	equ	0xFDF
  4368                           postinc2	equ	0xFDE
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _isdigit *****************
  4374 ;; Defined at:
  4375 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  c               1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  c               1    2[COMRAM] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;Total ram usage:        3 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_atoi
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text21
  4403  0012B0                     __ptext21:
  4404                           	opt stack 0
  4405  0012B0                     _isdigit:
  4406                           	opt stack 23
  4407                           
  4408                           ;incstack = 0
  4409                           ;isdigit@c stored from wreg
  4410  0012B0  6E03               	movwf	isdigit@c,c
  4411  0012B2  0E00               	movlw	0
  4412  0012B4  6E02               	movwf	_isdigit$887,c
  4413  0012B6  0E3A               	movlw	58
  4414  0012B8  6003               	cpfslt	isdigit@c,c
  4415  0012BA  D006               	goto	i2l1796
  4416  0012BC  0E2F               	movlw	47
  4417  0012BE  6403               	cpfsgt	isdigit@c,c
  4418  0012C0  D003               	goto	i2l1796
  4419  0012C2  0E01               	movlw	1
  4420  0012C4  6E02               	movwf	_isdigit$887,c
  4421  0012C6  D000               	goto	i2l1796
  4422  0012C8                     i2l1796:
  4423  0012C8  C002  F001         	movff	_isdigit$887,??_isdigit
  4424  0012CC  3001               	rrcf	??_isdigit,w,c
  4425  0012CE  0012               	return	
  4426  0012D0  0012               	return		;funcret
  4427  0012D2                     __end_of_isdigit:
  4428                           	opt stack 0
  4429                           pclatu	equ	0xFFB
  4430                           pclath	equ	0xFFA
  4431                           tblptru	equ	0xFF8
  4432                           tblptrh	equ	0xFF7
  4433                           tblptrl	equ	0xFF6
  4434                           tablat	equ	0xFF5
  4435                           prodh	equ	0xFF4
  4436                           prodl	equ	0xFF3
  4437                           intcon	equ	0xFF2
  4438                           intcon2	equ	0xFF1
  4439                           postinc0	equ	0xFEE
  4440                           fsr0h	equ	0xFEA
  4441                           fsr0l	equ	0xFE9
  4442                           wreg	equ	0xFE8
  4443                           fsr1h	equ	0xFE2
  4444                           fsr1l	equ	0xFE1
  4445                           bsr	equ	0xFE0
  4446                           indf2	equ	0xFDF
  4447                           postinc2	equ	0xFDE
  4448                           fsr2h	equ	0xFDA
  4449                           fsr2l	equ	0xFD9
  4450                           status	equ	0xFD8
  4451                           
  4452 ;; *************** function ___wmul *****************
  4453 ;; Defined at:
  4454 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  multiplier      2    0[COMRAM] unsigned int 
  4457 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  product         2    4[COMRAM] unsigned int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  2    0[COMRAM] unsigned int 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, prodl, prodh
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;Total ram usage:        6 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_atoi
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text22
  4483  001288                     __ptext22:
  4484                           	opt stack 0
  4485  001288                     ___wmul:
  4486                           	opt stack 23
  4487                           
  4488                           ;incstack = 0
  4489  001288  5001               	movf	___wmul@multiplier,w,c
  4490  00128A  0203               	mulwf	___wmul@multiplicand,c
  4491  00128C  CFF3 F005          	movff	prodl,___wmul@product
  4492  001290  CFF4 F006          	movff	prodh,___wmul@product+1
  4493  001294  5001               	movf	___wmul@multiplier,w,c
  4494  001296  0204               	mulwf	___wmul@multiplicand+1,c
  4495  001298  50F3               	movf	prodl,w,c
  4496  00129A  2606               	addwf	___wmul@product+1,f,c
  4497  00129C  5002               	movf	___wmul@multiplier+1,w,c
  4498  00129E  0203               	mulwf	___wmul@multiplicand,c
  4499  0012A0  50F3               	movf	prodl,w,c
  4500  0012A2  2606               	addwf	___wmul@product+1,f,c
  4501  0012A4  C005  F001         	movff	___wmul@product,?___wmul
  4502  0012A8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4503  0012AC  0012               	return	
  4504  0012AE  0012               	return		;funcret
  4505  0012B0                     __end_of___wmul:
  4506                           	opt stack 0
  4507  0000                     pclatu	equ	0xFFB
  4508                           pclath	equ	0xFFA
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           prodh	equ	0xFF4
  4514                           prodl	equ	0xFF3
  4515                           intcon	equ	0xFF2
  4516                           intcon2	equ	0xFF1
  4517                           postinc0	equ	0xFEE
  4518                           fsr0h	equ	0xFEA
  4519                           fsr0l	equ	0xFE9
  4520                           wreg	equ	0xFE8
  4521                           fsr1h	equ	0xFE2
  4522                           fsr1l	equ	0xFE1
  4523                           bsr	equ	0xFE0
  4524                           indf2	equ	0xFDF
  4525                           postinc2	equ	0xFDE
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           pclatu	equ	0xFFB
  4530                           pclath	equ	0xFFA
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon	equ	0xFF2
  4538                           intcon2	equ	0xFF1
  4539                           postinc0	equ	0xFEE
  4540                           fsr0h	equ	0xFEA
  4541                           fsr0l	equ	0xFE9
  4542                           wreg	equ	0xFE8
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           bsr	equ	0xFE0
  4546                           indf2	equ	0xFDF
  4547                           postinc2	equ	0xFDE
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552                           	psect	rparam
  4553  0000                     pclatu	equ	0xFFB
  4554                           pclath	equ	0xFFA
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           intcon2	equ	0xFF1
  4563                           postinc0	equ	0xFEE
  4564                           fsr0h	equ	0xFEA
  4565                           fsr0l	equ	0xFE9
  4566                           wreg	equ	0xFE8
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           bsr	equ	0xFE0
  4570                           indf2	equ	0xFDF
  4571                           postinc2	equ	0xFDE
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         629
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      66
    BANK0           160     81      94
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> RX2_ISR@buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _strobe->___ftdiv
    _setRGB->___ftdiv
    _pwm->___awdiv
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___almod->___ftdiv

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _RX2_ISR in COMRAM

    _RX2_ISR->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_strobe
    _strobe->___almod
    _setRGB->___fttol
    _pwm->___awdiv
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___almod->___fttol

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _RX2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _RX2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _RX2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _RX2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _RX2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Critical Paths under _RX2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_ISR in BANK6

    None.

Critical Paths under _RX2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_ISR in BANK7

    None.

Critical Paths under _RX2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_ISR in BANK8

    None.

Critical Paths under _RX2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_ISR in BANK9

    None.

Critical Paths under _RX2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_ISR in BANK10

    None.

Critical Paths under _RX2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_ISR in BANK11

    None.

Critical Paths under _RX2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_ISR in BANK12

    None.

Critical Paths under _RX2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_ISR in BANK13

    None.

Critical Paths under _RX2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_ISR in BANK14

    None.

Critical Paths under _RX2_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   29267
                                             76 BANK0      5     0      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                   _changeModeDetect
                     _initialisation
                            _readADC
                             _setRGB
                             _strobe
 ---------------------------------------------------------------------------------
 (1) _strobe                                               8     8      0   14731
                                             68 BANK0      8     8      0
                            ___almod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             _setRGB
 ---------------------------------------------------------------------------------
 (2) _setRGB                                               6     0      6    2222
                                             58 BANK0      6     0      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                                _pwm
 ---------------------------------------------------------------------------------
 (3) _pwm                                                  3     1      2    1154
                                             33 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     835
                                             29 COMRAM     4     4      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3014
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     835
                                             43 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4146
                                             32 COMRAM     9     9      0
                                             25 BANK0      6     0      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4078
                                             41 COMRAM     3     3      0
                                             31 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                             29 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     402
                                             58 BANK0     10     2      8
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2     102
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeModeDetect                                     4     4      0     139
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                          17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _RX2_ISR                                             16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (7) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _changeModeDetect
   _initialisation
     _initADC
     _initComms
     _initPWM
     _initTimer0
   _readADC
   _setRGB
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     _pwm (ARG)
       ___awdiv
   _strobe
     ___almod
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _setRGB
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _pwm (ARG)
         ___awdiv

 _Timer0_ISR (ROOT)

 _RX2_ISR (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      5E       5       58.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      42       1       69.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F8       6        0.0%
DATA                 0      0     2F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun May 24 18:40:04 2015

                          _B 0300                            _G 0200                            _R 0100  
               ___awdiv@sign 001F                           bsr 000FE0          ___wmul@multiplicand 0003  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l221 1152  
                        l222 1156                          l240 0DC0                          l232 0D46  
                        l216 111C                          l218 1120                          l219 1126  
                        l194 00CA                          l713 0A72                          l649 0CAE  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _RC0 007C10  
                        _RA6 007C06                          _PR2 000FCB                 __CFG_CPD$OFF 000000  
                        _PSA 007EAB             _changeModeDetect 0CE8                          _pwm 1080  
                        prod 000FF3                          wreg 000FE8                   _TXSTA2bits 000FBA  
               ___ftdiv@cntr 0085                 ___ftdiv@sign 008A                         l2110 0BFA  
                       l2104 10FC                         l2122 0C68                         l2114 0C10  
                       l2202 0B0C                  _strobe$1118 00A9                         l2132 0CBA  
                       l2124 0C8E                         l2116 0C20                         l2220 0B66  
                       l2060 101E                         l2052 0FF8                         l2126 0C9E  
                       l2118 0C46                         l2150 099A                         l2230 0BA0  
                       l2070 1056                         l2062 1028                         l2046 0FE2  
                       l2304 0DDE                         l2224 0B80                         l2216 0B4C  
                       l2312 0698                         l2320 0388                         l2306 0DE4  
                       l2138 0CD8                         l2234 0BB8                         l2226 0B86  
                       l2058 1012                         l2074 1064                         l2090 10AC  
                       l2322 038E                         l2156 09CE                         l2084 1084  
                       l2316 00FA                         l2324 03B2                         l2254 114A  
                       l2246 112C                         l2078 1074                         l2318 0238  
                       l2256 114C                         l2248 1142                         l2176 0A30  
                       l2096 10D4                         l2282 0D62                         l2274 0D2E  
                       l2186 0A84                         l2284 0D68                         l2196 0ADC  
                       l1670 0E30                         l1806 084E                         l2296 0DA8  
                       l1824 08E2                         l1690 0EE0                         l1682 0EAE  
                       l1674 0E4C                         l1666 0E16                         l1842 0952  
                       l1834 0914                         l1676 0E5E                         l1836 0926  
                       l1828 08F6                         l1678 0E68                         l1686 0EC2  
                       l1838 0934                         _ADON 007E10                         _CHS0 007E12  
                       _CHS1 007E13                         ?_pwm 0022                         _T0IE 007F95  
                       _T0IF 007F92                         _T0CS 007EAD                         u1151 082A  
                       u1170 0874                         u1175 086A                         u1801 0ABE  
                       u1821 0AEE                         u1751 0978                         u1920 0D46  
                       u1771 09AC                         _PEIE 007F96                         u1990 0DC0  
                       _TMR0 000FD6             ??_initialisation 001E              __end_of_RX2_ISR 0814  
                       _atoi 0EF4                         _main 00C6                 ___ftpack@arg 0071  
                       _mode 00B5                 ___ftpack@exp 0074                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       pclat 000FFA                         prodh 000FF4                         prodl 000FF3  
                       start 00C2                __CFG_IESO$OFF 000000                 ___ftmul@cntr 0028  
               ___param_bank 000010                 ___ftmul@sign 0029                 ___fttol@exp1 0099  
               ___fttol@lval 0095                        ??_pwm 0024                        _DC2B0 007A84  
                      _DC2B1 007A85                        _DC3B0 007A6C                        _DC3B1 007A6D  
                      _DC4B0 007A54                        _DC4B1 007A55                        ?_atoi 0007  
            __end_of___almod 0EF4                        ?_main 00AC              __end_of___awdiv 1080  
            __end_of___ftdiv 0AAC              __end_of___ftmul 0BE0              ___awdiv@divisor 0073  
            __end_of___fttol 0966                        _T0PS0 007EA8                        _T0PS1 007EA9  
                      _T0PS2 007EAA                        _RC2IF 007D25                        i1l262 007C  
                      i2l294 07DA                        i2l497 0FBE              ___awdiv@counter 001E  
                      _VCFG0 007E0C                        _VCFG1 007E0D                        _VNCFG 007E0B  
                      _TRISC 000F94                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initADC 12EE              __end_of_readADC 1170  
             __CFG_EBTRB$OFF 000000              __end_of_initPWM 11C2              __end_of_isdigit 12D2  
              ___ftpack@sign 0075                        atoi@a 000C                        atoi@s 0007  
                      tablat 000FF5                        status 000FD8               __CFG_MCLRE$OFF 000000  
            __initialization 11C2                 __end_of_atoi 0FC8                 __end_of_main 03D0  
                     ??_atoi 0009                       ??_main 002D                ___fttol@sign1 0094  
              __activetblptr 000002               __CFG_RETEN$OFF 000000                    ??_RX2_ISR 000E  
                     _CCP2M2 007A82                       _CCP2M3 007A83                       _CCP3M2 007A6A  
                     _CCP3M3 007A6B                       _CCP4M2 007A52                       _CCP4M3 007A53  
                     _ADRESH 000FC4                       _ADRESL 000FC3                       _CCPR2L 000F51  
                     _CCPR3L 000F4E                       _CCPR4L 000F4B                       _T08BIT 007EAE  
           ___awdiv@dividend 0071                       _ANSEL1 007AE9                       _ANSEL2 007AEA  
                     _ANSEL3 007AEB             __end_of___ftpack 0CE8                       i2l2002 0756  
                     i2l2030 07BE                       i2l2014 0796              __CFG_BBSIZ$BB2K 000000  
                     i2l2008 0776                       i2l2034 07CC                       i2l2026 07B0  
             __CFG_WDTEN$OFF 000000                       i2l1932 0EF6                       i2l1950 0F86  
                     i2l1934 0EFC                       i2l1952 0F8C                       i2l1944 0F3C  
                     i2l1796 12C8                       i2l1948 0F50                       i2l1988 070A  
                     i2l1998 073A                       _RCREG2 000F7A             __end_of___lwtoft 1260  
                     _TMR0IE 007F95                       _SPBRG2 000F7B                       _TMR0IP 007F8A  
                     _TMR2ON 007E52                       _TXREG2 000F79                   _Timer0_ISR 0018  
             __CFG_XINST$OFF 000000                    ??___almod 002D                       ___wmul 1288  
                  ??___awdiv 001E               __CFG_STVREN$ON 000000                    ??___ftdiv 002A  
                  ??___ftmul 0021                    ??___fttol 008F                 readADC@tempo 0023  
                     _setRGB 1208                       _millis 00B1                       clear_0 11C8  
                     clear_1 11D4                       clear_2 11E0                       clear_3 11EC  
                     clear_4 11F8             ___awdiv@quotient 0020                       _strobe 03D0  
                  ??_initADC 001E        ___ftmul@f3_as_product 0025                    ??_readADC 0020  
                  ??_initPWM 001E                    ??_isdigit 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 11FE                ___rparam_used 000001                   ___ftdiv@f1 007F  
                 ___ftdiv@f2 0082                   ___ftdiv@f3 0086     __end_of_changeModeDetect 0DF0  
                 ___ftmul@f1 0079                   ___ftmul@f2 007C                   ___fttol@f1 008B  
             __pcstackCOMRAM 0001                   ___lwtoft@c 0076                   __pbssBANK0 00B1  
                 __pbssBANK1 0100                   __pbssBANK2 0200                   __pbssBANK3 0300  
            __CFG_PLLCFG$OFF 000000           __size_of_initComms 0028                  ?_Timer0_ISR 0001  
                    ?___wmul 0001                      ?_setRGB 009A                    ?___ftpack 0071  
                    ?_strobe 0001                      _T2CKPS0 007E50                      _T2CKPS1 007E51  
                  ?___lwtoft 0076                   _amplitude1 00B8                   _amplitude2 00BA  
                 _amplitude3 00BC             __CFG_CANMX$PORTB 000000                      _SPBRGH2 000F7C  
                    _RX2_ISR 0008              __CFG_PWRTEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                      ___almod 0DF0                   _initTimer0 12EE  
                    ___awdiv 0FC8                      ___ftdiv 0966              __size_of___wmul 0028  
                    ___ftmul 0AAC                      ___fttol 0814                      __pcinit 11C2  
                 ??___ftpack 001E              __size_of_setRGB 002C                      __ramtop 0F00  
                    __ptext0 00C6                      __ptext1 03D0                      __ptext2 1208  
                    __ptext3 1080                      __ptext4 0FC8                      __ptext5 1234  
                    __ptext6 0814                      __ptext7 0AAC                      __ptext8 0966  
                    __ptext9 0BE0            __end_of_initComms 1288                   ??___lwtoft 0021  
                    _initADC 12D2                      _readADC 1114              __size_of_strobe 02EE  
                    _initPWM 1170                      _isdigit 12B0                 __size_of_pwm 0094  
          __CFG_MSSPMSK$MSK7 000000          __size_of_Timer0_ISR 00AA               __pintcode_body 06BE  
       end_of_initialization 11FE                      setRGB@b 009E                      setRGB@g 009C  
                    setRGB@r 009A                __Lmediumconst 0000                      int_func 06BE  
                    postinc0 000FEE                      postinc2 000FDE      __size_of_initialisation 0012  
           __CFG_FOSC$INTIO2 000000                    _TRISBbits 000F93                  ___ftdiv@exp 0089  
          ?_changeModeDetect 0001                  ___ftmul@exp 0024           ??_changeModeDetect 001E  
                ?_initTimer0 0001               __end_of___wmul 12B0               __end_of_setRGB 1234  
             __end_of_strobe 06BE          start_initialization 11C2  changeModeDetect@old_SWITCH1 00B6  
changeModeDetect@old_SWITCH3 00B7                  __end_of_pwm 1114                 ??_Timer0_ISR 0060  
                   ??___wmul 0005                     ??_setRGB 002D                     ??_strobe 00A4  
          __size_of___ftpack 0108                  __pbssCOMRAM 002D            __size_of___lwtoft 002C  
              __pcstackBANK0 0060                     ?_RX2_ISR 0001           __end_of_Timer0_ISR 00C2  
              RX2_ISR@F19171 002D          __size_of_initTimer0 0016                    __pnvBANK0 00B8  
                  __pintcode 0008               _initialisation 1304                     ?___almod 009A  
                   ?___awdiv 0071                     ?___ftdiv 007F                     ?___ftmul 0079  
                   ?___fttol 008B                RX2_ISR@beginB 002F                RX2_ISR@beginG 0030  
              RX2_ISR@beginR 0031                  __pintcodelo 0018             ___almod@dividend 009A  
              RX2_ISR@buffer 0033                     ?_initADC 0001                     ?_readADC 001E  
                   ?_initPWM 0001                     _BAUDCON2 000FB9                     ?_isdigit 0001  
                  _initComms 1260               ___wmul@product 0005                     _PIE3bits 000FA3  
     __end_of_initialisation 1316                     _PIR3bits 000FA4                     _GO_nDONE 007E11  
                   _RCONbits 000FD0              RX2_ISR@compteur 0032                     _TRIGSEL0 007E0E  
                   _TRIGSEL1 007E0F            ___wmul@multiplier 0001             __CFG_SOSCSEL$DIG 000000  
                 ?_initComms 0001             __size_of_RX2_ISR 080C        changeModeDetect@delay 001E  
                   __Hrparam 0000              ?_initialisation 0001                     __Lrparam 0000  
         __CFG_BOREN$SBORDIS 000000                 ??_initTimer0 001E             __size_of___almod 0104  
           __size_of___awdiv 00B8             __size_of___ftdiv 0146             __size_of___ftmul 0134  
           __size_of___fttol 0152               readADC@channel 0022                     ___ftpack 0BE0  
                _isdigit$887 0002                     ___lwtoft 1234    __size_of_changeModeDetect 0108  
           __size_of_initADC 001C             __size_of_readADC 005C             __size_of_initPWM 0052  
           __size_of_isdigit 0022                     __ptext10 0DF0                     __ptext11 1114  
                   __ptext20 0EF4                     __ptext12 1304                     __ptext21 12B0  
                   __ptext13 12EE                     __ptext22 1288                     __ptext14 1170  
                   __ptext15 1260                     __ptext16 12D2                     __ptext17 0CE8  
            ___almod@divisor 009E                 RX2_ISR@input 001C              ___almod@counter 00A2  
         __end_of_initTimer0 1304                __size_of_atoi 00D4                __size_of_main 030A  
                   atoi@sign 000B                     main@argc 00AC                     main@argv 00AE  
        __CFG_INTOSCSEL$HIGH 000000                   _INTCONbits 000FF2                  ??_initComms 001E  
                   isdigit@c 0003                     intlevel1 0000                     intlevel2 0000  
               pwm@dutycycle 0022                   _RCSTA2bits 000FA6                     pwm@color 0024  
         __CFG_WDTPS$1048576 000000                 ___almod@sign 00A3          __CFG_BORPWR$ZPBORMV 000000  
