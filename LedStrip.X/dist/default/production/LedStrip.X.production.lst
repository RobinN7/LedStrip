

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 24 23:25:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	idataCOMRAM
    25  000480                     __pidataCOMRAM:
    26                           	opt stack 0
    27                           
    28                           ;initializer for _B
    29  000480  000A               	dw	10
    30                           
    31                           ;initializer for _G
    32  000482  000A               	dw	10
    33                           
    34                           ;initializer for _R
    35  000484  000A               	dw	10
    36  0000                     _CCPR2L	set	3921
    37  0000                     _CCPR3L	set	3918
    38  0000                     _CCPR4L	set	3915
    39  0000                     _CCP2M2	set	31362
    40  0000                     _CCP2M3	set	31363
    41  0000                     _CCP3M2	set	31338
    42  0000                     _CCP3M3	set	31339
    43  0000                     _CCP4M2	set	31314
    44  0000                     _CCP4M3	set	31315
    45  0000                     _DC2B0	set	31364
    46  0000                     _DC2B1	set	31365
    47  0000                     _DC3B0	set	31340
    48  0000                     _DC3B1	set	31341
    49  0000                     _DC4B0	set	31316
    50  0000                     _DC4B1	set	31317
    51  0000                     _BAUDCON2	set	4025
    52  0000                     _INTCONbits	set	4082
    53  0000                     _PIE3bits	set	4003
    54  0000                     _PIR3bits	set	4004
    55  0000                     _PR2	set	4043
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG2	set	3962
    58  0000                     _RCSTA2bits	set	4006
    59  0000                     _SPBRG2	set	3963
    60  0000                     _SPBRGH2	set	3964
    61  0000                     _TRISBbits	set	3987
    62  0000                     _TRISC	set	3988
    63  0000                     _TXREG2	set	3961
    64  0000                     _TXSTA2bits	set	4026
    65  0000                     _RC2IF	set	32037
    66  0000                     _T2CKPS0	set	32336
    67  0000                     _T2CKPS1	set	32337
    68  0000                     _TMR2ON	set	32338
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  0003C4                     __pcinit:
    74                           	opt stack 0
    75  0003C4                     start_initialization:
    76                           	opt stack 0
    77  0003C4                     __initialization:
    78                           	opt stack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (38 bytes)
    81  0003C4  EE00  F001         	lfsr	0,__pbssCOMRAM
    82  0003C8  0E26               	movlw	38
    83  0003CA                     clear_0:
    84  0003CA  6AEE               	clrf	postinc0,c
    85  0003CC  06E8               	decf	wreg,f,c
    86  0003CE  E1FD               	bnz	clear_0
    87                           
    88                           ; Initialize objects allocated to COMRAM (6 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90  0003D0  0E80               	movlw	low __pidataCOMRAM
    91  0003D2  6EF6               	movwf	tblptrl,c
    92  0003D4  0E04               	movlw	high __pidataCOMRAM
    93  0003D6  6EF7               	movwf	tblptrh,c
    94  0003D8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95  0003DA  6EF8               	movwf	tblptru,c
    96  0003DC  EE00  F047         	lfsr	0,__pdataCOMRAM
    97  0003E0  EE10 F006          	lfsr	1,6
    98  0003E4                     copy_data0:
    99  0003E4  0009               	tblrd		*+
   100  0003E6  CFF5 FFEE          	movff	tablat,postinc0
   101  0003EA  50E5               	movf	postdec1,w,c
   102  0003EC  50E1               	movf	fsr1l,w,c
   103  0003EE  E1FA               	bnz	copy_data0
   104  0003F0                     end_of_initialization:
   105                           	opt stack 0
   106  0003F0                     __end_of__initialization:
   107                           	opt stack 0
   108  0003F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   109  0003F2  6EF8               	movwf	tblptru,c
   110  0003F4  0100               	movlb	0
   111  0003F6  EF36  F002         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           postinc0	equ	0xFEE
   117                           wreg	equ	0xFE8
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	bssCOMRAM
   122  000001                     __pbssCOMRAM:
   123                           	opt stack 0
   124  000001                     _buffer1:
   125                           	opt stack 0
   126  000001                     	ds	16
   127  000011                     high_isr@F19154:
   128                           	opt stack 0
   129  000011                     	ds	2
   130  000013                     _beginB:
   131                           	opt stack 0
   132  000013                     	ds	1
   133  000014                     _beginG:
   134                           	opt stack 0
   135  000014                     	ds	1
   136  000015                     _beginR:
   137                           	opt stack 0
   138  000015                     	ds	1
   139  000016                     _compteur:
   140                           	opt stack 0
   141  000016                     	ds	1
   142  000017                     _buffer:
   143                           	opt stack 0
   144  000017                     	ds	16
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	dataCOMRAM
   155  000047                     __pdataCOMRAM:
   156                           	opt stack 0
   157  000047                     _B:
   158                           	opt stack 0
   159  000047                     	ds	2
   160  000049                     _G:
   161                           	opt stack 0
   162  000049                     	ds	2
   163  00004B                     _R:
   164                           	opt stack 0
   165  00004B                     	ds	2
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           wreg	equ	0xFE8
   172                           postdec1	equ	0xFE5
   173                           fsr1l	equ	0xFE1
   174                           
   175                           	psect	cstackBANK0
   176  000060                     __pcstackBANK0:
   177                           	opt stack 0
   178  000060                     
   179                           ; 2 bytes @ 0x0
   180  000060                     	ds	2
   181  000062                     
   182                           ; 3 bytes @ 0x2
   183  000062                     	ds	3
   184  000065                     tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           postdec1	equ	0xFE5
   191                           fsr1l	equ	0xFE1
   192                           
   193                           ; 0 bytes @ 0x5
   194                           
   195                           	psect	cstackCOMRAM
   196  000027                     __pcstackCOMRAM:
   197                           	opt stack 0
   198  000027                     ??_isdigit:
   199  000027                     ?___wmul:
   200                           	opt stack 0
   201  000027                     ?___awdiv:
   202                           	opt stack 0
   203  000027                     ___wmul@multiplier:
   204                           	opt stack 0
   205  000027                     ___awdiv@dividend:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x0
   209  000027                     	ds	1
   210  000028                     _isdigit$807:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x1
   214  000028                     	ds	1
   215  000029                     isdigit@c:
   216                           	opt stack 0
   217  000029                     ___wmul@multiplicand:
   218                           	opt stack 0
   219  000029                     ___awdiv@divisor:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x2
   223  000029                     	ds	2
   224  00002B                     ___awdiv@counter:
   225                           	opt stack 0
   226  00002B                     ___wmul@product:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x4
   230  00002B                     	ds	1
   231  00002C                     ___awdiv@sign:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x5
   235  00002C                     	ds	1
   236  00002D                     ?_atoi:
   237                           	opt stack 0
   238  00002D                     atoi@s:
   239                           	opt stack 0
   240  00002D                     ___awdiv@quotient:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x6
   244  00002D                     	ds	2
   245  00002F                     ??_atoi:
   246                           
   247                           ; 0 bytes @ 0x8
   248  00002F                     	ds	2
   249  000031                     atoi@sign:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0xA
   253  000031                     	ds	1
   254  000032                     atoi@a:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0xB
   258  000032                     	ds	2
   259  000034                     pwm@dutycycle:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0xD
   263  000034                     	ds	2
   264  000036                     pwm@color:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xF
   268  000036                     	ds	1
   269  000037                     ??_high_isr:
   270                           
   271                           ; 0 bytes @ 0x10
   272  000037                     	ds	14
   273  000045                     high_isr@input:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x1E
   277  000045                     	ds	2
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 180 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;  argc            2    0[BANK0 ] int 
   295 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  2    0[BANK0 ] int 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   307 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   310 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   311 ;;Total ram usage:        5 bytes
   312 ;; Hardware stack levels required when called:    5
   313 ;; This function calls:
   314 ;;		_initialisation
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321  00046C                     __ptext0:
   322                           	opt stack 0
   323  00046C                     _main:
   324                           	opt stack 26
   325                           
   326                           ;main.c: 184: initialisation();
   327                           
   328                           ;incstack = 0
   329  00046C  EC3B  F002         	call	_initialisation	;wreg free
   330  000470  D7FF               	goto	l114
   331                           
   332                           ;main.c: 193: }
   333                           ;main.c: 195: return (0);
   334                           ;	Return value of _main is never used
   335  000472  EFBE  F000         	goto	start
   336  000476                     __end_of_main:
   337                           	opt stack 0
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347 ;; *************** function _initialisation *****************
   348 ;; Defined at:
   349 ;;		line 199 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;		None               void
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:    4
   370 ;; This function calls:
   371 ;;		_initComms
   372 ;;		_initPWM
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text1
   379  000476                     __ptext1:
   380                           	opt stack 0
   381  000476                     _initialisation:
   382                           	opt stack 26
   383                           
   384                           ;main.c: 203: initPWM();
   385                           
   386                           ;incstack = 0
   387  000476  ECB9  F001         	call	_initPWM	;wreg free
   388                           
   389                           ;main.c: 207: initComms();
   390  00047A  ECFD  F001         	call	_initComms	;wreg free
   391  00047E  0012               	return		;funcret
   392  000480                     __end_of_initialisation:
   393                           	opt stack 0
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403 ;; *************** function _initPWM *****************
   404 ;; Defined at:
   405 ;;		line 212 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;		None               void
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    3
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_initialisation
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text2
   434  000372                     __ptext2:
   435                           	opt stack 0
   436  000372                     _initPWM:
   437                           	opt stack 26
   438                           
   439                           ;main.c: 217: PR2=0xFF;
   440                           
   441                           ;incstack = 0
   442  000372  68CB               	setf	4043,c	;volatile
   443                           
   444                           ;main.c: 221: CCPR2L=0b00000000;
   445  000374  0E00               	movlw	0
   446  000376  010F               	movlb	15	; () banked
   447  000378  6F51               	movwf	81,b	;volatile
   448                           
   449                           ;main.c: 222: CCPR3L=0b00000000;
   450  00037A  0E00               	movlw	0
   451  00037C  010F               	movlb	15	; () banked
   452  00037E  6F4E               	movwf	78,b	;volatile
   453                           
   454                           ;main.c: 223: CCPR4L=0b00000000;
   455  000380  0E00               	movlw	0
   456  000382  010F               	movlb	15	; () banked
   457  000384  6F4B               	movwf	75,b	;volatile
   458                           
   459                           ; BSR set to: 15
   460                           ;main.c: 224: DC2B1=0;
   461  000386  010F               	movlb	15	; () banked
   462  000388  9B50               	bcf	80,5,b	;volatile
   463                           
   464                           ; BSR set to: 15
   465                           ;main.c: 225: DC2B0=0;
   466  00038A  010F               	movlb	15	; () banked
   467  00038C  9950               	bcf	80,4,b	;volatile
   468                           
   469                           ; BSR set to: 15
   470                           ;main.c: 226: DC3B1=0;
   471  00038E  010F               	movlb	15	; () banked
   472  000390  9B4D               	bcf	77,5,b	;volatile
   473                           
   474                           ; BSR set to: 15
   475                           ;main.c: 227: DC3B0=0;
   476  000392  010F               	movlb	15	; () banked
   477  000394  994D               	bcf	77,4,b	;volatile
   478                           
   479                           ; BSR set to: 15
   480                           ;main.c: 228: DC4B1=0;
   481  000396  010F               	movlb	15	; () banked
   482  000398  9B4A               	bcf	74,5,b	;volatile
   483                           
   484                           ; BSR set to: 15
   485                           ;main.c: 229: DC4B0=0;
   486  00039A  010F               	movlb	15	; () banked
   487  00039C  994A               	bcf	74,4,b	;volatile
   488                           
   489                           ; BSR set to: 15
   490                           ;main.c: 235: TRISC=TRISC & 0b00111011;
   491  00039E  5094               	movf	3988,w,c	;volatile
   492  0003A0  0B3B               	andlw	59
   493  0003A2  6E94               	movwf	3988,c	;volatile
   494                           
   495                           ; BSR set to: 15
   496                           ;main.c: 238: T2CKPS1=0;
   497  0003A4  92CA               	bcf	4042,1,c	;volatile
   498                           
   499                           ; BSR set to: 15
   500                           ;main.c: 239: T2CKPS0=0;
   501  0003A6  90CA               	bcf	4042,0,c	;volatile
   502                           
   503                           ; BSR set to: 15
   504                           ;main.c: 242: TMR2ON = 1;
   505  0003A8  84CA               	bsf	4042,2,c	;volatile
   506                           
   507                           ; BSR set to: 15
   508                           ;main.c: 245: CCP2M2=1;
   509  0003AA  010F               	movlb	15	; () banked
   510  0003AC  8550               	bsf	80,2,b	;volatile
   511                           
   512                           ; BSR set to: 15
   513                           ;main.c: 246: CCP2M3=1;
   514  0003AE  010F               	movlb	15	; () banked
   515  0003B0  8750               	bsf	80,3,b	;volatile
   516                           
   517                           ; BSR set to: 15
   518                           ;main.c: 247: CCP3M2=1;
   519  0003B2  010F               	movlb	15	; () banked
   520  0003B4  854D               	bsf	77,2,b	;volatile
   521                           
   522                           ; BSR set to: 15
   523                           ;main.c: 248: CCP3M3=1;
   524  0003B6  010F               	movlb	15	; () banked
   525  0003B8  874D               	bsf	77,3,b	;volatile
   526                           
   527                           ; BSR set to: 15
   528                           ;main.c: 249: CCP4M2=1;
   529  0003BA  010F               	movlb	15	; () banked
   530  0003BC  854A               	bsf	74,2,b	;volatile
   531                           
   532                           ; BSR set to: 15
   533                           ;main.c: 250: CCP4M3=1;
   534  0003BE  010F               	movlb	15	; () banked
   535  0003C0  874A               	bsf	74,3,b	;volatile
   536                           
   537                           ; BSR set to: 15
   538  0003C2  0012               	return		;funcret
   539  0003C4                     __end_of_initPWM:
   540                           	opt stack 0
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550 ;; *************** function _initComms *****************
   551 ;; Defined at:
   552 ;;		line 254 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;		None               void
   559 ;; Registers used:
   560 ;;		wreg, status,2
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_initialisation
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text3
   581  0003FA                     __ptext3:
   582                           	opt stack 0
   583  0003FA                     _initComms:
   584                           	opt stack 26
   585                           
   586                           ;main.c: 256: TRISBbits.TRISB7 = 1;
   587                           
   588                           ; BSR set to: 15
   589                           ;incstack = 0
   590  0003FA  8E93               	bsf	3987,7,c	;volatile
   591                           
   592                           ;main.c: 257: TRISBbits.TRISB6 = 0;
   593  0003FC  9C93               	bcf	3987,6,c	;volatile
   594                           
   595                           ;main.c: 260: TXSTA2bits.BRGH = 1;
   596  0003FE  84BA               	bsf	4026,2,c	;volatile
   597                           
   598                           ;main.c: 261: TXSTA2bits.SYNC = 0;
   599  000400  98BA               	bcf	4026,4,c	;volatile
   600                           
   601                           ;main.c: 262: SPBRGH2 = 0;
   602  000402  0E00               	movlw	0
   603  000404  6E7C               	movwf	3964,c	;volatile
   604                           
   605                           ;main.c: 263: SPBRG2 = 51;
   606  000406  0E33               	movlw	51
   607  000408  6E7B               	movwf	3963,c	;volatile
   608                           
   609                           ;main.c: 264: BAUDCON2 = 0x08;
   610  00040A  0E08               	movlw	8
   611  00040C  6EB9               	movwf	4025,c	;volatile
   612                           
   613                           ;main.c: 268: TXSTA2bits.TXEN = 1;
   614  00040E  8ABA               	bsf	4026,5,c	;volatile
   615                           
   616                           ;main.c: 269: RCSTA2bits.CREN = 1;
   617  000410  88A6               	bsf	4006,4,c	;volatile
   618                           
   619                           ;main.c: 270: RCSTA2bits.SPEN = 1;
   620  000412  8EA6               	bsf	4006,7,c	;volatile
   621                           
   622                           ;main.c: 273: RCONbits.IPEN = 1;
   623  000414  8ED0               	bsf	4048,7,c	;volatile
   624                           
   625                           ;main.c: 274: INTCONbits.GIE = 1;
   626  000416  8EF2               	bsf	intcon,7,c	;volatile
   627                           
   628                           ;main.c: 275: INTCONbits.PEIE = 1;
   629  000418  8CF2               	bsf	intcon,6,c	;volatile
   630                           
   631                           ;main.c: 276: PIE3bits.RC2IE = 1;
   632  00041A  8AA3               	bsf	4003,5,c	;volatile
   633                           
   634                           ;main.c: 277: PIE3bits.TX2IE = 0;
   635  00041C  98A3               	bcf	4003,4,c	;volatile
   636                           
   637                           ;main.c: 279: RC2IF = 0;
   638  00041E  9AA4               	bcf	4004,5,c	;volatile
   639  000420  0012               	return		;funcret
   640  000422                     __end_of_initComms:
   641                           	opt stack 0
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           intcon	equ	0xFF2
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652 ;; *************** function _high_isr *****************
   653 ;; Defined at:
   654 ;;		line 118 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  input           2   30[COMRAM] unsigned char [2]
   659 ;; Return value:  Size  Location     Type
   660 ;;		None               void
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   670 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;Total ram usage:       16 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_atoi
   677 ;;		_pwm
   678 ;; This function is called by:
   679 ;;		Interrupt level 2
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	intcode
   684  000008                     __pintcode:
   685                           	opt stack 0
   686  000008                     _high_isr:
   687                           	opt stack 26
   688                           
   689                           ;incstack = 0
   690  000008  CFFA F037          	movff	pclath,??_high_isr
   691  00000C  CFFB F038          	movff	pclatu,??_high_isr+1
   692  000010  CFE9 F039          	movff	fsr0l,??_high_isr+2
   693  000014  CFEA F03A          	movff	fsr0h,??_high_isr+3
   694  000018  CFE1 F03B          	movff	fsr1l,??_high_isr+4
   695  00001C  CFE2 F03C          	movff	fsr1h,??_high_isr+5
   696  000020  CFD9 F03D          	movff	fsr2l,??_high_isr+6
   697  000024  CFDA F03E          	movff	fsr2h,??_high_isr+7
   698  000028  CFF3 F03F          	movff	prodl,??_high_isr+8
   699  00002C  CFF4 F040          	movff	prodh,??_high_isr+9
   700  000030  CFF6 F041          	movff	tblptrl,??_high_isr+10
   701  000034  CFF7 F042          	movff	tblptrh,??_high_isr+11
   702  000038  CFF8 F043          	movff	tblptru,??_high_isr+12
   703  00003C  CFF5 F044          	movff	tablat,??_high_isr+13
   704                           
   705                           ;main.c: 119: RC2IF = 0;
   706  000040  9AA4               	bcf	4004,5,c	;volatile
   707                           
   708                           ;main.c: 122: char input[2] = "";
   709  000042  C011  F045         	movff	high_isr@F19154,high_isr@input
   710  000046  C012  F046         	movff	high_isr@F19154+1,high_isr@input+1
   711                           
   712                           ;main.c: 123: input[0] = RCREG2;
   713  00004A  CF7A F045          	movff	3962,high_isr@input	;volatile
   714                           
   715                           ;main.c: 125: if (beginR==1 | beginG==1 | beginB==1)
   716  00004E  0415               	decf	_beginR,w,c
   717  000050  B4D8               	btfsc	status,2,c
   718  000052  D006               	goto	i2l1136
   719  000054  0414               	decf	_beginG,w,c
   720  000056  B4D8               	btfsc	status,2,c
   721  000058  D003               	goto	i2l1136
   722  00005A  0413               	decf	_beginB,w,c
   723  00005C  A4D8               	btfss	status,2,c
   724  00005E  D05C               	goto	i2l1174
   725  000060                     i2l1136:
   726                           
   727                           ;main.c: 126: {
   728                           ;main.c: 127: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
   729  000060  0E52               	movlw	82
   730  000062  1845               	xorwf	high_isr@input,w,c
   731  000064  B4D8               	btfsc	status,2,c
   732  000066  D014               	goto	i2l1146
   733  000068  0E47               	movlw	71
   734  00006A  1845               	xorwf	high_isr@input,w,c
   735  00006C  B4D8               	btfsc	status,2,c
   736  00006E  D010               	goto	i2l1146
   737  000070  0E42               	movlw	66
   738  000072  1845               	xorwf	high_isr@input,w,c
   739  000074  B4D8               	btfsc	status,2,c
   740  000076  D00C               	goto	i2l1146
   741                           
   742                           ;main.c: 128: {
   743                           ;main.c: 129: buffer[compteur]=input[0];
   744  000078  5016               	movf	_compteur,w,c
   745  00007A  0D01               	mullw	1
   746  00007C  0E17               	movlw	low _buffer
   747  00007E  24F3               	addwf	prodl,w,c
   748  000080  6ED9               	movwf	fsr2l,c
   749  000082  0E00               	movlw	high _buffer
   750  000084  20F4               	addwfc	prodh,w,c
   751  000086  6EDA               	movwf	fsr2h,c
   752  000088  C045  FFDF         	movff	high_isr@input,indf2
   753                           
   754                           ;main.c: 130: compteur+=1;
   755  00008C  2A16               	incf	_compteur,f,c
   756                           
   757                           ;main.c: 131: }
   758  00008E  D044               	goto	i2l1174
   759  000090                     i2l1146:
   760                           
   761                           ;main.c: 133: else
   762                           ;main.c: 134: {
   763                           ;main.c: 135: if (beginR==1)
   764  000090  0415               	decf	_beginR,w,c
   765  000092  A4D8               	btfss	status,2,c
   766  000094  D00E               	goto	i2l1150
   767                           
   768                           ;main.c: 136: pwm('R',atoi(buffer));
   769  000096  0E17               	movlw	low _buffer
   770  000098  6E2D               	movwf	atoi@s,c
   771  00009A  0E00               	movlw	high _buffer
   772  00009C  6E2E               	movwf	atoi@s+1,c
   773  00009E  ECC0  F000         	call	_atoi	;wreg free
   774  0000A2  C02D  F034         	movff	?_atoi,pwm@dutycycle
   775  0000A6  C02E  F035         	movff	?_atoi+1,pwm@dutycycle+1
   776  0000AA  0E52               	movlw	82
   777  0000AC  EC75  F001         	call	_pwm
   778  0000B0  D000               	goto	i2l1150
   779  0000B2                     i2l1150:
   780                           
   781                           ;main.c: 137: beginR=0;
   782  0000B2  0E00               	movlw	0
   783  0000B4  6E15               	movwf	_beginR,c
   784                           
   785                           ;main.c: 138: if (beginG==1)
   786  0000B6  0414               	decf	_beginG,w,c
   787  0000B8  A4D8               	btfss	status,2,c
   788  0000BA  D00E               	goto	i2l1156
   789                           
   790                           ;main.c: 139: pwm('G',atoi(buffer));
   791  0000BC  0E17               	movlw	low _buffer
   792  0000BE  6E2D               	movwf	atoi@s,c
   793  0000C0  0E00               	movlw	high _buffer
   794  0000C2  6E2E               	movwf	atoi@s+1,c
   795  0000C4  ECC0  F000         	call	_atoi	;wreg free
   796  0000C8  C02D  F034         	movff	?_atoi,pwm@dutycycle
   797  0000CC  C02E  F035         	movff	?_atoi+1,pwm@dutycycle+1
   798  0000D0  0E47               	movlw	71
   799  0000D2  EC75  F001         	call	_pwm
   800  0000D6  D000               	goto	i2l1156
   801  0000D8                     i2l1156:
   802                           
   803                           ;main.c: 140: beginG=0;
   804  0000D8  0E00               	movlw	0
   805  0000DA  6E14               	movwf	_beginG,c
   806                           
   807                           ;main.c: 141: if (beginB==1)
   808  0000DC  0413               	decf	_beginB,w,c
   809  0000DE  A4D8               	btfss	status,2,c
   810  0000E0  D00E               	goto	i2l1162
   811                           
   812                           ;main.c: 142: pwm('B',atoi(buffer));
   813  0000E2  0E17               	movlw	low _buffer
   814  0000E4  6E2D               	movwf	atoi@s,c
   815  0000E6  0E00               	movlw	high _buffer
   816  0000E8  6E2E               	movwf	atoi@s+1,c
   817  0000EA  ECC0  F000         	call	_atoi	;wreg free
   818  0000EE  C02D  F034         	movff	?_atoi,pwm@dutycycle
   819  0000F2  C02E  F035         	movff	?_atoi+1,pwm@dutycycle+1
   820  0000F6  0E42               	movlw	66
   821  0000F8  EC75  F001         	call	_pwm
   822  0000FC  D000               	goto	i2l1162
   823  0000FE                     i2l1162:
   824                           
   825                           ;main.c: 143: beginB=0;
   826  0000FE  0E00               	movlw	0
   827  000100  6E13               	movwf	_beginB,c
   828                           
   829                           ;main.c: 146: compteur=0;
   830  000102  0E00               	movlw	0
   831  000104  6E16               	movwf	_compteur,c
   832                           
   833                           ;main.c: 147: buffer[3]='\0';
   834  000106  0E00               	movlw	0
   835  000108  6E1A               	movwf	_buffer+3,c
   836                           
   837                           ;main.c: 148: buffer[2]='\0';
   838  00010A  0E00               	movlw	0
   839  00010C  6E19               	movwf	_buffer+2,c
   840                           
   841                           ;main.c: 149: buffer[1]='\0';
   842  00010E  0E00               	movlw	0
   843  000110  6E18               	movwf	_buffer+1,c
   844                           
   845                           ;main.c: 150: buffer[0]='\0';
   846  000112  0E00               	movlw	0
   847  000114  6E17               	movwf	_buffer,c
   848  000116  D000               	goto	i2l1174
   849  000118                     i2l1174:
   850                           
   851                           ;main.c: 151: }
   852                           ;main.c: 152: }
   853                           ;main.c: 154: if (input[0]=='R')
   854  000118  0E52               	movlw	82
   855  00011A  1845               	xorwf	high_isr@input,w,c
   856  00011C  A4D8               	btfss	status,2,c
   857  00011E  D003               	goto	i2l1178
   858                           
   859                           ;main.c: 155: beginR=1;
   860  000120  0E01               	movlw	1
   861  000122  6E15               	movwf	_beginR,c
   862  000124  D000               	goto	i2l1178
   863  000126                     i2l1178:
   864                           
   865                           ;main.c: 156: if (input[0]=='G')
   866  000126  0E47               	movlw	71
   867  000128  1845               	xorwf	high_isr@input,w,c
   868  00012A  A4D8               	btfss	status,2,c
   869  00012C  D003               	goto	i2l1182
   870                           
   871                           ;main.c: 157: beginG=1;
   872  00012E  0E01               	movlw	1
   873  000130  6E14               	movwf	_beginG,c
   874  000132  D000               	goto	i2l1182
   875  000134                     i2l1182:
   876                           
   877                           ;main.c: 158: if (input[0]=='B')
   878  000134  0E42               	movlw	66
   879  000136  1845               	xorwf	high_isr@input,w,c
   880  000138  A4D8               	btfss	status,2,c
   881  00013A  D003               	goto	i2l110
   882                           
   883                           ;main.c: 159: beginB=1;
   884  00013C  0E01               	movlw	1
   885  00013E  6E13               	movwf	_beginB,c
   886  000140  D000               	goto	i2l110
   887  000142                     i2l110:
   888  000142  C044  FFF5         	movff	??_high_isr+13,tablat
   889  000146  C043  FFF8         	movff	??_high_isr+12,tblptru
   890  00014A  C042  FFF7         	movff	??_high_isr+11,tblptrh
   891  00014E  C041  FFF6         	movff	??_high_isr+10,tblptrl
   892  000152  C040  FFF4         	movff	??_high_isr+9,prodh
   893  000156  C03F  FFF3         	movff	??_high_isr+8,prodl
   894  00015A  C03E  FFDA         	movff	??_high_isr+7,fsr2h
   895  00015E  C03D  FFD9         	movff	??_high_isr+6,fsr2l
   896  000162  C03C  FFE2         	movff	??_high_isr+5,fsr1h
   897  000166  C03B  FFE1         	movff	??_high_isr+4,fsr1l
   898  00016A  C03A  FFEA         	movff	??_high_isr+3,fsr0h
   899  00016E  C039  FFE9         	movff	??_high_isr+2,fsr0l
   900  000172  C038  FFFB         	movff	??_high_isr+1,pclatu
   901  000176  C037  FFFA         	movff	??_high_isr,pclath
   902  00017A  0011               	retfie		f
   903  00017C                     __end_of_high_isr:
   904                           	opt stack 0
   905                           pclatu	equ	0xFFB
   906                           pclath	equ	0xFFA
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           prodh	equ	0xFF4
   912                           prodl	equ	0xFF3
   913                           intcon	equ	0xFF2
   914                           postinc0	equ	0xFEE
   915                           fsr0h	equ	0xFEA
   916                           fsr0l	equ	0xFE9
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1h	equ	0xFE2
   920                           fsr1l	equ	0xFE1
   921                           indf2	equ	0xFDF
   922                           fsr2h	equ	0xFDA
   923                           fsr2l	equ	0xFD9
   924                           status	equ	0xFD8
   925                           
   926 ;; *************** function _pwm *****************
   927 ;; Defined at:
   928 ;;		line 8 in file "converter.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  color           1    wreg     unsigned char 
   931 ;;  dutycycle       2   13[COMRAM] int 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  color           1   15[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    1
   950 ;; This function calls:
   951 ;;		___awdiv
   952 ;; This function is called by:
   953 ;;		_high_isr
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958  0002EA                     __ptext5:
   959                           	opt stack 0
   960  0002EA                     _pwm:
   961                           	opt stack 26
   962                           
   963                           ;incstack = 0
   964                           ;pwm@color stored from wreg
   965  0002EA  6E36               	movwf	pwm@color,c
   966                           
   967                           ;converter.c: 9: switch(color){
   968  0002EC  D036               	goto	i2l1126
   969  0002EE                     i2l1106:
   970                           
   971                           ;converter.c: 11: CCPR2L=dutycycle/4;
   972  0002EE  C034  F027         	movff	pwm@dutycycle,___awdiv@dividend
   973  0002F2  C035  F028         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   974  0002F6  0E00               	movlw	0
   975  0002F8  6E2A               	movwf	___awdiv@divisor+1,c
   976  0002FA  0E04               	movlw	4
   977  0002FC  6E29               	movwf	___awdiv@divisor,c
   978  0002FE  EC2A  F001         	call	___awdiv	;wreg free
   979  000302  5027               	movf	?___awdiv,w,c
   980  000304  010F               	movlb	15	; () banked
   981  000306  6F51               	movwf	81,b	;volatile
   982                           
   983                           ; BSR set to: 15
   984                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
   985  000308  010F               	movlb	15	; () banked
   986  00030A  9B50               	bcf	80,5,b	;volatile
   987                           
   988                           ; BSR set to: 15
   989                           ;converter.c: 13: DC2B0=dutycycle%1;
   990  00030C  010F               	movlb	15	; () banked
   991  00030E  9950               	bcf	80,4,b	;volatile
   992                           
   993                           ;converter.c: 14: break;
   994  000310  0012               	return	
   995  000312                     i2l1112:
   996                           
   997                           ;converter.c: 16: CCPR3L=dutycycle/4;
   998  000312  C034  F027         	movff	pwm@dutycycle,___awdiv@dividend
   999  000316  C035  F028         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1000  00031A  0E00               	movlw	0
  1001  00031C  6E2A               	movwf	___awdiv@divisor+1,c
  1002  00031E  0E04               	movlw	4
  1003  000320  6E29               	movwf	___awdiv@divisor,c
  1004  000322  EC2A  F001         	call	___awdiv	;wreg free
  1005  000326  5027               	movf	?___awdiv,w,c
  1006  000328  010F               	movlb	15	; () banked
  1007  00032A  6F4E               	movwf	78,b	;volatile
  1008                           
  1009                           ; BSR set to: 15
  1010                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1011  00032C  010F               	movlb	15	; () banked
  1012  00032E  9B4D               	bcf	77,5,b	;volatile
  1013                           
  1014                           ; BSR set to: 15
  1015                           ;converter.c: 18: DC3B0=0;
  1016  000330  010F               	movlb	15	; () banked
  1017  000332  994D               	bcf	77,4,b	;volatile
  1018                           
  1019                           ;converter.c: 19: break;
  1020  000334  0012               	return	
  1021  000336                     i2l1118:
  1022                           
  1023                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1024  000336  C034  F027         	movff	pwm@dutycycle,___awdiv@dividend
  1025  00033A  C035  F028         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1026  00033E  0E00               	movlw	0
  1027  000340  6E2A               	movwf	___awdiv@divisor+1,c
  1028  000342  0E04               	movlw	4
  1029  000344  6E29               	movwf	___awdiv@divisor,c
  1030  000346  EC2A  F001         	call	___awdiv	;wreg free
  1031  00034A  5027               	movf	?___awdiv,w,c
  1032  00034C  010F               	movlb	15	; () banked
  1033  00034E  6F4B               	movwf	75,b	;volatile
  1034                           
  1035                           ; BSR set to: 15
  1036                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1037  000350  010F               	movlb	15	; () banked
  1038  000352  9B4A               	bcf	74,5,b	;volatile
  1039                           
  1040                           ; BSR set to: 15
  1041                           ;converter.c: 23: DC4B0=dutycycle%1;
  1042  000354  010F               	movlb	15	; () banked
  1043  000356  994A               	bcf	74,4,b	;volatile
  1044                           
  1045                           ; BSR set to: 15
  1046                           ;converter.c: 25: }
  1047                           
  1048                           ;converter.c: 24: break;
  1049  000358  0012               	return	
  1050  00035A                     i2l1126:
  1051  00035A  5036               	movf	pwm@color,w,c
  1052                           
  1053                           ; Switch size 1, requested type "space"
  1054                           ; Number of cases is 3, Range of values is 66 to 82
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte           10     6 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059  00035C  0A42               	xorlw	66	; case 66
  1060  00035E  B4D8               	btfsc	status,2,c
  1061  000360  D7C6               	goto	i2l1106
  1062  000362  0A05               	xorlw	5	; case 71
  1063  000364  B4D8               	btfsc	status,2,c
  1064  000366  D7E7               	goto	i2l1118
  1065  000368  0A15               	xorlw	21	; case 82
  1066  00036A  A4D8               	btfss	status,2,c
  1067  00036C  0012               	return	
  1068  00036E  D7D1               	goto	i2l1112
  1069  000370  0012               	return		;funcret
  1070  000372                     __end_of_pwm:
  1071                           	opt stack 0
  1072                           pclatu	equ	0xFFB
  1073                           pclath	equ	0xFFA
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           prodh	equ	0xFF4
  1079                           prodl	equ	0xFF3
  1080                           intcon	equ	0xFF2
  1081                           postinc0	equ	0xFEE
  1082                           fsr0h	equ	0xFEA
  1083                           fsr0l	equ	0xFE9
  1084                           wreg	equ	0xFE8
  1085                           postdec1	equ	0xFE5
  1086                           fsr1h	equ	0xFE2
  1087                           fsr1l	equ	0xFE1
  1088                           indf2	equ	0xFDF
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function ___awdiv *****************
  1094 ;; Defined at:
  1095 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  dividend        2    0[COMRAM] int 
  1098 ;;  divisor         2    2[COMRAM] int 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  quotient        2    6[COMRAM] int 
  1101 ;;  sign            1    5[COMRAM] unsigned char 
  1102 ;;  counter         1    4[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2    0[COMRAM] int 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;Total ram usage:        8 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_pwm
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text6
  1126  000254                     __ptext6:
  1127                           	opt stack 0
  1128  000254                     ___awdiv:
  1129                           	opt stack 26
  1130                           
  1131                           ;incstack = 0
  1132  000254  0E00               	movlw	0
  1133  000256  6E2C               	movwf	___awdiv@sign,c
  1134  000258  AE2A               	btfss	___awdiv@divisor+1,7,c
  1135  00025A  D007               	goto	i2l1040
  1136  00025C  6C29               	negf	___awdiv@divisor,c
  1137  00025E  1E2A               	comf	___awdiv@divisor+1,f,c
  1138  000260  B0D8               	btfsc	status,0,c
  1139  000262  2A2A               	incf	___awdiv@divisor+1,f,c
  1140  000264  0E01               	movlw	1
  1141  000266  6E2C               	movwf	___awdiv@sign,c
  1142  000268  D000               	goto	i2l1040
  1143  00026A                     i2l1040:
  1144  00026A  AE28               	btfss	___awdiv@dividend+1,7,c
  1145  00026C  D007               	goto	i2l1046
  1146  00026E  6C27               	negf	___awdiv@dividend,c
  1147  000270  1E28               	comf	___awdiv@dividend+1,f,c
  1148  000272  B0D8               	btfsc	status,0,c
  1149  000274  2A28               	incf	___awdiv@dividend+1,f,c
  1150  000276  0E01               	movlw	1
  1151  000278  1A2C               	xorwf	___awdiv@sign,f,c
  1152  00027A  D000               	goto	i2l1046
  1153  00027C                     i2l1046:
  1154  00027C  0E00               	movlw	0
  1155  00027E  6E2E               	movwf	___awdiv@quotient+1,c
  1156  000280  0E00               	movlw	0
  1157  000282  6E2D               	movwf	___awdiv@quotient,c
  1158  000284  5029               	movf	___awdiv@divisor,w,c
  1159  000286  102A               	iorwf	___awdiv@divisor+1,w,c
  1160  000288  B4D8               	btfsc	status,2,c
  1161  00028A  D021               	goto	i2l1068
  1162  00028C  0E01               	movlw	1
  1163  00028E  6E2B               	movwf	___awdiv@counter,c
  1164  000290  D005               	goto	i2l1054
  1165  000292                     i2l1052:
  1166  000292  90D8               	bcf	status,0,c
  1167  000294  3629               	rlcf	___awdiv@divisor,f,c
  1168  000296  362A               	rlcf	___awdiv@divisor+1,f,c
  1169  000298  2A2B               	incf	___awdiv@counter,f,c
  1170  00029A  D000               	goto	i2l1054
  1171  00029C                     i2l1054:
  1172  00029C  BE2A               	btfsc	___awdiv@divisor+1,7,c
  1173  00029E  D002               	goto	i2l1056
  1174  0002A0  D7F8               	goto	i2l1052
  1175  0002A2  D000               	goto	i2l1056
  1176  0002A4                     i2l1056:
  1177  0002A4  90D8               	bcf	status,0,c
  1178  0002A6  362D               	rlcf	___awdiv@quotient,f,c
  1179  0002A8  362E               	rlcf	___awdiv@quotient+1,f,c
  1180  0002AA  5029               	movf	___awdiv@divisor,w,c
  1181  0002AC  5C27               	subwf	___awdiv@dividend,w,c
  1182  0002AE  502A               	movf	___awdiv@divisor+1,w,c
  1183  0002B0  5828               	subwfb	___awdiv@dividend+1,w,c
  1184  0002B2  A0D8               	btfss	status,0,c
  1185  0002B4  D006               	goto	i2l1064
  1186  0002B6  5029               	movf	___awdiv@divisor,w,c
  1187  0002B8  5E27               	subwf	___awdiv@dividend,f,c
  1188  0002BA  502A               	movf	___awdiv@divisor+1,w,c
  1189  0002BC  5A28               	subwfb	___awdiv@dividend+1,f,c
  1190  0002BE  802D               	bsf	___awdiv@quotient,0,c
  1191  0002C0  D000               	goto	i2l1064
  1192  0002C2                     i2l1064:
  1193  0002C2  90D8               	bcf	status,0,c
  1194  0002C4  322A               	rrcf	___awdiv@divisor+1,f,c
  1195  0002C6  3229               	rrcf	___awdiv@divisor,f,c
  1196  0002C8  2E2B               	decfsz	___awdiv@counter,f,c
  1197  0002CA  D7EC               	goto	i2l1056
  1198  0002CC  D000               	goto	i2l1068
  1199  0002CE                     i2l1068:
  1200  0002CE  502C               	movf	___awdiv@sign,w,c
  1201  0002D0  B4D8               	btfsc	status,2,c
  1202  0002D2  D005               	goto	i2l1072
  1203  0002D4  6C2D               	negf	___awdiv@quotient,c
  1204  0002D6  1E2E               	comf	___awdiv@quotient+1,f,c
  1205  0002D8  B0D8               	btfsc	status,0,c
  1206  0002DA  2A2E               	incf	___awdiv@quotient+1,f,c
  1207  0002DC  D000               	goto	i2l1072
  1208  0002DE                     i2l1072:
  1209  0002DE  C02D  F027         	movff	___awdiv@quotient,?___awdiv
  1210  0002E2  C02E  F028         	movff	___awdiv@quotient+1,?___awdiv+1
  1211  0002E6  0012               	return	
  1212  0002E8  0012               	return		;funcret
  1213  0002EA                     __end_of___awdiv:
  1214                           	opt stack 0
  1215                           pclatu	equ	0xFFB
  1216                           pclath	equ	0xFFA
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           prodh	equ	0xFF4
  1222                           prodl	equ	0xFF3
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           fsr0h	equ	0xFEA
  1226                           fsr0l	equ	0xFE9
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           fsr1h	equ	0xFE2
  1230                           fsr1l	equ	0xFE1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function _atoi *****************
  1237 ;; Defined at:
  1238 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1241 ;;		 -> buffer(16), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  a               2   11[COMRAM] int 
  1244 ;;  sign            1   10[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2    6[COMRAM] int 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;Total ram usage:        7 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    1
  1261 ;; This function calls:
  1262 ;;		___wmul
  1263 ;;		_isdigit
  1264 ;; This function is called by:
  1265 ;;		_high_isr
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270  000180                     __ptext7:
  1271                           	opt stack 0
  1272  000180                     _atoi:
  1273                           	opt stack 26
  1274                           
  1275                           ;incstack = 0
  1276  000180  D003               	goto	i2l1080
  1277  000182                     i2l1078:
  1278  000182  4A2D               	infsnz	atoi@s,f,c
  1279  000184  2A2E               	incf	atoi@s+1,f,c
  1280  000186  D000               	goto	i2l1080
  1281  000188                     i2l1080:
  1282  000188  C02D  FFD9         	movff	atoi@s,fsr2l
  1283  00018C  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1284  000190  0E20               	movlw	32
  1285  000192  18DE               	xorwf	postinc2,w,c
  1286  000194  B4D8               	btfsc	status,2,c
  1287  000196  D7F5               	goto	i2l1078
  1288  000198  C02D  FFD9         	movff	atoi@s,fsr2l
  1289  00019C  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1290  0001A0  0E09               	movlw	9
  1291  0001A2  18DE               	xorwf	postinc2,w,c
  1292  0001A4  B4D8               	btfsc	status,2,c
  1293  0001A6  D7ED               	goto	i2l1078
  1294  0001A8  0E00               	movlw	0
  1295  0001AA  6E33               	movwf	atoi@a+1,c
  1296  0001AC  0E00               	movlw	0
  1297  0001AE  6E32               	movwf	atoi@a,c
  1298  0001B0  0E00               	movlw	0
  1299  0001B2  6E31               	movwf	atoi@sign,c
  1300  0001B4  C02D  FFD9         	movff	atoi@s,fsr2l
  1301  0001B8  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1302  0001BC  0E2D               	movlw	45
  1303  0001BE  18DE               	xorwf	postinc2,w,c
  1304  0001C0  A4D8               	btfss	status,2,c
  1305  0001C2  D002               	goto	i2l1090
  1306  0001C4  2A31               	incf	atoi@sign,f,c
  1307  0001C6  D025               	goto	i2l1096
  1308  0001C8                     i2l1090:
  1309  0001C8  C02D  FFD9         	movff	atoi@s,fsr2l
  1310  0001CC  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1311  0001D0  0E2B               	movlw	43
  1312  0001D2  18DE               	xorwf	postinc2,w,c
  1313  0001D4  A4D8               	btfss	status,2,c
  1314  0001D6  D020               	goto	i2l1098
  1315  0001D8  D01C               	goto	i2l1096
  1316  0001DA  D01E               	goto	i2l1098
  1317  0001DC                     i2l1094:
  1318  0001DC  C032  F027         	movff	atoi@a,___wmul@multiplier
  1319  0001E0  C033  F028         	movff	atoi@a+1,___wmul@multiplier+1
  1320  0001E4  0E00               	movlw	0
  1321  0001E6  6E2A               	movwf	___wmul@multiplicand+1,c
  1322  0001E8  0E0A               	movlw	10
  1323  0001EA  6E29               	movwf	___wmul@multiplicand,c
  1324  0001EC  EC11  F002         	call	___wmul	;wreg free
  1325  0001F0  C02D  FFD9         	movff	atoi@s,fsr2l
  1326  0001F4  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1327  0001F8  50DF               	movf	indf2,w,c
  1328  0001FA  6E2F               	movwf	??_atoi& (0+255),c
  1329  0001FC  6A30               	clrf	(??_atoi+1)& (0+255),c
  1330  0001FE  5027               	movf	?___wmul,w,c
  1331  000200  262F               	addwf	??_atoi,f,c
  1332  000202  5028               	movf	?___wmul+1,w,c
  1333  000204  2230               	addwfc	??_atoi+1,f,c
  1334  000206  0ED0               	movlw	208
  1335  000208  242F               	addwf	??_atoi,w,c
  1336  00020A  6E32               	movwf	atoi@a,c
  1337  00020C  0EFF               	movlw	255
  1338  00020E  2030               	addwfc	??_atoi+1,w,c
  1339  000210  6E33               	movwf	atoi@a+1,c
  1340  000212                     i2l1096:
  1341  000212  4A2D               	infsnz	atoi@s,f,c
  1342  000214  2A2E               	incf	atoi@s+1,f,c
  1343  000216  D000               	goto	i2l1098
  1344  000218                     i2l1098:
  1345  000218  C02D  FFD9         	movff	atoi@s,fsr2l
  1346  00021C  C02E  FFDA         	movff	atoi@s+1,fsr2h
  1347  000220  50DF               	movf	indf2,w,c
  1348  000222  EC25  F002         	call	_isdigit
  1349  000226  B0D8               	btfsc	status,0,c
  1350  000228  D7D9               	goto	i2l1094
  1351  00022A  5031               	movf	atoi@sign,w,c
  1352  00022C  B4D8               	btfsc	status,2,c
  1353  00022E  D00D               	goto	i2l345
  1354  000230  C032  F02F         	movff	atoi@a,??_atoi
  1355  000234  C033  F030         	movff	atoi@a+1,??_atoi+1
  1356  000238  1E2F               	comf	??_atoi,f,c
  1357  00023A  1E30               	comf	??_atoi+1,f,c
  1358  00023C  4A2F               	infsnz	??_atoi,f,c
  1359  00023E  2A30               	incf	??_atoi+1,f,c
  1360  000240  C02F  F02D         	movff	??_atoi,?_atoi
  1361  000244  C030  F02E         	movff	??_atoi+1,?_atoi+1
  1362  000248  0012               	return	
  1363  00024A                     i2l345:
  1364  00024A  C032  F02D         	movff	atoi@a,?_atoi
  1365  00024E  C033  F02E         	movff	atoi@a+1,?_atoi+1
  1366  000252  0012               	return		;funcret
  1367  000254                     __end_of_atoi:
  1368                           	opt stack 0
  1369                           pclatu	equ	0xFFB
  1370                           pclath	equ	0xFFA
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           prodh	equ	0xFF4
  1376                           prodl	equ	0xFF3
  1377                           intcon	equ	0xFF2
  1378                           postinc0	equ	0xFEE
  1379                           fsr0h	equ	0xFEA
  1380                           fsr0l	equ	0xFE9
  1381                           wreg	equ	0xFE8
  1382                           postdec1	equ	0xFE5
  1383                           fsr1h	equ	0xFE2
  1384                           fsr1l	equ	0xFE1
  1385                           indf2	equ	0xFDF
  1386                           postinc2	equ	0xFDE
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _isdigit *****************
  1392 ;; Defined at:
  1393 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  c               1    wreg     unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  c               1    2[COMRAM] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_atoi
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text8
  1421  00044A                     __ptext8:
  1422                           	opt stack 0
  1423  00044A                     _isdigit:
  1424                           	opt stack 26
  1425                           
  1426                           ;incstack = 0
  1427                           ;isdigit@c stored from wreg
  1428  00044A  6E29               	movwf	isdigit@c,c
  1429  00044C  0E00               	movlw	0
  1430  00044E  6E28               	movwf	_isdigit$807,c
  1431  000450  0E3A               	movlw	58
  1432  000452  6029               	cpfslt	isdigit@c,c
  1433  000454  D006               	goto	i2l1028
  1434  000456  0E2F               	movlw	47
  1435  000458  6429               	cpfsgt	isdigit@c,c
  1436  00045A  D003               	goto	i2l1028
  1437  00045C  0E01               	movlw	1
  1438  00045E  6E28               	movwf	_isdigit$807,c
  1439  000460  D000               	goto	i2l1028
  1440  000462                     i2l1028:
  1441  000462  C028  F027         	movff	_isdigit$807,??_isdigit
  1442  000466  3027               	rrcf	??_isdigit,w,c
  1443  000468  0012               	return	
  1444  00046A  0012               	return		;funcret
  1445  00046C                     __end_of_isdigit:
  1446                           	opt stack 0
  1447                           pclatu	equ	0xFFB
  1448                           pclath	equ	0xFFA
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           prodh	equ	0xFF4
  1454                           prodl	equ	0xFF3
  1455                           intcon	equ	0xFF2
  1456                           postinc0	equ	0xFEE
  1457                           fsr0h	equ	0xFEA
  1458                           fsr0l	equ	0xFE9
  1459                           wreg	equ	0xFE8
  1460                           postdec1	equ	0xFE5
  1461                           fsr1h	equ	0xFE2
  1462                           fsr1l	equ	0xFE1
  1463                           indf2	equ	0xFDF
  1464                           postinc2	equ	0xFDE
  1465                           fsr2h	equ	0xFDA
  1466                           fsr2l	equ	0xFD9
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function ___wmul *****************
  1470 ;; Defined at:
  1471 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  multiplier      2    0[COMRAM] unsigned int 
  1474 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  product         2    4[COMRAM] unsigned int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    0[COMRAM] unsigned int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, prodl, prodh
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_atoi
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text9
  1500  000422                     __ptext9:
  1501                           	opt stack 0
  1502  000422                     ___wmul:
  1503                           	opt stack 26
  1504                           
  1505                           ;incstack = 0
  1506  000422  5027               	movf	___wmul@multiplier,w,c
  1507  000424  0229               	mulwf	___wmul@multiplicand,c
  1508  000426  CFF3 F02B          	movff	prodl,___wmul@product
  1509  00042A  CFF4 F02C          	movff	prodh,___wmul@product+1
  1510  00042E  5027               	movf	___wmul@multiplier,w,c
  1511  000430  022A               	mulwf	___wmul@multiplicand+1,c
  1512  000432  50F3               	movf	prodl,w,c
  1513  000434  262C               	addwf	___wmul@product+1,f,c
  1514  000436  5028               	movf	___wmul@multiplier+1,w,c
  1515  000438  0229               	mulwf	___wmul@multiplicand,c
  1516  00043A  50F3               	movf	prodl,w,c
  1517  00043C  262C               	addwf	___wmul@product+1,f,c
  1518  00043E  C02B  F027         	movff	___wmul@product,?___wmul
  1519  000442  C02C  F028         	movff	___wmul@product+1,?___wmul+1
  1520  000446  0012               	return	
  1521  000448  0012               	return		;funcret
  1522  00044A                     __end_of___wmul:
  1523                           	opt stack 0
  1524  0000                     pclatu	equ	0xFFB
  1525                           pclath	equ	0xFFA
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           prodh	equ	0xFF4
  1531                           prodl	equ	0xFF3
  1532                           intcon	equ	0xFF2
  1533                           postinc0	equ	0xFEE
  1534                           fsr0h	equ	0xFEA
  1535                           fsr0l	equ	0xFE9
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           indf2	equ	0xFDF
  1541                           postinc2	equ	0xFDE
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           pclatu	equ	0xFFB
  1546                           pclath	equ	0xFFA
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           fsr0h	equ	0xFEA
  1556                           fsr0l	equ	0xFE9
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1h	equ	0xFE2
  1560                           fsr1l	equ	0xFE1
  1561                           indf2	equ	0xFDF
  1562                           postinc2	equ	0xFDE
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567                           	psect	rparam
  1568  0000                     pclatu	equ	0xFFB
  1569                           pclath	equ	0xFFA
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodh	equ	0xFF4
  1575                           prodl	equ	0xFF3
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           fsr0h	equ	0xFEA
  1579                           fsr0l	equ	0xFE9
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1h	equ	0xFE2
  1583                           fsr1l	equ	0xFE1
  1584                           indf2	equ	0xFDF
  1585                           postinc2	equ	0xFDE
  1586                           fsr2h	equ	0xFDA
  1587                           fsr2l	equ	0xFD9
  1588                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      76
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_pwm
    _pwm->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                              0 BANK0      5     0      5
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                          _initComms
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            16    16      0    1741
                                             16 COMRAM    16    16      0
                               _atoi
                                _pwm
 ---------------------------------------------------------------------------------
 (4) _pwm                                                  3     1      2     865
                                             13 COMRAM     3     1      2
                            ___awdiv
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     618
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _initComms
     _initPWM

 _high_isr (ROOT)
   _atoi
     ___wmul
     _isdigit
   _pwm
     ___awdiv
     _atoi (ARG)
       ___wmul
       _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      4C       1       80.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51       6        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 24 23:25:18 2015

                      _B 0047                        _G 0049                        _R 004B  
           ___awdiv@sign 002C      ___wmul@multiplicand 0029              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l114 0470             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _pwm 02EA  
                    prod 000FF3                      wreg 000FE8               _TXSTA2bits 000FBA  
                   ?_pwm 0034         ??_initialisation 0060                     _atoi 0180  
                   _main 046C                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 017C  
          __CFG_IESO$OFF 000000             ___param_bank 000010                    ??_pwm 0036  
                  _DC2B0 007A84                    _DC2B1 007A85                    _DC3B0 007A6C  
                  _DC3B1 007A6D                    _DC4B0 007A54                    _DC4B1 007A55  
                  ?_atoi 002D                    ?_main 0060          __end_of___awdiv 02EA  
        ___awdiv@divisor 0029                    _RC2IF 007D25                    i2l110 0142  
                  i2l345 024A          ___awdiv@counter 002B                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_initPWM 03C4          __end_of_isdigit 046C  
                  atoi@a 0032                    atoi@s 002D                    tablat 000FF5  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 03C4  
           __end_of_atoi 0254             __end_of_main 0476            high_isr@input 0045  
                 ??_atoi 002F                   ??_main 0065            __activetblptr 000002  
         __CFG_RETEN$OFF 000000                   _CCP2M2 007A82                   _CCP2M3 007A83  
                 _CCP3M2 007A6A                   _CCP3M3 007A6B                   _CCP4M2 007A52  
                 _CCP4M3 007A53                   _CCPR2L 000F51                   _CCPR3L 000F4E  
                 _CCPR4L 000F4B         ___awdiv@dividend 0027                   i2l1040 026A  
                 i2l1112 0312                   i2l1106 02EE                   i2l1028 0462  
                 i2l1052 0292                   i2l1054 029C                   i2l1046 027C  
                 i2l1118 0336                   i2l1126 035A                   i2l1150 00B2  
        __CFG_BBSIZ$BB2K 000000                   i2l1080 0188                   i2l1072 02DE  
                 i2l1064 02C2                   i2l1056 02A4                   i2l1136 0060  
                 i2l1090 01C8                   i2l1162 00FE                   i2l1146 0090  
                 i2l1068 02CE                   i2l1156 00D8                   i2l1094 01DC  
                 i2l1078 0182                   i2l1182 0134                   i2l1174 0118  
                 i2l1096 0212                   i2l1098 0218                   i2l1178 0126  
         __CFG_WDTEN$OFF 000000                   _RCREG2 000F7A                   _SPBRG2 000F7B  
                 _TMR2ON 007E52                   _TXREG2 000F79           __CFG_XINST$OFF 000000  
       __end_of_high_isr 017C                   _beginB 0013                   _beginG 0014  
                 ___wmul 0422                   _beginR 0015                ??___awdiv 002B  
         __CFG_STVREN$ON 000000                   _buffer 0017                   clear_0 03CA  
       ___awdiv@quotient 002D                ??_initPWM 0060             __pdataCOMRAM 0047  
              ??_isdigit 0027                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           high_isr@F19154 0011               __accesstop 0060  
__end_of__initialization 03F0            ___rparam_used 000001           __pcstackCOMRAM 0027  
        __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028                  ?___wmul 0027  
                _T2CKPS0 007E50                  _T2CKPS1 007E51         __CFG_CANMX$PORTB 000000  
                _SPBRGH2 000F7C                ?_high_isr 0027          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0254  
        __size_of___wmul 0028                  __pcinit 03C4                  __ramtop 0F00  
                __ptext0 046C                  __ptext1 0476                  __ptext2 0372  
                __ptext3 03FA                  __ptext5 02EA                  __ptext6 0254  
                __ptext7 0180                  __ptext8 044A                  __ptext9 0422  
                _buffer1 0001        __end_of_initComms 0422                  _initPWM 0372  
                _isdigit 044A             __size_of_pwm 0088        __CFG_MSSPMSK$MSK7 000000  
             ??_high_isr 0037     end_of_initialization 03F0            __Lmediumconst 0000  
                postdec1 000FE5                  postinc0 000FEE                  postinc2 000FDE  
__size_of_initialisation 000A         __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93  
         __end_of___wmul 044A            __pidataCOMRAM 0480      start_initialization 03C4  
            __end_of_pwm 0372                 ??___wmul 002B              __pbssCOMRAM 0001  
          __pcstackBANK0 0060        __size_of_high_isr 0174                __pintcode 0008  
         _initialisation 0476                 ?___awdiv 0027                 ?_initPWM 0027  
               _BAUDCON2 000FB9                 ?_isdigit 0027                _initComms 03FA  
         ___wmul@product 002B                 _PIE3bits 000FA3   __end_of_initialisation 0480  
               _PIR3bits 000FA4                 _RCONbits 000FD0        ___wmul@multiplier 0027  
       __CFG_SOSCSEL$DIG 000000               ?_initComms 0027                copy_data0 03E4  
               __Hrparam 0000          ?_initialisation 0027                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 0096              _isdigit$807 0028  
       __size_of_initPWM 0052         __size_of_isdigit 0022                 _high_isr 0008  
               _compteur 0016            __size_of_atoi 00D4            __size_of_main 000A  
               atoi@sign 0031                 main@argc 0060                 main@argv 0062  
    __CFG_INTOSCSEL$HIGH 000000               _INTCONbits 000FF2              ??_initComms 0060  
               isdigit@c 0029                 intlevel2 0000             pwm@dutycycle 0034  
             _RCSTA2bits 000FA6                 pwm@color 0036       __CFG_WDTPS$1048576 000000  
    __CFG_BORPWR$ZPBORMV 000000  
