

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 24 20:59:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	idataCOMRAM
    27  0005F8                     __pidataCOMRAM:
    28                           	opt stack 0
    29                           
    30                           ;initializer for _B
    31  0005F8  0064               	dw	100
    32                           
    33                           ;initializer for _G
    34  0005FA  0064               	dw	100
    35                           
    36                           ;initializer for _R
    37  0005FC  0064               	dw	100
    38  0000                     _CCPR2L	set	3921
    39  0000                     _CCPR3L	set	3918
    40  0000                     _CCPR4L	set	3915
    41  0000                     _CCP2M2	set	31362
    42  0000                     _CCP2M3	set	31363
    43  0000                     _CCP3M2	set	31338
    44  0000                     _CCP3M3	set	31339
    45  0000                     _CCP4M2	set	31314
    46  0000                     _CCP4M3	set	31315
    47  0000                     _DC2B0	set	31364
    48  0000                     _DC2B1	set	31365
    49  0000                     _DC3B0	set	31340
    50  0000                     _DC3B1	set	31341
    51  0000                     _DC4B0	set	31316
    52  0000                     _DC4B1	set	31317
    53  0000                     _BAUDCON2	set	4025
    54  0000                     _INTCONbits	set	4082
    55  0000                     _PIE3bits	set	4003
    56  0000                     _PIR3bits	set	4004
    57  0000                     _PR2	set	4043
    58  0000                     _RCONbits	set	4048
    59  0000                     _RCREG2	set	3962
    60  0000                     _RCSTA2bits	set	4006
    61  0000                     _SPBRG2	set	3963
    62  0000                     _SPBRGH2	set	3964
    63  0000                     _TRISBbits	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TXREG2	set	3961
    66  0000                     _TXSTA2bits	set	4026
    67  0000                     _RC2IF	set	32037
    68  0000                     _T2CKPS0	set	32336
    69  0000                     _T2CKPS1	set	32337
    70  0000                     _TMR2ON	set	32338
    71                           
    72                           ; #config settings
    73  0000                     
    74                           	psect	cinit
    75  000546                     __pcinit:
    76                           	opt stack 0
    77  000546                     start_initialization:
    78                           	opt stack 0
    79  000546                     __initialization:
    80                           	opt stack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (22 bytes)
    83  000546  EE00  F024         	lfsr	0,__pbssCOMRAM
    84  00054A  0E16               	movlw	22
    85  00054C                     clear_0:
    86  00054C  6AEE               	clrf	postinc0,c
    87  00054E  06E8               	decf	wreg,f,c
    88  000550  E1FD               	bnz	clear_0
    89                           
    90                           ; Initialize objects allocated to COMRAM (6 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  000552  0EF8               	movlw	low __pidataCOMRAM
    93  000554  6EF6               	movwf	tblptrl,c
    94  000556  0E05               	movlw	high __pidataCOMRAM
    95  000558  6EF7               	movwf	tblptrh,c
    96  00055A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  00055C  6EF8               	movwf	tblptru,c
    98  00055E  EE00  F03A         	lfsr	0,__pdataCOMRAM
    99  000562  EE10 F006          	lfsr	1,6
   100  000566                     copy_data0:
   101  000566  0009               	tblrd		*+
   102  000568  CFF5 FFEE          	movff	tablat,postinc0
   103  00056C  50E5               	movf	postdec1,w,c
   104  00056E  50E1               	movf	fsr1l,w,c
   105  000570  E1FA               	bnz	copy_data0
   106  000572                     end_of_initialization:
   107                           	opt stack 0
   108  000572                     __end_of__initialization:
   109                           	opt stack 0
   110  000572  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111  000574  6EF8               	movwf	tblptru,c
   112  000576  0100               	movlb	0
   113  000578  EF84  F002         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           tblptrl	equ	0xFF6
   117                           tablat	equ	0xFF5
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           postdec1	equ	0xFE5
   121                           fsr1l	equ	0xFE1
   122                           
   123                           	psect	bssCOMRAM
   124  000024                     __pbssCOMRAM:
   125                           	opt stack 0
   126  000024                     low_interrupt@F19153:
   127                           	opt stack 0
   128  000024                     	ds	2
   129  000026                     _beginB:
   130                           	opt stack 0
   131  000026                     	ds	1
   132  000027                     _beginG:
   133                           	opt stack 0
   134  000027                     	ds	1
   135  000028                     _beginR:
   136                           	opt stack 0
   137  000028                     	ds	1
   138  000029                     _compteur:
   139                           	opt stack 0
   140  000029                     	ds	1
   141  00002A                     _buffer:
   142                           	opt stack 0
   143  00002A                     	ds	16
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	dataCOMRAM
   154  00003A                     __pdataCOMRAM:
   155                           	opt stack 0
   156  00003A                     _B:
   157                           	opt stack 0
   158  00003A                     	ds	2
   159  00003C                     _G:
   160                           	opt stack 0
   161  00003C                     	ds	2
   162  00003E                     _R:
   163                           	opt stack 0
   164  00003E                     	ds	2
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           postdec1	equ	0xFE5
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	cstackBANK0
   175  000060                     __pcstackBANK0:
   176                           	opt stack 0
   177  000060                     ?___awdiv:
   178                           	opt stack 0
   179  000060                     ___awdiv@dividend:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x0
   183  000060                     	ds	2
   184  000062                     ___awdiv@divisor:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x2
   188  000062                     	ds	2
   189  000064                     ___awdiv@counter:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x4
   193  000064                     	ds	1
   194  000065                     ___awdiv@sign:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x5
   198  000065                     	ds	1
   199  000066                     ___awdiv@quotient:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x6
   203  000066                     	ds	2
   204  000068                     
   205                           ; 2 bytes @ 0x8
   206  000068                     	ds	2
   207  00006A                     
   208                           ; 3 bytes @ 0xA
   209  00006A                     	ds	3
   210  00006D                     main@delay:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0xD
   214  00006D                     	ds	2
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224                           	psect	cstackCOMRAM
   225  000001                     __pcstackCOMRAM:
   226                           	opt stack 0
   227  000001                     ??_isdigit:
   228  000001                     ?___wmul:
   229                           	opt stack 0
   230  000001                     ?i2___awdiv:
   231                           	opt stack 0
   232  000001                     ___wmul@multiplier:
   233                           	opt stack 0
   234  000001                     i2___awdiv@dividend:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  000001                     	ds	1
   239  000002                     _isdigit$807:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x1
   243  000002                     	ds	1
   244  000003                     isdigit@c:
   245                           	opt stack 0
   246  000003                     ___wmul@multiplicand:
   247                           	opt stack 0
   248  000003                     i2___awdiv@divisor:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252  000003                     	ds	2
   253  000005                     i2___awdiv@counter:
   254                           	opt stack 0
   255  000005                     ___wmul@product:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x4
   259  000005                     	ds	1
   260  000006                     i2___awdiv@sign:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x5
   264  000006                     	ds	1
   265  000007                     ?_atoi:
   266                           	opt stack 0
   267  000007                     atoi@s:
   268                           	opt stack 0
   269  000007                     i2___awdiv@quotient:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x6
   273  000007                     	ds	2
   274  000009                     ??_atoi:
   275                           
   276                           ; 0 bytes @ 0x8
   277  000009                     	ds	2
   278  00000B                     atoi@sign:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0xA
   282  00000B                     	ds	1
   283  00000C                     atoi@a:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0xB
   287  00000C                     	ds	2
   288  00000E                     i2pwm@dutycycle:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0xD
   292  00000E                     	ds	2
   293  000010                     i2pwm@color:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0xF
   297  000010                     	ds	1
   298  000011                     ??_low_interrupt:
   299                           
   300                           ; 0 bytes @ 0x10
   301  000011                     	ds	14
   302  00001F                     low_interrupt@input:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x1E
   306  00001F                     	ds	2
   307  000021                     pwm@dutycycle:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x20
   311  000021                     	ds	2
   312  000023                     pwm@color:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x22
   316  000023                     	ds	1
   317  000024                     tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           ; 0 bytes @ 0x23
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 170 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;  argc            2    8[BANK0 ] int 
   335 ;;  argv            3   10[BANK0 ] PTR PTR unsigned char 
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  delay           2   13[BANK0 ] int 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  2    8[BANK0 ] int 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   347 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   350 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   351 ;;Total ram usage:        7 bytes
   352 ;; Hardware stack levels required when called:    5
   353 ;; This function calls:
   354 ;;		_initialisation
   355 ;;		_pwm
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362  000508                     __ptext0:
   363                           	opt stack 0
   364  000508                     _main:
   365                           	opt stack 26
   366                           
   367                           ;main.c: 173: int delay=0;
   368                           
   369                           ;incstack = 0
   370  000508  0E00               	movlw	0
   371  00050A  0100               	movlb	0	; () banked
   372  00050C  6F6E               	movwf	(main@delay+1)& (0+255),b
   373  00050E  0E00               	movlw	0
   374  000510  6F6D               	movwf	main@delay& (0+255),b
   375                           
   376                           ; BSR set to: 0
   377                           ;main.c: 174: initialisation();
   378  000512  ECF7  F002         	call	_initialisation	;wreg free
   379                           
   380                           ;main.c: 175: pwm('R',10);
   381  000516  0E00               	movlw	0
   382  000518  6E22               	movwf	pwm@dutycycle+1,c
   383  00051A  0E0A               	movlw	10
   384  00051C  6E21               	movwf	pwm@dutycycle,c
   385  00051E  0E52               	movlw	82
   386  000520  ECCD  F001         	call	_pwm
   387                           
   388                           ;main.c: 176: pwm('G',10);
   389  000524  0E00               	movlw	0
   390  000526  6E22               	movwf	pwm@dutycycle+1,c
   391  000528  0E0A               	movlw	10
   392  00052A  6E21               	movwf	pwm@dutycycle,c
   393  00052C  0E47               	movlw	71
   394  00052E  ECCD  F001         	call	_pwm
   395                           
   396                           ;main.c: 177: pwm('B',10);
   397  000532  0E00               	movlw	0
   398  000534  6E22               	movwf	pwm@dutycycle+1,c
   399  000536  0E0A               	movlw	10
   400  000538  6E21               	movwf	pwm@dutycycle,c
   401  00053A  0E42               	movlw	66
   402  00053C  ECCD  F001         	call	_pwm
   403  000540  D7FF               	goto	l111
   404                           
   405                           ;main.c: 184: }
   406                           ;main.c: 186: return (0);
   407                           ;	Return value of _main is never used
   408  000542  EFAE  F000         	goto	start
   409  000546                     __end_of_main:
   410                           	opt stack 0
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420 ;; *************** function _pwm *****************
   421 ;; Defined at:
   422 ;;		line 8 in file "converter.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  color           1    wreg     unsigned char 
   425 ;;  dutycycle       2   32[COMRAM] int 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  color           1   34[COMRAM] unsigned char 
   428 ;; Return value:  Size  Location     Type
   429 ;;		None               void
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   441 ;;Total ram usage:        3 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; Hardware stack levels required when called:    4
   444 ;; This function calls:
   445 ;;		___awdiv
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text1
   452  00039A                     __ptext1:
   453                           	opt stack 0
   454  00039A                     _pwm:
   455                           	opt stack 26
   456                           
   457                           ;incstack = 0
   458                           ;pwm@color stored from wreg
   459  00039A  6E23               	movwf	pwm@color,c
   460                           
   461                           ;converter.c: 9: switch(color){
   462  00039C  D03C               	goto	l1441
   463  00039E                     l1421:
   464                           
   465                           ;converter.c: 11: CCPR2L=dutycycle/4;
   466  00039E  C021  F060         	movff	pwm@dutycycle,___awdiv@dividend
   467  0003A2  C022  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   468  0003A6  0E00               	movlw	0
   469  0003A8  0100               	movlb	0	; () banked
   470  0003AA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   471  0003AC  0E04               	movlw	4
   472  0003AE  6F62               	movwf	___awdiv@divisor& (0+255),b
   473  0003B0  EC1A  F001         	call	___awdiv	;wreg free
   474  0003B4  0100               	movlb	0	; () banked
   475  0003B6  5160               	movf	?___awdiv& (0+255),w,b
   476  0003B8  010F               	movlb	15	; () banked
   477  0003BA  6F51               	movwf	81,b	;volatile
   478                           
   479                           ; BSR set to: 15
   480                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
   481  0003BC  010F               	movlb	15	; () banked
   482  0003BE  9B50               	bcf	80,5,b	;volatile
   483                           
   484                           ; BSR set to: 15
   485                           ;converter.c: 13: DC2B0=dutycycle%1;
   486  0003C0  010F               	movlb	15	; () banked
   487  0003C2  9950               	bcf	80,4,b	;volatile
   488                           
   489                           ;converter.c: 14: break;
   490  0003C4  0012               	return	
   491  0003C6                     l1427:
   492                           
   493                           ;converter.c: 16: CCPR3L=dutycycle/4;
   494  0003C6  C021  F060         	movff	pwm@dutycycle,___awdiv@dividend
   495  0003CA  C022  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   496  0003CE  0E00               	movlw	0
   497  0003D0  0100               	movlb	0	; () banked
   498  0003D2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   499  0003D4  0E04               	movlw	4
   500  0003D6  6F62               	movwf	___awdiv@divisor& (0+255),b
   501  0003D8  EC1A  F001         	call	___awdiv	;wreg free
   502  0003DC  0100               	movlb	0	; () banked
   503  0003DE  5160               	movf	?___awdiv& (0+255),w,b
   504  0003E0  010F               	movlb	15	; () banked
   505  0003E2  6F4E               	movwf	78,b	;volatile
   506                           
   507                           ; BSR set to: 15
   508                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
   509  0003E4  010F               	movlb	15	; () banked
   510  0003E6  9B4D               	bcf	77,5,b	;volatile
   511                           
   512                           ; BSR set to: 15
   513                           ;converter.c: 18: DC3B0=0;
   514  0003E8  010F               	movlb	15	; () banked
   515  0003EA  994D               	bcf	77,4,b	;volatile
   516                           
   517                           ;converter.c: 19: break;
   518  0003EC  0012               	return	
   519  0003EE                     l1433:
   520                           
   521                           ;converter.c: 21: CCPR4L=dutycycle/4;
   522  0003EE  C021  F060         	movff	pwm@dutycycle,___awdiv@dividend
   523  0003F2  C022  F061         	movff	pwm@dutycycle+1,___awdiv@dividend+1
   524  0003F6  0E00               	movlw	0
   525  0003F8  0100               	movlb	0	; () banked
   526  0003FA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   527  0003FC  0E04               	movlw	4
   528  0003FE  6F62               	movwf	___awdiv@divisor& (0+255),b
   529  000400  EC1A  F001         	call	___awdiv	;wreg free
   530  000404  0100               	movlb	0	; () banked
   531  000406  5160               	movf	?___awdiv& (0+255),w,b
   532  000408  010F               	movlb	15	; () banked
   533  00040A  6F4B               	movwf	75,b	;volatile
   534                           
   535                           ; BSR set to: 15
   536                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
   537  00040C  010F               	movlb	15	; () banked
   538  00040E  9B4A               	bcf	74,5,b	;volatile
   539                           
   540                           ; BSR set to: 15
   541                           ;converter.c: 23: DC4B0=dutycycle%1;
   542  000410  010F               	movlb	15	; () banked
   543  000412  994A               	bcf	74,4,b	;volatile
   544                           
   545                           ; BSR set to: 15
   546                           ;converter.c: 25: }
   547                           
   548                           ;converter.c: 24: break;
   549  000414  0012               	return	
   550  000416                     l1441:
   551  000416  5023               	movf	pwm@color,w,c
   552                           
   553                           ; Switch size 1, requested type "space"
   554                           ; Number of cases is 3, Range of values is 66 to 82
   555                           ; switch strategies available:
   556                           ; Name         Instructions Cycles
   557                           ; simple_byte           10     6 (average)
   558                           ;	Chosen strategy is simple_byte
   559  000418  0A42               	xorlw	66	; case 66
   560  00041A  B4D8               	btfsc	status,2,c
   561  00041C  D7C0               	goto	l1421
   562  00041E  0A05               	xorlw	5	; case 71
   563  000420  B4D8               	btfsc	status,2,c
   564  000422  D7E5               	goto	l1433
   565  000424  0A15               	xorlw	21	; case 82
   566  000426  A4D8               	btfss	status,2,c
   567  000428  0012               	return	
   568  00042A  D7CD               	goto	l1427
   569  00042C  0012               	return		;funcret
   570  00042E                     __end_of_pwm:
   571                           	opt stack 0
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           fsr1l	equ	0xFE1
   580                           status	equ	0xFD8
   581                           
   582 ;; *************** function ___awdiv *****************
   583 ;; Defined at:
   584 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  dividend        2    0[BANK0 ] int 
   587 ;;  divisor         2    2[BANK0 ] int 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  quotient        2    6[BANK0 ] int 
   590 ;;  sign            1    5[BANK0 ] unsigned char 
   591 ;;  counter         1    4[BANK0 ] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2    0[BANK0 ] int 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   605 ;;Total ram usage:        8 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_pwm
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text2
   616  000234                     __ptext2:
   617                           	opt stack 0
   618  000234                     ___awdiv:
   619                           	opt stack 26
   620                           
   621                           ;incstack = 0
   622  000234  0E00               	movlw	0
   623  000236  0100               	movlb	0	; () banked
   624  000238  6F65               	movwf	___awdiv@sign& (0+255),b
   625                           
   626                           ; BSR set to: 0
   627  00023A  0100               	movlb	0	; () banked
   628  00023C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
   629  00023E  D009               	goto	l1383
   630                           
   631                           ; BSR set to: 0
   632  000240  0100               	movlb	0	; () banked
   633  000242  6D62               	negf	___awdiv@divisor& (0+255),b
   634  000244  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
   635  000246  B0D8               	btfsc	status,0,c
   636  000248  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
   637                           
   638                           ; BSR set to: 0
   639  00024A  0E01               	movlw	1
   640  00024C  0100               	movlb	0	; () banked
   641  00024E  6F65               	movwf	___awdiv@sign& (0+255),b
   642  000250  D000               	goto	l1383
   643  000252                     l1383:
   644                           
   645                           ; BSR set to: 0
   646  000252  0100               	movlb	0	; () banked
   647  000254  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
   648  000256  D009               	goto	l1389
   649                           
   650                           ; BSR set to: 0
   651  000258  0100               	movlb	0	; () banked
   652  00025A  6D60               	negf	___awdiv@dividend& (0+255),b
   653  00025C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
   654  00025E  B0D8               	btfsc	status,0,c
   655  000260  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
   656                           
   657                           ; BSR set to: 0
   658  000262  0E01               	movlw	1
   659  000264  0100               	movlb	0	; () banked
   660  000266  1B65               	xorwf	___awdiv@sign& (0+255),f,b
   661  000268  D000               	goto	l1389
   662  00026A                     l1389:
   663                           
   664                           ; BSR set to: 0
   665  00026A  0E00               	movlw	0
   666  00026C  0100               	movlb	0	; () banked
   667  00026E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
   668  000270  0E00               	movlw	0
   669  000272  6F66               	movwf	___awdiv@quotient& (0+255),b
   670                           
   671                           ; BSR set to: 0
   672  000274  0100               	movlb	0	; () banked
   673  000276  5162               	movf	___awdiv@divisor& (0+255),w,b
   674  000278  0100               	movlb	0	; () banked
   675  00027A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
   676  00027C  B4D8               	btfsc	status,2,c
   677  00027E  D031               	goto	l1411
   678                           
   679                           ; BSR set to: 0
   680  000280  0E01               	movlw	1
   681  000282  0100               	movlb	0	; () banked
   682  000284  6F64               	movwf	___awdiv@counter& (0+255),b
   683  000286  D007               	goto	l1397
   684  000288                     l1395:
   685                           
   686                           ; BSR set to: 0
   687  000288  0100               	movlb	0	; () banked
   688  00028A  90D8               	bcf	status,0,c
   689  00028C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
   690  00028E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
   691  000290  0100               	movlb	0	; () banked
   692  000292  2B64               	incf	___awdiv@counter& (0+255),f,b
   693  000294  D000               	goto	l1397
   694  000296                     l1397:
   695                           
   696                           ; BSR set to: 0
   697  000296  0100               	movlb	0	; () banked
   698  000298  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
   699  00029A  D002               	goto	l1399
   700  00029C  D7F5               	goto	l1395
   701                           
   702                           ; BSR set to: 0
   703  00029E  D000               	goto	l1399
   704  0002A0                     l1399:
   705                           
   706                           ; BSR set to: 0
   707  0002A0  0100               	movlb	0	; () banked
   708  0002A2  90D8               	bcf	status,0,c
   709  0002A4  3766               	rlcf	___awdiv@quotient& (0+255),f,b
   710  0002A6  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
   711                           
   712                           ; BSR set to: 0
   713  0002A8  0100               	movlb	0	; () banked
   714  0002AA  5162               	movf	___awdiv@divisor& (0+255),w,b
   715  0002AC  0100               	movlb	0	; () banked
   716  0002AE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
   717  0002B0  0100               	movlb	0	; () banked
   718  0002B2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
   719  0002B4  0100               	movlb	0	; () banked
   720  0002B6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
   721  0002B8  A0D8               	btfss	status,0,c
   722  0002BA  D00B               	goto	l1407
   723                           
   724                           ; BSR set to: 0
   725  0002BC  0100               	movlb	0	; () banked
   726  0002BE  5162               	movf	___awdiv@divisor& (0+255),w,b
   727  0002C0  0100               	movlb	0	; () banked
   728  0002C2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
   729  0002C4  0100               	movlb	0	; () banked
   730  0002C6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
   731  0002C8  0100               	movlb	0	; () banked
   732  0002CA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
   733                           
   734                           ; BSR set to: 0
   735  0002CC  0100               	movlb	0	; () banked
   736  0002CE  8166               	bsf	___awdiv@quotient& (0+255),0,b
   737  0002D0  D000               	goto	l1407
   738  0002D2                     l1407:
   739                           
   740                           ; BSR set to: 0
   741  0002D2  0100               	movlb	0	; () banked
   742  0002D4  90D8               	bcf	status,0,c
   743  0002D6  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
   744  0002D8  3362               	rrcf	___awdiv@divisor& (0+255),f,b
   745                           
   746                           ; BSR set to: 0
   747  0002DA  0100               	movlb	0	; () banked
   748  0002DC  2F64               	decfsz	___awdiv@counter& (0+255),f,b
   749  0002DE  D7E0               	goto	l1399
   750                           
   751                           ; BSR set to: 0
   752  0002E0  D000               	goto	l1411
   753  0002E2                     l1411:
   754                           
   755                           ; BSR set to: 0
   756  0002E2  0100               	movlb	0	; () banked
   757  0002E4  5165               	movf	___awdiv@sign& (0+255),w,b
   758  0002E6  0100               	movlb	0	; () banked
   759  0002E8  B4D8               	btfsc	status,2,c
   760  0002EA  D006               	goto	l1415
   761                           
   762                           ; BSR set to: 0
   763  0002EC  0100               	movlb	0	; () banked
   764  0002EE  6D66               	negf	___awdiv@quotient& (0+255),b
   765  0002F0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
   766  0002F2  B0D8               	btfsc	status,0,c
   767  0002F4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
   768  0002F6  D000               	goto	l1415
   769  0002F8                     l1415:
   770                           
   771                           ; BSR set to: 0
   772  0002F8  C066  F060         	movff	___awdiv@quotient,?___awdiv
   773  0002FC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
   774  000300  0012               	return	
   775                           
   776                           ; BSR set to: 0
   777                           
   778                           ; BSR set to: 0
   779  000302  0012               	return		;funcret
   780  000304                     __end_of___awdiv:
   781                           	opt stack 0
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           postdec1	equ	0xFE5
   789                           fsr1l	equ	0xFE1
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _initialisation *****************
   793 ;; Defined at:
   794 ;;		line 190 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;		None               void
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    4
   815 ;; This function calls:
   816 ;;		_initComms
   817 ;;		_initPWM
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text3
   824  0005EE                     __ptext3:
   825                           	opt stack 0
   826  0005EE                     _initialisation:
   827                           	opt stack 26
   828                           
   829                           ;main.c: 194: initPWM();
   830                           
   831                           ; BSR set to: 0
   832                           ;incstack = 0
   833  0005EE  EC5B  F002         	call	_initPWM	;wreg free
   834                           
   835                           ;main.c: 198: initComms();
   836  0005F2  ECBE  F002         	call	_initComms	;wreg free
   837  0005F6  0012               	return		;funcret
   838  0005F8                     __end_of_initialisation:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           postdec1	equ	0xFE5
   847                           fsr1l	equ	0xFE1
   848                           status	equ	0xFD8
   849                           
   850 ;; *************** function _initPWM *****************
   851 ;; Defined at:
   852 ;;		line 203 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    3
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_initialisation
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text4
   881  0004B6                     __ptext4:
   882                           	opt stack 0
   883  0004B6                     _initPWM:
   884                           	opt stack 26
   885                           
   886                           ;main.c: 208: PR2=0xFF;
   887                           
   888                           ;incstack = 0
   889  0004B6  68CB               	setf	4043,c	;volatile
   890                           
   891                           ;main.c: 212: CCPR2L=0b00000000;
   892  0004B8  0E00               	movlw	0
   893  0004BA  010F               	movlb	15	; () banked
   894  0004BC  6F51               	movwf	81,b	;volatile
   895                           
   896                           ;main.c: 213: CCPR3L=0b00000000;
   897  0004BE  0E00               	movlw	0
   898  0004C0  010F               	movlb	15	; () banked
   899  0004C2  6F4E               	movwf	78,b	;volatile
   900                           
   901                           ;main.c: 214: CCPR4L=0b00000000;
   902  0004C4  0E00               	movlw	0
   903  0004C6  010F               	movlb	15	; () banked
   904  0004C8  6F4B               	movwf	75,b	;volatile
   905                           
   906                           ; BSR set to: 15
   907                           ;main.c: 215: DC2B1=0;
   908  0004CA  010F               	movlb	15	; () banked
   909  0004CC  9B50               	bcf	80,5,b	;volatile
   910                           
   911                           ; BSR set to: 15
   912                           ;main.c: 216: DC2B0=0;
   913  0004CE  010F               	movlb	15	; () banked
   914  0004D0  9950               	bcf	80,4,b	;volatile
   915                           
   916                           ; BSR set to: 15
   917                           ;main.c: 217: DC3B1=0;
   918  0004D2  010F               	movlb	15	; () banked
   919  0004D4  9B4D               	bcf	77,5,b	;volatile
   920                           
   921                           ; BSR set to: 15
   922                           ;main.c: 218: DC3B0=0;
   923  0004D6  010F               	movlb	15	; () banked
   924  0004D8  994D               	bcf	77,4,b	;volatile
   925                           
   926                           ; BSR set to: 15
   927                           ;main.c: 219: DC4B1=0;
   928  0004DA  010F               	movlb	15	; () banked
   929  0004DC  9B4A               	bcf	74,5,b	;volatile
   930                           
   931                           ; BSR set to: 15
   932                           ;main.c: 220: DC4B0=0;
   933  0004DE  010F               	movlb	15	; () banked
   934  0004E0  994A               	bcf	74,4,b	;volatile
   935                           
   936                           ; BSR set to: 15
   937                           ;main.c: 226: TRISC=TRISC & 0b00111011;
   938  0004E2  5094               	movf	3988,w,c	;volatile
   939  0004E4  0B3B               	andlw	59
   940  0004E6  6E94               	movwf	3988,c	;volatile
   941                           
   942                           ; BSR set to: 15
   943                           ;main.c: 229: T2CKPS1=0;
   944  0004E8  92CA               	bcf	4042,1,c	;volatile
   945                           
   946                           ; BSR set to: 15
   947                           ;main.c: 230: T2CKPS0=0;
   948  0004EA  90CA               	bcf	4042,0,c	;volatile
   949                           
   950                           ; BSR set to: 15
   951                           ;main.c: 233: TMR2ON = 1;
   952  0004EC  84CA               	bsf	4042,2,c	;volatile
   953                           
   954                           ; BSR set to: 15
   955                           ;main.c: 236: CCP2M2=1;
   956  0004EE  010F               	movlb	15	; () banked
   957  0004F0  8550               	bsf	80,2,b	;volatile
   958                           
   959                           ; BSR set to: 15
   960                           ;main.c: 237: CCP2M3=1;
   961  0004F2  010F               	movlb	15	; () banked
   962  0004F4  8750               	bsf	80,3,b	;volatile
   963                           
   964                           ; BSR set to: 15
   965                           ;main.c: 238: CCP3M2=1;
   966  0004F6  010F               	movlb	15	; () banked
   967  0004F8  854D               	bsf	77,2,b	;volatile
   968                           
   969                           ; BSR set to: 15
   970                           ;main.c: 239: CCP3M3=1;
   971  0004FA  010F               	movlb	15	; () banked
   972  0004FC  874D               	bsf	77,3,b	;volatile
   973                           
   974                           ; BSR set to: 15
   975                           ;main.c: 240: CCP4M2=1;
   976  0004FE  010F               	movlb	15	; () banked
   977  000500  854A               	bsf	74,2,b	;volatile
   978                           
   979                           ; BSR set to: 15
   980                           ;main.c: 241: CCP4M3=1;
   981  000502  010F               	movlb	15	; () banked
   982  000504  874A               	bsf	74,3,b	;volatile
   983                           
   984                           ; BSR set to: 15
   985  000506  0012               	return		;funcret
   986  000508                     __end_of_initPWM:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _initComms *****************
   999 ;; Defined at:
  1000 ;;		line 245 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;		None               void
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    3
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_initialisation
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text5
  1029  00057C                     __ptext5:
  1030                           	opt stack 0
  1031  00057C                     _initComms:
  1032                           	opt stack 26
  1033                           
  1034                           ;main.c: 247: TRISBbits.TRISB7 = 1;
  1035                           
  1036                           ; BSR set to: 15
  1037                           ;incstack = 0
  1038  00057C  8E93               	bsf	3987,7,c	;volatile
  1039                           
  1040                           ;main.c: 248: TRISBbits.TRISB6 = 0;
  1041  00057E  9C93               	bcf	3987,6,c	;volatile
  1042                           
  1043                           ;main.c: 251: TXSTA2bits.BRGH = 1;
  1044  000580  84BA               	bsf	4026,2,c	;volatile
  1045                           
  1046                           ;main.c: 252: TXSTA2bits.SYNC = 0;
  1047  000582  98BA               	bcf	4026,4,c	;volatile
  1048                           
  1049                           ;main.c: 253: SPBRGH2 = 0;
  1050  000584  0E00               	movlw	0
  1051  000586  6E7C               	movwf	3964,c	;volatile
  1052                           
  1053                           ;main.c: 254: SPBRG2 = 207;
  1054  000588  0ECF               	movlw	207
  1055  00058A  6E7B               	movwf	3963,c	;volatile
  1056                           
  1057                           ;main.c: 255: BAUDCON2 = 0x08;
  1058  00058C  0E08               	movlw	8
  1059  00058E  6EB9               	movwf	4025,c	;volatile
  1060                           
  1061                           ;main.c: 259: TXSTA2bits.TXEN = 1;
  1062  000590  8ABA               	bsf	4026,5,c	;volatile
  1063                           
  1064                           ;main.c: 260: RCSTA2bits.CREN = 1;
  1065  000592  88A6               	bsf	4006,4,c	;volatile
  1066                           
  1067                           ;main.c: 261: RCSTA2bits.SPEN = 1;
  1068  000594  8EA6               	bsf	4006,7,c	;volatile
  1069                           
  1070                           ;main.c: 264: RCONbits.IPEN = 1;
  1071  000596  8ED0               	bsf	4048,7,c	;volatile
  1072                           
  1073                           ;main.c: 265: INTCONbits.GIE = 1;
  1074  000598  8EF2               	bsf	intcon,7,c	;volatile
  1075                           
  1076                           ;main.c: 266: INTCONbits.PEIE = 1;
  1077  00059A  8CF2               	bsf	intcon,6,c	;volatile
  1078                           
  1079                           ;main.c: 267: PIE3bits.RC2IE = 1;
  1080  00059C  8AA3               	bsf	4003,5,c	;volatile
  1081                           
  1082                           ;main.c: 268: PIE3bits.TX2IE = 0;
  1083  00059E  98A3               	bcf	4003,4,c	;volatile
  1084                           
  1085                           ;main.c: 270: RC2IF = 0;
  1086  0005A0  9AA4               	bcf	4004,5,c	;volatile
  1087  0005A2  0012               	return		;funcret
  1088  0005A4                     __end_of_initComms:
  1089                           	opt stack 0
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           intcon	equ	0xFF2
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _low_interrupt *****************
  1102 ;; Defined at:
  1103 ;;		line 117 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  input           2   30[COMRAM] unsigned char [2]
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1119 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1120 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1121 ;;Total ram usage:       16 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		_atoi
  1126 ;;		i2_pwm
  1127 ;; This function is called by:
  1128 ;;		Interrupt level 2
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	intcode
  1133  000008                     __pintcode:
  1134                           	opt stack 0
  1135  000008                     _low_interrupt:
  1136                           	opt stack 26
  1137                           
  1138                           ;incstack = 0
  1139  000008  CFFA F011          	movff	pclath,??_low_interrupt
  1140  00000C  CFFB F012          	movff	pclatu,??_low_interrupt+1
  1141  000010  CFE9 F013          	movff	fsr0l,??_low_interrupt+2
  1142  000014  CFEA F014          	movff	fsr0h,??_low_interrupt+3
  1143  000018  CFE1 F015          	movff	fsr1l,??_low_interrupt+4
  1144  00001C  CFE2 F016          	movff	fsr1h,??_low_interrupt+5
  1145  000020  CFD9 F017          	movff	fsr2l,??_low_interrupt+6
  1146  000024  CFDA F018          	movff	fsr2h,??_low_interrupt+7
  1147  000028  CFF3 F019          	movff	prodl,??_low_interrupt+8
  1148  00002C  CFF4 F01A          	movff	prodh,??_low_interrupt+9
  1149  000030  CFF6 F01B          	movff	tblptrl,??_low_interrupt+10
  1150  000034  CFF7 F01C          	movff	tblptrh,??_low_interrupt+11
  1151  000038  CFF8 F01D          	movff	tblptru,??_low_interrupt+12
  1152  00003C  CFF5 F01E          	movff	tablat,??_low_interrupt+13
  1153                           
  1154                           ;main.c: 119: char input[2] = "";
  1155  000040  C024  F01F         	movff	low_interrupt@F19153,low_interrupt@input
  1156  000044  C025  F020         	movff	low_interrupt@F19153+1,low_interrupt@input+1
  1157                           
  1158                           ;main.c: 120: input[0] = RCREG2;
  1159  000048  CF7A F01F          	movff	3962,low_interrupt@input	;volatile
  1160                           
  1161                           ;main.c: 122: if (beginR==1 | beginG==1 | beginB==1)
  1162  00004C  0428               	decf	_beginR,w,c
  1163  00004E  B4D8               	btfsc	status,2,c
  1164  000050  D006               	goto	i2l1267
  1165  000052  0427               	decf	_beginG,w,c
  1166  000054  B4D8               	btfsc	status,2,c
  1167  000056  D003               	goto	i2l1267
  1168  000058  0426               	decf	_beginB,w,c
  1169  00005A  A4D8               	btfss	status,2,c
  1170  00005C  D00C               	goto	i2l1271
  1171  00005E                     i2l1267:
  1172                           
  1173                           ;main.c: 123: {
  1174                           ;main.c: 124: buffer[compteur]=input[0];
  1175  00005E  5029               	movf	_compteur,w,c
  1176  000060  0D01               	mullw	1
  1177  000062  0E2A               	movlw	low _buffer
  1178  000064  24F3               	addwf	prodl,w,c
  1179  000066  6ED9               	movwf	fsr2l,c
  1180  000068  0E00               	movlw	high _buffer
  1181  00006A  20F4               	addwfc	prodh,w,c
  1182  00006C  6EDA               	movwf	fsr2h,c
  1183  00006E  C01F  FFDF         	movff	low_interrupt@input,indf2
  1184                           
  1185                           ;main.c: 125: compteur+=1;
  1186  000072  2A29               	incf	_compteur,f,c
  1187  000074  D000               	goto	i2l1271
  1188  000076                     i2l1271:
  1189                           
  1190                           ;main.c: 126: }
  1191                           ;main.c: 128: if (compteur==4)
  1192  000076  0E04               	movlw	4
  1193  000078  1829               	xorwf	_compteur,w,c
  1194  00007A  A4D8               	btfss	status,2,c
  1195  00007C  D03C               	goto	i2l1293
  1196                           
  1197                           ;main.c: 129: {
  1198                           ;main.c: 130: if (beginR==1)
  1199  00007E  0428               	decf	_beginR,w,c
  1200  000080  A4D8               	btfss	status,2,c
  1201  000082  D00E               	goto	i2l1277
  1202                           
  1203                           ;main.c: 131: pwm('R',atoi(buffer));
  1204  000084  0E2A               	movlw	low _buffer
  1205  000086  6E07               	movwf	atoi@s,c
  1206  000088  0E00               	movlw	high _buffer
  1207  00008A  6E08               	movwf	atoi@s+1,c
  1208  00008C  ECB0  F000         	call	_atoi	;wreg free
  1209  000090  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  1210  000094  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  1211  000098  0E52               	movlw	82
  1212  00009A  EC17  F002         	call	i2_pwm
  1213  00009E  D000               	goto	i2l1277
  1214  0000A0                     i2l1277:
  1215                           
  1216                           ;main.c: 132: beginR=0;
  1217  0000A0  0E00               	movlw	0
  1218  0000A2  6E28               	movwf	_beginR,c
  1219                           
  1220                           ;main.c: 133: if (beginG==1)
  1221  0000A4  0427               	decf	_beginG,w,c
  1222  0000A6  A4D8               	btfss	status,2,c
  1223  0000A8  D00E               	goto	i2l1283
  1224                           
  1225                           ;main.c: 134: pwm('G',atoi(buffer));
  1226  0000AA  0E2A               	movlw	low _buffer
  1227  0000AC  6E07               	movwf	atoi@s,c
  1228  0000AE  0E00               	movlw	high _buffer
  1229  0000B0  6E08               	movwf	atoi@s+1,c
  1230  0000B2  ECB0  F000         	call	_atoi	;wreg free
  1231  0000B6  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  1232  0000BA  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  1233  0000BE  0E47               	movlw	71
  1234  0000C0  EC17  F002         	call	i2_pwm
  1235  0000C4  D000               	goto	i2l1283
  1236  0000C6                     i2l1283:
  1237                           
  1238                           ;main.c: 135: beginG=0;
  1239  0000C6  0E00               	movlw	0
  1240  0000C8  6E27               	movwf	_beginG,c
  1241                           
  1242                           ;main.c: 136: if (beginB==1)
  1243  0000CA  0426               	decf	_beginB,w,c
  1244  0000CC  A4D8               	btfss	status,2,c
  1245  0000CE  D00E               	goto	i2l1289
  1246                           
  1247                           ;main.c: 137: pwm('B',atoi(buffer));
  1248  0000D0  0E2A               	movlw	low _buffer
  1249  0000D2  6E07               	movwf	atoi@s,c
  1250  0000D4  0E00               	movlw	high _buffer
  1251  0000D6  6E08               	movwf	atoi@s+1,c
  1252  0000D8  ECB0  F000         	call	_atoi	;wreg free
  1253  0000DC  C007  F00E         	movff	?_atoi,i2pwm@dutycycle
  1254  0000E0  C008  F00F         	movff	?_atoi+1,i2pwm@dutycycle+1
  1255  0000E4  0E42               	movlw	66
  1256  0000E6  EC17  F002         	call	i2_pwm
  1257  0000EA  D000               	goto	i2l1289
  1258  0000EC                     i2l1289:
  1259                           
  1260                           ;main.c: 138: beginB=0;
  1261  0000EC  0E00               	movlw	0
  1262  0000EE  6E26               	movwf	_beginB,c
  1263                           
  1264                           ;main.c: 140: compteur=0;
  1265  0000F0  0E00               	movlw	0
  1266  0000F2  6E29               	movwf	_compteur,c
  1267  0000F4  D000               	goto	i2l1293
  1268  0000F6                     i2l1293:
  1269                           
  1270                           ;main.c: 141: }
  1271                           ;main.c: 144: if (input[0]=='R')
  1272  0000F6  0E52               	movlw	82
  1273  0000F8  181F               	xorwf	low_interrupt@input,w,c
  1274  0000FA  A4D8               	btfss	status,2,c
  1275  0000FC  D003               	goto	i2l1297
  1276                           
  1277                           ;main.c: 145: beginR=1;
  1278  0000FE  0E01               	movlw	1
  1279  000100  6E28               	movwf	_beginR,c
  1280  000102  D000               	goto	i2l1297
  1281  000104                     i2l1297:
  1282                           
  1283                           ;main.c: 146: if (input[0]=='G')
  1284  000104  0E47               	movlw	71
  1285  000106  181F               	xorwf	low_interrupt@input,w,c
  1286  000108  A4D8               	btfss	status,2,c
  1287  00010A  D003               	goto	i2l1301
  1288                           
  1289                           ;main.c: 147: beginG=1;
  1290  00010C  0E01               	movlw	1
  1291  00010E  6E27               	movwf	_beginG,c
  1292  000110  D000               	goto	i2l1301
  1293  000112                     i2l1301:
  1294                           
  1295                           ;main.c: 148: if (input[0]=='B')
  1296  000112  0E42               	movlw	66
  1297  000114  181F               	xorwf	low_interrupt@input,w,c
  1298  000116  A4D8               	btfss	status,2,c
  1299  000118  D003               	goto	i2l1305
  1300                           
  1301                           ;main.c: 149: beginB=1;
  1302  00011A  0E01               	movlw	1
  1303  00011C  6E26               	movwf	_beginB,c
  1304  00011E  D000               	goto	i2l1305
  1305  000120                     i2l1305:
  1306                           
  1307                           ;main.c: 151: RC2IF = 0;
  1308  000120  9AA4               	bcf	4004,5,c	;volatile
  1309  000122  C01E  FFF5         	movff	??_low_interrupt+13,tablat
  1310  000126  C01D  FFF8         	movff	??_low_interrupt+12,tblptru
  1311  00012A  C01C  FFF7         	movff	??_low_interrupt+11,tblptrh
  1312  00012E  C01B  FFF6         	movff	??_low_interrupt+10,tblptrl
  1313  000132  C01A  FFF4         	movff	??_low_interrupt+9,prodh
  1314  000136  C019  FFF3         	movff	??_low_interrupt+8,prodl
  1315  00013A  C018  FFDA         	movff	??_low_interrupt+7,fsr2h
  1316  00013E  C017  FFD9         	movff	??_low_interrupt+6,fsr2l
  1317  000142  C016  FFE2         	movff	??_low_interrupt+5,fsr1h
  1318  000146  C015  FFE1         	movff	??_low_interrupt+4,fsr1l
  1319  00014A  C014  FFEA         	movff	??_low_interrupt+3,fsr0h
  1320  00014E  C013  FFE9         	movff	??_low_interrupt+2,fsr0l
  1321  000152  C012  FFFB         	movff	??_low_interrupt+1,pclatu
  1322  000156  C011  FFFA         	movff	??_low_interrupt,pclath
  1323  00015A  0011               	retfie		f
  1324  00015C                     __end_of_low_interrupt:
  1325                           	opt stack 0
  1326                           pclatu	equ	0xFFB
  1327                           pclath	equ	0xFFA
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           prodh	equ	0xFF4
  1333                           prodl	equ	0xFF3
  1334                           intcon	equ	0xFF2
  1335                           postinc0	equ	0xFEE
  1336                           fsr0h	equ	0xFEA
  1337                           fsr0l	equ	0xFE9
  1338                           wreg	equ	0xFE8
  1339                           postdec1	equ	0xFE5
  1340                           fsr1h	equ	0xFE2
  1341                           fsr1l	equ	0xFE1
  1342                           indf2	equ	0xFDF
  1343                           fsr2h	equ	0xFDA
  1344                           fsr2l	equ	0xFD9
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function i2_pwm *****************
  1348 ;; Defined at:
  1349 ;;		line 8 in file "converter.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  color           1    wreg     unsigned char 
  1352 ;;  dutycycle       2   13[COMRAM] int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  color           1   15[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		i2___awdiv
  1373 ;; This function is called by:
  1374 ;;		_low_interrupt
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379  00042E                     __ptext7:
  1380                           	opt stack 0
  1381  00042E                     i2_pwm:
  1382                           	opt stack 26
  1383                           
  1384                           ;incstack = 0
  1385                           ;i2pwm@color stored from wreg
  1386  00042E  6E10               	movwf	i2pwm@color,c
  1387                           
  1388                           ;converter.c: 9: switch(color){
  1389  000430  D036               	goto	i2l1257
  1390  000432                     i2l1237:
  1391                           
  1392                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1393  000432  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  1394  000436  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  1395  00043A  0E00               	movlw	0
  1396  00043C  6E04               	movwf	i2___awdiv@divisor+1,c
  1397  00043E  0E04               	movlw	4
  1398  000440  6E03               	movwf	i2___awdiv@divisor,c
  1399  000442  EC82  F001         	call	i2___awdiv	;wreg free
  1400  000446  5001               	movf	?i2___awdiv,w,c
  1401  000448  010F               	movlb	15	; () banked
  1402  00044A  6F51               	movwf	81,b	;volatile
  1403                           
  1404                           ; BSR set to: 15
  1405                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1406  00044C  010F               	movlb	15	; () banked
  1407  00044E  9B50               	bcf	80,5,b	;volatile
  1408                           
  1409                           ; BSR set to: 15
  1410                           ;converter.c: 13: DC2B0=dutycycle%1;
  1411  000450  010F               	movlb	15	; () banked
  1412  000452  9950               	bcf	80,4,b	;volatile
  1413                           
  1414                           ;converter.c: 14: break;
  1415  000454  0012               	return	
  1416  000456                     i2l1243:
  1417                           
  1418                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1419  000456  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  1420  00045A  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  1421  00045E  0E00               	movlw	0
  1422  000460  6E04               	movwf	i2___awdiv@divisor+1,c
  1423  000462  0E04               	movlw	4
  1424  000464  6E03               	movwf	i2___awdiv@divisor,c
  1425  000466  EC82  F001         	call	i2___awdiv	;wreg free
  1426  00046A  5001               	movf	?i2___awdiv,w,c
  1427  00046C  010F               	movlb	15	; () banked
  1428  00046E  6F4E               	movwf	78,b	;volatile
  1429                           
  1430                           ; BSR set to: 15
  1431                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1432  000470  010F               	movlb	15	; () banked
  1433  000472  9B4D               	bcf	77,5,b	;volatile
  1434                           
  1435                           ; BSR set to: 15
  1436                           ;converter.c: 18: DC3B0=0;
  1437  000474  010F               	movlb	15	; () banked
  1438  000476  994D               	bcf	77,4,b	;volatile
  1439                           
  1440                           ;converter.c: 19: break;
  1441  000478  0012               	return	
  1442  00047A                     i2l1249:
  1443                           
  1444                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1445  00047A  C00E  F001         	movff	i2pwm@dutycycle,i2___awdiv@dividend
  1446  00047E  C00F  F002         	movff	i2pwm@dutycycle+1,i2___awdiv@dividend+1
  1447  000482  0E00               	movlw	0
  1448  000484  6E04               	movwf	i2___awdiv@divisor+1,c
  1449  000486  0E04               	movlw	4
  1450  000488  6E03               	movwf	i2___awdiv@divisor,c
  1451  00048A  EC82  F001         	call	i2___awdiv	;wreg free
  1452  00048E  5001               	movf	?i2___awdiv,w,c
  1453  000490  010F               	movlb	15	; () banked
  1454  000492  6F4B               	movwf	75,b	;volatile
  1455                           
  1456                           ; BSR set to: 15
  1457                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1458  000494  010F               	movlb	15	; () banked
  1459  000496  9B4A               	bcf	74,5,b	;volatile
  1460                           
  1461                           ; BSR set to: 15
  1462                           ;converter.c: 23: DC4B0=dutycycle%1;
  1463  000498  010F               	movlb	15	; () banked
  1464  00049A  994A               	bcf	74,4,b	;volatile
  1465                           
  1466                           ; BSR set to: 15
  1467                           ;converter.c: 25: }
  1468                           
  1469                           ;converter.c: 24: break;
  1470  00049C  0012               	return	
  1471  00049E                     i2l1257:
  1472  00049E  5010               	movf	i2pwm@color,w,c
  1473                           
  1474                           ; Switch size 1, requested type "space"
  1475                           ; Number of cases is 3, Range of values is 66 to 82
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte           10     6 (average)
  1479                           ;	Chosen strategy is simple_byte
  1480  0004A0  0A42               	xorlw	66	; case 66
  1481  0004A2  B4D8               	btfsc	status,2,c
  1482  0004A4  D7C6               	goto	i2l1237
  1483  0004A6  0A05               	xorlw	5	; case 71
  1484  0004A8  B4D8               	btfsc	status,2,c
  1485  0004AA  D7E7               	goto	i2l1249
  1486  0004AC  0A15               	xorlw	21	; case 82
  1487  0004AE  A4D8               	btfss	status,2,c
  1488  0004B0  0012               	return	
  1489  0004B2  D7D1               	goto	i2l1243
  1490  0004B4  0012               	return		;funcret
  1491  0004B6                     __end_ofi2_pwm:
  1492                           	opt stack 0
  1493                           pclatu	equ	0xFFB
  1494                           pclath	equ	0xFFA
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodh	equ	0xFF4
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           postinc0	equ	0xFEE
  1503                           fsr0h	equ	0xFEA
  1504                           fsr0l	equ	0xFE9
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1h	equ	0xFE2
  1508                           fsr1l	equ	0xFE1
  1509                           indf2	equ	0xFDF
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function i2___awdiv *****************
  1515 ;; Defined at:
  1516 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  dividend        2    0[COMRAM] int 
  1519 ;;  divisor         2    2[COMRAM] int 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  __awdiv         2    6[COMRAM] int 
  1522 ;;  __awdiv         1    5[COMRAM] unsigned char 
  1523 ;;  __awdiv         1    4[COMRAM] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    0[COMRAM] int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1534 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		i2_pwm
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text8
  1547  000304                     __ptext8:
  1548                           	opt stack 0
  1549  000304                     i2___awdiv:
  1550                           	opt stack 26
  1551                           
  1552                           ;incstack = 0
  1553  000304  0E00               	movlw	0
  1554  000306  6E06               	movwf	i2___awdiv@sign,c
  1555  000308  AE04               	btfss	i2___awdiv@divisor+1,7,c
  1556  00030A  D007               	goto	i2l1147
  1557  00030C  6C03               	negf	i2___awdiv@divisor,c
  1558  00030E  1E04               	comf	i2___awdiv@divisor+1,f,c
  1559  000310  B0D8               	btfsc	status,0,c
  1560  000312  2A04               	incf	i2___awdiv@divisor+1,f,c
  1561  000314  0E01               	movlw	1
  1562  000316  6E06               	movwf	i2___awdiv@sign,c
  1563  000318  D000               	goto	i2l1147
  1564  00031A                     i2l1147:
  1565  00031A  AE02               	btfss	i2___awdiv@dividend+1,7,c
  1566  00031C  D007               	goto	i2l1153
  1567  00031E  6C01               	negf	i2___awdiv@dividend,c
  1568  000320  1E02               	comf	i2___awdiv@dividend+1,f,c
  1569  000322  B0D8               	btfsc	status,0,c
  1570  000324  2A02               	incf	i2___awdiv@dividend+1,f,c
  1571  000326  0E01               	movlw	1
  1572  000328  1A06               	xorwf	i2___awdiv@sign,f,c
  1573  00032A  D000               	goto	i2l1153
  1574  00032C                     i2l1153:
  1575  00032C  0E00               	movlw	0
  1576  00032E  6E08               	movwf	i2___awdiv@quotient+1,c
  1577  000330  0E00               	movlw	0
  1578  000332  6E07               	movwf	i2___awdiv@quotient,c
  1579  000334  5003               	movf	i2___awdiv@divisor,w,c
  1580  000336  1004               	iorwf	i2___awdiv@divisor+1,w,c
  1581  000338  B4D8               	btfsc	status,2,c
  1582  00033A  D021               	goto	i2l1175
  1583  00033C  0E01               	movlw	1
  1584  00033E  6E05               	movwf	i2___awdiv@counter,c
  1585  000340  D005               	goto	i2l1161
  1586  000342                     i2l1159:
  1587  000342  90D8               	bcf	status,0,c
  1588  000344  3603               	rlcf	i2___awdiv@divisor,f,c
  1589  000346  3604               	rlcf	i2___awdiv@divisor+1,f,c
  1590  000348  2A05               	incf	i2___awdiv@counter,f,c
  1591  00034A  D000               	goto	i2l1161
  1592  00034C                     i2l1161:
  1593  00034C  BE04               	btfsc	i2___awdiv@divisor+1,7,c
  1594  00034E  D002               	goto	i2l1163
  1595  000350  D7F8               	goto	i2l1159
  1596  000352  D000               	goto	i2l1163
  1597  000354                     i2l1163:
  1598  000354  90D8               	bcf	status,0,c
  1599  000356  3607               	rlcf	i2___awdiv@quotient,f,c
  1600  000358  3608               	rlcf	i2___awdiv@quotient+1,f,c
  1601  00035A  5003               	movf	i2___awdiv@divisor,w,c
  1602  00035C  5C01               	subwf	i2___awdiv@dividend,w,c
  1603  00035E  5004               	movf	i2___awdiv@divisor+1,w,c
  1604  000360  5802               	subwfb	i2___awdiv@dividend+1,w,c
  1605  000362  A0D8               	btfss	status,0,c
  1606  000364  D006               	goto	i2l1171
  1607  000366  5003               	movf	i2___awdiv@divisor,w,c
  1608  000368  5E01               	subwf	i2___awdiv@dividend,f,c
  1609  00036A  5004               	movf	i2___awdiv@divisor+1,w,c
  1610  00036C  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  1611  00036E  8007               	bsf	i2___awdiv@quotient,0,c
  1612  000370  D000               	goto	i2l1171
  1613  000372                     i2l1171:
  1614  000372  90D8               	bcf	status,0,c
  1615  000374  3204               	rrcf	i2___awdiv@divisor+1,f,c
  1616  000376  3203               	rrcf	i2___awdiv@divisor,f,c
  1617  000378  2E05               	decfsz	i2___awdiv@counter,f,c
  1618  00037A  D7EC               	goto	i2l1163
  1619  00037C  D000               	goto	i2l1175
  1620  00037E                     i2l1175:
  1621  00037E  5006               	movf	i2___awdiv@sign,w,c
  1622  000380  B4D8               	btfsc	status,2,c
  1623  000382  D005               	goto	i2l1179
  1624  000384  6C07               	negf	i2___awdiv@quotient,c
  1625  000386  1E08               	comf	i2___awdiv@quotient+1,f,c
  1626  000388  B0D8               	btfsc	status,0,c
  1627  00038A  2A08               	incf	i2___awdiv@quotient+1,f,c
  1628  00038C  D000               	goto	i2l1179
  1629  00038E                     i2l1179:
  1630  00038E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  1631  000392  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  1632  000396  0012               	return	
  1633  000398  0012               	return		;funcret
  1634  00039A                     __end_ofi2___awdiv:
  1635                           	opt stack 0
  1636                           pclatu	equ	0xFFB
  1637                           pclath	equ	0xFFA
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           prodh	equ	0xFF4
  1643                           prodl	equ	0xFF3
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           fsr0h	equ	0xFEA
  1647                           fsr0l	equ	0xFE9
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           indf2	equ	0xFDF
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _atoi *****************
  1658 ;; Defined at:
  1659 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1662 ;;		 -> buffer(16), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  a               2   11[COMRAM] int 
  1665 ;;  sign            1   10[COMRAM] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2    6[COMRAM] int 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;Total ram usage:        7 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    1
  1682 ;; This function calls:
  1683 ;;		___wmul
  1684 ;;		_isdigit
  1685 ;; This function is called by:
  1686 ;;		_low_interrupt
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text9
  1691  000160                     __ptext9:
  1692                           	opt stack 0
  1693  000160                     _atoi:
  1694                           	opt stack 26
  1695                           
  1696                           ;incstack = 0
  1697  000160  D003               	goto	i2l1187
  1698  000162                     i2l1185:
  1699  000162  4A07               	infsnz	atoi@s,f,c
  1700  000164  2A08               	incf	atoi@s+1,f,c
  1701  000166  D000               	goto	i2l1187
  1702  000168                     i2l1187:
  1703  000168  C007  FFD9         	movff	atoi@s,fsr2l
  1704  00016C  C008  FFDA         	movff	atoi@s+1,fsr2h
  1705  000170  0E20               	movlw	32
  1706  000172  18DE               	xorwf	postinc2,w,c
  1707  000174  B4D8               	btfsc	status,2,c
  1708  000176  D7F5               	goto	i2l1185
  1709  000178  C007  FFD9         	movff	atoi@s,fsr2l
  1710  00017C  C008  FFDA         	movff	atoi@s+1,fsr2h
  1711  000180  0E09               	movlw	9
  1712  000182  18DE               	xorwf	postinc2,w,c
  1713  000184  B4D8               	btfsc	status,2,c
  1714  000186  D7ED               	goto	i2l1185
  1715  000188  0E00               	movlw	0
  1716  00018A  6E0D               	movwf	atoi@a+1,c
  1717  00018C  0E00               	movlw	0
  1718  00018E  6E0C               	movwf	atoi@a,c
  1719  000190  0E00               	movlw	0
  1720  000192  6E0B               	movwf	atoi@sign,c
  1721  000194  C007  FFD9         	movff	atoi@s,fsr2l
  1722  000198  C008  FFDA         	movff	atoi@s+1,fsr2h
  1723  00019C  0E2D               	movlw	45
  1724  00019E  18DE               	xorwf	postinc2,w,c
  1725  0001A0  A4D8               	btfss	status,2,c
  1726  0001A2  D002               	goto	i2l1197
  1727  0001A4  2A0B               	incf	atoi@sign,f,c
  1728  0001A6  D025               	goto	i2l1203
  1729  0001A8                     i2l1197:
  1730  0001A8  C007  FFD9         	movff	atoi@s,fsr2l
  1731  0001AC  C008  FFDA         	movff	atoi@s+1,fsr2h
  1732  0001B0  0E2B               	movlw	43
  1733  0001B2  18DE               	xorwf	postinc2,w,c
  1734  0001B4  A4D8               	btfss	status,2,c
  1735  0001B6  D020               	goto	i2l1205
  1736  0001B8  D01C               	goto	i2l1203
  1737  0001BA  D01E               	goto	i2l1205
  1738  0001BC                     i2l1201:
  1739  0001BC  C00C  F001         	movff	atoi@a,___wmul@multiplier
  1740  0001C0  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  1741  0001C4  0E00               	movlw	0
  1742  0001C6  6E04               	movwf	___wmul@multiplicand+1,c
  1743  0001C8  0E0A               	movlw	10
  1744  0001CA  6E03               	movwf	___wmul@multiplicand,c
  1745  0001CC  ECD2  F002         	call	___wmul	;wreg free
  1746  0001D0  C007  FFD9         	movff	atoi@s,fsr2l
  1747  0001D4  C008  FFDA         	movff	atoi@s+1,fsr2h
  1748  0001D8  50DF               	movf	indf2,w,c
  1749  0001DA  6E09               	movwf	??_atoi& (0+255),c
  1750  0001DC  6A0A               	clrf	(??_atoi+1)& (0+255),c
  1751  0001DE  5001               	movf	?___wmul,w,c
  1752  0001E0  2609               	addwf	??_atoi,f,c
  1753  0001E2  5002               	movf	?___wmul+1,w,c
  1754  0001E4  220A               	addwfc	??_atoi+1,f,c
  1755  0001E6  0ED0               	movlw	208
  1756  0001E8  2409               	addwf	??_atoi,w,c
  1757  0001EA  6E0C               	movwf	atoi@a,c
  1758  0001EC  0EFF               	movlw	255
  1759  0001EE  200A               	addwfc	??_atoi+1,w,c
  1760  0001F0  6E0D               	movwf	atoi@a+1,c
  1761  0001F2                     i2l1203:
  1762  0001F2  4A07               	infsnz	atoi@s,f,c
  1763  0001F4  2A08               	incf	atoi@s+1,f,c
  1764  0001F6  D000               	goto	i2l1205
  1765  0001F8                     i2l1205:
  1766  0001F8  C007  FFD9         	movff	atoi@s,fsr2l
  1767  0001FC  C008  FFDA         	movff	atoi@s+1,fsr2h
  1768  000200  50DF               	movf	indf2,w,c
  1769  000202  ECE6  F002         	call	_isdigit
  1770  000206  B0D8               	btfsc	status,0,c
  1771  000208  D7D9               	goto	i2l1201
  1772  00020A  500B               	movf	atoi@sign,w,c
  1773  00020C  B4D8               	btfsc	status,2,c
  1774  00020E  D00D               	goto	i2l342
  1775  000210  C00C  F009         	movff	atoi@a,??_atoi
  1776  000214  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  1777  000218  1E09               	comf	??_atoi,f,c
  1778  00021A  1E0A               	comf	??_atoi+1,f,c
  1779  00021C  4A09               	infsnz	??_atoi,f,c
  1780  00021E  2A0A               	incf	??_atoi+1,f,c
  1781  000220  C009  F007         	movff	??_atoi,?_atoi
  1782  000224  C00A  F008         	movff	??_atoi+1,?_atoi+1
  1783  000228  0012               	return	
  1784  00022A                     i2l342:
  1785  00022A  C00C  F007         	movff	atoi@a,?_atoi
  1786  00022E  C00D  F008         	movff	atoi@a+1,?_atoi+1
  1787  000232  0012               	return		;funcret
  1788  000234                     __end_of_atoi:
  1789                           	opt stack 0
  1790                           pclatu	equ	0xFFB
  1791                           pclath	equ	0xFFA
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           prodh	equ	0xFF4
  1797                           prodl	equ	0xFF3
  1798                           intcon	equ	0xFF2
  1799                           postinc0	equ	0xFEE
  1800                           fsr0h	equ	0xFEA
  1801                           fsr0l	equ	0xFE9
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1h	equ	0xFE2
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _isdigit *****************
  1813 ;; Defined at:
  1814 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  c               1    wreg     unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  c               1    2[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;Total ram usage:        3 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_atoi
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text10
  1842  0005CC                     __ptext10:
  1843                           	opt stack 0
  1844  0005CC                     _isdigit:
  1845                           	opt stack 26
  1846                           
  1847                           ;incstack = 0
  1848                           ;isdigit@c stored from wreg
  1849  0005CC  6E03               	movwf	isdigit@c,c
  1850  0005CE  0E00               	movlw	0
  1851  0005D0  6E02               	movwf	_isdigit$807,c
  1852  0005D2  0E3A               	movlw	58
  1853  0005D4  6003               	cpfslt	isdigit@c,c
  1854  0005D6  D006               	goto	i2l1091
  1855  0005D8  0E2F               	movlw	47
  1856  0005DA  6403               	cpfsgt	isdigit@c,c
  1857  0005DC  D003               	goto	i2l1091
  1858  0005DE  0E01               	movlw	1
  1859  0005E0  6E02               	movwf	_isdigit$807,c
  1860  0005E2  D000               	goto	i2l1091
  1861  0005E4                     i2l1091:
  1862  0005E4  C002  F001         	movff	_isdigit$807,??_isdigit
  1863  0005E8  3001               	rrcf	??_isdigit,w,c
  1864  0005EA  0012               	return	
  1865  0005EC  0012               	return		;funcret
  1866  0005EE                     __end_of_isdigit:
  1867                           	opt stack 0
  1868                           pclatu	equ	0xFFB
  1869                           pclath	equ	0xFFA
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           fsr0h	equ	0xFEA
  1879                           fsr0l	equ	0xFE9
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           fsr2h	equ	0xFDA
  1887                           fsr2l	equ	0xFD9
  1888                           status	equ	0xFD8
  1889                           
  1890 ;; *************** function ___wmul *****************
  1891 ;; Defined at:
  1892 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  multiplier      2    0[COMRAM] unsigned int 
  1895 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  product         2    4[COMRAM] unsigned int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2    0[COMRAM] unsigned int 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, prodl, prodh
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;Total ram usage:        6 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_atoi
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text11
  1921  0005A4                     __ptext11:
  1922                           	opt stack 0
  1923  0005A4                     ___wmul:
  1924                           	opt stack 26
  1925                           
  1926                           ;incstack = 0
  1927  0005A4  5001               	movf	___wmul@multiplier,w,c
  1928  0005A6  0203               	mulwf	___wmul@multiplicand,c
  1929  0005A8  CFF3 F005          	movff	prodl,___wmul@product
  1930  0005AC  CFF4 F006          	movff	prodh,___wmul@product+1
  1931  0005B0  5001               	movf	___wmul@multiplier,w,c
  1932  0005B2  0204               	mulwf	___wmul@multiplicand+1,c
  1933  0005B4  50F3               	movf	prodl,w,c
  1934  0005B6  2606               	addwf	___wmul@product+1,f,c
  1935  0005B8  5002               	movf	___wmul@multiplier+1,w,c
  1936  0005BA  0203               	mulwf	___wmul@multiplicand,c
  1937  0005BC  50F3               	movf	prodl,w,c
  1938  0005BE  2606               	addwf	___wmul@product+1,f,c
  1939  0005C0  C005  F001         	movff	___wmul@product,?___wmul
  1940  0005C4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1941  0005C8  0012               	return	
  1942  0005CA  0012               	return		;funcret
  1943  0005CC                     __end_of___wmul:
  1944                           	opt stack 0
  1945  0000                     pclatu	equ	0xFFB
  1946                           pclath	equ	0xFFA
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           fsr0h	equ	0xFEA
  1956                           fsr0l	equ	0xFE9
  1957                           wreg	equ	0xFE8
  1958                           postdec1	equ	0xFE5
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           indf2	equ	0xFDF
  1962                           postinc2	equ	0xFDE
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           pclatu	equ	0xFFB
  1967                           pclath	equ	0xFFA
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           intcon	equ	0xFF2
  1975                           postinc0	equ	0xFEE
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           indf2	equ	0xFDF
  1983                           postinc2	equ	0xFDE
  1984                           fsr2h	equ	0xFDA
  1985                           fsr2l	equ	0xFD9
  1986                           status	equ	0xFD8
  1987                           
  1988                           	psect	rparam
  1989  0000                     pclatu	equ	0xFFB
  1990                           pclath	equ	0xFFA
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           prodh	equ	0xFF4
  1996                           prodl	equ	0xFF3
  1997                           intcon	equ	0xFF2
  1998                           postinc0	equ	0xFEE
  1999                           fsr0h	equ	0xFEA
  2000                           fsr0l	equ	0xFE9
  2001                           wreg	equ	0xFE8
  2002                           postdec1	equ	0xFE5
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           postinc2	equ	0xFDE
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      63
    BANK0           160     15      15
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_pwm

Critical Paths under _low_interrupt in COMRAM

    _low_interrupt->i2_pwm
    i2_pwm->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _pwm->___awdiv

Critical Paths under _low_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_interrupt in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5    1247
                                              8 BANK0      7     2      5
                     _initialisation
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1244
                                             32 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                          _initComms
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_interrupt                                       16    16      0    1432
                                             16 COMRAM    16    16      0
                               _atoi
                              i2_pwm
 ---------------------------------------------------------------------------------
 (4) i2_pwm                                                3     1      2     622
                                             13 COMRAM     3     1      2
                               _atoi (ARG)
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (5) i2___awdiv                                            8     4      4     456
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _initComms
     _initPWM
   _pwm
     ___awdiv

 _low_interrupt (ROOT)
   _atoi
     ___wmul
     _isdigit
   i2_pwm
     _atoi (ARG)
       ___wmul
       _isdigit
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F       F       5        9.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3F       1       66.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       6        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 24 20:59:15 2015

                      _B 003A                        _G 003C                        _R 003E  
           ___awdiv@sign 0065      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l111 0540             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _pwm 039A  
                    prod 000FF3                      wreg 000FE8               _TXSTA2bits 000FBA  
                   l1411 02E2                     l1421 039E                     l1415 02F8  
                   l1407 02D2                     l1433 03EE                     l1441 0416  
                   l1427 03C6                     l1383 0252                     l1395 0288  
                   l1397 0296                     l1389 026A                     l1399 02A0  
                   ?_pwm 0021         ??_initialisation 0021                     _atoi 0160  
                   _main 0508                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 015C  
          __CFG_IESO$OFF 000000             ___param_bank 000010                    ??_pwm 0023  
                  _DC2B0 007A84                    _DC2B1 007A85                    _DC3B0 007A6C  
                  _DC3B1 007A6D                    _DC4B0 007A54                    _DC4B1 007A55  
                  ?_atoi 0007                    ?_main 0068          __end_of___awdiv 0304  
        ___awdiv@divisor 0062                    _RC2IF 007D25                    i2l342 022A  
        ___awdiv@counter 0064                    _TRISC 000F94                    i2_pwm 042E  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_initPWM 0508          __end_of_isdigit 05EE  
                  atoi@a 000C                    atoi@s 0007                    tablat 000FF5  
                  status 000FD8           i2pwm@dutycycle 000E       __size_ofi2___awdiv 0096  
             i2pwm@color 0010           __CFG_MCLRE$OFF 000000          __initialization 0546  
           __end_of_atoi 0234             __end_of_main 0546                   ??_atoi 0009  
                 ??_main 0024            __activetblptr 000002           __CFG_RETEN$OFF 000000  
                 ?i2_pwm 000E                   _CCP2M2 007A82                   _CCP2M3 007A83  
                 _CCP3M2 007A6A                   _CCP3M3 007A6B                   _CCP4M2 007A52  
                 _CCP4M3 007A53                   _CCPR2L 000F51                   _CCPR3L 000F4E  
                 _CCPR4L 000F4B         ___awdiv@dividend 0060                   i2l1201 01BC  
                 i2l1203 01F2                   i2l1205 01F8                   i2l1301 0112  
        __CFG_BBSIZ$BB2K 000000                   i2l1161 034C                   i2l1153 032C  
                 i2l1305 0120                   i2l1091 05E4                   i2l1171 0372  
                 i2l1163 0354                   i2l1147 031A                   i2l1243 0456  
                 i2l1237 0432                   i2l1159 0342                   i2l1175 037E  
                 i2l1271 0076                   i2l1185 0162                   i2l1249 047A  
                 i2l1257 049E                   i2l1187 0168                   i2l1179 038E  
                 i2l1283 00C6                   i2l1267 005E                   i2l1197 01A8  
                 i2l1277 00A0                   i2l1293 00F6                   i2l1297 0104  
                 i2l1289 00EC           __CFG_WDTEN$OFF 000000                   _RCREG2 000F7A  
                 _SPBRG2 000F7B                   _TMR2ON 007E52                   _TXREG2 000F79  
  __end_of_low_interrupt 015C           __CFG_XINST$OFF 000000                   _beginB 0026  
                 _beginG 0027                   ___wmul 05A4                   _beginR 0028  
              ??___awdiv 0021           __CFG_STVREN$ON 000000                   _buffer 002A  
                 clear_0 054C         ___awdiv@quotient 0066           i2___awdiv@sign 0006  
              ??_initPWM 0021             __pdataCOMRAM 003A                ??_isdigit 0001  
      __end_ofi2___awdiv 039A                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0572  
          ___rparam_used 000001            __end_ofi2_pwm 04B6           __pcstackCOMRAM 0001  
                ??i2_pwm 0010          __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028  
                ?___wmul 0001       low_interrupt@input 001F                  _T2CKPS0 007E50  
                _T2CKPS1 007E51         __CFG_CANMX$PORTB 000000                  _SPBRGH2 000F7C  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 0234          __size_of___wmul 0028                  __pcinit 0546  
                __ramtop 0F00                  __ptext0 0508                  __ptext1 039A  
                __ptext2 0234                  __ptext3 05EE                  __ptext4 04B6  
                __ptext5 057C                  __ptext7 042E                  __ptext8 0304  
                __ptext9 0160        __end_of_initComms 05A4                  _initPWM 04B6  
                _isdigit 05CC             __size_of_pwm 0094        __CFG_MSSPMSK$MSK7 000000  
   end_of_initialization 0572            __Lmediumconst 0000                  postdec1 000FE5  
                postinc0 000FEE                  postinc2 000FDE  __size_of_initialisation 000A  
       __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93                i2___awdiv 0304  
     i2___awdiv@dividend 0001           __end_of___wmul 05CC            __pidataCOMRAM 05F8  
    start_initialization 0546       i2___awdiv@quotient 0007   __size_of_low_interrupt 0154  
            __end_of_pwm 042E               ?i2___awdiv 0001                 ??___wmul 0005  
            __pbssCOMRAM 0024            __pcstackBANK0 0060      low_interrupt@F19153 0024  
          _low_interrupt 0008                __pintcode 0008           _initialisation 05EE  
               ?___awdiv 0060                 ?_initPWM 0001                 _BAUDCON2 000FB9  
               ?_isdigit 0001           __size_ofi2_pwm 0088                _initComms 057C  
            ??i2___awdiv 0005           ___wmul@product 0005                 _PIE3bits 000FA3  
 __end_of_initialisation 05F8           ?_low_interrupt 0001                 _PIR3bits 000FA4  
               _RCONbits 000FD0        ___wmul@multiplier 0001         __CFG_SOSCSEL$DIG 000000  
              main@delay 006D        i2___awdiv@divisor 0003        i2___awdiv@counter 0005  
             ?_initComms 0001                copy_data0 0566                 __Hrparam 0000  
        ?_initialisation 0001                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awdiv 00D0              _isdigit$807 0002         __size_of_initPWM 0052  
       __size_of_isdigit 0022                 __ptext10 05CC                 __ptext11 05A4  
               _compteur 0029            __size_of_atoi 00D4            __size_of_main 003E  
        ??_low_interrupt 0011                 atoi@sign 000B                 main@argc 0068  
               main@argv 006A      __CFG_INTOSCSEL$HIGH 000000               _INTCONbits 000FF2  
            ??_initComms 0021                 isdigit@c 0003                 intlevel2 0000  
           pwm@dutycycle 0021               _RCSTA2bits 000FA6                 pwm@color 0023  
     __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000  
