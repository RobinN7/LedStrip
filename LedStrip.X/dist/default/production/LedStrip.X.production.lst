

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 23 19:56:54 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     _CCPR2L	set	3921
    37  0000                     _CCPR3L	set	3918
    38  0000                     _CCPR4L	set	3915
    39  0000                     _ANSEL1	set	31465
    40  0000                     _ANSEL2	set	31466
    41  0000                     _ANSEL3	set	31467
    42  0000                     _CCP2M2	set	31362
    43  0000                     _CCP2M3	set	31363
    44  0000                     _CCP3M2	set	31338
    45  0000                     _CCP3M3	set	31339
    46  0000                     _CCP4M2	set	31314
    47  0000                     _CCP4M3	set	31315
    48  0000                     _DC2B0	set	31364
    49  0000                     _DC2B1	set	31365
    50  0000                     _DC3B0	set	31340
    51  0000                     _DC3B1	set	31341
    52  0000                     _DC4B0	set	31316
    53  0000                     _DC4B1	set	31317
    54  0000                     _ADRESH	set	4036
    55  0000                     _ADRESL	set	4035
    56  0000                     _BAUDCON2	set	4025
    57  0000                     _INTCONbits	set	4082
    58  0000                     _PIE3bits	set	4003
    59  0000                     _PIR3bits	set	4004
    60  0000                     _PR2	set	4043
    61  0000                     _RCONbits	set	4048
    62  0000                     _RCREG2	set	3962
    63  0000                     _RCSTA2bits	set	4006
    64  0000                     _SPBRG2	set	3963
    65  0000                     _SPBRGH2	set	3964
    66  0000                     _TRISBbits	set	3987
    67  0000                     _TRISC	set	3988
    68  0000                     _TXREG2	set	3961
    69  0000                     _TXSTA2bits	set	4026
    70  0000                     _ADON	set	32272
    71  0000                     _CHS0	set	32274
    72  0000                     _CHS1	set	32275
    73  0000                     _GIE	set	32663
    74  0000                     _GO_nDONE	set	32273
    75  0000                     _PEIE	set	32662
    76  0000                     _PSA	set	32427
    77  0000                     _RC0	set	31760
    78  0000                     _RC2IF	set	32037
    79  0000                     _T08BIT	set	32430
    80  0000                     _T0CS	set	32429
    81  0000                     _T0IE	set	32661
    82  0000                     _T0IF	set	32658
    83  0000                     _T0PS0	set	32424
    84  0000                     _T0PS1	set	32425
    85  0000                     _T0PS2	set	32426
    86  0000                     _T2CKPS0	set	32336
    87  0000                     _T2CKPS1	set	32337
    88  0000                     _TMR0IE	set	32661
    89  0000                     _TMR0IP	set	32650
    90  0000                     _TMR2ON	set	32338
    91  0000                     _TRIGSEL0	set	32270
    92  0000                     _TRIGSEL1	set	32271
    93  0000                     _VCFG0	set	32268
    94  0000                     _VCFG1	set	32269
    95  0000                     _VNCFG	set	32267
    96                           
    97                           ; 0 bytes @ 0x2B
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 157 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;  argc            2   63[BANK0 ] int 
   106 ;;  argv            3   65[BANK0 ] PTR PTR unsigned char 
   107 ;; Auto vars:     Size  Location     Type
   108 ;;  msg            15   68[BANK0 ] unsigned char [15]
   109 ;;  delay           4   91[BANK0 ] long 
   110 ;;  amplitude3      2   88[BANK0 ] unsigned int 
   111 ;;  amplitude2      2   86[BANK0 ] unsigned int 
   112 ;;  amplitude1      2   84[BANK0 ] unsigned int 
   113 ;;  mode            1   90[BANK0 ] unsigned char 
   114 ;;  old_SWITCH1     1   83[BANK0 ] unsigned char 
   115 ;; Return value:  Size  Location     Type
   116 ;;                  2   63[BANK0 ] int 
   117 ;; Registers used:
   118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   124 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   125 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   127 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   128 ;;Total ram usage:       32 bytes
   129 ;; Hardware stack levels required when called:    6
   130 ;; This function calls:
   131 ;;		___ftdiv
   132 ;;		___ftmul
   133 ;;		___fttol
   134 ;;		___lbtoft
   135 ;;		___lwtoft
   136 ;;		_initialisation
   137 ;;		_pwm
   138 ;;		_readADC
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  0000B4                     __ptext0:
   146                           	opt stack 0
   147  0000B4                     _main:
   148                           	opt stack 25
   149                           
   150                           ;main.c: 159: long int delay=0;
   151                           
   152                           ;incstack = 0
   153  0000B4  0E00               	movlw	0
   154  0000B6  0100               	movlb	0	; () banked
   155  0000B8  6FBB               	movwf	main@delay& (0+255),b
   156  0000BA  0E00               	movlw	0
   157  0000BC  6FBC               	movwf	(main@delay+1)& (0+255),b
   158  0000BE  0E00               	movlw	0
   159  0000C0  6FBD               	movwf	(main@delay+2)& (0+255),b
   160  0000C2  0E00               	movlw	0
   161  0000C4  6FBE               	movwf	(main@delay+3)& (0+255),b
   162                           
   163                           ;main.c: 160: for(delay=0;delay<100000;delay++);
   164  0000C6  0E00               	movlw	0
   165  0000C8  0100               	movlb	0	; () banked
   166  0000CA  6FBB               	movwf	main@delay& (0+255),b
   167  0000CC  0E00               	movlw	0
   168  0000CE  6FBC               	movwf	(main@delay+1)& (0+255),b
   169  0000D0  0E00               	movlw	0
   170  0000D2  6FBD               	movwf	(main@delay+2)& (0+255),b
   171  0000D4  0E00               	movlw	0
   172  0000D6  6FBE               	movwf	(main@delay+3)& (0+255),b
   173  0000D8                     l2106:
   174                           
   175                           ; BSR set to: 0
   176  0000D8  0100               	movlb	0	; () banked
   177  0000DA  BFBE               	btfsc	(main@delay+3)& (0+255),7,b
   178  0000DC  D010               	goto	l2110
   179  0000DE  0100               	movlb	0	; () banked
   180  0000E0  51BE               	movf	(main@delay+3)& (0+255),w,b
   181  0000E2  E116               	bnz	l2112
   182  0000E4  0EA0               	movlw	160
   183  0000E6  0100               	movlb	0	; () banked
   184  0000E8  5DBB               	subwf	main@delay& (0+255),w,b
   185  0000EA  0E86               	movlw	134
   186  0000EC  0100               	movlb	0	; () banked
   187  0000EE  59BC               	subwfb	(main@delay+1)& (0+255),w,b
   188  0000F0  0E01               	movlw	1
   189  0000F2  0100               	movlb	0	; () banked
   190  0000F4  59BD               	subwfb	(main@delay+2)& (0+255),w,b
   191  0000F6  B0D8               	btfsc	status,0,c
   192  0000F8  D00B               	goto	l2112
   193  0000FA  D001               	goto	l2110
   194                           
   195                           ; BSR set to: 0
   196  0000FC  D009               	goto	l2112
   197  0000FE                     l2110:
   198                           
   199                           ; BSR set to: 0
   200  0000FE  0E01               	movlw	1
   201  000100  0100               	movlb	0	; () banked
   202  000102  27BB               	addwf	main@delay& (0+255),f,b
   203  000104  0E00               	movlw	0
   204  000106  23BC               	addwfc	(main@delay+1)& (0+255),f,b
   205  000108  23BD               	addwfc	(main@delay+2)& (0+255),f,b
   206  00010A  23BE               	addwfc	(main@delay+3)& (0+255),f,b
   207  00010C  D7E5               	goto	l2106
   208  00010E  D000               	goto	l2112
   209  000110                     l2112:
   210                           
   211                           ; BSR set to: 0
   212                           ;main.c: 161: initialisation();
   213  000110  EC77  F007         	call	_initialisation	;wreg free
   214                           
   215                           ;main.c: 162: char msg[15]="";
   216  000114  EE20  F0BF         	lfsr	2,main@F19169
   217  000118  EE10  F0A4         	lfsr	1,main@msg
   218  00011C  0E0E               	movlw	14
   219  00011E                     u1711:
   220  00011E  CFDB FFE3          	movff	plusw2,plusw1
   221  000122  06E8               	decf	wreg,f,c
   222  000124  E2FC               	bc	u1711
   223                           
   224                           ;main.c: 164: char mode=0;
   225  000126  0E00               	movlw	0
   226  000128  0100               	movlb	0	; () banked
   227  00012A  6FBA               	movwf	main@mode& (0+255),b
   228                           
   229                           ; BSR set to: 0
   230                           ;main.c: 165: char old_SWITCH1=0;
   231  00012C  0E00               	movlw	0
   232  00012E  0100               	movlb	0	; () banked
   233  000130  6FB3               	movwf	main@old_SWITCH1& (0+255),b
   234                           
   235                           ; BSR set to: 0
   236                           ;main.c: 171: unsigned int amplitude1=0;
   237  000132  0E00               	movlw	0
   238  000134  0100               	movlb	0	; () banked
   239  000136  6FB5               	movwf	(main@amplitude1+1)& (0+255),b
   240  000138  0E00               	movlw	0
   241  00013A  6FB4               	movwf	main@amplitude1& (0+255),b
   242                           
   243                           ; BSR set to: 0
   244                           ;main.c: 172: unsigned int amplitude2=0;
   245  00013C  0E00               	movlw	0
   246  00013E  0100               	movlb	0	; () banked
   247  000140  6FB7               	movwf	(main@amplitude2+1)& (0+255),b
   248  000142  0E00               	movlw	0
   249  000144  6FB6               	movwf	main@amplitude2& (0+255),b
   250                           
   251                           ; BSR set to: 0
   252                           ;main.c: 173: unsigned int amplitude3=0;
   253  000146  0E00               	movlw	0
   254  000148  0100               	movlb	0	; () banked
   255  00014A  6FB9               	movwf	(main@amplitude3+1)& (0+255),b
   256  00014C  0E00               	movlw	0
   257  00014E  6FB8               	movwf	main@amplitude3& (0+255),b
   258  000150  D000               	goto	l2126
   259  000152                     l2126:
   260                           
   261                           ;main.c: 176: for(delay=0;delay<100;delay++);
   262  000152  0E00               	movlw	0
   263  000154  0100               	movlb	0	; () banked
   264  000156  6FBB               	movwf	main@delay& (0+255),b
   265  000158  0E00               	movlw	0
   266  00015A  6FBC               	movwf	(main@delay+1)& (0+255),b
   267  00015C  0E00               	movlw	0
   268  00015E  6FBD               	movwf	(main@delay+2)& (0+255),b
   269  000160  0E00               	movlw	0
   270  000162  6FBE               	movwf	(main@delay+3)& (0+255),b
   271  000164                     l2128:
   272                           
   273                           ; BSR set to: 0
   274  000164  0100               	movlb	0	; () banked
   275  000166  BFBE               	btfsc	(main@delay+3)& (0+255),7,b
   276  000168  D00E               	goto	l2132
   277  00016A  0100               	movlb	0	; () banked
   278  00016C  51BE               	movf	(main@delay+3)& (0+255),w,b
   279  00016E  0100               	movlb	0	; () banked
   280  000170  11BD               	iorwf	(main@delay+2)& (0+255),w,b
   281  000172  0100               	movlb	0	; () banked
   282  000174  11BC               	iorwf	(main@delay+1)& (0+255),w,b
   283  000176  E110               	bnz	l2134
   284  000178  0E64               	movlw	100
   285  00017A  0100               	movlb	0	; () banked
   286  00017C  5DBB               	subwf	main@delay& (0+255),w,b
   287  00017E  B0D8               	btfsc	status,0,c
   288  000180  D00B               	goto	l2134
   289  000182  D001               	goto	l2132
   290                           
   291                           ; BSR set to: 0
   292  000184  D009               	goto	l2134
   293  000186                     l2132:
   294                           
   295                           ; BSR set to: 0
   296  000186  0E01               	movlw	1
   297  000188  0100               	movlb	0	; () banked
   298  00018A  27BB               	addwf	main@delay& (0+255),f,b
   299  00018C  0E00               	movlw	0
   300  00018E  23BC               	addwfc	(main@delay+1)& (0+255),f,b
   301  000190  23BD               	addwfc	(main@delay+2)& (0+255),f,b
   302  000192  23BE               	addwfc	(main@delay+3)& (0+255),f,b
   303  000194  D7E7               	goto	l2128
   304  000196  D000               	goto	l2134
   305  000198                     l2134:
   306                           
   307                           ; BSR set to: 0
   308                           ;main.c: 178: amplitude1=readADC(1);
   309  000198  0E01               	movlw	1
   310  00019A  EC7F  F006         	call	_readADC
   311  00019E  C01E  F0B4         	movff	?_readADC,main@amplitude1
   312  0001A2  C01F  F0B5         	movff	?_readADC+1,main@amplitude1+1
   313                           
   314                           ;main.c: 179: amplitude2=readADC(2);
   315  0001A6  0E02               	movlw	2
   316  0001A8  EC7F  F006         	call	_readADC
   317  0001AC  C01E  F0B6         	movff	?_readADC,main@amplitude2
   318  0001B0  C01F  F0B7         	movff	?_readADC+1,main@amplitude2+1
   319                           
   320                           ;main.c: 180: amplitude3=readADC(3);
   321  0001B4  0E03               	movlw	3
   322  0001B6  EC7F  F006         	call	_readADC
   323  0001BA  C01E  F0B8         	movff	?_readADC,main@amplitude3
   324  0001BE  C01F  F0B9         	movff	?_readADC+1,main@amplitude3+1
   325                           
   326                           ;main.c: 183: if (RC0==0 && old_SWITCH1==1)
   327  0001C2  B082               	btfsc	3970,0,c	;volatile
   328  0001C4  D00E               	goto	l229
   329  0001C6  0100               	movlb	0	; () banked
   330  0001C8  05B3               	decf	main@old_SWITCH1& (0+255),w,b
   331  0001CA  A4D8               	btfss	status,2,c
   332  0001CC  D00A               	goto	l229
   333                           
   334                           ; BSR set to: 0
   335                           ;main.c: 184: {
   336                           ;main.c: 185: mode=!mode;
   337  0001CE  0100               	movlb	0	; () banked
   338  0001D0  51BA               	movf	main@mode& (0+255),w,b
   339  0001D2  0100               	movlb	0	; () banked
   340  0001D4  A4D8               	btfss	status,2,c
   341  0001D6  D002               	goto	u1760
   342  0001D8  0E01               	movlw	1
   343  0001DA  D001               	goto	u1770
   344  0001DC                     u1760:
   345  0001DC  0E00               	movlw	0
   346  0001DE                     u1770:
   347  0001DE  0100               	movlb	0	; () banked
   348  0001E0  6FBA               	movwf	main@mode& (0+255),b
   349  0001E2                     l229:
   350                           
   351                           ;main.c: 186: }
   352                           ;main.c: 187: old_SWITCH1=RC0;
   353  0001E2  0E00               	movlw	0
   354  0001E4  B082               	btfsc	3970,0,c	;volatile
   355  0001E6  0E01               	movlw	1
   356  0001E8  0100               	movlb	0	; () banked
   357  0001EA  6FB3               	movwf	main@old_SWITCH1& (0+255),b
   358                           
   359                           ; BSR set to: 0
   360                           ;main.c: 189: if (mode==1)
   361  0001EC  0100               	movlb	0	; () banked
   362  0001EE  05BA               	decf	main@mode& (0+255),w,b
   363  0001F0  A4D8               	btfss	status,2,c
   364  0001F2  D0AF               	goto	l2146
   365                           
   366                           ; BSR set to: 0
   367                           ;main.c: 190: {
   368                           ;main.c: 191: pwm('R',(int)( (float)R[0] * (float)amplitude1/65520.));
   369  0001F4  0EF0               	movlw	240
   370  0001F6  0100               	movlb	0	; () banked
   371  0001F8  6F82               	movwf	___ftdiv@f2& (0+255),b
   372  0001FA  0E7F               	movlw	127
   373  0001FC  0100               	movlb	0	; () banked
   374  0001FE  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   375  000200  0E47               	movlw	71
   376  000202  0100               	movlb	0	; () banked
   377  000204  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   378  000206  C0B4  F076         	movff	main@amplitude1,___lwtoft@c
   379  00020A  C0B5  F077         	movff	main@amplitude1+1,___lwtoft@c+1
   380  00020E  ECF9  F006         	call	___lwtoft	;wreg free
   381  000212  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   382  000216  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   383  00021A  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   384  00021E  C100  F076         	movff	_R,___lwtoft@c
   385  000222  C101  F077         	movff	_R+1,___lwtoft@c+1
   386  000226  ECF9  F006         	call	___lwtoft	;wreg free
   387  00022A  C076  F079         	movff	?___lwtoft,___ftmul@f1
   388  00022E  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   389  000232  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   390  000236  EC51  F004         	call	___ftmul	;wreg free
   391  00023A  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   392  00023E  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   393  000242  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   394  000246  ECA8  F003         	call	___ftdiv	;wreg free
   395  00024A  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   396  00024E  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   397  000252  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   398  000256  ECFF  F002         	call	___fttol	;wreg free
   399  00025A  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   400  00025E  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   401  000262  0E52               	movlw	82
   402  000264  EC35  F006         	call	_pwm
   403                           
   404                           ;main.c: 192: pwm('G',(int)( (float)G[0] * (float)amplitude2/65520.));
   405  000268  0EF0               	movlw	240
   406  00026A  0100               	movlb	0	; () banked
   407  00026C  6F82               	movwf	___ftdiv@f2& (0+255),b
   408  00026E  0E7F               	movlw	127
   409  000270  0100               	movlb	0	; () banked
   410  000272  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   411  000274  0E47               	movlw	71
   412  000276  0100               	movlb	0	; () banked
   413  000278  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   414  00027A  C0B6  F076         	movff	main@amplitude2,___lwtoft@c
   415  00027E  C0B7  F077         	movff	main@amplitude2+1,___lwtoft@c+1
   416  000282  ECF9  F006         	call	___lwtoft	;wreg free
   417  000286  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   418  00028A  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   419  00028E  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   420  000292  C200  F076         	movff	_G,___lwtoft@c
   421  000296  C201  F077         	movff	_G+1,___lwtoft@c+1
   422  00029A  ECF9  F006         	call	___lwtoft	;wreg free
   423  00029E  C076  F079         	movff	?___lwtoft,___ftmul@f1
   424  0002A2  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   425  0002A6  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   426  0002AA  EC51  F004         	call	___ftmul	;wreg free
   427  0002AE  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   428  0002B2  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   429  0002B6  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   430  0002BA  ECA8  F003         	call	___ftdiv	;wreg free
   431  0002BE  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   432  0002C2  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   433  0002C6  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   434  0002CA  ECFF  F002         	call	___fttol	;wreg free
   435  0002CE  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   436  0002D2  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   437  0002D6  0E47               	movlw	71
   438  0002D8  EC35  F006         	call	_pwm
   439                           
   440                           ;main.c: 193: pwm('B',(int)( (float)B[0] * (float)amplitude3/65520.));
   441  0002DC  0EF0               	movlw	240
   442  0002DE  0100               	movlb	0	; () banked
   443  0002E0  6F82               	movwf	___ftdiv@f2& (0+255),b
   444  0002E2  0E7F               	movlw	127
   445  0002E4  0100               	movlb	0	; () banked
   446  0002E6  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   447  0002E8  0E47               	movlw	71
   448  0002EA  0100               	movlb	0	; () banked
   449  0002EC  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   450  0002EE  C0B8  F076         	movff	main@amplitude3,___lwtoft@c
   451  0002F2  C0B9  F077         	movff	main@amplitude3+1,___lwtoft@c+1
   452  0002F6  ECF9  F006         	call	___lwtoft	;wreg free
   453  0002FA  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   454  0002FE  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   455  000302  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   456  000306  C300  F076         	movff	_B,___lwtoft@c
   457  00030A  C301  F077         	movff	_B+1,___lwtoft@c+1
   458  00030E  ECF9  F006         	call	___lwtoft	;wreg free
   459  000312  C076  F079         	movff	?___lwtoft,___ftmul@f1
   460  000316  C077  F07A         	movff	?___lwtoft+1,___ftmul@f1+1
   461  00031A  C078  F07B         	movff	?___lwtoft+2,___ftmul@f1+2
   462  00031E  EC51  F004         	call	___ftmul	;wreg free
   463  000322  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   464  000326  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   465  00032A  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   466  00032E  ECA8  F003         	call	___ftdiv	;wreg free
   467  000332  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   468  000336  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   469  00033A  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   470  00033E  ECFF  F002         	call	___fttol	;wreg free
   471  000342  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   472  000346  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   473  00034A  0E42               	movlw	66
   474  00034C  EC35  F006         	call	_pwm
   475                           
   476                           ;main.c: 194: }
   477  000350  D700               	goto	l2126
   478  000352                     l2146:
   479                           
   480                           ;main.c: 195: else
   481                           ;main.c: 196: {
   482                           ;main.c: 197: pwm('R',(int)( millis * (float)amplitude1/65520.));
   483  000352  0EF0               	movlw	240
   484  000354  0100               	movlb	0	; () banked
   485  000356  6F82               	movwf	___ftdiv@f2& (0+255),b
   486  000358  0E7F               	movlw	127
   487  00035A  0100               	movlb	0	; () banked
   488  00035C  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   489  00035E  0E47               	movlw	71
   490  000360  0100               	movlb	0	; () banked
   491  000362  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   492  000364  C0B4  F076         	movff	main@amplitude1,___lwtoft@c
   493  000368  C0B5  F077         	movff	main@amplitude1+1,___lwtoft@c+1
   494  00036C  ECF9  F006         	call	___lwtoft	;wreg free
   495  000370  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   496  000374  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   497  000378  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   498  00037C  0100               	movlb	0	; () banked
   499  00037E  51CE               	movf	_millis& (0+255),w,b
   500  000380  EC0F  F007         	call	___lbtoft
   501  000384  C076  F079         	movff	?___lbtoft,___ftmul@f1
   502  000388  C077  F07A         	movff	?___lbtoft+1,___ftmul@f1+1
   503  00038C  C078  F07B         	movff	?___lbtoft+2,___ftmul@f1+2
   504  000390  EC51  F004         	call	___ftmul	;wreg free
   505  000394  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   506  000398  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   507  00039C  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   508  0003A0  ECA8  F003         	call	___ftdiv	;wreg free
   509  0003A4  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   510  0003A8  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   511  0003AC  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   512  0003B0  ECFF  F002         	call	___fttol	;wreg free
   513  0003B4  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   514  0003B8  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   515  0003BC  0E52               	movlw	82
   516  0003BE  EC35  F006         	call	_pwm
   517                           
   518                           ;main.c: 198: pwm('G',(int)( millis * (float)amplitude2/65520.));
   519  0003C2  0EF0               	movlw	240
   520  0003C4  0100               	movlb	0	; () banked
   521  0003C6  6F82               	movwf	___ftdiv@f2& (0+255),b
   522  0003C8  0E7F               	movlw	127
   523  0003CA  0100               	movlb	0	; () banked
   524  0003CC  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   525  0003CE  0E47               	movlw	71
   526  0003D0  0100               	movlb	0	; () banked
   527  0003D2  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   528  0003D4  C0B6  F076         	movff	main@amplitude2,___lwtoft@c
   529  0003D8  C0B7  F077         	movff	main@amplitude2+1,___lwtoft@c+1
   530  0003DC  ECF9  F006         	call	___lwtoft	;wreg free
   531  0003E0  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   532  0003E4  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   533  0003E8  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   534  0003EC  0100               	movlb	0	; () banked
   535  0003EE  51CE               	movf	_millis& (0+255),w,b
   536  0003F0  EC0F  F007         	call	___lbtoft
   537  0003F4  C076  F079         	movff	?___lbtoft,___ftmul@f1
   538  0003F8  C077  F07A         	movff	?___lbtoft+1,___ftmul@f1+1
   539  0003FC  C078  F07B         	movff	?___lbtoft+2,___ftmul@f1+2
   540  000400  EC51  F004         	call	___ftmul	;wreg free
   541  000404  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   542  000408  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   543  00040C  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   544  000410  ECA8  F003         	call	___ftdiv	;wreg free
   545  000414  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   546  000418  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   547  00041C  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   548  000420  ECFF  F002         	call	___fttol	;wreg free
   549  000424  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   550  000428  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   551  00042C  0E47               	movlw	71
   552  00042E  EC35  F006         	call	_pwm
   553                           
   554                           ;main.c: 199: pwm('B',(int)( millis * (float)amplitude3/65520.));
   555  000432  0EF0               	movlw	240
   556  000434  0100               	movlb	0	; () banked
   557  000436  6F82               	movwf	___ftdiv@f2& (0+255),b
   558  000438  0E7F               	movlw	127
   559  00043A  0100               	movlb	0	; () banked
   560  00043C  6F83               	movwf	(___ftdiv@f2+1)& (0+255),b
   561  00043E  0E47               	movlw	71
   562  000440  0100               	movlb	0	; () banked
   563  000442  6F84               	movwf	(___ftdiv@f2+2)& (0+255),b
   564  000444  C0B8  F076         	movff	main@amplitude3,___lwtoft@c
   565  000448  C0B9  F077         	movff	main@amplitude3+1,___lwtoft@c+1
   566  00044C  ECF9  F006         	call	___lwtoft	;wreg free
   567  000450  C076  F07C         	movff	?___lwtoft,___ftmul@f2
   568  000454  C077  F07D         	movff	?___lwtoft+1,___ftmul@f2+1
   569  000458  C078  F07E         	movff	?___lwtoft+2,___ftmul@f2+2
   570  00045C  0100               	movlb	0	; () banked
   571  00045E  51CE               	movf	_millis& (0+255),w,b
   572  000460  EC0F  F007         	call	___lbtoft
   573  000464  C076  F079         	movff	?___lbtoft,___ftmul@f1
   574  000468  C077  F07A         	movff	?___lbtoft+1,___ftmul@f1+1
   575  00046C  C078  F07B         	movff	?___lbtoft+2,___ftmul@f1+2
   576  000470  EC51  F004         	call	___ftmul	;wreg free
   577  000474  C079  F07F         	movff	?___ftmul,___ftdiv@f1
   578  000478  C07A  F080         	movff	?___ftmul+1,___ftdiv@f1+1
   579  00047C  C07B  F081         	movff	?___ftmul+2,___ftdiv@f1+2
   580  000480  ECA8  F003         	call	___ftdiv	;wreg free
   581  000484  C07F  F08E         	movff	?___ftdiv,___fttol@f1
   582  000488  C080  F08F         	movff	?___ftdiv+1,___fttol@f1+1
   583  00048C  C081  F090         	movff	?___ftdiv+2,___fttol@f1+2
   584  000490  ECFF  F002         	call	___fttol	;wreg free
   585  000494  C08E  F09D         	movff	?___fttol,pwm@dutycycle
   586  000498  C08F  F09E         	movff	?___fttol+1,pwm@dutycycle+1
   587  00049C  0E42               	movlw	66
   588  00049E  EC35  F006         	call	_pwm
   589  0004A2  D657               	goto	l2126
   590                           
   591                           ;main.c: 200: }
   592                           ;main.c: 201: }
   593                           ;main.c: 203: return (0);
   594                           ;	Return value of _main is never used
   595  0004A4  EF58  F000         	goto	start
   596  0004A8                     __end_of_main:
   597                           	opt stack 0
   598                           wreg	equ	0xFE8
   599                           plusw1	equ	0xFE3
   600                           plusw2	equ	0xFDB
   601                           status	equ	0xFD8
   602                           
   603                           	psect	cinit
   604  000DAC                     __pcinit:
   605                           	opt stack 0
   606  000DAC                     start_initialization:
   607                           	opt stack 0
   608  000DAC                     __initialization:
   609                           	opt stack 0
   610                           
   611                           ; Clear objects allocated to BANK3 (200 bytes)
   612  000DAC  EE03  F000         	lfsr	0,__pbssBANK3
   613  000DB0  0EC8               	movlw	200
   614  000DB2                     clear_0:
   615  000DB2  6AEE               	clrf	postinc0,c
   616  000DB4  06E8               	decf	wreg,f,c
   617  000DB6  E1FD               	bnz	clear_0
   618                           
   619                           ; Clear objects allocated to BANK2 (200 bytes)
   620  000DB8  EE02  F000         	lfsr	0,__pbssBANK2
   621  000DBC  0EC8               	movlw	200
   622  000DBE                     clear_1:
   623  000DBE  6AEE               	clrf	postinc0,c
   624  000DC0  06E8               	decf	wreg,f,c
   625  000DC2  E1FD               	bnz	clear_1
   626                           
   627                           ; Clear objects allocated to BANK1 (200 bytes)
   628  000DC4  EE01  F000         	lfsr	0,__pbssBANK1
   629  000DC8  0EC8               	movlw	200
   630  000DCA                     clear_2:
   631  000DCA  6AEE               	clrf	postinc0,c
   632  000DCC  06E8               	decf	wreg,f,c
   633  000DCE  E1FD               	bnz	clear_2
   634                           
   635                           ; Clear objects allocated to BANK0 (16 bytes)
   636  000DD0  EE00  F0BF         	lfsr	0,__pbssBANK0
   637  000DD4  0E10               	movlw	16
   638  000DD6                     clear_3:
   639  000DD6  6AEE               	clrf	postinc0,c
   640  000DD8  06E8               	decf	wreg,f,c
   641  000DDA  E1FD               	bnz	clear_3
   642                           
   643                           ; Clear objects allocated to COMRAM (22 bytes)
   644  000DDC  EE00  F02C         	lfsr	0,__pbssCOMRAM
   645  000DE0  0E16               	movlw	22
   646  000DE2                     clear_4:
   647  000DE2  6AEE               	clrf	postinc0,c
   648  000DE4  06E8               	decf	wreg,f,c
   649  000DE6  E1FD               	bnz	clear_4
   650  000DE8                     end_of_initialization:
   651                           	opt stack 0
   652  000DE8                     __end_of__initialization:
   653                           	opt stack 0
   654  000DE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   655  000DEA  6EF8               	movwf	tblptru,c
   656  000DEC  0100               	movlb	0
   657  000DEE  EF5A  F000         	goto	_main	;jump to C main() function
   658                           tblptru	equ	0xFF8
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           plusw1	equ	0xFE3
   662                           plusw2	equ	0xFDB
   663                           status	equ	0xFD8
   664                           
   665                           	psect	bssCOMRAM
   666  00002C                     __pbssCOMRAM:
   667                           	opt stack 0
   668  00002C                     RX2_ISR@F19163:
   669                           	opt stack 0
   670  00002C                     	ds	2
   671  00002E                     RX2_ISR@compteur:
   672                           	opt stack 0
   673  00002E                     	ds	1
   674  00002F                     _beginB:
   675                           	opt stack 0
   676  00002F                     	ds	1
   677  000030                     _beginG:
   678                           	opt stack 0
   679  000030                     	ds	1
   680  000031                     _beginR:
   681                           	opt stack 0
   682  000031                     	ds	1
   683  000032                     RX2_ISR@buffer:
   684                           	opt stack 0
   685  000032                     	ds	16
   686                           tblptru	equ	0xFF8
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           plusw1	equ	0xFE3
   690                           plusw2	equ	0xFDB
   691                           status	equ	0xFD8
   692                           
   693                           	psect	bssBANK0
   694  0000BF                     __pbssBANK0:
   695                           	opt stack 0
   696  0000BF                     main@F19169:
   697                           	opt stack 0
   698  0000BF                     	ds	15
   699  0000CE                     _millis:
   700                           	opt stack 0
   701  0000CE                     	ds	1
   702                           tblptru	equ	0xFF8
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           plusw1	equ	0xFE3
   706                           plusw2	equ	0xFDB
   707                           status	equ	0xFD8
   708                           
   709                           	psect	bssBANK1
   710  000100                     __pbssBANK1:
   711                           	opt stack 0
   712  000100                     _R:
   713                           	opt stack 0
   714  000100                     	ds	200
   715                           tblptru	equ	0xFF8
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           plusw1	equ	0xFE3
   719                           plusw2	equ	0xFDB
   720                           status	equ	0xFD8
   721                           
   722                           	psect	bssBANK2
   723  000200                     __pbssBANK2:
   724                           	opt stack 0
   725  000200                     _G:
   726                           	opt stack 0
   727  000200                     	ds	200
   728                           tblptru	equ	0xFF8
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           plusw1	equ	0xFE3
   732                           plusw2	equ	0xFDB
   733                           status	equ	0xFD8
   734                           
   735                           	psect	bssBANK3
   736  000300                     __pbssBANK3:
   737                           	opt stack 0
   738  000300                     _B:
   739                           	opt stack 0
   740  000300                     	ds	200
   741                           tblptru	equ	0xFF8
   742                           postinc0	equ	0xFEE
   743                           wreg	equ	0xFE8
   744                           plusw1	equ	0xFE3
   745                           plusw2	equ	0xFDB
   746                           status	equ	0xFD8
   747                           
   748                           	psect	cstackBANK0
   749  000060                     __pcstackBANK0:
   750                           	opt stack 0
   751  000060                     ??_Timer0_ISR:
   752                           
   753                           ; 0 bytes @ 0x0
   754  000060                     	ds	17
   755  000071                     ?___awdiv:
   756                           	opt stack 0
   757  000071                     ?___ftpack:
   758                           	opt stack 0
   759  000071                     ___awdiv@dividend:
   760                           	opt stack 0
   761  000071                     ___ftpack@arg:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0x11
   765  000071                     	ds	2
   766  000073                     ___awdiv@divisor:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x13
   770  000073                     	ds	1
   771  000074                     ___ftpack@exp:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x14
   775  000074                     	ds	1
   776  000075                     ___ftpack@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x15
   780  000075                     	ds	1
   781  000076                     ?___lbtoft:
   782                           	opt stack 0
   783  000076                     ?___lwtoft:
   784                           	opt stack 0
   785  000076                     ___lwtoft@c:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x16
   789  000076                     	ds	3
   790  000079                     ?___ftmul:
   791                           	opt stack 0
   792  000079                     ___ftmul@f1:
   793                           	opt stack 0
   794                           
   795                           ; 3 bytes @ 0x19
   796  000079                     	ds	3
   797  00007C                     ___ftmul@f2:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x1C
   801  00007C                     	ds	3
   802  00007F                     ?___ftdiv:
   803                           	opt stack 0
   804  00007F                     ___ftdiv@f1:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x1F
   808  00007F                     	ds	3
   809  000082                     ___ftdiv@f2:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x22
   813  000082                     	ds	3
   814  000085                     ??___ftdiv:
   815                           
   816                           ; 0 bytes @ 0x25
   817  000085                     	ds	3
   818  000088                     ___ftdiv@cntr:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x28
   822  000088                     	ds	1
   823  000089                     ___ftdiv@f3:
   824                           	opt stack 0
   825                           
   826                           ; 3 bytes @ 0x29
   827  000089                     	ds	3
   828  00008C                     ___ftdiv@exp:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x2C
   832  00008C                     	ds	1
   833  00008D                     ___ftdiv@sign:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x2D
   837  00008D                     	ds	1
   838  00008E                     ?___fttol:
   839                           	opt stack 0
   840  00008E                     ___fttol@f1:
   841                           	opt stack 0
   842                           
   843                           ; 3 bytes @ 0x2E
   844  00008E                     	ds	4
   845  000092                     ??___fttol:
   846                           
   847                           ; 0 bytes @ 0x32
   848  000092                     	ds	5
   849  000097                     ___fttol@sign1:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x37
   853  000097                     	ds	1
   854  000098                     ___fttol@lval:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x38
   858  000098                     	ds	4
   859  00009C                     ___fttol@exp1:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x3C
   863  00009C                     	ds	1
   864  00009D                     pwm@dutycycle:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x3D
   868  00009D                     	ds	2
   869  00009F                     
   870                           ; 2 bytes @ 0x3F
   871  00009F                     	ds	2
   872  0000A1                     
   873                           ; 3 bytes @ 0x41
   874  0000A1                     	ds	3
   875  0000A4                     main@msg:
   876                           	opt stack 0
   877                           
   878                           ; 15 bytes @ 0x44
   879  0000A4                     	ds	15
   880  0000B3                     main@old_SWITCH1:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x53
   884  0000B3                     	ds	1
   885  0000B4                     main@amplitude1:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x54
   889  0000B4                     	ds	2
   890  0000B6                     main@amplitude2:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x56
   894  0000B6                     	ds	2
   895  0000B8                     main@amplitude3:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x58
   899  0000B8                     	ds	2
   900  0000BA                     main@mode:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x5A
   904  0000BA                     	ds	1
   905  0000BB                     main@delay:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x5B
   909  0000BB                     	ds	4
   910                           tblptru	equ	0xFF8
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           plusw1	equ	0xFE3
   914                           plusw2	equ	0xFDB
   915                           status	equ	0xFD8
   916                           
   917                           	psect	cstackCOMRAM
   918  000001                     __pcstackCOMRAM:
   919                           	opt stack 0
   920  000001                     ??_isdigit:
   921  000001                     ?___wmul:
   922                           	opt stack 0
   923  000001                     ___wmul@multiplier:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x0
   927  000001                     	ds	1
   928  000002                     _isdigit$858:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x1
   932  000002                     	ds	1
   933  000003                     isdigit@c:
   934                           	opt stack 0
   935  000003                     ___wmul@multiplicand:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x2
   939  000003                     	ds	2
   940  000005                     ___wmul@product:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x4
   944  000005                     	ds	2
   945  000007                     ?_atoi:
   946                           	opt stack 0
   947  000007                     atoi@s:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x6
   951  000007                     	ds	2
   952  000009                     ??_atoi:
   953                           
   954                           ; 0 bytes @ 0x8
   955  000009                     	ds	2
   956  00000B                     atoi@sign:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0xA
   960  00000B                     	ds	1
   961  00000C                     atoi@a:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0xB
   965  00000C                     	ds	2
   966  00000E                     ??_RX2_ISR:
   967                           
   968                           ; 0 bytes @ 0xD
   969  00000E                     	ds	14
   970  00001C                     RX2_ISR@input:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x1B
   974  00001C                     	ds	2
   975  00001E                     ??___ftpack:
   976  00001E                     ?_readADC:
   977                           	opt stack 0
   978  00001E                     ___awdiv@counter:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x1D
   982  00001E                     	ds	1
   983  00001F                     ___awdiv@sign:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x1E
   987  00001F                     	ds	1
   988  000020                     ??_readADC:
   989  000020                     ___awdiv@quotient:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x1F
   993  000020                     	ds	1
   994  000021                     ___lbtoft@c:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x20
   998  000021                     	ds	1
   999  000022                     ??___ftmul:
  1000  000022                     readADC@channel:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x21
  1004  000022                     	ds	1
  1005  000023                     readADC@tempo:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x22
  1009  000023                     	ds	2
  1010  000025                     ___ftmul@exp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x24
  1014  000025                     	ds	1
  1015  000026                     ___ftmul@f3_as_product:
  1016                           	opt stack 0
  1017                           
  1018                           ; 3 bytes @ 0x25
  1019  000026                     	ds	3
  1020  000029                     ___ftmul@cntr:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x28
  1024  000029                     	ds	1
  1025  00002A                     ___ftmul@sign:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x29
  1029  00002A                     	ds	1
  1030  00002B                     pwm@color:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x2A
  1034  00002B                     	ds	1
  1035  00002C                     tblptru	equ	0xFF8
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           plusw1	equ	0xFE3
  1039                           plusw2	equ	0xFDB
  1040                           status	equ	0xFD8
  1041                           
  1042 ;; *************** function _readADC *****************
  1043 ;; Defined at:
  1044 ;;		line 217 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  channel         1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  channel         1   33[COMRAM] unsigned char 
  1049 ;;  tempo           1   34[COMRAM] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2   29[COMRAM] unsigned int 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;Total ram usage:        6 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    4
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text1
  1074  000CFE                     __ptext1:
  1075                           	opt stack 0
  1076  000CFE                     _readADC:
  1077                           	opt stack 26
  1078                           
  1079                           ;incstack = 0
  1080                           ;readADC@channel stored from wreg
  1081  000CFE  6E22               	movwf	readADC@channel,c
  1082                           
  1083                           ;main.c: 219: char tempo=0;
  1084  000D00  0E00               	movlw	0
  1085  000D02  6E23               	movwf	readADC@tempo,c
  1086                           
  1087                           ;main.c: 220: switch (channel)
  1088  000D04  D008               	goto	l1978
  1089  000D06                     l247:
  1090                           
  1091                           ;main.c: 223: {
  1092                           ;main.c: 224: CHS1=0;
  1093  000D06  96C2               	bcf	4034,3,c	;volatile
  1094  000D08  D004               	goto	L1
  1095  000D0A                     l249:
  1096                           
  1097                           ;main.c: 229: {
  1098                           ;main.c: 230: CHS1=1;
  1099  000D0A  86C2               	bsf	4034,3,c	;volatile
  1100                           
  1101                           ;main.c: 231: CHS0=0;
  1102  000D0C  94C2               	bcf	4034,2,c	;volatile
  1103                           
  1104                           ;main.c: 232: break;
  1105  000D0E  D00E               	goto	l1980
  1106  000D10                     l250:
  1107                           
  1108                           ;main.c: 235: {
  1109                           ;main.c: 236: CHS1=1;
  1110  000D10  86C2               	bsf	4034,3,c	;volatile
  1111  000D12                     L1:
  1112                           
  1113                           ;main.c: 237: CHS0=1;
  1114  000D12  84C2               	bsf	4034,2,c	;volatile
  1115                           
  1116                           ;main.c: 239: }
  1117                           ;main.c: 240: }
  1118                           
  1119                           ;main.c: 238: break;
  1120  000D14  D00B               	goto	l1980
  1121  000D16                     l1978:
  1122  000D16  5022               	movf	readADC@channel,w,c
  1123                           
  1124                           ; Switch size 1, requested type "space"
  1125                           ; Number of cases is 3, Range of values is 1 to 3
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; simple_byte           10     6 (average)
  1129                           ;	Chosen strategy is simple_byte
  1130  000D18  0A01               	xorlw	1	; case 1
  1131  000D1A  B4D8               	btfsc	status,2,c
  1132  000D1C  D7F4               	goto	l247
  1133  000D1E  0A03               	xorlw	3	; case 2
  1134  000D20  B4D8               	btfsc	status,2,c
  1135  000D22  D7F3               	goto	l249
  1136  000D24  0A01               	xorlw	1	; case 3
  1137  000D26  B4D8               	btfsc	status,2,c
  1138  000D28  D7F3               	goto	l250
  1139  000D2A  D000               	goto	l1980
  1140  000D2C                     l1980:
  1141                           
  1142                           ;main.c: 241: for(tempo=0;tempo<100;tempo++);
  1143  000D2C  0E00               	movlw	0
  1144  000D2E  6E23               	movwf	readADC@tempo,c
  1145  000D30  D002               	goto	l1988
  1146  000D32  D004               	goto	l252
  1147  000D34                     l1986:
  1148  000D34  2A23               	incf	readADC@tempo,f,c
  1149  000D36                     l1988:
  1150  000D36  0E63               	movlw	99
  1151  000D38  6423               	cpfsgt	readADC@tempo,c
  1152  000D3A  D7FC               	goto	l1986
  1153  000D3C                     l252:
  1154                           
  1155                           ;main.c: 242: GO_nDONE = 1;
  1156  000D3C  82C2               	bsf	4034,1,c	;volatile
  1157                           
  1158                           ;main.c: 243: while(GO_nDONE);
  1159  000D3E  D000               	goto	l253
  1160  000D40                     l253:
  1161  000D40  B2C2               	btfsc	4034,1,c	;volatile
  1162  000D42  D7FE               	goto	l253
  1163                           
  1164                           ;main.c: 245: return ((ADRESH<<8)+ADRESL);
  1165  000D44  50C4               	movf	4036,w,c	;volatile
  1166  000D46  6E21               	movwf	(??_readADC+1)& (0+255),c
  1167  000D48  6A20               	clrf	??_readADC& (0+255),c
  1168  000D4A  50C3               	movf	4035,w,c	;volatile
  1169  000D4C  2420               	addwf	??_readADC,w,c
  1170  000D4E  6E1E               	movwf	?_readADC,c
  1171  000D50  0E00               	movlw	0
  1172  000D52  2021               	addwfc	??_readADC+1,w,c
  1173  000D54  6E1F               	movwf	?_readADC+1,c
  1174  000D56  0012               	return	
  1175  000D58  0012               	return		;funcret
  1176  000D5A                     __end_of_readADC:
  1177                           	opt stack 0
  1178                           tblptru	equ	0xFF8
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           plusw1	equ	0xFE3
  1182                           plusw2	equ	0xFDB
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _pwm *****************
  1186 ;; Defined at:
  1187 ;;		line 8 in file "converter.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  color           1    wreg     unsigned char 
  1190 ;;  dutycycle       2   61[BANK0 ] int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  color           1   42[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;		None               void
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;Total ram usage:        3 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    5
  1209 ;; This function calls:
  1210 ;;		___awdiv
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217  000C6A                     __ptext2:
  1218                           	opt stack 0
  1219  000C6A                     _pwm:
  1220                           	opt stack 25
  1221                           
  1222                           ;incstack = 0
  1223                           ;pwm@color stored from wreg
  1224  000C6A  6E2B               	movwf	pwm@color,c
  1225                           
  1226                           ;converter.c: 9: switch(color){
  1227  000C6C  D03C               	goto	l1972
  1228  000C6E                     l1952:
  1229                           
  1230                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1231  000C6E  C09D  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1232  000C72  C09E  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1233  000C76  0E00               	movlw	0
  1234  000C78  0100               	movlb	0	; () banked
  1235  000C7A  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1236  000C7C  0E04               	movlw	4
  1237  000C7E  6F73               	movwf	___awdiv@divisor& (0+255),b
  1238  000C80  ECD9  F005         	call	___awdiv	;wreg free
  1239  000C84  0100               	movlb	0	; () banked
  1240  000C86  5171               	movf	?___awdiv& (0+255),w,b
  1241  000C88  010F               	movlb	15	; () banked
  1242  000C8A  6F51               	movwf	81,b	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1246  000C8C  010F               	movlb	15	; () banked
  1247  000C8E  9B50               	bcf	80,5,b	;volatile
  1248                           
  1249                           ; BSR set to: 15
  1250                           ;converter.c: 13: DC2B0=dutycycle%1;
  1251  000C90  010F               	movlb	15	; () banked
  1252  000C92  9950               	bcf	80,4,b	;volatile
  1253                           
  1254                           ;converter.c: 14: break;
  1255  000C94  0012               	return	
  1256  000C96                     l1958:
  1257                           
  1258                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1259  000C96  C09D  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1260  000C9A  C09E  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1261  000C9E  0E00               	movlw	0
  1262  000CA0  0100               	movlb	0	; () banked
  1263  000CA2  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1264  000CA4  0E04               	movlw	4
  1265  000CA6  6F73               	movwf	___awdiv@divisor& (0+255),b
  1266  000CA8  ECD9  F005         	call	___awdiv	;wreg free
  1267  000CAC  0100               	movlb	0	; () banked
  1268  000CAE  5171               	movf	?___awdiv& (0+255),w,b
  1269  000CB0  010F               	movlb	15	; () banked
  1270  000CB2  6F4E               	movwf	78,b	;volatile
  1271                           
  1272                           ; BSR set to: 15
  1273                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1274  000CB4  010F               	movlb	15	; () banked
  1275  000CB6  9B4D               	bcf	77,5,b	;volatile
  1276                           
  1277                           ; BSR set to: 15
  1278                           ;converter.c: 18: DC3B0=0;
  1279  000CB8  010F               	movlb	15	; () banked
  1280  000CBA  994D               	bcf	77,4,b	;volatile
  1281                           
  1282                           ;converter.c: 19: break;
  1283  000CBC  0012               	return	
  1284  000CBE                     l1964:
  1285                           
  1286                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1287  000CBE  C09D  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1288  000CC2  C09E  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1289  000CC6  0E00               	movlw	0
  1290  000CC8  0100               	movlb	0	; () banked
  1291  000CCA  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1292  000CCC  0E04               	movlw	4
  1293  000CCE  6F73               	movwf	___awdiv@divisor& (0+255),b
  1294  000CD0  ECD9  F005         	call	___awdiv	;wreg free
  1295  000CD4  0100               	movlb	0	; () banked
  1296  000CD6  5171               	movf	?___awdiv& (0+255),w,b
  1297  000CD8  010F               	movlb	15	; () banked
  1298  000CDA  6F4B               	movwf	75,b	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1302  000CDC  010F               	movlb	15	; () banked
  1303  000CDE  9B4A               	bcf	74,5,b	;volatile
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;converter.c: 23: DC4B0=dutycycle%1;
  1307  000CE0  010F               	movlb	15	; () banked
  1308  000CE2  994A               	bcf	74,4,b	;volatile
  1309                           
  1310                           ; BSR set to: 15
  1311                           ;converter.c: 25: }
  1312                           
  1313                           ;converter.c: 24: break;
  1314  000CE4  0012               	return	
  1315  000CE6                     l1972:
  1316  000CE6  502B               	movf	pwm@color,w,c
  1317                           
  1318                           ; Switch size 1, requested type "space"
  1319                           ; Number of cases is 3, Range of values is 66 to 82
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           10     6 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324  000CE8  0A42               	xorlw	66	; case 66
  1325  000CEA  B4D8               	btfsc	status,2,c
  1326  000CEC  D7C0               	goto	l1952
  1327  000CEE  0A05               	xorlw	5	; case 71
  1328  000CF0  B4D8               	btfsc	status,2,c
  1329  000CF2  D7E5               	goto	l1964
  1330  000CF4  0A15               	xorlw	21	; case 82
  1331  000CF6  A4D8               	btfss	status,2,c
  1332  000CF8  0012               	return	
  1333  000CFA  D7CD               	goto	l1958
  1334  000CFC  0012               	return		;funcret
  1335  000CFE                     __end_of_pwm:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           plusw1	equ	0xFE3
  1341                           plusw2	equ	0xFDB
  1342                           status	equ	0xFD8
  1343                           
  1344 ;; *************** function ___awdiv *****************
  1345 ;; Defined at:
  1346 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  dividend        2   17[BANK0 ] int 
  1349 ;;  divisor         2   19[BANK0 ] int 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  quotient        2   31[COMRAM] int 
  1352 ;;  sign            1   30[COMRAM] unsigned char 
  1353 ;;  counter         1   29[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   17[BANK0 ] int 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1364 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;Total ram usage:        8 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    4
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_pwm
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text3
  1378  000BB2                     __ptext3:
  1379                           	opt stack 0
  1380  000BB2                     ___awdiv:
  1381                           	opt stack 25
  1382                           
  1383                           ;incstack = 0
  1384  000BB2  0E00               	movlw	0
  1385  000BB4  6E1F               	movwf	___awdiv@sign,c
  1386  000BB6  0100               	movlb	0	; () banked
  1387  000BB8  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1388  000BBA  D008               	goto	l1914
  1389                           
  1390                           ; BSR set to: 0
  1391  000BBC  0100               	movlb	0	; () banked
  1392  000BBE  6D73               	negf	___awdiv@divisor& (0+255),b
  1393  000BC0  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1394  000BC2  B0D8               	btfsc	status,0,c
  1395  000BC4  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1396                           
  1397                           ; BSR set to: 0
  1398  000BC6  0E01               	movlw	1
  1399  000BC8  6E1F               	movwf	___awdiv@sign,c
  1400  000BCA  D000               	goto	l1914
  1401  000BCC                     l1914:
  1402                           
  1403                           ; BSR set to: 0
  1404  000BCC  0100               	movlb	0	; () banked
  1405  000BCE  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1406  000BD0  D008               	goto	l1920
  1407                           
  1408                           ; BSR set to: 0
  1409  000BD2  0100               	movlb	0	; () banked
  1410  000BD4  6D71               	negf	___awdiv@dividend& (0+255),b
  1411  000BD6  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1412  000BD8  B0D8               	btfsc	status,0,c
  1413  000BDA  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1414                           
  1415                           ; BSR set to: 0
  1416  000BDC  0E01               	movlw	1
  1417  000BDE  1A1F               	xorwf	___awdiv@sign,f,c
  1418  000BE0  D000               	goto	l1920
  1419  000BE2                     l1920:
  1420                           
  1421                           ; BSR set to: 0
  1422  000BE2  0E00               	movlw	0
  1423  000BE4  6E21               	movwf	___awdiv@quotient+1,c
  1424  000BE6  0E00               	movlw	0
  1425  000BE8  6E20               	movwf	___awdiv@quotient,c
  1426                           
  1427                           ; BSR set to: 0
  1428  000BEA  0100               	movlb	0	; () banked
  1429  000BEC  5173               	movf	___awdiv@divisor& (0+255),w,b
  1430  000BEE  0100               	movlb	0	; () banked
  1431  000BF0  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1432  000BF2  B4D8               	btfsc	status,2,c
  1433  000BF4  D02C               	goto	l1942
  1434                           
  1435                           ; BSR set to: 0
  1436  000BF6  0E01               	movlw	1
  1437  000BF8  6E1E               	movwf	___awdiv@counter,c
  1438  000BFA  D006               	goto	l1928
  1439  000BFC                     l1926:
  1440                           
  1441                           ; BSR set to: 0
  1442  000BFC  0100               	movlb	0	; () banked
  1443  000BFE  90D8               	bcf	status,0,c
  1444  000C00  3773               	rlcf	___awdiv@divisor& (0+255),f,b
  1445  000C02  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1446  000C04  2A1E               	incf	___awdiv@counter,f,c
  1447  000C06  D000               	goto	l1928
  1448  000C08                     l1928:
  1449                           
  1450                           ; BSR set to: 0
  1451  000C08  0100               	movlb	0	; () banked
  1452  000C0A  BF74               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1453  000C0C  D002               	goto	l1930
  1454  000C0E  D7F6               	goto	l1926
  1455                           
  1456                           ; BSR set to: 0
  1457  000C10  D000               	goto	l1930
  1458  000C12                     l1930:
  1459                           
  1460                           ; BSR set to: 0
  1461  000C12  90D8               	bcf	status,0,c
  1462  000C14  3620               	rlcf	___awdiv@quotient,f,c
  1463  000C16  3621               	rlcf	___awdiv@quotient+1,f,c
  1464                           
  1465                           ; BSR set to: 0
  1466  000C18  0100               	movlb	0	; () banked
  1467  000C1A  5173               	movf	___awdiv@divisor& (0+255),w,b
  1468  000C1C  0100               	movlb	0	; () banked
  1469  000C1E  5D71               	subwf	___awdiv@dividend& (0+255),w,b
  1470  000C20  0100               	movlb	0	; () banked
  1471  000C22  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1472  000C24  0100               	movlb	0	; () banked
  1473  000C26  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1474  000C28  A0D8               	btfss	status,0,c
  1475  000C2A  D00A               	goto	l1938
  1476                           
  1477                           ; BSR set to: 0
  1478  000C2C  0100               	movlb	0	; () banked
  1479  000C2E  5173               	movf	___awdiv@divisor& (0+255),w,b
  1480  000C30  0100               	movlb	0	; () banked
  1481  000C32  5F71               	subwf	___awdiv@dividend& (0+255),f,b
  1482  000C34  0100               	movlb	0	; () banked
  1483  000C36  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1484  000C38  0100               	movlb	0	; () banked
  1485  000C3A  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1486                           
  1487                           ; BSR set to: 0
  1488  000C3C  8020               	bsf	___awdiv@quotient,0,c
  1489  000C3E  D000               	goto	l1938
  1490  000C40                     l1938:
  1491                           
  1492                           ; BSR set to: 0
  1493  000C40  0100               	movlb	0	; () banked
  1494  000C42  90D8               	bcf	status,0,c
  1495  000C44  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1496  000C46  3373               	rrcf	___awdiv@divisor& (0+255),f,b
  1497                           
  1498                           ; BSR set to: 0
  1499  000C48  2E1E               	decfsz	___awdiv@counter,f,c
  1500  000C4A  D7E3               	goto	l1930
  1501                           
  1502                           ; BSR set to: 0
  1503  000C4C  D000               	goto	l1942
  1504  000C4E                     l1942:
  1505                           
  1506                           ; BSR set to: 0
  1507  000C4E  501F               	movf	___awdiv@sign,w,c
  1508  000C50  B4D8               	btfsc	status,2,c
  1509  000C52  D005               	goto	l1946
  1510                           
  1511                           ; BSR set to: 0
  1512  000C54  6C20               	negf	___awdiv@quotient,c
  1513  000C56  1E21               	comf	___awdiv@quotient+1,f,c
  1514  000C58  B0D8               	btfsc	status,0,c
  1515  000C5A  2A21               	incf	___awdiv@quotient+1,f,c
  1516  000C5C  D000               	goto	l1946
  1517  000C5E                     l1946:
  1518                           
  1519                           ; BSR set to: 0
  1520  000C5E  C020  F071         	movff	___awdiv@quotient,?___awdiv
  1521  000C62  C021  F072         	movff	___awdiv@quotient+1,?___awdiv+1
  1522  000C66  0012               	return	
  1523                           
  1524                           ; BSR set to: 0
  1525                           
  1526                           ; BSR set to: 0
  1527  000C68  0012               	return		;funcret
  1528  000C6A                     __end_of___awdiv:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           plusw1	equ	0xFE3
  1534                           plusw2	equ	0xFDB
  1535                           status	equ	0xFD8
  1536                           
  1537 ;; *************** function _initialisation *****************
  1538 ;; Defined at:
  1539 ;;		line 6 in file "init.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;		None               void
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    5
  1560 ;; This function calls:
  1561 ;;		_initADC
  1562 ;;		_initComms
  1563 ;;		_initPWM
  1564 ;;		_initTimer0
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text4
  1571  000EEE                     __ptext4:
  1572                           	opt stack 0
  1573  000EEE                     _initialisation:
  1574                           	opt stack 25
  1575                           
  1576                           ;init.c: 10: initPWM();
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;incstack = 0
  1580  000EEE  ECAD  F006         	call	_initPWM	;wreg free
  1581                           
  1582                           ;init.c: 14: initComms();
  1583  000EF2  EC25  F007         	call	_initComms	;wreg free
  1584                           
  1585                           ;init.c: 18: initADC();
  1586  000EF6  EC5E  F007         	call	_initADC	;wreg free
  1587                           
  1588                           ;init.c: 22: initTimer0();
  1589  000EFA  EC6C  F007         	call	_initTimer0	;wreg free
  1590  000EFE  0012               	return		;funcret
  1591  000F00                     __end_of_initialisation:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           plusw1	equ	0xFE3
  1597                           plusw2	equ	0xFDB
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _initTimer0 *****************
  1601 ;; Defined at:
  1602 ;;		line 117 in file "init.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		None
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    4
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_initialisation
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text5
  1631  000ED8                     __ptext5:
  1632                           	opt stack 0
  1633  000ED8                     _initTimer0:
  1634                           	opt stack 25
  1635                           
  1636                           ;init.c: 120: T0PS0 = 0;
  1637                           
  1638                           ;incstack = 0
  1639  000ED8  90D5               	bcf	4053,0,c	;volatile
  1640                           
  1641                           ;init.c: 121: T0PS1 = 0;
  1642  000EDA  92D5               	bcf	4053,1,c	;volatile
  1643                           
  1644                           ;init.c: 122: T0PS2 = 0;
  1645  000EDC  94D5               	bcf	4053,2,c	;volatile
  1646                           
  1647                           ;init.c: 123: PSA = 0;
  1648  000EDE  96D5               	bcf	4053,3,c	;volatile
  1649                           
  1650                           ;init.c: 124: T0CS = 0;
  1651  000EE0  9AD5               	bcf	4053,5,c	;volatile
  1652                           
  1653                           ;init.c: 125: T08BIT = 1;
  1654  000EE2  8CD5               	bsf	4053,6,c	;volatile
  1655                           
  1656                           ;init.c: 126: TMR0IP = 0;
  1657  000EE4  94F1               	bcf	intcon2,2,c	;volatile
  1658                           
  1659                           ;init.c: 127: TMR0IE = 1;
  1660  000EE6  8AF2               	bsf	intcon,5,c	;volatile
  1661                           
  1662                           ;init.c: 128: PEIE = 1;
  1663  000EE8  8CF2               	bsf	intcon,6,c	;volatile
  1664                           
  1665                           ;init.c: 129: GIE = 1;
  1666  000EEA  8EF2               	bsf	intcon,7,c	;volatile
  1667  000EEC  0012               	return		;funcret
  1668  000EEE                     __end_of_initTimer0:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           intcon	equ	0xFF2
  1672                           intcon2	equ	0xFF1
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           plusw1	equ	0xFE3
  1676                           plusw2	equ	0xFDB
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _initPWM *****************
  1680 ;; Defined at:
  1681 ;;		line 27 in file "init.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;		None               void
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    4
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_initialisation
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text6
  1710  000D5A                     __ptext6:
  1711                           	opt stack 0
  1712  000D5A                     _initPWM:
  1713                           	opt stack 25
  1714                           
  1715                           ;init.c: 32: PR2=0xFF;
  1716                           
  1717                           ;incstack = 0
  1718  000D5A  68CB               	setf	4043,c	;volatile
  1719                           
  1720                           ;init.c: 36: CCPR2L=0b00000000;
  1721  000D5C  0E00               	movlw	0
  1722  000D5E  010F               	movlb	15	; () banked
  1723  000D60  6F51               	movwf	81,b	;volatile
  1724                           
  1725                           ;init.c: 37: CCPR3L=0b00000000;
  1726  000D62  0E00               	movlw	0
  1727  000D64  010F               	movlb	15	; () banked
  1728  000D66  6F4E               	movwf	78,b	;volatile
  1729                           
  1730                           ;init.c: 38: CCPR4L=0b00000000;
  1731  000D68  0E00               	movlw	0
  1732  000D6A  010F               	movlb	15	; () banked
  1733  000D6C  6F4B               	movwf	75,b	;volatile
  1734                           
  1735                           ; BSR set to: 15
  1736                           ;init.c: 39: DC2B1=0;
  1737  000D6E  010F               	movlb	15	; () banked
  1738  000D70  9B50               	bcf	80,5,b	;volatile
  1739                           
  1740                           ; BSR set to: 15
  1741                           ;init.c: 40: DC2B0=0;
  1742  000D72  010F               	movlb	15	; () banked
  1743  000D74  9950               	bcf	80,4,b	;volatile
  1744                           
  1745                           ; BSR set to: 15
  1746                           ;init.c: 41: DC3B1=0;
  1747  000D76  010F               	movlb	15	; () banked
  1748  000D78  9B4D               	bcf	77,5,b	;volatile
  1749                           
  1750                           ; BSR set to: 15
  1751                           ;init.c: 42: DC3B0=0;
  1752  000D7A  010F               	movlb	15	; () banked
  1753  000D7C  994D               	bcf	77,4,b	;volatile
  1754                           
  1755                           ; BSR set to: 15
  1756                           ;init.c: 43: DC4B1=0;
  1757  000D7E  010F               	movlb	15	; () banked
  1758  000D80  9B4A               	bcf	74,5,b	;volatile
  1759                           
  1760                           ; BSR set to: 15
  1761                           ;init.c: 44: DC4B0=0;
  1762  000D82  010F               	movlb	15	; () banked
  1763  000D84  994A               	bcf	74,4,b	;volatile
  1764                           
  1765                           ; BSR set to: 15
  1766                           ;init.c: 50: TRISC=TRISC & 0b00111011;
  1767  000D86  5094               	movf	3988,w,c	;volatile
  1768  000D88  0B3B               	andlw	59
  1769  000D8A  6E94               	movwf	3988,c	;volatile
  1770                           
  1771                           ; BSR set to: 15
  1772                           ;init.c: 53: T2CKPS1=0;
  1773  000D8C  92CA               	bcf	4042,1,c	;volatile
  1774                           
  1775                           ; BSR set to: 15
  1776                           ;init.c: 54: T2CKPS0=0;
  1777  000D8E  90CA               	bcf	4042,0,c	;volatile
  1778                           
  1779                           ; BSR set to: 15
  1780                           ;init.c: 57: TMR2ON = 1;
  1781  000D90  84CA               	bsf	4042,2,c	;volatile
  1782                           
  1783                           ; BSR set to: 15
  1784                           ;init.c: 60: CCP2M2=1;
  1785  000D92  010F               	movlb	15	; () banked
  1786  000D94  8550               	bsf	80,2,b	;volatile
  1787                           
  1788                           ; BSR set to: 15
  1789                           ;init.c: 61: CCP2M3=1;
  1790  000D96  010F               	movlb	15	; () banked
  1791  000D98  8750               	bsf	80,3,b	;volatile
  1792                           
  1793                           ; BSR set to: 15
  1794                           ;init.c: 62: CCP3M2=1;
  1795  000D9A  010F               	movlb	15	; () banked
  1796  000D9C  854D               	bsf	77,2,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;init.c: 63: CCP3M3=1;
  1800  000D9E  010F               	movlb	15	; () banked
  1801  000DA0  874D               	bsf	77,3,b	;volatile
  1802                           
  1803                           ; BSR set to: 15
  1804                           ;init.c: 64: CCP4M2=1;
  1805  000DA2  010F               	movlb	15	; () banked
  1806  000DA4  854A               	bsf	74,2,b	;volatile
  1807                           
  1808                           ; BSR set to: 15
  1809                           ;init.c: 65: CCP4M3=1;
  1810  000DA6  010F               	movlb	15	; () banked
  1811  000DA8  874A               	bsf	74,3,b	;volatile
  1812                           
  1813                           ; BSR set to: 15
  1814  000DAA  0012               	return		;funcret
  1815  000DAC                     __end_of_initPWM:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           intcon	equ	0xFF2
  1819                           intcon2	equ	0xFF1
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           plusw1	equ	0xFE3
  1823                           plusw2	equ	0xFDB
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _initComms *****************
  1827 ;; Defined at:
  1828 ;;		line 69 in file "init.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg, status,2
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    4
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_initialisation
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857  000E4A                     __ptext7:
  1858                           	opt stack 0
  1859  000E4A                     _initComms:
  1860                           	opt stack 25
  1861                           
  1862                           ;init.c: 71: TRISBbits.TRISB7 = 1;
  1863                           
  1864                           ; BSR set to: 15
  1865                           ;incstack = 0
  1866  000E4A  8E93               	bsf	3987,7,c	;volatile
  1867                           
  1868                           ;init.c: 72: TRISBbits.TRISB6 = 0;
  1869  000E4C  9C93               	bcf	3987,6,c	;volatile
  1870                           
  1871                           ;init.c: 75: TXSTA2bits.BRGH = 1;
  1872  000E4E  84BA               	bsf	4026,2,c	;volatile
  1873                           
  1874                           ;init.c: 76: TXSTA2bits.SYNC = 0;
  1875  000E50  98BA               	bcf	4026,4,c	;volatile
  1876                           
  1877                           ;init.c: 77: SPBRGH2 = 0;
  1878  000E52  0E00               	movlw	0
  1879  000E54  6E7C               	movwf	3964,c	;volatile
  1880                           
  1881                           ;init.c: 78: SPBRG2 = 51;
  1882  000E56  0E33               	movlw	51
  1883  000E58  6E7B               	movwf	3963,c	;volatile
  1884                           
  1885                           ;init.c: 79: BAUDCON2 = 0x08;
  1886  000E5A  0E08               	movlw	8
  1887  000E5C  6EB9               	movwf	4025,c	;volatile
  1888                           
  1889                           ;init.c: 83: TXSTA2bits.TXEN = 1;
  1890  000E5E  8ABA               	bsf	4026,5,c	;volatile
  1891                           
  1892                           ;init.c: 84: RCSTA2bits.CREN = 1;
  1893  000E60  88A6               	bsf	4006,4,c	;volatile
  1894                           
  1895                           ;init.c: 85: RCSTA2bits.SPEN = 1;
  1896  000E62  8EA6               	bsf	4006,7,c	;volatile
  1897                           
  1898                           ;init.c: 88: RCONbits.IPEN = 1;
  1899  000E64  8ED0               	bsf	4048,7,c	;volatile
  1900                           
  1901                           ;init.c: 89: INTCONbits.GIE = 1;
  1902  000E66  8EF2               	bsf	intcon,7,c	;volatile
  1903                           
  1904                           ;init.c: 90: INTCONbits.PEIE = 1;
  1905  000E68  8CF2               	bsf	intcon,6,c	;volatile
  1906                           
  1907                           ;init.c: 91: PIE3bits.RC2IE = 1;
  1908  000E6A  8AA3               	bsf	4003,5,c	;volatile
  1909                           
  1910                           ;init.c: 92: PIE3bits.TX2IE = 0;
  1911  000E6C  98A3               	bcf	4003,4,c	;volatile
  1912                           
  1913                           ;init.c: 94: RC2IF = 0;
  1914  000E6E  9AA4               	bcf	4004,5,c	;volatile
  1915  000E70  0012               	return		;funcret
  1916  000E72                     __end_of_initComms:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           intcon	equ	0xFF2
  1920                           intcon2	equ	0xFF1
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           plusw1	equ	0xFE3
  1924                           plusw2	equ	0xFDB
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _initADC *****************
  1928 ;; Defined at:
  1929 ;;		line 97 in file "init.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		None
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_initialisation
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text8
  1958  000EBC                     __ptext8:
  1959                           	opt stack 0
  1960  000EBC                     _initADC:
  1961                           	opt stack 25
  1962                           
  1963                           ;init.c: 99: TRIGSEL1=0;
  1964                           
  1965                           ;incstack = 0
  1966  000EBC  9EC1               	bcf	4033,7,c	;volatile
  1967                           
  1968                           ;init.c: 100: TRIGSEL0=0;
  1969  000EBE  9CC1               	bcf	4033,6,c	;volatile
  1970                           
  1971                           ;init.c: 102: VCFG1=0;
  1972  000EC0  9AC1               	bcf	4033,5,c	;volatile
  1973                           
  1974                           ;init.c: 103: VCFG0=0;
  1975  000EC2  98C1               	bcf	4033,4,c	;volatile
  1976                           
  1977                           ;init.c: 104: VNCFG=0;
  1978  000EC4  96C1               	bcf	4033,3,c	;volatile
  1979                           
  1980                           ;init.c: 108: ANSEL3=1;
  1981  000EC6  010F               	movlb	15	; () banked
  1982  000EC8  875D               	bsf	93,3,b	;volatile
  1983                           
  1984                           ;init.c: 109: ANSEL2=1;
  1985  000ECA  010F               	movlb	15	; () banked
  1986  000ECC  855D               	bsf	93,2,b	;volatile
  1987                           
  1988                           ;init.c: 110: ANSEL1=1;
  1989  000ECE  010F               	movlb	15	; () banked
  1990  000ED0  835D               	bsf	93,1,b	;volatile
  1991                           
  1992                           ;init.c: 112: ADON=1;
  1993  000ED2  80C2               	bsf	4034,0,c	;volatile
  1994                           
  1995                           ;init.c: 114: CHS0=1;
  1996  000ED4  84C2               	bsf	4034,2,c	;volatile
  1997                           
  1998                           ; BSR set to: 15
  1999  000ED6  0012               	return		;funcret
  2000  000ED8                     __end_of_initADC:
  2001                           	opt stack 0
  2002                           tblptru	equ	0xFF8
  2003                           intcon	equ	0xFF2
  2004                           intcon2	equ	0xFF1
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           plusw1	equ	0xFE3
  2008                           plusw2	equ	0xFDB
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function ___lwtoft *****************
  2012 ;; Defined at:
  2013 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  c               2   22[BANK0 ] unsigned int 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  3   22[BANK0 ] float 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2027 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;Total ram usage:        3 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    5
  2034 ;; This function calls:
  2035 ;;		___ftpack
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text9
  2042  000DF2                     __ptext9:
  2043                           	opt stack 0
  2044  000DF2                     ___lwtoft:
  2045                           	opt stack 25
  2046                           
  2047                           ; BSR set to: 15
  2048                           ;incstack = 0
  2049  000DF2  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  2050  000DF6  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  2051  000DFA  0100               	movlb	0	; () banked
  2052  000DFC  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  2053  000DFE  0E8E               	movlw	142
  2054  000E00  0100               	movlb	0	; () banked
  2055  000E02  6F74               	movwf	___ftpack@exp& (0+255),b
  2056  000E04  0E00               	movlw	0
  2057  000E06  0100               	movlb	0	; () banked
  2058  000E08  6F75               	movwf	___ftpack@sign& (0+255),b
  2059  000E0A  ECEB  F004         	call	___ftpack	;wreg free
  2060  000E0E  C071  F076         	movff	?___ftpack,?___lwtoft
  2061  000E12  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  2062  000E16  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  2063  000E1A  0012               	return	
  2064  000E1C  0012               	return		;funcret
  2065  000E1E                     __end_of___lwtoft:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           intcon	equ	0xFF2
  2069                           intcon2	equ	0xFF1
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           plusw1	equ	0xFE3
  2073                           plusw2	equ	0xFDB
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function ___lbtoft *****************
  2077 ;; Defined at:
  2078 ;;		line 27 in file "/opt/microchip/xc8/v1.34/sources/common/lbtoft.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  c               1    wreg     unsigned char 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  c               1   32[COMRAM] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  3   22[BANK0 ] float 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2092 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;Total ram usage:        4 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    5
  2099 ;; This function calls:
  2100 ;;		___ftpack
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text10
  2107  000E1E                     __ptext10:
  2108                           	opt stack 0
  2109  000E1E                     ___lbtoft:
  2110                           	opt stack 25
  2111                           
  2112                           ;incstack = 0
  2113                           ;___lbtoft@c stored from wreg
  2114  000E1E  6E21               	movwf	___lbtoft@c,c
  2115  000E20  5021               	movf	___lbtoft@c,w,c
  2116  000E22  0100               	movlb	0	; () banked
  2117  000E24  6F71               	movwf	___ftpack@arg& (0+255),b
  2118  000E26  6B72               	clrf	(___ftpack@arg+1)& (0+255),b
  2119  000E28  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  2120  000E2A  0E8E               	movlw	142
  2121  000E2C  0100               	movlb	0	; () banked
  2122  000E2E  6F74               	movwf	___ftpack@exp& (0+255),b
  2123  000E30  0E00               	movlw	0
  2124  000E32  0100               	movlb	0	; () banked
  2125  000E34  6F75               	movwf	___ftpack@sign& (0+255),b
  2126  000E36  ECEB  F004         	call	___ftpack	;wreg free
  2127  000E3A  C071  F076         	movff	?___ftpack,?___lbtoft
  2128  000E3E  C072  F077         	movff	?___ftpack+1,?___lbtoft+1
  2129  000E42  C073  F078         	movff	?___ftpack+2,?___lbtoft+2
  2130  000E46  0012               	return	
  2131  000E48  0012               	return		;funcret
  2132  000E4A                     __end_of___lbtoft:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           intcon	equ	0xFF2
  2136                           intcon2	equ	0xFF1
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           plusw1	equ	0xFE3
  2140                           plusw2	equ	0xFDB
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function ___fttol *****************
  2144 ;; Defined at:
  2145 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  f1              3   46[BANK0 ] float 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  lval            4   56[BANK0 ] unsigned long 
  2150 ;;  exp1            1   60[BANK0 ] unsigned char 
  2151 ;;  sign1           1   55[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  4   46[BANK0 ] long 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;Total ram usage:       15 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    4
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text11
  2176  0005FE                     __ptext11:
  2177                           	opt stack 0
  2178  0005FE                     ___fttol:
  2179                           	opt stack 26
  2180                           
  2181                           ;incstack = 0
  2182  0005FE  C090  F092         	movff	___fttol@f1+2,??___fttol
  2183  000602  0100               	movlb	0	; () banked
  2184  000604  6B93               	clrf	(??___fttol+1)& (0+255),b
  2185  000606  6B94               	clrf	(??___fttol+2)& (0+255),b
  2186  000608  0100               	movlb	0	; () banked
  2187  00060A  358F               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2188  00060C  0100               	movlb	0	; () banked
  2189  00060E  3792               	rlcf	??___fttol& (0+255),f,b
  2190  000610  E301               	bnc	u1071
  2191  000612  8193               	bsf	(??___fttol+1)& (0+255),0,b
  2192  000614                     u1071:
  2193  000614  0100               	movlb	0	; () banked
  2194  000616  5192               	movf	??___fttol& (0+255),w,b
  2195  000618  0100               	movlb	0	; () banked
  2196  00061A  6F9C               	movwf	___fttol@exp1& (0+255),b
  2197  00061C  0100               	movlb	0	; () banked
  2198  00061E  519C               	movf	___fttol@exp1& (0+255),w,b
  2199  000620  A4D8               	btfss	status,2,c
  2200  000622  D00A               	goto	l1712
  2201                           
  2202                           ; BSR set to: 0
  2203  000624  0E00               	movlw	0
  2204  000626  0100               	movlb	0	; () banked
  2205  000628  6F8E               	movwf	?___fttol& (0+255),b
  2206  00062A  0E00               	movlw	0
  2207  00062C  6F8F               	movwf	(?___fttol+1)& (0+255),b
  2208  00062E  0E00               	movlw	0
  2209  000630  6F90               	movwf	(?___fttol+2)& (0+255),b
  2210  000632  0E00               	movlw	0
  2211  000634  6F91               	movwf	(?___fttol+3)& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214  000636  0012               	return	
  2215  000638                     l1712:
  2216                           
  2217                           ; BSR set to: 0
  2218  000638  0E17               	movlw	23
  2219  00063A  0100               	movlb	0	; () banked
  2220  00063C  6F92               	movwf	??___fttol& (0+255),b
  2221  00063E  C08E  F093         	movff	___fttol@f1,??___fttol+1
  2222  000642  C08F  F094         	movff	___fttol@f1+1,??___fttol+2
  2223  000646  C090  F095         	movff	___fttol@f1+2,??___fttol+3
  2224  00064A  0100               	movlb	0	; () banked
  2225  00064C  2992               	incf	??___fttol& (0+255),w,b
  2226  00064E  0100               	movlb	0	; () banked
  2227  000650  6F96               	movwf	(??___fttol+4)& (0+255),b
  2228  000652  D005               	goto	u1090
  2229  000654                     u1095:
  2230  000654  0100               	movlb	0	; () banked
  2231  000656  90D8               	bcf	status,0,c
  2232  000658  3395               	rrcf	(??___fttol+3)& (0+255),f,b
  2233  00065A  3394               	rrcf	(??___fttol+2)& (0+255),f,b
  2234  00065C  3393               	rrcf	(??___fttol+1)& (0+255),f,b
  2235  00065E                     u1090:
  2236  00065E  0100               	movlb	0	; () banked
  2237  000660  2F96               	decfsz	(??___fttol+4)& (0+255),f,b
  2238  000662  D7F8               	goto	u1095
  2239  000664  0100               	movlb	0	; () banked
  2240  000666  5193               	movf	(??___fttol+1)& (0+255),w,b
  2241  000668  0100               	movlb	0	; () banked
  2242  00066A  6F97               	movwf	___fttol@sign1& (0+255),b
  2243                           
  2244                           ; BSR set to: 0
  2245  00066C  0100               	movlb	0	; () banked
  2246  00066E  8F8F               	bsf	(___fttol@f1+1)& (0+255),7,b
  2247                           
  2248                           ; BSR set to: 0
  2249  000670  0EFF               	movlw	255
  2250  000672  0100               	movlb	0	; () banked
  2251  000674  178E               	andwf	___fttol@f1& (0+255),f,b
  2252  000676  0EFF               	movlw	255
  2253  000678  0100               	movlb	0	; () banked
  2254  00067A  178F               	andwf	(___fttol@f1+1)& (0+255),f,b
  2255  00067C  0E00               	movlw	0
  2256  00067E  0100               	movlb	0	; () banked
  2257  000680  1790               	andwf	(___fttol@f1+2)& (0+255),f,b
  2258                           
  2259                           ; BSR set to: 0
  2260  000682  0100               	movlb	0	; () banked
  2261  000684  518E               	movf	___fttol@f1& (0+255),w,b
  2262  000686  0100               	movlb	0	; () banked
  2263  000688  6F98               	movwf	___fttol@lval& (0+255),b
  2264  00068A  0100               	movlb	0	; () banked
  2265  00068C  518F               	movf	(___fttol@f1+1)& (0+255),w,b
  2266  00068E  0100               	movlb	0	; () banked
  2267  000690  6F99               	movwf	(___fttol@lval+1)& (0+255),b
  2268  000692  0100               	movlb	0	; () banked
  2269  000694  5190               	movf	(___fttol@f1+2)& (0+255),w,b
  2270  000696  0100               	movlb	0	; () banked
  2271  000698  6F9A               	movwf	(___fttol@lval+2)& (0+255),b
  2272  00069A  0100               	movlb	0	; () banked
  2273  00069C  6B9B               	clrf	(___fttol@lval+3)& (0+255),b
  2274                           
  2275                           ; BSR set to: 0
  2276  00069E  0E8E               	movlw	142
  2277  0006A0  0100               	movlb	0	; () banked
  2278  0006A2  5F9C               	subwf	___fttol@exp1& (0+255),f,b
  2279                           
  2280                           ; BSR set to: 0
  2281  0006A4  0100               	movlb	0	; () banked
  2282  0006A6  AF9C               	btfss	___fttol@exp1& (0+255),7,b
  2283  0006A8  D01B               	goto	l1734
  2284                           
  2285                           ; BSR set to: 0
  2286  0006AA  0100               	movlb	0	; () banked
  2287  0006AC  519C               	movf	___fttol@exp1& (0+255),w,b
  2288  0006AE  0A80               	xorlw	128
  2289  0006B0  0F8F               	addlw	143
  2290  0006B2  B0D8               	btfsc	status,0,c
  2291  0006B4  D00B               	goto	l1730
  2292                           
  2293                           ; BSR set to: 0
  2294  0006B6  0E00               	movlw	0
  2295  0006B8  0100               	movlb	0	; () banked
  2296  0006BA  6F8E               	movwf	?___fttol& (0+255),b
  2297  0006BC  0E00               	movlw	0
  2298  0006BE  6F8F               	movwf	(?___fttol+1)& (0+255),b
  2299  0006C0  0E00               	movlw	0
  2300  0006C2  6F90               	movwf	(?___fttol+2)& (0+255),b
  2301  0006C4  0E00               	movlw	0
  2302  0006C6  6F91               	movwf	(?___fttol+3)& (0+255),b
  2303                           
  2304                           ; BSR set to: 0
  2305  0006C8  0012               	return	
  2306                           
  2307                           ; BSR set to: 0
  2308  0006CA  D000               	goto	l1730
  2309  0006CC                     l1730:
  2310                           
  2311                           ; BSR set to: 0
  2312  0006CC  0100               	movlb	0	; () banked
  2313  0006CE  90D8               	bcf	status,0,c
  2314  0006D0  339B               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2315  0006D2  339A               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2316  0006D4  3399               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2317  0006D6  3398               	rrcf	___fttol@lval& (0+255),f,b
  2318                           
  2319                           ; BSR set to: 0
  2320  0006D8  0100               	movlb	0	; () banked
  2321  0006DA  3F9C               	incfsz	___fttol@exp1& (0+255),f,b
  2322  0006DC  D7F7               	goto	l1730
  2323                           
  2324                           ; BSR set to: 0
  2325  0006DE  D01F               	goto	l1744
  2326  0006E0                     l1734:
  2327                           
  2328                           ; BSR set to: 0
  2329  0006E0  0E17               	movlw	23
  2330  0006E2  0100               	movlb	0	; () banked
  2331  0006E4  659C               	cpfsgt	___fttol@exp1& (0+255),b
  2332  0006E6  D014               	goto	l1742
  2333                           
  2334                           ; BSR set to: 0
  2335  0006E8  0E00               	movlw	0
  2336  0006EA  0100               	movlb	0	; () banked
  2337  0006EC  6F8E               	movwf	?___fttol& (0+255),b
  2338  0006EE  0E00               	movlw	0
  2339  0006F0  6F8F               	movwf	(?___fttol+1)& (0+255),b
  2340  0006F2  0E00               	movlw	0
  2341  0006F4  6F90               	movwf	(?___fttol+2)& (0+255),b
  2342  0006F6  0E00               	movlw	0
  2343  0006F8  6F91               	movwf	(?___fttol+3)& (0+255),b
  2344                           
  2345                           ; BSR set to: 0
  2346  0006FA  0012               	return	
  2347                           
  2348                           ; BSR set to: 0
  2349  0006FC  D009               	goto	l1742
  2350  0006FE                     l1740:
  2351                           
  2352                           ; BSR set to: 0
  2353  0006FE  0100               	movlb	0	; () banked
  2354  000700  90D8               	bcf	status,0,c
  2355  000702  3798               	rlcf	___fttol@lval& (0+255),f,b
  2356  000704  3799               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2357  000706  379A               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2358  000708  379B               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2359  00070A  0100               	movlb	0	; () banked
  2360  00070C  079C               	decf	___fttol@exp1& (0+255),f,b
  2361  00070E  D000               	goto	l1742
  2362  000710                     l1742:
  2363                           
  2364                           ; BSR set to: 0
  2365  000710  0100               	movlb	0	; () banked
  2366  000712  519C               	movf	___fttol@exp1& (0+255),w,b
  2367  000714  0100               	movlb	0	; () banked
  2368  000716  B4D8               	btfsc	status,2,c
  2369  000718  D002               	goto	l1744
  2370  00071A  D7F1               	goto	l1740
  2371                           
  2372                           ; BSR set to: 0
  2373  00071C  D000               	goto	l1744
  2374  00071E                     l1744:
  2375                           
  2376                           ; BSR set to: 0
  2377  00071E  0100               	movlb	0	; () banked
  2378  000720  5197               	movf	___fttol@sign1& (0+255),w,b
  2379  000722  0100               	movlb	0	; () banked
  2380  000724  B4D8               	btfsc	status,2,c
  2381  000726  D00A               	goto	l1748
  2382                           
  2383                           ; BSR set to: 0
  2384  000728  0100               	movlb	0	; () banked
  2385  00072A  1F9B               	comf	(___fttol@lval+3)& (0+255),f,b
  2386  00072C  1F9A               	comf	(___fttol@lval+2)& (0+255),f,b
  2387  00072E  1F99               	comf	(___fttol@lval+1)& (0+255),f,b
  2388  000730  6D98               	negf	___fttol@lval& (0+255),b
  2389  000732  0E00               	movlw	0
  2390  000734  2399               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2391  000736  239A               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2392  000738  239B               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2393  00073A  D000               	goto	l1748
  2394  00073C                     l1748:
  2395                           
  2396                           ; BSR set to: 0
  2397  00073C  C098  F08E         	movff	___fttol@lval,?___fttol
  2398  000740  C099  F08F         	movff	___fttol@lval+1,?___fttol+1
  2399  000744  C09A  F090         	movff	___fttol@lval+2,?___fttol+2
  2400  000748  C09B  F091         	movff	___fttol@lval+3,?___fttol+3
  2401  00074C  0012               	return	
  2402                           
  2403                           ; BSR set to: 0
  2404                           
  2405                           ; BSR set to: 0
  2406  00074E  0012               	return		;funcret
  2407  000750                     __end_of___fttol:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           intcon	equ	0xFF2
  2411                           intcon2	equ	0xFF1
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           plusw1	equ	0xFE3
  2415                           plusw2	equ	0xFDB
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function ___ftmul *****************
  2419 ;; Defined at:
  2420 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  f1              3   25[BANK0 ] float 
  2423 ;;  f2              3   28[BANK0 ] float 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  2426 ;;  sign            1   41[COMRAM] unsigned char 
  2427 ;;  cntr            1   40[COMRAM] unsigned char 
  2428 ;;  exp             1   36[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  3   25[BANK0 ] float 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2438 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;Total ram usage:       15 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    5
  2445 ;; This function calls:
  2446 ;;		___ftpack
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text12
  2453  0008A2                     __ptext12:
  2454                           	opt stack 0
  2455  0008A2                     ___ftmul:
  2456                           	opt stack 25
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;incstack = 0
  2460  0008A2  C07B  F022         	movff	___ftmul@f1+2,??___ftmul
  2461  0008A6  6A23               	clrf	(??___ftmul+1)& (0+255),c
  2462  0008A8  6A24               	clrf	(??___ftmul+2)& (0+255),c
  2463  0008AA  0100               	movlb	0	; () banked
  2464  0008AC  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2465  0008AE  3622               	rlcf	??___ftmul& (0+255),f,c
  2466  0008B0  E301               	bnc	u1611
  2467  0008B2  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  2468  0008B4                     u1611:
  2469  0008B4  5022               	movf	??___ftmul,w,c
  2470  0008B6  6E25               	movwf	___ftmul@exp,c
  2471  0008B8  5025               	movf	___ftmul@exp,w,c
  2472  0008BA  A4D8               	btfss	status,2,c
  2473  0008BC  D00A               	goto	l2046
  2474                           
  2475                           ; BSR set to: 0
  2476  0008BE  0E00               	movlw	0
  2477  0008C0  0100               	movlb	0	; () banked
  2478  0008C2  6F79               	movwf	?___ftmul& (0+255),b
  2479  0008C4  0E00               	movlw	0
  2480  0008C6  0100               	movlb	0	; () banked
  2481  0008C8  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  2482  0008CA  0E00               	movlw	0
  2483  0008CC  0100               	movlb	0	; () banked
  2484  0008CE  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487  0008D0  0012               	return	
  2488  0008D2                     l2046:
  2489                           
  2490                           ; BSR set to: 0
  2491  0008D2  C07E  F022         	movff	___ftmul@f2+2,??___ftmul
  2492  0008D6  6A23               	clrf	(??___ftmul+1)& (0+255),c
  2493  0008D8  6A24               	clrf	(??___ftmul+2)& (0+255),c
  2494  0008DA  0100               	movlb	0	; () banked
  2495  0008DC  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2496  0008DE  3622               	rlcf	??___ftmul& (0+255),f,c
  2497  0008E0  E301               	bnc	u1631
  2498  0008E2  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  2499  0008E4                     u1631:
  2500  0008E4  5022               	movf	??___ftmul,w,c
  2501  0008E6  6E2A               	movwf	___ftmul@sign,c
  2502  0008E8  502A               	movf	___ftmul@sign,w,c
  2503  0008EA  A4D8               	btfss	status,2,c
  2504  0008EC  D00A               	goto	l2052
  2505                           
  2506                           ; BSR set to: 0
  2507  0008EE  0E00               	movlw	0
  2508  0008F0  0100               	movlb	0	; () banked
  2509  0008F2  6F79               	movwf	?___ftmul& (0+255),b
  2510  0008F4  0E00               	movlw	0
  2511  0008F6  0100               	movlb	0	; () banked
  2512  0008F8  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  2513  0008FA  0E00               	movlw	0
  2514  0008FC  0100               	movlb	0	; () banked
  2515  0008FE  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  2516                           
  2517                           ; BSR set to: 0
  2518  000900  0012               	return	
  2519  000902                     l2052:
  2520                           
  2521                           ; BSR set to: 0
  2522  000902  502A               	movf	___ftmul@sign,w,c
  2523  000904  0F7B               	addlw	123
  2524  000906  2625               	addwf	___ftmul@exp,f,c
  2525                           
  2526                           ; BSR set to: 0
  2527  000908  C07B  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  2528  00090C  0100               	movlb	0	; () banked
  2529  00090E  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2530  000910  1A2A               	xorwf	___ftmul@sign,f,c
  2531  000912  0E80               	movlw	128
  2532  000914  162A               	andwf	___ftmul@sign,f,c
  2533                           
  2534                           ; BSR set to: 0
  2535  000916  0100               	movlb	0	; () banked
  2536  000918  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2537                           
  2538                           ; BSR set to: 0
  2539  00091A  0100               	movlb	0	; () banked
  2540  00091C  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2541                           
  2542                           ; BSR set to: 0
  2543  00091E  0EFF               	movlw	255
  2544  000920  0100               	movlb	0	; () banked
  2545  000922  177C               	andwf	___ftmul@f2& (0+255),f,b
  2546  000924  0EFF               	movlw	255
  2547  000926  0100               	movlb	0	; () banked
  2548  000928  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2549  00092A  0E00               	movlw	0
  2550  00092C  0100               	movlb	0	; () banked
  2551  00092E  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2552                           
  2553                           ; BSR set to: 0
  2554  000930  0E00               	movlw	0
  2555  000932  6E26               	movwf	___ftmul@f3_as_product,c
  2556  000934  0E00               	movlw	0
  2557  000936  6E27               	movwf	___ftmul@f3_as_product+1,c
  2558  000938  0E00               	movlw	0
  2559  00093A  6E28               	movwf	___ftmul@f3_as_product+2,c
  2560                           
  2561                           ; BSR set to: 0
  2562  00093C  0E07               	movlw	7
  2563  00093E  6E29               	movwf	___ftmul@cntr,c
  2564  000940  D000               	goto	l2066
  2565  000942                     l2066:
  2566                           
  2567                           ; BSR set to: 0
  2568  000942  0100               	movlb	0	; () banked
  2569  000944  A179               	btfss	___ftmul@f1& (0+255),0,b
  2570  000946  D00A               	goto	l2070
  2571                           
  2572                           ; BSR set to: 0
  2573  000948  0100               	movlb	0	; () banked
  2574  00094A  517C               	movf	___ftmul@f2& (0+255),w,b
  2575  00094C  2626               	addwf	___ftmul@f3_as_product,f,c
  2576  00094E  0100               	movlb	0	; () banked
  2577  000950  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2578  000952  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  2579  000954  0100               	movlb	0	; () banked
  2580  000956  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2581  000958  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  2582  00095A  D000               	goto	l2070
  2583  00095C                     l2070:
  2584                           
  2585                           ; BSR set to: 0
  2586  00095C  0100               	movlb	0	; () banked
  2587  00095E  90D8               	bcf	status,0,c
  2588  000960  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2589  000962  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2590  000964  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2591  000966  0100               	movlb	0	; () banked
  2592  000968  90D8               	bcf	status,0,c
  2593  00096A  377C               	rlcf	___ftmul@f2& (0+255),f,b
  2594  00096C  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2595  00096E  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2596                           
  2597                           ; BSR set to: 0
  2598  000970  2E29               	decfsz	___ftmul@cntr,f,c
  2599  000972  D7E7               	goto	l2066
  2600  000974  D000               	goto	l2074
  2601  000976                     l2074:
  2602                           
  2603                           ; BSR set to: 0
  2604  000976  0E09               	movlw	9
  2605  000978  6E29               	movwf	___ftmul@cntr,c
  2606  00097A  D000               	goto	l2076
  2607  00097C                     l2076:
  2608                           
  2609                           ; BSR set to: 0
  2610  00097C  0100               	movlb	0	; () banked
  2611  00097E  A179               	btfss	___ftmul@f1& (0+255),0,b
  2612  000980  D00A               	goto	l2080
  2613                           
  2614                           ; BSR set to: 0
  2615  000982  0100               	movlb	0	; () banked
  2616  000984  517C               	movf	___ftmul@f2& (0+255),w,b
  2617  000986  2626               	addwf	___ftmul@f3_as_product,f,c
  2618  000988  0100               	movlb	0	; () banked
  2619  00098A  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  2620  00098C  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  2621  00098E  0100               	movlb	0	; () banked
  2622  000990  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  2623  000992  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  2624  000994  D000               	goto	l2080
  2625  000996                     l2080:
  2626                           
  2627                           ; BSR set to: 0
  2628  000996  0100               	movlb	0	; () banked
  2629  000998  90D8               	bcf	status,0,c
  2630  00099A  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2631  00099C  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2632  00099E  3379               	rrcf	___ftmul@f1& (0+255),f,b
  2633  0009A0  90D8               	bcf	status,0,c
  2634  0009A2  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  2635  0009A4  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  2636  0009A6  3226               	rrcf	___ftmul@f3_as_product,f,c
  2637                           
  2638                           ; BSR set to: 0
  2639  0009A8  2E29               	decfsz	___ftmul@cntr,f,c
  2640  0009AA  D7E8               	goto	l2076
  2641  0009AC  D000               	goto	l2084
  2642  0009AE                     l2084:
  2643                           
  2644                           ; BSR set to: 0
  2645  0009AE  C026  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  2646  0009B2  C027  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2647  0009B6  C028  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2648  0009BA  C025  F074         	movff	___ftmul@exp,___ftpack@exp
  2649  0009BE  C02A  F075         	movff	___ftmul@sign,___ftpack@sign
  2650  0009C2  ECEB  F004         	call	___ftpack	;wreg free
  2651  0009C6  C071  F079         	movff	?___ftpack,?___ftmul
  2652  0009CA  C072  F07A         	movff	?___ftpack+1,?___ftmul+1
  2653  0009CE  C073  F07B         	movff	?___ftpack+2,?___ftmul+2
  2654  0009D2  0012               	return	
  2655  0009D4  0012               	return		;funcret
  2656  0009D6                     __end_of___ftmul:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           intcon	equ	0xFF2
  2660                           intcon2	equ	0xFF1
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           plusw1	equ	0xFE3
  2664                           plusw2	equ	0xFDB
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function ___ftdiv *****************
  2668 ;; Defined at:
  2669 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  f1              3   31[BANK0 ] float 
  2672 ;;  f2              3   34[BANK0 ] float 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  f3              3   41[BANK0 ] float 
  2675 ;;  sign            1   45[BANK0 ] unsigned char 
  2676 ;;  exp             1   44[BANK0 ] unsigned char 
  2677 ;;  cntr            1   40[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  3   31[BANK0 ] float 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2687 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;Total ram usage:       15 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    5
  2694 ;; This function calls:
  2695 ;;		___ftpack
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text13
  2702  000750                     __ptext13:
  2703                           	opt stack 0
  2704  000750                     ___ftdiv:
  2705                           	opt stack 25
  2706                           
  2707                           ;incstack = 0
  2708  000750  C081  F085         	movff	___ftdiv@f1+2,??___ftdiv
  2709  000754  0100               	movlb	0	; () banked
  2710  000756  6B86               	clrf	(??___ftdiv+1)& (0+255),b
  2711  000758  6B87               	clrf	(??___ftdiv+2)& (0+255),b
  2712  00075A  0100               	movlb	0	; () banked
  2713  00075C  3580               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2714  00075E  0100               	movlb	0	; () banked
  2715  000760  3785               	rlcf	??___ftdiv& (0+255),f,b
  2716  000762  E301               	bnc	u1561
  2717  000764  8186               	bsf	(??___ftdiv+1)& (0+255),0,b
  2718  000766                     u1561:
  2719  000766  0100               	movlb	0	; () banked
  2720  000768  5185               	movf	??___ftdiv& (0+255),w,b
  2721  00076A  0100               	movlb	0	; () banked
  2722  00076C  6F8C               	movwf	___ftdiv@exp& (0+255),b
  2723  00076E  0100               	movlb	0	; () banked
  2724  000770  518C               	movf	___ftdiv@exp& (0+255),w,b
  2725  000772  A4D8               	btfss	status,2,c
  2726  000774  D00A               	goto	l2000
  2727                           
  2728                           ; BSR set to: 0
  2729  000776  0E00               	movlw	0
  2730  000778  0100               	movlb	0	; () banked
  2731  00077A  6F7F               	movwf	?___ftdiv& (0+255),b
  2732  00077C  0E00               	movlw	0
  2733  00077E  0100               	movlb	0	; () banked
  2734  000780  6F80               	movwf	(?___ftdiv+1)& (0+255),b
  2735  000782  0E00               	movlw	0
  2736  000784  0100               	movlb	0	; () banked
  2737  000786  6F81               	movwf	(?___ftdiv+2)& (0+255),b
  2738                           
  2739                           ; BSR set to: 0
  2740  000788  0012               	return	
  2741  00078A                     l2000:
  2742                           
  2743                           ; BSR set to: 0
  2744  00078A  C084  F085         	movff	___ftdiv@f2+2,??___ftdiv
  2745  00078E  0100               	movlb	0	; () banked
  2746  000790  6B86               	clrf	(??___ftdiv+1)& (0+255),b
  2747  000792  6B87               	clrf	(??___ftdiv+2)& (0+255),b
  2748  000794  0100               	movlb	0	; () banked
  2749  000796  3583               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2750  000798  0100               	movlb	0	; () banked
  2751  00079A  3785               	rlcf	??___ftdiv& (0+255),f,b
  2752  00079C  E301               	bnc	u1581
  2753  00079E  8186               	bsf	(??___ftdiv+1)& (0+255),0,b
  2754  0007A0                     u1581:
  2755  0007A0  0100               	movlb	0	; () banked
  2756  0007A2  5185               	movf	??___ftdiv& (0+255),w,b
  2757  0007A4  0100               	movlb	0	; () banked
  2758  0007A6  6F8D               	movwf	___ftdiv@sign& (0+255),b
  2759  0007A8  0100               	movlb	0	; () banked
  2760  0007AA  518D               	movf	___ftdiv@sign& (0+255),w,b
  2761  0007AC  A4D8               	btfss	status,2,c
  2762  0007AE  D00A               	goto	l2006
  2763                           
  2764                           ; BSR set to: 0
  2765  0007B0  0E00               	movlw	0
  2766  0007B2  0100               	movlb	0	; () banked
  2767  0007B4  6F7F               	movwf	?___ftdiv& (0+255),b
  2768  0007B6  0E00               	movlw	0
  2769  0007B8  0100               	movlb	0	; () banked
  2770  0007BA  6F80               	movwf	(?___ftdiv+1)& (0+255),b
  2771  0007BC  0E00               	movlw	0
  2772  0007BE  0100               	movlb	0	; () banked
  2773  0007C0  6F81               	movwf	(?___ftdiv+2)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776  0007C2  0012               	return	
  2777  0007C4                     l2006:
  2778                           
  2779                           ; BSR set to: 0
  2780  0007C4  0E00               	movlw	0
  2781  0007C6  0100               	movlb	0	; () banked
  2782  0007C8  6F89               	movwf	___ftdiv@f3& (0+255),b
  2783  0007CA  0E00               	movlw	0
  2784  0007CC  0100               	movlb	0	; () banked
  2785  0007CE  6F8A               	movwf	(___ftdiv@f3+1)& (0+255),b
  2786  0007D0  0E00               	movlw	0
  2787  0007D2  0100               	movlb	0	; () banked
  2788  0007D4  6F8B               	movwf	(___ftdiv@f3+2)& (0+255),b
  2789                           
  2790                           ; BSR set to: 0
  2791  0007D6  0100               	movlb	0	; () banked
  2792  0007D8  518D               	movf	___ftdiv@sign& (0+255),w,b
  2793  0007DA  0F89               	addlw	137
  2794  0007DC  0100               	movlb	0	; () banked
  2795  0007DE  5F8C               	subwf	___ftdiv@exp& (0+255),f,b
  2796                           
  2797                           ; BSR set to: 0
  2798  0007E0  C081  F08D         	movff	___ftdiv@f1+2,___ftdiv@sign
  2799                           
  2800                           ; BSR set to: 0
  2801  0007E4  0100               	movlb	0	; () banked
  2802  0007E6  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2803  0007E8  0100               	movlb	0	; () banked
  2804  0007EA  1B8D               	xorwf	___ftdiv@sign& (0+255),f,b
  2805                           
  2806                           ; BSR set to: 0
  2807  0007EC  0E80               	movlw	128
  2808  0007EE  0100               	movlb	0	; () banked
  2809  0007F0  178D               	andwf	___ftdiv@sign& (0+255),f,b
  2810                           
  2811                           ; BSR set to: 0
  2812  0007F2  0100               	movlb	0	; () banked
  2813  0007F4  8F80               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2814                           
  2815                           ; BSR set to: 0
  2816  0007F6  0EFF               	movlw	255
  2817  0007F8  0100               	movlb	0	; () banked
  2818  0007FA  177F               	andwf	___ftdiv@f1& (0+255),f,b
  2819  0007FC  0EFF               	movlw	255
  2820  0007FE  0100               	movlb	0	; () banked
  2821  000800  1780               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2822  000802  0E00               	movlw	0
  2823  000804  0100               	movlb	0	; () banked
  2824  000806  1781               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2825                           
  2826                           ; BSR set to: 0
  2827  000808  0100               	movlb	0	; () banked
  2828  00080A  8F83               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2829                           
  2830                           ; BSR set to: 0
  2831  00080C  0EFF               	movlw	255
  2832  00080E  0100               	movlb	0	; () banked
  2833  000810  1782               	andwf	___ftdiv@f2& (0+255),f,b
  2834  000812  0EFF               	movlw	255
  2835  000814  0100               	movlb	0	; () banked
  2836  000816  1783               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2837  000818  0E00               	movlw	0
  2838  00081A  0100               	movlb	0	; () banked
  2839  00081C  1784               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2840                           
  2841                           ; BSR set to: 0
  2842  00081E  0E18               	movlw	24
  2843  000820  0100               	movlb	0	; () banked
  2844  000822  6F88               	movwf	___ftdiv@cntr& (0+255),b
  2845  000824  D000               	goto	l2026
  2846  000826                     l2026:
  2847                           
  2848                           ; BSR set to: 0
  2849  000826  0100               	movlb	0	; () banked
  2850  000828  90D8               	bcf	status,0,c
  2851  00082A  3789               	rlcf	___ftdiv@f3& (0+255),f,b
  2852  00082C  378A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2853  00082E  378B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2854                           
  2855                           ; BSR set to: 0
  2856  000830  0100               	movlb	0	; () banked
  2857  000832  5182               	movf	___ftdiv@f2& (0+255),w,b
  2858  000834  0100               	movlb	0	; () banked
  2859  000836  5D7F               	subwf	___ftdiv@f1& (0+255),w,b
  2860  000838  0100               	movlb	0	; () banked
  2861  00083A  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2862  00083C  0100               	movlb	0	; () banked
  2863  00083E  5980               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2864  000840  0100               	movlb	0	; () banked
  2865  000842  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2866  000844  0100               	movlb	0	; () banked
  2867  000846  5981               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2868  000848  A0D8               	btfss	status,0,c
  2869  00084A  D00E               	goto	l657
  2870                           
  2871                           ; BSR set to: 0
  2872  00084C  0100               	movlb	0	; () banked
  2873  00084E  5182               	movf	___ftdiv@f2& (0+255),w,b
  2874  000850  0100               	movlb	0	; () banked
  2875  000852  5F7F               	subwf	___ftdiv@f1& (0+255),f,b
  2876  000854  0100               	movlb	0	; () banked
  2877  000856  5183               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2878  000858  0100               	movlb	0	; () banked
  2879  00085A  5B80               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2880  00085C  0100               	movlb	0	; () banked
  2881  00085E  5184               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2882  000860  0100               	movlb	0	; () banked
  2883  000862  5B81               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2884                           
  2885                           ; BSR set to: 0
  2886  000864  0100               	movlb	0	; () banked
  2887  000866  8189               	bsf	___ftdiv@f3& (0+255),0,b
  2888  000868                     l657:
  2889                           
  2890                           ; BSR set to: 0
  2891  000868  0100               	movlb	0	; () banked
  2892  00086A  90D8               	bcf	status,0,c
  2893  00086C  377F               	rlcf	___ftdiv@f1& (0+255),f,b
  2894  00086E  3780               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2895  000870  3781               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2896                           
  2897                           ; BSR set to: 0
  2898  000872  0100               	movlb	0	; () banked
  2899  000874  2F88               	decfsz	___ftdiv@cntr& (0+255),f,b
  2900  000876  D7D7               	goto	l2026
  2901  000878  D000               	goto	l2036
  2902  00087A                     l2036:
  2903                           
  2904                           ; BSR set to: 0
  2905  00087A  C089  F071         	movff	___ftdiv@f3,___ftpack@arg
  2906  00087E  C08A  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2907  000882  C08B  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2908  000886  C08C  F074         	movff	___ftdiv@exp,___ftpack@exp
  2909  00088A  C08D  F075         	movff	___ftdiv@sign,___ftpack@sign
  2910  00088E  ECEB  F004         	call	___ftpack	;wreg free
  2911  000892  C071  F07F         	movff	?___ftpack,?___ftdiv
  2912  000896  C072  F080         	movff	?___ftpack+1,?___ftdiv+1
  2913  00089A  C073  F081         	movff	?___ftpack+2,?___ftdiv+2
  2914  00089E  0012               	return	
  2915  0008A0  0012               	return		;funcret
  2916  0008A2                     __end_of___ftdiv:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           intcon	equ	0xFF2
  2920                           intcon2	equ	0xFF1
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           plusw1	equ	0xFE3
  2924                           plusw2	equ	0xFDB
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function ___ftpack *****************
  2928 ;; Defined at:
  2929 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  arg             3   17[BANK0 ] unsigned um
  2932 ;;  exp             1   20[BANK0 ] unsigned char 
  2933 ;;  sign            1   21[BANK0 ] unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  3   17[BANK0 ] float 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2945 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2949 ;;Total ram usage:        8 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    4
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		___ftdiv
  2956 ;;		___ftmul
  2957 ;;		___lbtoft
  2958 ;;		___lwtoft
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text14
  2963  0009D6                     __ptext14:
  2964                           	opt stack 0
  2965  0009D6                     ___ftpack:
  2966                           	opt stack 25
  2967                           
  2968                           ;incstack = 0
  2969  0009D6  0100               	movlb	0	; () banked
  2970  0009D8  5174               	movf	___ftpack@exp& (0+255),w,b
  2971  0009DA  0100               	movlb	0	; () banked
  2972  0009DC  B4D8               	btfsc	status,2,c
  2973  0009DE  D008               	goto	l1874
  2974                           
  2975                           ; BSR set to: 0
  2976  0009E0  0100               	movlb	0	; () banked
  2977  0009E2  5171               	movf	___ftpack@arg& (0+255),w,b
  2978  0009E4  0100               	movlb	0	; () banked
  2979  0009E6  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2980  0009E8  0100               	movlb	0	; () banked
  2981  0009EA  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2982  0009EC  A4D8               	btfss	status,2,c
  2983  0009EE  D013               	goto	l1880
  2984  0009F0                     l1874:
  2985                           
  2986                           ; BSR set to: 0
  2987  0009F0  0E00               	movlw	0
  2988  0009F2  0100               	movlb	0	; () banked
  2989  0009F4  6F71               	movwf	?___ftpack& (0+255),b
  2990  0009F6  0E00               	movlw	0
  2991  0009F8  0100               	movlb	0	; () banked
  2992  0009FA  6F72               	movwf	(?___ftpack+1)& (0+255),b
  2993  0009FC  0E00               	movlw	0
  2994  0009FE  0100               	movlb	0	; () banked
  2995  000A00  6F73               	movwf	(?___ftpack+2)& (0+255),b
  2996                           
  2997                           ; BSR set to: 0
  2998  000A02  0012               	return	
  2999                           
  3000                           ; BSR set to: 0
  3001  000A04  D008               	goto	l1880
  3002  000A06                     l1878:
  3003                           
  3004                           ; BSR set to: 0
  3005  000A06  0100               	movlb	0	; () banked
  3006  000A08  2B74               	incf	___ftpack@exp& (0+255),f,b
  3007  000A0A  0100               	movlb	0	; () banked
  3008  000A0C  90D8               	bcf	status,0,c
  3009  000A0E  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3010  000A10  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3011  000A12  3371               	rrcf	___ftpack@arg& (0+255),f,b
  3012  000A14  D000               	goto	l1880
  3013  000A16                     l1880:
  3014                           
  3015                           ; BSR set to: 0
  3016  000A16  0E00               	movlw	0
  3017  000A18  0100               	movlb	0	; () banked
  3018  000A1A  1571               	andwf	___ftpack@arg& (0+255),w,b
  3019  000A1C  6E1E               	movwf	??___ftpack& (0+255),c
  3020  000A1E  0E00               	movlw	0
  3021  000A20  0100               	movlb	0	; () banked
  3022  000A22  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3023  000A24  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3024  000A26  0EFE               	movlw	254
  3025  000A28  0100               	movlb	0	; () banked
  3026  000A2A  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3027  000A2C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3028  000A2E  501E               	movf	??___ftpack,w,c
  3029  000A30  101F               	iorwf	??___ftpack+1,w,c
  3030  000A32  1020               	iorwf	??___ftpack+2,w,c
  3031  000A34  B4D8               	btfsc	status,2,c
  3032  000A36  D013               	goto	l1886
  3033  000A38  D7E6               	goto	l1878
  3034                           
  3035                           ; BSR set to: 0
  3036  000A3A  D011               	goto	l1886
  3037  000A3C                     l1882:
  3038                           
  3039                           ; BSR set to: 0
  3040  000A3C  0100               	movlb	0	; () banked
  3041  000A3E  2B74               	incf	___ftpack@exp& (0+255),f,b
  3042                           
  3043                           ; BSR set to: 0
  3044  000A40  0E01               	movlw	1
  3045  000A42  0100               	movlb	0	; () banked
  3046  000A44  2771               	addwf	___ftpack@arg& (0+255),f,b
  3047  000A46  0E00               	movlw	0
  3048  000A48  0100               	movlb	0	; () banked
  3049  000A4A  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3050  000A4C  0E00               	movlw	0
  3051  000A4E  0100               	movlb	0	; () banked
  3052  000A50  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3053  000A52  0100               	movlb	0	; () banked
  3054  000A54  90D8               	bcf	status,0,c
  3055  000A56  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3056  000A58  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3057  000A5A  3371               	rrcf	___ftpack@arg& (0+255),f,b
  3058  000A5C  D000               	goto	l1886
  3059  000A5E                     l1886:
  3060                           
  3061                           ; BSR set to: 0
  3062  000A5E  0E00               	movlw	0
  3063  000A60  0100               	movlb	0	; () banked
  3064  000A62  1571               	andwf	___ftpack@arg& (0+255),w,b
  3065  000A64  6E1E               	movwf	??___ftpack& (0+255),c
  3066  000A66  0E00               	movlw	0
  3067  000A68  0100               	movlb	0	; () banked
  3068  000A6A  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3069  000A6C  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3070  000A6E  0EFF               	movlw	255
  3071  000A70  0100               	movlb	0	; () banked
  3072  000A72  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3073  000A74  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3074  000A76  501E               	movf	??___ftpack,w,c
  3075  000A78  101F               	iorwf	??___ftpack+1,w,c
  3076  000A7A  1020               	iorwf	??___ftpack+2,w,c
  3077  000A7C  B4D8               	btfsc	status,2,c
  3078  000A7E  D00A               	goto	l1890
  3079  000A80  D7DD               	goto	l1882
  3080                           
  3081                           ; BSR set to: 0
  3082  000A82  D008               	goto	l1890
  3083  000A84                     l1888:
  3084                           
  3085                           ; BSR set to: 0
  3086  000A84  0100               	movlb	0	; () banked
  3087  000A86  0774               	decf	___ftpack@exp& (0+255),f,b
  3088  000A88  0100               	movlb	0	; () banked
  3089  000A8A  90D8               	bcf	status,0,c
  3090  000A8C  3771               	rlcf	___ftpack@arg& (0+255),f,b
  3091  000A8E  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3092  000A90  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3093  000A92  D000               	goto	l1890
  3094  000A94                     l1890:
  3095                           
  3096                           ; BSR set to: 0
  3097  000A94  0100               	movlb	0	; () banked
  3098  000A96  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3099  000A98  D005               	goto	l593
  3100                           
  3101                           ; BSR set to: 0
  3102  000A9A  0E02               	movlw	2
  3103  000A9C  0100               	movlb	0	; () banked
  3104  000A9E  6174               	cpfslt	___ftpack@exp& (0+255),b
  3105  000AA0  D7F1               	goto	l1888
  3106  000AA2  D000               	goto	l593
  3107  000AA4                     l593:
  3108                           
  3109                           ; BSR set to: 0
  3110  000AA4  0100               	movlb	0	; () banked
  3111  000AA6  B174               	btfsc	___ftpack@exp& (0+255),0,b
  3112  000AA8  D003               	goto	l1896
  3113                           
  3114                           ; BSR set to: 0
  3115  000AAA  0100               	movlb	0	; () banked
  3116  000AAC  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3117  000AAE  D000               	goto	l1896
  3118  000AB0                     l1896:
  3119                           
  3120                           ; BSR set to: 0
  3121  000AB0  0100               	movlb	0	; () banked
  3122  000AB2  90D8               	bcf	status,0,c
  3123  000AB4  3374               	rrcf	___ftpack@exp& (0+255),f,b
  3124  000AB6  0100               	movlb	0	; () banked
  3125  000AB8  5174               	movf	___ftpack@exp& (0+255),w,b
  3126  000ABA  0100               	movlb	0	; () banked
  3127  000ABC  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3128                           
  3129                           ; BSR set to: 0
  3130  000ABE  0100               	movlb	0	; () banked
  3131  000AC0  5175               	movf	___ftpack@sign& (0+255),w,b
  3132  000AC2  0100               	movlb	0	; () banked
  3133  000AC4  B4D8               	btfsc	status,2,c
  3134  000AC6  D003               	goto	l1902
  3135                           
  3136                           ; BSR set to: 0
  3137  000AC8  0100               	movlb	0	; () banked
  3138  000ACA  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3139  000ACC  D000               	goto	l1902
  3140  000ACE                     l1902:
  3141                           
  3142                           ; BSR set to: 0
  3143  000ACE  C071  F071         	movff	___ftpack@arg,?___ftpack
  3144  000AD2  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
  3145  000AD6  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
  3146  000ADA  0012               	return	
  3147                           
  3148                           ; BSR set to: 0
  3149                           
  3150                           ; BSR set to: 0
  3151  000ADC  0012               	return		;funcret
  3152  000ADE                     __end_of___ftpack:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           intcon	equ	0xFF2
  3156                           intcon2	equ	0xFF1
  3157                           postinc0	equ	0xFEE
  3158                           wreg	equ	0xFE8
  3159                           plusw1	equ	0xFE3
  3160                           plusw2	equ	0xFDB
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _Timer0_ISR *****************
  3164 ;; Defined at:
  3165 ;;		line 99 in file "main.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;Total ram usage:       17 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    3
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		Interrupt level 1
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	intcodelo
  3194  000018                     __pintcodelo:
  3195                           	opt stack 0
  3196  000018                     _Timer0_ISR:
  3197                           	opt stack 25
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;incstack = 0
  3201  000018  CFD8 F060          	movff	status,??_Timer0_ISR
  3202  00001C  CFE8 F061          	movff	wreg,??_Timer0_ISR+1
  3203  000020  CFE0 F062          	movff	bsr,??_Timer0_ISR+2
  3204  000024  CFFA F063          	movff	pclath,??_Timer0_ISR+3
  3205  000028  CFFB F064          	movff	pclatu,??_Timer0_ISR+4
  3206  00002C  CFE9 F065          	movff	fsr0l,??_Timer0_ISR+5
  3207  000030  CFEA F066          	movff	fsr0h,??_Timer0_ISR+6
  3208  000034  CFE1 F067          	movff	fsr1l,??_Timer0_ISR+7
  3209  000038  CFE2 F068          	movff	fsr1h,??_Timer0_ISR+8
  3210  00003C  CFD9 F069          	movff	fsr2l,??_Timer0_ISR+9
  3211  000040  CFDA F06A          	movff	fsr2h,??_Timer0_ISR+10
  3212  000044  CFF3 F06B          	movff	prodl,??_Timer0_ISR+11
  3213  000048  CFF4 F06C          	movff	prodh,??_Timer0_ISR+12
  3214  00004C  CFF6 F06D          	movff	tblptrl,??_Timer0_ISR+13
  3215  000050  CFF7 F06E          	movff	tblptrh,??_Timer0_ISR+14
  3216  000054  CFF8 F06F          	movff	tblptru,??_Timer0_ISR+15
  3217  000058  CFF5 F070          	movff	tablat,??_Timer0_ISR+16
  3218                           
  3219                           ;main.c: 102: if (T0IE && T0IF)
  3220  00005C  BAF2               	btfsc	intcon,5,c	;volatile
  3221  00005E  A4F2               	btfss	intcon,2,c	;volatile
  3222  000060  D004               	goto	i1l199
  3223                           
  3224                           ;main.c: 103: {
  3225                           ;main.c: 104: T0IF=0;
  3226  000062  94F2               	bcf	intcon,2,c	;volatile
  3227                           
  3228                           ;main.c: 106: millis++;
  3229  000064  0100               	movlb	0	; () banked
  3230  000066  2BCE               	incf	_millis& (0+255),f,b
  3231  000068  D000               	goto	i1l199
  3232  00006A                     i1l199:
  3233  00006A  C070  FFF5         	movff	??_Timer0_ISR+16,tablat
  3234  00006E  C06F  FFF8         	movff	??_Timer0_ISR+15,tblptru
  3235  000072  C06E  FFF7         	movff	??_Timer0_ISR+14,tblptrh
  3236  000076  C06D  FFF6         	movff	??_Timer0_ISR+13,tblptrl
  3237  00007A  C06C  FFF4         	movff	??_Timer0_ISR+12,prodh
  3238  00007E  C06B  FFF3         	movff	??_Timer0_ISR+11,prodl
  3239  000082  C06A  FFDA         	movff	??_Timer0_ISR+10,fsr2h
  3240  000086  C069  FFD9         	movff	??_Timer0_ISR+9,fsr2l
  3241  00008A  C068  FFE2         	movff	??_Timer0_ISR+8,fsr1h
  3242  00008E  C067  FFE1         	movff	??_Timer0_ISR+7,fsr1l
  3243  000092  C066  FFEA         	movff	??_Timer0_ISR+6,fsr0h
  3244  000096  C065  FFE9         	movff	??_Timer0_ISR+5,fsr0l
  3245  00009A  C064  FFFB         	movff	??_Timer0_ISR+4,pclatu
  3246  00009E  C063  FFFA         	movff	??_Timer0_ISR+3,pclath
  3247  0000A2  C062  FFE0         	movff	??_Timer0_ISR+2,bsr
  3248  0000A6  C061  FFE8         	movff	??_Timer0_ISR+1,wreg
  3249  0000AA  C060  FFD8         	movff	??_Timer0_ISR,status
  3250  0000AE  0010               	retfie	
  3251  0000B0                     __end_of_Timer0_ISR:
  3252                           	opt stack 0
  3253                           pclatu	equ	0xFFB
  3254                           pclath	equ	0xFFA
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           intcon2	equ	0xFF1
  3263                           postinc0	equ	0xFEE
  3264                           fsr0h	equ	0xFEA
  3265                           fsr0l	equ	0xFE9
  3266                           wreg	equ	0xFE8
  3267                           plusw1	equ	0xFE3
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           bsr	equ	0xFE0
  3271                           plusw2	equ	0xFDB
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _RX2_ISR *****************
  3277 ;; Defined at:
  3278 ;;		line 110 in file "main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  input           2   27[COMRAM] unsigned char [2]
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;Total ram usage:       16 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		_atoi
  3301 ;; This function is called by:
  3302 ;;		Interrupt level 2
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	intcode
  3307  000008                     __pintcode:
  3308                           	opt stack 0
  3309  000008                     _RX2_ISR:
  3310                           	opt stack 25
  3311                           
  3312                           ;incstack = 0
  3313  000008  CFFA F00E          	movff	pclath,??_RX2_ISR
  3314  00000C  CFFB F00F          	movff	pclatu,??_RX2_ISR+1
  3315  000010  CFE9 F010          	movff	fsr0l,??_RX2_ISR+2
  3316  000014  EF54  F002         	goto	int_func
  3317                           pclatu	equ	0xFFB
  3318                           pclath	equ	0xFFA
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           intcon2	equ	0xFF1
  3327                           postinc0	equ	0xFEE
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           plusw1	equ	0xFE3
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           bsr	equ	0xFE0
  3335                           plusw2	equ	0xFDB
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340                           	psect	intcode_body
  3341  0004A8                     __pintcode_body:
  3342                           	opt stack 25
  3343  0004A8                     int_func:
  3344                           	opt stack 25
  3345  0004A8  CFEA F011          	movff	fsr0h,??_RX2_ISR+3
  3346  0004AC  CFE1 F012          	movff	fsr1l,??_RX2_ISR+4
  3347  0004B0  CFE2 F013          	movff	fsr1h,??_RX2_ISR+5
  3348  0004B4  CFD9 F014          	movff	fsr2l,??_RX2_ISR+6
  3349  0004B8  CFDA F015          	movff	fsr2h,??_RX2_ISR+7
  3350  0004BC  CFF3 F016          	movff	prodl,??_RX2_ISR+8
  3351  0004C0  CFF4 F017          	movff	prodh,??_RX2_ISR+9
  3352  0004C4  CFF6 F018          	movff	tblptrl,??_RX2_ISR+10
  3353  0004C8  CFF7 F019          	movff	tblptrh,??_RX2_ISR+11
  3354  0004CC  CFF8 F01A          	movff	tblptru,??_RX2_ISR+12
  3355  0004D0  CFF5 F01B          	movff	tablat,??_RX2_ISR+13
  3356                           
  3357                           ;main.c: 111: RC2IF = 0;
  3358  0004D4  9AA4               	bcf	4004,5,c	;volatile
  3359                           
  3360                           ;main.c: 113: static char compteur=0;
  3361                           ;main.c: 114: static char buffer[16]="";
  3362                           ;main.c: 116: char input[2] = "";
  3363  0004D6  C02C  F01C         	movff	RX2_ISR@F19163,RX2_ISR@input
  3364  0004DA  C02D  F01D         	movff	RX2_ISR@F19163+1,RX2_ISR@input+1
  3365                           
  3366                           ;main.c: 117: input[0] = RCREG2;
  3367  0004DE  CF7A F01C          	movff	3962,RX2_ISR@input	;volatile
  3368                           
  3369                           ;main.c: 119: if (beginR==1 | beginG==1 | beginB==1)
  3370  0004E2  0431               	decf	_beginR,w,c
  3371  0004E4  B4D8               	btfsc	status,2,c
  3372  0004E6  D006               	goto	i2l1776
  3373  0004E8  0430               	decf	_beginG,w,c
  3374  0004EA  B4D8               	btfsc	status,2,c
  3375  0004EC  D003               	goto	i2l1776
  3376  0004EE  042F               	decf	_beginB,w,c
  3377  0004F0  A4D8               	btfss	status,2,c
  3378  0004F2  D053               	goto	i2l1814
  3379  0004F4                     i2l1776:
  3380                           
  3381                           ;main.c: 120: {
  3382                           ;main.c: 121: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  3383  0004F4  0E52               	movlw	82
  3384  0004F6  181C               	xorwf	RX2_ISR@input,w,c
  3385  0004F8  B4D8               	btfsc	status,2,c
  3386  0004FA  D014               	goto	i2l1786
  3387  0004FC  0E47               	movlw	71
  3388  0004FE  181C               	xorwf	RX2_ISR@input,w,c
  3389  000500  B4D8               	btfsc	status,2,c
  3390  000502  D010               	goto	i2l1786
  3391  000504  0E42               	movlw	66
  3392  000506  181C               	xorwf	RX2_ISR@input,w,c
  3393  000508  B4D8               	btfsc	status,2,c
  3394  00050A  D00C               	goto	i2l1786
  3395                           
  3396                           ;main.c: 122: {
  3397                           ;main.c: 123: buffer[compteur]=input[0];
  3398  00050C  502E               	movf	RX2_ISR@compteur,w,c
  3399  00050E  0D01               	mullw	1
  3400  000510  0E32               	movlw	low RX2_ISR@buffer
  3401  000512  24F3               	addwf	prodl,w,c
  3402  000514  6ED9               	movwf	fsr2l,c
  3403  000516  0E00               	movlw	high RX2_ISR@buffer
  3404  000518  20F4               	addwfc	prodh,w,c
  3405  00051A  6EDA               	movwf	fsr2h,c
  3406  00051C  C01C  FFDF         	movff	RX2_ISR@input,indf2
  3407                           
  3408                           ;main.c: 124: compteur+=1;
  3409  000520  2A2E               	incf	RX2_ISR@compteur,f,c
  3410                           
  3411                           ;main.c: 125: }
  3412  000522  D03B               	goto	i2l1814
  3413  000524                     i2l1786:
  3414                           
  3415                           ;main.c: 127: else
  3416                           ;main.c: 128: {
  3417                           ;main.c: 129: if (beginR==1)
  3418  000524  0431               	decf	_beginR,w,c
  3419  000526  A4D8               	btfss	status,2,c
  3420  000528  D00B               	goto	i2l1790
  3421                           
  3422                           ;main.c: 130: R[0]=atoi(buffer);
  3423  00052A  0E32               	movlw	low RX2_ISR@buffer
  3424  00052C  6E07               	movwf	atoi@s,c
  3425  00052E  0E00               	movlw	high RX2_ISR@buffer
  3426  000530  6E08               	movwf	atoi@s+1,c
  3427  000532  EC6F  F005         	call	_atoi	;wreg free
  3428  000536  C007  F100         	movff	?_atoi,_R
  3429  00053A  C008  F101         	movff	?_atoi+1,_R+1
  3430  00053E  D000               	goto	i2l1790
  3431  000540                     i2l1790:
  3432                           
  3433                           ;main.c: 131: beginR=0;
  3434  000540  0E00               	movlw	0
  3435  000542  6E31               	movwf	_beginR,c
  3436                           
  3437                           ;main.c: 132: if (beginG==1)
  3438  000544  0430               	decf	_beginG,w,c
  3439  000546  A4D8               	btfss	status,2,c
  3440  000548  D00B               	goto	i2l1796
  3441                           
  3442                           ;main.c: 133: G[0]=atoi(buffer);
  3443  00054A  0E32               	movlw	low RX2_ISR@buffer
  3444  00054C  6E07               	movwf	atoi@s,c
  3445  00054E  0E00               	movlw	high RX2_ISR@buffer
  3446  000550  6E08               	movwf	atoi@s+1,c
  3447  000552  EC6F  F005         	call	_atoi	;wreg free
  3448  000556  C007  F200         	movff	?_atoi,_G
  3449  00055A  C008  F201         	movff	?_atoi+1,_G+1
  3450  00055E  D000               	goto	i2l1796
  3451  000560                     i2l1796:
  3452                           
  3453                           ;main.c: 134: beginG=0;
  3454  000560  0E00               	movlw	0
  3455  000562  6E30               	movwf	_beginG,c
  3456                           
  3457                           ;main.c: 135: if (beginB==1)
  3458  000564  042F               	decf	_beginB,w,c
  3459  000566  A4D8               	btfss	status,2,c
  3460  000568  D00B               	goto	i2l1802
  3461                           
  3462                           ;main.c: 136: B[0]=atoi(buffer);
  3463  00056A  0E32               	movlw	low RX2_ISR@buffer
  3464  00056C  6E07               	movwf	atoi@s,c
  3465  00056E  0E00               	movlw	high RX2_ISR@buffer
  3466  000570  6E08               	movwf	atoi@s+1,c
  3467  000572  EC6F  F005         	call	_atoi	;wreg free
  3468  000576  C007  F300         	movff	?_atoi,_B
  3469  00057A  C008  F301         	movff	?_atoi+1,_B+1
  3470  00057E  D000               	goto	i2l1802
  3471  000580                     i2l1802:
  3472                           
  3473                           ;main.c: 137: beginB=0;
  3474  000580  0E00               	movlw	0
  3475  000582  6E2F               	movwf	_beginB,c
  3476                           
  3477                           ;main.c: 140: compteur=0;
  3478  000584  0E00               	movlw	0
  3479  000586  6E2E               	movwf	RX2_ISR@compteur,c
  3480                           
  3481                           ;main.c: 141: buffer[3]='\0';
  3482  000588  0E00               	movlw	0
  3483  00058A  6E35               	movwf	RX2_ISR@buffer+3,c
  3484                           
  3485                           ;main.c: 142: buffer[2]='\0';
  3486  00058C  0E00               	movlw	0
  3487  00058E  6E34               	movwf	RX2_ISR@buffer+2,c
  3488                           
  3489                           ;main.c: 143: buffer[1]='\0';
  3490  000590  0E00               	movlw	0
  3491  000592  6E33               	movwf	RX2_ISR@buffer+1,c
  3492                           
  3493                           ;main.c: 144: buffer[0]='\0';
  3494  000594  0E00               	movlw	0
  3495  000596  6E32               	movwf	RX2_ISR@buffer,c
  3496  000598  D000               	goto	i2l1814
  3497  00059A                     i2l1814:
  3498                           
  3499                           ;main.c: 145: }
  3500                           ;main.c: 146: }
  3501                           ;main.c: 148: if (input[0]=='R')
  3502  00059A  0E52               	movlw	82
  3503  00059C  181C               	xorwf	RX2_ISR@input,w,c
  3504  00059E  A4D8               	btfss	status,2,c
  3505  0005A0  D003               	goto	i2l1818
  3506                           
  3507                           ;main.c: 149: beginR=1;
  3508  0005A2  0E01               	movlw	1
  3509  0005A4  6E31               	movwf	_beginR,c
  3510  0005A6  D000               	goto	i2l1818
  3511  0005A8                     i2l1818:
  3512                           
  3513                           ;main.c: 150: if (input[0]=='G')
  3514  0005A8  0E47               	movlw	71
  3515  0005AA  181C               	xorwf	RX2_ISR@input,w,c
  3516  0005AC  A4D8               	btfss	status,2,c
  3517  0005AE  D003               	goto	i2l1822
  3518                           
  3519                           ;main.c: 151: beginG=1;
  3520  0005B0  0E01               	movlw	1
  3521  0005B2  6E30               	movwf	_beginG,c
  3522  0005B4  D000               	goto	i2l1822
  3523  0005B6                     i2l1822:
  3524                           
  3525                           ;main.c: 152: if (input[0]=='B')
  3526  0005B6  0E42               	movlw	66
  3527  0005B8  181C               	xorwf	RX2_ISR@input,w,c
  3528  0005BA  A4D8               	btfss	status,2,c
  3529  0005BC  D003               	goto	i2l219
  3530                           
  3531                           ;main.c: 153: beginB=1;
  3532  0005BE  0E01               	movlw	1
  3533  0005C0  6E2F               	movwf	_beginB,c
  3534  0005C2  D000               	goto	i2l219
  3535  0005C4                     i2l219:
  3536  0005C4  C01B  FFF5         	movff	??_RX2_ISR+13,tablat
  3537  0005C8  C01A  FFF8         	movff	??_RX2_ISR+12,tblptru
  3538  0005CC  C019  FFF7         	movff	??_RX2_ISR+11,tblptrh
  3539  0005D0  C018  FFF6         	movff	??_RX2_ISR+10,tblptrl
  3540  0005D4  C017  FFF4         	movff	??_RX2_ISR+9,prodh
  3541  0005D8  C016  FFF3         	movff	??_RX2_ISR+8,prodl
  3542  0005DC  C015  FFDA         	movff	??_RX2_ISR+7,fsr2h
  3543  0005E0  C014  FFD9         	movff	??_RX2_ISR+6,fsr2l
  3544  0005E4  C013  FFE2         	movff	??_RX2_ISR+5,fsr1h
  3545  0005E8  C012  FFE1         	movff	??_RX2_ISR+4,fsr1l
  3546  0005EC  C011  FFEA         	movff	??_RX2_ISR+3,fsr0h
  3547  0005F0  C010  FFE9         	movff	??_RX2_ISR+2,fsr0l
  3548  0005F4  C00F  FFFB         	movff	??_RX2_ISR+1,pclatu
  3549  0005F8  C00E  FFFA         	movff	??_RX2_ISR,pclath
  3550  0005FC  0011               	retfie		f
  3551  0005FE                     __end_of_RX2_ISR:
  3552                           	opt stack 0
  3553                           pclatu	equ	0xFFB
  3554                           pclath	equ	0xFFA
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           prodh	equ	0xFF4
  3560                           prodl	equ	0xFF3
  3561                           intcon	equ	0xFF2
  3562                           intcon2	equ	0xFF1
  3563                           postinc0	equ	0xFEE
  3564                           fsr0h	equ	0xFEA
  3565                           fsr0l	equ	0xFE9
  3566                           wreg	equ	0xFE8
  3567                           plusw1	equ	0xFE3
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           bsr	equ	0xFE0
  3571                           indf2	equ	0xFDF
  3572                           plusw2	equ	0xFDB
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function _atoi *****************
  3578 ;; Defined at:
  3579 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3582 ;;		 -> RX2_ISR@buffer(16), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  a               2   11[COMRAM] int 
  3585 ;;  sign            1   10[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    6[COMRAM] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;Total ram usage:        7 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    1
  3602 ;; This function calls:
  3603 ;;		___wmul
  3604 ;;		_isdigit
  3605 ;; This function is called by:
  3606 ;;		_RX2_ISR
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text17
  3611  000ADE                     __ptext17:
  3612                           	opt stack 0
  3613  000ADE                     _atoi:
  3614                           	opt stack 25
  3615                           
  3616                           ;incstack = 0
  3617  000ADE  D003               	goto	i2l1568
  3618  000AE0                     i2l1566:
  3619  000AE0  4A07               	infsnz	atoi@s,f,c
  3620  000AE2  2A08               	incf	atoi@s+1,f,c
  3621  000AE4  D000               	goto	i2l1568
  3622  000AE6                     i2l1568:
  3623  000AE6  C007  FFD9         	movff	atoi@s,fsr2l
  3624  000AEA  C008  FFDA         	movff	atoi@s+1,fsr2h
  3625  000AEE  0E20               	movlw	32
  3626  000AF0  18DE               	xorwf	postinc2,w,c
  3627  000AF2  B4D8               	btfsc	status,2,c
  3628  000AF4  D7F5               	goto	i2l1566
  3629  000AF6  C007  FFD9         	movff	atoi@s,fsr2l
  3630  000AFA  C008  FFDA         	movff	atoi@s+1,fsr2h
  3631  000AFE  0E09               	movlw	9
  3632  000B00  18DE               	xorwf	postinc2,w,c
  3633  000B02  B4D8               	btfsc	status,2,c
  3634  000B04  D7ED               	goto	i2l1566
  3635  000B06  0E00               	movlw	0
  3636  000B08  6E0D               	movwf	atoi@a+1,c
  3637  000B0A  0E00               	movlw	0
  3638  000B0C  6E0C               	movwf	atoi@a,c
  3639  000B0E  0E00               	movlw	0
  3640  000B10  6E0B               	movwf	atoi@sign,c
  3641  000B12  C007  FFD9         	movff	atoi@s,fsr2l
  3642  000B16  C008  FFDA         	movff	atoi@s+1,fsr2h
  3643  000B1A  0E2D               	movlw	45
  3644  000B1C  18DE               	xorwf	postinc2,w,c
  3645  000B1E  A4D8               	btfss	status,2,c
  3646  000B20  D002               	goto	i2l1578
  3647  000B22  2A0B               	incf	atoi@sign,f,c
  3648  000B24  D025               	goto	i2l1584
  3649  000B26                     i2l1578:
  3650  000B26  C007  FFD9         	movff	atoi@s,fsr2l
  3651  000B2A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3652  000B2E  0E2B               	movlw	43
  3653  000B30  18DE               	xorwf	postinc2,w,c
  3654  000B32  A4D8               	btfss	status,2,c
  3655  000B34  D020               	goto	i2l1586
  3656  000B36  D01C               	goto	i2l1584
  3657  000B38  D01E               	goto	i2l1586
  3658  000B3A                     i2l1582:
  3659  000B3A  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3660  000B3E  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3661  000B42  0E00               	movlw	0
  3662  000B44  6E04               	movwf	___wmul@multiplicand+1,c
  3663  000B46  0E0A               	movlw	10
  3664  000B48  6E03               	movwf	___wmul@multiplicand,c
  3665  000B4A  EC39  F007         	call	___wmul	;wreg free
  3666  000B4E  C007  FFD9         	movff	atoi@s,fsr2l
  3667  000B52  C008  FFDA         	movff	atoi@s+1,fsr2h
  3668  000B56  50DF               	movf	indf2,w,c
  3669  000B58  6E09               	movwf	??_atoi& (0+255),c
  3670  000B5A  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3671  000B5C  5001               	movf	?___wmul,w,c
  3672  000B5E  2609               	addwf	??_atoi,f,c
  3673  000B60  5002               	movf	?___wmul+1,w,c
  3674  000B62  220A               	addwfc	??_atoi+1,f,c
  3675  000B64  0ED0               	movlw	208
  3676  000B66  2409               	addwf	??_atoi,w,c
  3677  000B68  6E0C               	movwf	atoi@a,c
  3678  000B6A  0EFF               	movlw	255
  3679  000B6C  200A               	addwfc	??_atoi+1,w,c
  3680  000B6E  6E0D               	movwf	atoi@a+1,c
  3681  000B70                     i2l1584:
  3682  000B70  4A07               	infsnz	atoi@s,f,c
  3683  000B72  2A08               	incf	atoi@s+1,f,c
  3684  000B74  D000               	goto	i2l1586
  3685  000B76                     i2l1586:
  3686  000B76  C007  FFD9         	movff	atoi@s,fsr2l
  3687  000B7A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3688  000B7E  50DF               	movf	indf2,w,c
  3689  000B80  EC4D  F007         	call	_isdigit
  3690  000B84  B0D8               	btfsc	status,0,c
  3691  000B86  D7D9               	goto	i2l1582
  3692  000B88  500B               	movf	atoi@sign,w,c
  3693  000B8A  B4D8               	btfsc	status,2,c
  3694  000B8C  D00D               	goto	i2l441
  3695  000B8E  C00C  F009         	movff	atoi@a,??_atoi
  3696  000B92  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3697  000B96  1E09               	comf	??_atoi,f,c
  3698  000B98  1E0A               	comf	??_atoi+1,f,c
  3699  000B9A  4A09               	infsnz	??_atoi,f,c
  3700  000B9C  2A0A               	incf	??_atoi+1,f,c
  3701  000B9E  C009  F007         	movff	??_atoi,?_atoi
  3702  000BA2  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3703  000BA6  0012               	return	
  3704  000BA8                     i2l441:
  3705  000BA8  C00C  F007         	movff	atoi@a,?_atoi
  3706  000BAC  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3707  000BB0  0012               	return		;funcret
  3708  000BB2                     __end_of_atoi:
  3709                           	opt stack 0
  3710                           pclatu	equ	0xFFB
  3711                           pclath	equ	0xFFA
  3712                           tblptru	equ	0xFF8
  3713                           tblptrh	equ	0xFF7
  3714                           tblptrl	equ	0xFF6
  3715                           tablat	equ	0xFF5
  3716                           prodh	equ	0xFF4
  3717                           prodl	equ	0xFF3
  3718                           intcon	equ	0xFF2
  3719                           intcon2	equ	0xFF1
  3720                           postinc0	equ	0xFEE
  3721                           fsr0h	equ	0xFEA
  3722                           fsr0l	equ	0xFE9
  3723                           wreg	equ	0xFE8
  3724                           plusw1	equ	0xFE3
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           bsr	equ	0xFE0
  3728                           indf2	equ	0xFDF
  3729                           postinc2	equ	0xFDE
  3730                           plusw2	equ	0xFDB
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _isdigit *****************
  3736 ;; Defined at:
  3737 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  c               1    wreg     unsigned char 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  c               1    2[COMRAM] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;		None               void
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:        3 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_atoi
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text18
  3765  000E9A                     __ptext18:
  3766                           	opt stack 0
  3767  000E9A                     _isdigit:
  3768                           	opt stack 25
  3769                           
  3770                           ;incstack = 0
  3771                           ;isdigit@c stored from wreg
  3772  000E9A  6E03               	movwf	isdigit@c,c
  3773  000E9C  0E00               	movlw	0
  3774  000E9E  6E02               	movwf	_isdigit$858,c
  3775  000EA0  0E3A               	movlw	58
  3776  000EA2  6003               	cpfslt	isdigit@c,c
  3777  000EA4  D006               	goto	i2l1484
  3778  000EA6  0E2F               	movlw	47
  3779  000EA8  6403               	cpfsgt	isdigit@c,c
  3780  000EAA  D003               	goto	i2l1484
  3781  000EAC  0E01               	movlw	1
  3782  000EAE  6E02               	movwf	_isdigit$858,c
  3783  000EB0  D000               	goto	i2l1484
  3784  000EB2                     i2l1484:
  3785  000EB2  C002  F001         	movff	_isdigit$858,??_isdigit
  3786  000EB6  3001               	rrcf	??_isdigit,w,c
  3787  000EB8  0012               	return	
  3788  000EBA  0012               	return		;funcret
  3789  000EBC                     __end_of_isdigit:
  3790                           	opt stack 0
  3791                           pclatu	equ	0xFFB
  3792                           pclath	equ	0xFFA
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           intcon2	equ	0xFF1
  3801                           postinc0	equ	0xFEE
  3802                           fsr0h	equ	0xFEA
  3803                           fsr0l	equ	0xFE9
  3804                           wreg	equ	0xFE8
  3805                           plusw1	equ	0xFE3
  3806                           fsr1h	equ	0xFE2
  3807                           fsr1l	equ	0xFE1
  3808                           bsr	equ	0xFE0
  3809                           indf2	equ	0xFDF
  3810                           postinc2	equ	0xFDE
  3811                           plusw2	equ	0xFDB
  3812                           fsr2h	equ	0xFDA
  3813                           fsr2l	equ	0xFD9
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function ___wmul *****************
  3817 ;; Defined at:
  3818 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  multiplier      2    0[COMRAM] unsigned int 
  3821 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  product         2    4[COMRAM] unsigned int 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  2    0[COMRAM] unsigned int 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, prodl, prodh
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;Total ram usage:        6 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_atoi
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text19
  3847  000E72                     __ptext19:
  3848                           	opt stack 0
  3849  000E72                     ___wmul:
  3850                           	opt stack 25
  3851                           
  3852                           ;incstack = 0
  3853  000E72  5001               	movf	___wmul@multiplier,w,c
  3854  000E74  0203               	mulwf	___wmul@multiplicand,c
  3855  000E76  CFF3 F005          	movff	prodl,___wmul@product
  3856  000E7A  CFF4 F006          	movff	prodh,___wmul@product+1
  3857  000E7E  5001               	movf	___wmul@multiplier,w,c
  3858  000E80  0204               	mulwf	___wmul@multiplicand+1,c
  3859  000E82  50F3               	movf	prodl,w,c
  3860  000E84  2606               	addwf	___wmul@product+1,f,c
  3861  000E86  5002               	movf	___wmul@multiplier+1,w,c
  3862  000E88  0203               	mulwf	___wmul@multiplicand,c
  3863  000E8A  50F3               	movf	prodl,w,c
  3864  000E8C  2606               	addwf	___wmul@product+1,f,c
  3865  000E8E  C005  F001         	movff	___wmul@product,?___wmul
  3866  000E92  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3867  000E96  0012               	return	
  3868  000E98  0012               	return		;funcret
  3869  000E9A                     __end_of___wmul:
  3870                           	opt stack 0
  3871  0000                     pclatu	equ	0xFFB
  3872                           pclath	equ	0xFFA
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           intcon	equ	0xFF2
  3880                           intcon2	equ	0xFF1
  3881                           postinc0	equ	0xFEE
  3882                           fsr0h	equ	0xFEA
  3883                           fsr0l	equ	0xFE9
  3884                           wreg	equ	0xFE8
  3885                           plusw1	equ	0xFE3
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           bsr	equ	0xFE0
  3889                           indf2	equ	0xFDF
  3890                           postinc2	equ	0xFDE
  3891                           plusw2	equ	0xFDB
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           pclatu	equ	0xFFB
  3896                           pclath	equ	0xFFA
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           intcon2	equ	0xFF1
  3905                           postinc0	equ	0xFEE
  3906                           fsr0h	equ	0xFEA
  3907                           fsr0l	equ	0xFE9
  3908                           wreg	equ	0xFE8
  3909                           plusw1	equ	0xFE3
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           bsr	equ	0xFE0
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           plusw2	equ	0xFDB
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920                           	psect	rparam
  3921  0000                     pclatu	equ	0xFFB
  3922                           pclath	equ	0xFFA
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           intcon2	equ	0xFF1
  3931                           postinc0	equ	0xFEE
  3932                           fsr0h	equ	0xFEA
  3933                           fsr0l	equ	0xFE9
  3934                           wreg	equ	0xFE8
  3935                           plusw1	equ	0xFE3
  3936                           fsr1h	equ	0xFE2
  3937                           fsr1l	equ	0xFE1
  3938                           bsr	equ	0xFE0
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           plusw2	equ	0xFDB
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      65
    BANK0           160     95     111
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> RX2_ISR@buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_pwm
    _pwm->___ftmul
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _RX2_ISR in COMRAM

    _RX2_ISR->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lbtoft
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _RX2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _RX2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _RX2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _RX2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _RX2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Critical Paths under _RX2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_ISR in BANK6

    None.

Critical Paths under _RX2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_ISR in BANK7

    None.

Critical Paths under _RX2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_ISR in BANK8

    None.

Critical Paths under _RX2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_ISR in BANK9

    None.

Critical Paths under _RX2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_ISR in BANK10

    None.

Critical Paths under _RX2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_ISR in BANK11

    None.

Critical Paths under _RX2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_ISR in BANK12

    None.

Critical Paths under _RX2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_ISR in BANK13

    None.

Critical Paths under _RX2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_ISR in BANK14

    None.

Critical Paths under _RX2_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    27      5   14039
                                             63 BANK0     32    27      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2     102
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1349
                                             42 COMRAM     1     1      0
                                             61 BANK0      2     0      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     835
                                             29 COMRAM     4     4      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2684
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2099
                                             32 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     570
                                             46 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3426
                                             33 COMRAM     9     9      0
                                             25 BANK0      6     0      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3358
                                             31 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2068
                                             29 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Timer0_ISR                                          17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RX2_ISR                                             16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _initialisation
     _initADC
     _initComms
     _initPWM
     _initTimer0
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _readADC

 _Timer0_ISR (ROOT)

 _RX2_ISR (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      41       1       68.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     308       6        0.0%
DATA                 0      0     308       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 23 19:56:54 2015

                      _B 0300                        _G 0200                        _R 0100  
           ___awdiv@sign 001F                       bsr 000FE0      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l250 0D10  
                    l252 0D3C                      l253 0D40                      l229 01E2  
                    l247 0D06                      l249 0D0A                      l593 0AA4  
                    l657 0868                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _RC0 007C10                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _PSA 007EAB                      _pwm 0C6A                      prod 000FF3  
                    wreg 000FE8               _TXSTA2bits 000FBA             ___ftdiv@cntr 0088  
           ___ftdiv@sign 008D                     l2000 078A                     l2006 07C4  
                   l2110 00FE                     l2112 0110                     l2026 0826  
                   l2106 00D8                     l2036 087A                     l2052 0902  
                   l2132 0186                     l2070 095C                     l2046 08D2  
                   l2134 0198                     l2126 0152                     l2080 0996  
                   l2128 0164                     l2074 0976                     l2066 0942  
                   l2146 0352                     l2084 09AE                     l2076 097C  
                   l1712 0638                     l1730 06CC                     l1740 06FE  
                   l1902 0ACE                     l1742 0710                     l1734 06E0  
                   l1744 071E                     l1920 0BE2                     l1930 0C12  
                   l1914 0BCC                     l1748 073C                     l1926 0BFC  
                   l1942 0C4E                     l1880 0A16                     l1928 0C08  
                   l1952 0C6E                     l1890 0A94                     l1882 0A3C  
                   l1874 09F0                     l1946 0C5E                     l1938 0C40  
                   l1964 0CBE                     l1972 0CE6                     l1980 0D2C  
                   l1886 0A5E                     l1878 0A06                     l1958 0C96  
                   l1896 0AB0                     l1888 0A84                     l1986 0D34  
                   l1978 0D16                     l1988 0D36                     _ADON 007E10  
                   _CHS0 007E12                     _CHS1 007E13                     ?_pwm 009D  
                   _T0IE 007F95                     _T0IF 007F92                     _T0CS 007EAD  
                   u1071 0614                     u1090 065E                     u1095 0654  
                   u1611 08B4                     u1631 08E4                     u1711 011E  
                   u1561 0766                     u1581 07A0                     u1760 01DC  
                   u1770 01DE                     _PEIE 007F96         ??_initialisation 001E  
        __end_of_RX2_ISR 05FE                     _atoi 0ADE                     _main 00B4  
           ___ftpack@arg 0071             ___ftpack@exp 0074                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 00B0            __CFG_IESO$OFF 000000             ___ftmul@cntr 0029  
           ___param_bank 000010             ___ftmul@sign 002A             ___fttol@exp1 009C  
           ___fttol@lval 0098                    ??_pwm 002B                    _DC2B0 007A84  
                  _DC2B1 007A85                    _DC3B0 007A6C                    _DC3B1 007A6D  
                  _DC4B0 007A54                    _DC4B1 007A55                    ?_atoi 0007  
                  ?_main 009F          __end_of___awdiv 0C6A          __end_of___ftdiv 08A2  
        __end_of___ftmul 09D6          ___awdiv@divisor 0073          __end_of___fttol 0750  
                  _T0PS0 007EA8                    _T0PS1 007EA9                    _T0PS2 007EAA  
                  _RC2IF 007D25                    i1l199 006A                    i2l219 05C4  
                  i2l441 0BA8          ___awdiv@counter 001E                    _VCFG0 007E0C  
                  _VCFG1 007E0D                    _VNCFG 007E0B                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initADC 0ED8          __end_of_readADC 0D5A           __CFG_EBTRB$OFF 000000  
        __end_of_initPWM 0DAC          __end_of_isdigit 0EBC            ___ftpack@sign 0075  
                  atoi@a 000C                    atoi@s 0007                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 0DAC             __end_of_atoi 0BB2  
           __end_of_main 04A8                   ??_atoi 0009                   ??_main 002C  
          ___fttol@sign1 0097            __activetblptr 000002           __CFG_RETEN$OFF 000000  
              ??_RX2_ISR 000E                   _CCP2M2 007A82                   _CCP2M3 007A83  
                 _CCP3M2 007A6A                   _CCP3M3 007A6B                   _CCP4M2 007A52  
                 _CCP4M3 007A53                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000F51                   _CCPR3L 000F4E                   _CCPR4L 000F4B  
                 _T08BIT 007EAE         ___awdiv@dividend 0071                   _ANSEL1 007AE9  
                 _ANSEL2 007AEA                   _ANSEL3 007AEB         __end_of___ftpack 0ADE  
       __end_of___lbtoft 0E4A          __CFG_BBSIZ$BB2K 000000                   i2l1802 0580  
                 i2l1484 0EB2                   i2l1582 0B3A                   i2l1566 0AE0  
                 i2l1822 05B6                   i2l1814 059A           __CFG_WDTEN$OFF 000000  
                 i2l1584 0B70                   i2l1568 0AE6                   i2l1586 0B76  
                 i2l1578 0B26                   i2l1818 05A8                   i2l1790 0540  
                 i2l1776 04F4                   i2l1786 0524                   i2l1796 0560  
                 _RCREG2 000F7A         __end_of___lwtoft 0E1E                   _TMR0IE 007F95  
                 _SPBRG2 000F7B                   _TMR0IP 007F8A                   _TMR2ON 007E52  
                 _TXREG2 000F79               _Timer0_ISR 0018           __CFG_XINST$OFF 000000  
                 _beginB 002F                   _beginG 0030                   ___wmul 0E72  
                 _beginR 0031                ??___awdiv 001E           __CFG_STVREN$ON 000000  
              ??___ftdiv 0085                ??___ftmul 0022                ??___fttol 0092  
           readADC@tempo 0023                   _millis 00CE                   clear_0 0DB2  
                 clear_1 0DBE                   clear_2 0DCA                   clear_3 0DD6  
                 clear_4 0DE2         ___awdiv@quotient 0020                ??_initADC 001E  
  ___ftmul@f3_as_product 0026                ??_readADC 0020                ??_initPWM 001E  
              ??_isdigit 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0DE8  
          ___rparam_used 000001               ___ftdiv@f1 007F               ___ftdiv@f2 0082  
             ___ftdiv@f3 0089               ___lbtoft@c 0021               ___ftmul@f1 0079  
             ___ftmul@f2 007C               ___fttol@f1 008E           __pcstackCOMRAM 0001  
             ___lwtoft@c 0076               __pbssBANK0 00BF               __pbssBANK1 0100  
             __pbssBANK2 0200               __pbssBANK3 0300          __CFG_PLLCFG$OFF 000000  
     __size_of_initComms 0028           main@amplitude1 00B4           main@amplitude2 00B6  
         main@amplitude3 00B8              ?_Timer0_ISR 0001                  ?___wmul 0001  
              ?___ftpack 0071                ?___lbtoft 0076                  _T2CKPS0 007E50  
                _T2CKPS1 007E51                ?___lwtoft 0076         __CFG_CANMX$PORTB 000000  
                _SPBRGH2 000F7C                  _RX2_ISR 0008          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000               _initTimer0 0ED8  
                ___awdiv 0BB2                  ___ftdiv 0750          __size_of___wmul 0028  
                ___ftmul 08A2                  ___fttol 05FE                  __pcinit 0DAC  
             ??___ftpack 001E               ??___lbtoft 0021                  __ramtop 0F00  
                __ptext0 00B4                  __ptext1 0CFE                  __ptext2 0C6A  
                __ptext3 0BB2                  __ptext4 0EEE                  __ptext5 0ED8  
                __ptext6 0D5A                  __ptext7 0E4A                  __ptext8 0EBC  
                __ptext9 0DF2        __end_of_initComms 0E72               ??___lwtoft 0021  
                _initADC 0EBC                  _readADC 0CFE                  _initPWM 0D5A  
                _isdigit 0E9A             __size_of_pwm 0094        __CFG_MSSPMSK$MSK7 000000  
    __size_of_Timer0_ISR 0098                  main@msg 00A4           __pintcode_body 04A8  
   end_of_initialization 0DE8            __Lmediumconst 0000                  int_func 04A8  
                postinc0 000FEE                  postinc2 000FDE  __size_of_initialisation 0012  
             main@F19169 00BF         __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93  
            ___ftdiv@exp 008C              ___ftmul@exp 0025              ?_initTimer0 0001  
         __end_of___wmul 0E9A      start_initialization 0DAC              __end_of_pwm 0CFE  
           ??_Timer0_ISR 0060                 ??___wmul 0005        __size_of___ftpack 0108  
      __size_of___lbtoft 002C              __pbssCOMRAM 002C        __size_of___lwtoft 002C  
          __pcstackBANK0 0060                 ?_RX2_ISR 0001       __end_of_Timer0_ISR 00B0  
          RX2_ISR@F19163 002C      __size_of_initTimer0 0016                __pintcode 0008  
         _initialisation 0EEE                 ?___awdiv 0071                 ?___ftdiv 007F  
               ?___ftmul 0079                 ?___fttol 008E              __pintcodelo 0018  
          RX2_ISR@buffer 0032                 ?_initADC 0001                 ?_readADC 001E  
               ?_initPWM 0001                 _BAUDCON2 000FB9                 ?_isdigit 0001  
              _initComms 0E4A           ___wmul@product 0005                 _PIE3bits 000FA3  
 __end_of_initialisation 0F00                 _PIR3bits 000FA4                 _GO_nDONE 007E11  
               _RCONbits 000FD0          main@old_SWITCH1 00B3          RX2_ISR@compteur 002E  
               _TRIGSEL0 007E0E                 _TRIGSEL1 007E0F        ___wmul@multiplier 0001  
       __CFG_SOSCSEL$DIG 000000                main@delay 00BB               ?_initComms 0001  
       __size_of_RX2_ISR 05F6                 __Hrparam 0000          ?_initialisation 0001  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000             ??_initTimer0 001E  
       __size_of___awdiv 00B8         __size_of___ftdiv 0152         __size_of___ftmul 0134  
       __size_of___fttol 0152           readADC@channel 0022                 ___ftpack 09D6  
               ___lbtoft 0E1E              _isdigit$858 0002                 ___lwtoft 0DF2  
       __size_of_initADC 001C         __size_of_readADC 005C         __size_of_initPWM 0052  
       __size_of_isdigit 0022                 __ptext10 0E1E                 __ptext11 05FE  
               __ptext12 08A2                 __ptext13 0750                 __ptext14 09D6  
               __ptext17 0ADE                 __ptext18 0E9A                 __ptext19 0E72  
           RX2_ISR@input 001C       __end_of_initTimer0 0EEE            __size_of_atoi 00D4  
          __size_of_main 03F4                 atoi@sign 000B                 main@argc 009F  
               main@argv 00A1                 main@mode 00BA      __CFG_INTOSCSEL$HIGH 000000  
             _INTCONbits 000FF2              ??_initComms 001E                 isdigit@c 0003  
               intlevel1 0000                 intlevel2 0000             pwm@dutycycle 009D  
             _RCSTA2bits 000FA6                 pwm@color 002B       __CFG_WDTPS$1048576 000000  
    __CFG_BORPWR$ZPBORMV 000000  
