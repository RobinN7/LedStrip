

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 23 21:24:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _CCPR2L	set	3921
    38  0000                     _CCPR3L	set	3918
    39  0000                     _CCPR4L	set	3915
    40  0000                     _ANSEL1	set	31465
    41  0000                     _ANSEL2	set	31466
    42  0000                     _ANSEL3	set	31467
    43  0000                     _CCP2M2	set	31362
    44  0000                     _CCP2M3	set	31363
    45  0000                     _CCP3M2	set	31338
    46  0000                     _CCP3M3	set	31339
    47  0000                     _CCP4M2	set	31314
    48  0000                     _CCP4M3	set	31315
    49  0000                     _DC2B0	set	31364
    50  0000                     _DC2B1	set	31365
    51  0000                     _DC3B0	set	31340
    52  0000                     _DC3B1	set	31341
    53  0000                     _DC4B0	set	31316
    54  0000                     _DC4B1	set	31317
    55  0000                     _TMR0	set	4054
    56  0000                     _ADRESH	set	4036
    57  0000                     _ADRESL	set	4035
    58  0000                     _BAUDCON2	set	4025
    59  0000                     _INTCONbits	set	4082
    60  0000                     _PIE3bits	set	4003
    61  0000                     _PIR3bits	set	4004
    62  0000                     _PR2	set	4043
    63  0000                     _RCONbits	set	4048
    64  0000                     _RCREG2	set	3962
    65  0000                     _RCSTA2bits	set	4006
    66  0000                     _SPBRG2	set	3963
    67  0000                     _SPBRGH2	set	3964
    68  0000                     _TRISBbits	set	3987
    69  0000                     _TRISC	set	3988
    70  0000                     _TXREG2	set	3961
    71  0000                     _TXSTA2bits	set	4026
    72  0000                     _ADON	set	32272
    73  0000                     _CHS0	set	32274
    74  0000                     _CHS1	set	32275
    75  0000                     _GIE	set	32663
    76  0000                     _GO_nDONE	set	32273
    77  0000                     _PEIE	set	32662
    78  0000                     _PSA	set	32427
    79  0000                     _RC0	set	31760
    80  0000                     _RC2IF	set	32037
    81  0000                     _T08BIT	set	32430
    82  0000                     _T0CS	set	32429
    83  0000                     _T0IE	set	32661
    84  0000                     _T0IF	set	32658
    85  0000                     _T0PS0	set	32424
    86  0000                     _T0PS1	set	32425
    87  0000                     _T0PS2	set	32426
    88  0000                     _T2CKPS0	set	32336
    89  0000                     _T2CKPS1	set	32337
    90  0000                     _TMR0IE	set	32661
    91  0000                     _TMR0IP	set	32650
    92  0000                     _TMR2ON	set	32338
    93  0000                     _TRIGSEL0	set	32270
    94  0000                     _TRIGSEL1	set	32271
    95  0000                     _VCFG0	set	32268
    96  0000                     _VCFG1	set	32269
    97  0000                     _VNCFG	set	32267
    98                           
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 170 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;  argc            2   76[BANK0 ] int 
   107 ;;  argv            3   78[BANK0 ] PTR PTR unsigned char 
   108 ;; Auto vars:     Size  Location     Type
   109 ;;  msg            15   81[BANK0 ] unsigned char [15]
   110 ;;  delay           4  104[BANK0 ] long 
   111 ;;  amplitude3      2  100[BANK0 ] unsigned int 
   112 ;;  amplitude2      2   98[BANK0 ] unsigned int 
   113 ;;  amplitude1      2   96[BANK0 ] unsigned int 
   114 ;;  mode            1  103[BANK0 ] unsigned char 
   115 ;;  old_SWITCH1     1  102[BANK0 ] unsigned char 
   116 ;; Return value:  Size  Location     Type
   117 ;;                  2   76[BANK0 ] int 
   118 ;; Registers used:
   119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   125 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   126 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   128 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   129 ;;Total ram usage:       32 bytes
   130 ;; Hardware stack levels required when called:    8
   131 ;; This function calls:
   132 ;;		___ftdiv
   133 ;;		___ftmul
   134 ;;		___fttol
   135 ;;		___lwtoft
   136 ;;		_initialisation
   137 ;;		_pwm
   138 ;;		_readADC
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  000120                     __ptext0:
   146                           	opt stack 0
   147  000120                     _main:
   148                           	opt stack 23
   149                           
   150                           ;main.c: 172: long int delay=0;
   151                           
   152                           ;incstack = 0
   153  000120  0E00               	movlw	0
   154  000122  0100               	movlb	0	; () banked
   155  000124  6FC8               	movwf	main@delay& (0+255),b
   156  000126  0E00               	movlw	0
   157  000128  6FC9               	movwf	(main@delay+1)& (0+255),b
   158  00012A  0E00               	movlw	0
   159  00012C  6FCA               	movwf	(main@delay+2)& (0+255),b
   160  00012E  0E00               	movlw	0
   161  000130  6FCB               	movwf	(main@delay+3)& (0+255),b
   162                           
   163                           ;main.c: 173: for(delay=0;delay<100000;delay++);
   164  000132  0E00               	movlw	0
   165  000134  0100               	movlb	0	; () banked
   166  000136  6FC8               	movwf	main@delay& (0+255),b
   167  000138  0E00               	movlw	0
   168  00013A  6FC9               	movwf	(main@delay+1)& (0+255),b
   169  00013C  0E00               	movlw	0
   170  00013E  6FCA               	movwf	(main@delay+2)& (0+255),b
   171  000140  0E00               	movlw	0
   172  000142  6FCB               	movwf	(main@delay+3)& (0+255),b
   173  000144                     l1993:
   174                           
   175                           ; BSR set to: 0
   176  000144  0100               	movlb	0	; () banked
   177  000146  BFCB               	btfsc	(main@delay+3)& (0+255),7,b
   178  000148  D010               	goto	l1997
   179  00014A  0100               	movlb	0	; () banked
   180  00014C  51CB               	movf	(main@delay+3)& (0+255),w,b
   181  00014E  E116               	bnz	l1999
   182  000150  0EA0               	movlw	160
   183  000152  0100               	movlb	0	; () banked
   184  000154  5DC8               	subwf	main@delay& (0+255),w,b
   185  000156  0E86               	movlw	134
   186  000158  0100               	movlb	0	; () banked
   187  00015A  59C9               	subwfb	(main@delay+1)& (0+255),w,b
   188  00015C  0E01               	movlw	1
   189  00015E  0100               	movlb	0	; () banked
   190  000160  59CA               	subwfb	(main@delay+2)& (0+255),w,b
   191  000162  B0D8               	btfsc	status,0,c
   192  000164  D00B               	goto	l1999
   193  000166  D001               	goto	l1997
   194                           
   195                           ; BSR set to: 0
   196  000168  D009               	goto	l1999
   197  00016A                     l1997:
   198                           
   199                           ; BSR set to: 0
   200  00016A  0E01               	movlw	1
   201  00016C  0100               	movlb	0	; () banked
   202  00016E  27C8               	addwf	main@delay& (0+255),f,b
   203  000170  0E00               	movlw	0
   204  000172  23C9               	addwfc	(main@delay+1)& (0+255),f,b
   205  000174  23CA               	addwfc	(main@delay+2)& (0+255),f,b
   206  000176  23CB               	addwfc	(main@delay+3)& (0+255),f,b
   207  000178  D7E5               	goto	l1993
   208  00017A  D000               	goto	l1999
   209  00017C                     l1999:
   210                           
   211                           ; BSR set to: 0
   212                           ;main.c: 174: initialisation();
   213  00017C  ECBE  F007         	call	_initialisation	;wreg free
   214                           
   215                           ;main.c: 175: char msg[15]="";
   216  000180  EE20  F0CC         	lfsr	2,main@F19169
   217  000184  EE10  F0B1         	lfsr	1,main@msg
   218  000188  0E0E               	movlw	14
   219  00018A                     u1451:
   220  00018A  CFDB FFE3          	movff	plusw2,plusw1
   221  00018E  06E8               	decf	wreg,f,c
   222  000190  E2FC               	bc	u1451
   223                           
   224                           ;main.c: 177: char mode=0;
   225  000192  0E00               	movlw	0
   226  000194  0100               	movlb	0	; () banked
   227  000196  6FC7               	movwf	main@mode& (0+255),b
   228                           
   229                           ; BSR set to: 0
   230                           ;main.c: 178: char old_SWITCH1=0;
   231  000198  0E00               	movlw	0
   232  00019A  0100               	movlb	0	; () banked
   233  00019C  6FC6               	movwf	main@old_SWITCH1& (0+255),b
   234                           
   235                           ; BSR set to: 0
   236                           ;main.c: 184: unsigned int amplitude1=0;
   237  00019E  0E00               	movlw	0
   238  0001A0  0100               	movlb	0	; () banked
   239  0001A2  6FC1               	movwf	(main@amplitude1+1)& (0+255),b
   240  0001A4  0E00               	movlw	0
   241  0001A6  6FC0               	movwf	main@amplitude1& (0+255),b
   242                           
   243                           ; BSR set to: 0
   244                           ;main.c: 185: unsigned int amplitude2=0;
   245  0001A8  0E00               	movlw	0
   246  0001AA  0100               	movlb	0	; () banked
   247  0001AC  6FC3               	movwf	(main@amplitude2+1)& (0+255),b
   248  0001AE  0E00               	movlw	0
   249  0001B0  6FC2               	movwf	main@amplitude2& (0+255),b
   250                           
   251                           ; BSR set to: 0
   252                           ;main.c: 186: unsigned int amplitude3=0;
   253  0001B2  0E00               	movlw	0
   254  0001B4  0100               	movlb	0	; () banked
   255  0001B6  6FC5               	movwf	(main@amplitude3+1)& (0+255),b
   256  0001B8  0E00               	movlw	0
   257  0001BA  6FC4               	movwf	main@amplitude3& (0+255),b
   258  0001BC  D000               	goto	l2013
   259  0001BE                     l2013:
   260                           
   261                           ;main.c: 189: for(delay=0;delay<100;delay++);
   262  0001BE  0E00               	movlw	0
   263  0001C0  0100               	movlb	0	; () banked
   264  0001C2  6FC8               	movwf	main@delay& (0+255),b
   265  0001C4  0E00               	movlw	0
   266  0001C6  6FC9               	movwf	(main@delay+1)& (0+255),b
   267  0001C8  0E00               	movlw	0
   268  0001CA  6FCA               	movwf	(main@delay+2)& (0+255),b
   269  0001CC  0E00               	movlw	0
   270  0001CE  6FCB               	movwf	(main@delay+3)& (0+255),b
   271  0001D0                     l2015:
   272                           
   273                           ; BSR set to: 0
   274  0001D0  0100               	movlb	0	; () banked
   275  0001D2  BFCB               	btfsc	(main@delay+3)& (0+255),7,b
   276  0001D4  D00E               	goto	l2019
   277  0001D6  0100               	movlb	0	; () banked
   278  0001D8  51CB               	movf	(main@delay+3)& (0+255),w,b
   279  0001DA  0100               	movlb	0	; () banked
   280  0001DC  11CA               	iorwf	(main@delay+2)& (0+255),w,b
   281  0001DE  0100               	movlb	0	; () banked
   282  0001E0  11C9               	iorwf	(main@delay+1)& (0+255),w,b
   283  0001E2  E110               	bnz	l2021
   284  0001E4  0E64               	movlw	100
   285  0001E6  0100               	movlb	0	; () banked
   286  0001E8  5DC8               	subwf	main@delay& (0+255),w,b
   287  0001EA  B0D8               	btfsc	status,0,c
   288  0001EC  D00B               	goto	l2021
   289  0001EE  D001               	goto	l2019
   290                           
   291                           ; BSR set to: 0
   292  0001F0  D009               	goto	l2021
   293  0001F2                     l2019:
   294                           
   295                           ; BSR set to: 0
   296  0001F2  0E01               	movlw	1
   297  0001F4  0100               	movlb	0	; () banked
   298  0001F6  27C8               	addwf	main@delay& (0+255),f,b
   299  0001F8  0E00               	movlw	0
   300  0001FA  23C9               	addwfc	(main@delay+1)& (0+255),f,b
   301  0001FC  23CA               	addwfc	(main@delay+2)& (0+255),f,b
   302  0001FE  23CB               	addwfc	(main@delay+3)& (0+255),f,b
   303  000200  D7E7               	goto	l2015
   304  000202  D000               	goto	l2021
   305  000204                     l2021:
   306                           
   307                           ; BSR set to: 0
   308                           ;main.c: 191: amplitude1=readADC(1);
   309  000204  0E01               	movlw	1
   310  000206  ECD1  F006         	call	_readADC
   311  00020A  C071  F0C0         	movff	?_readADC,main@amplitude1
   312  00020E  C072  F0C1         	movff	?_readADC+1,main@amplitude1+1
   313                           
   314                           ;main.c: 192: amplitude2=readADC(2);
   315  000212  0E02               	movlw	2
   316  000214  ECD1  F006         	call	_readADC
   317  000218  C071  F0C2         	movff	?_readADC,main@amplitude2
   318  00021C  C072  F0C3         	movff	?_readADC+1,main@amplitude2+1
   319                           
   320                           ;main.c: 193: amplitude3=readADC(3);
   321  000220  0E03               	movlw	3
   322  000222  ECD1  F006         	call	_readADC
   323  000226  C071  F0C4         	movff	?_readADC,main@amplitude3
   324  00022A  C072  F0C5         	movff	?_readADC+1,main@amplitude3+1
   325                           
   326                           ;main.c: 196: if (RC0==0 && old_SWITCH1==1)
   327  00022E  B082               	btfsc	3970,0,c	;volatile
   328  000230  D00E               	goto	l232
   329  000232  0100               	movlb	0	; () banked
   330  000234  05C6               	decf	main@old_SWITCH1& (0+255),w,b
   331  000236  A4D8               	btfss	status,2,c
   332  000238  D00A               	goto	l232
   333                           
   334                           ; BSR set to: 0
   335                           ;main.c: 197: {
   336                           ;main.c: 198: mode=!mode;
   337  00023A  0100               	movlb	0	; () banked
   338  00023C  51C7               	movf	main@mode& (0+255),w,b
   339  00023E  0100               	movlb	0	; () banked
   340  000240  A4D8               	btfss	status,2,c
   341  000242  D002               	goto	u1500
   342  000244  0E01               	movlw	1
   343  000246  D001               	goto	u1510
   344  000248                     u1500:
   345  000248  0E00               	movlw	0
   346  00024A                     u1510:
   347  00024A  0100               	movlb	0	; () banked
   348  00024C  6FC7               	movwf	main@mode& (0+255),b
   349  00024E                     l232:
   350                           
   351                           ;main.c: 199: }
   352                           ;main.c: 200: old_SWITCH1=RC0;
   353  00024E  0E00               	movlw	0
   354  000250  B082               	btfsc	3970,0,c	;volatile
   355  000252  0E01               	movlw	1
   356  000254  0100               	movlb	0	; () banked
   357  000256  6FC6               	movwf	main@old_SWITCH1& (0+255),b
   358                           
   359                           ; BSR set to: 0
   360                           ;main.c: 202: if (mode==1)
   361  000258  0100               	movlb	0	; () banked
   362  00025A  05C7               	decf	main@mode& (0+255),w,b
   363  00025C  A4D8               	btfss	status,2,c
   364  00025E  D7AF               	goto	l2013
   365                           
   366                           ; BSR set to: 0
   367                           ;main.c: 203: {
   368                           ;main.c: 204: pwm('R',(int)( (float)R[0] * (float)amplitude1/65520.));
   369  000260  0EF0               	movlw	240
   370  000262  0100               	movlb	0	; () banked
   371  000264  6F8E               	movwf	___ftdiv@f2& (0+255),b
   372  000266  0E7F               	movlw	127
   373  000268  0100               	movlb	0	; () banked
   374  00026A  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   375  00026C  0E47               	movlw	71
   376  00026E  0100               	movlb	0	; () banked
   377  000270  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   378  000272  C0C0  F079         	movff	main@amplitude1,___lwtoft@c
   379  000276  C0C1  F07A         	movff	main@amplitude1+1,___lwtoft@c+1
   380  00027A  EC56  F007         	call	___lwtoft	;wreg free
   381  00027E  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   382  000282  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   383  000286  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   384  00028A  C100  F079         	movff	_R,___lwtoft@c
   385  00028E  C101  F07A         	movff	_R+1,___lwtoft@c+1
   386  000292  EC56  F007         	call	___lwtoft	;wreg free
   387  000296  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   388  00029A  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   389  00029E  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   390  0002A2  ECE1  F001         	call	___ftmul	;wreg free
   391  0002A6  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   392  0002AA  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   393  0002AE  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   394  0002B2  ECEB  F003         	call	___ftdiv	;wreg free
   395  0002B6  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   396  0002BA  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   397  0002BE  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   398  0002C2  EC42  F003         	call	___fttol	;wreg free
   399  0002C6  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   400  0002CA  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   401  0002CE  0E52               	movlw	82
   402  0002D0  ECF6  F005         	call	_pwm
   403                           
   404                           ;main.c: 205: pwm('G',(int)( (float)G[0] * (float)amplitude2/65520.));
   405  0002D4  0EF0               	movlw	240
   406  0002D6  0100               	movlb	0	; () banked
   407  0002D8  6F8E               	movwf	___ftdiv@f2& (0+255),b
   408  0002DA  0E7F               	movlw	127
   409  0002DC  0100               	movlb	0	; () banked
   410  0002DE  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   411  0002E0  0E47               	movlw	71
   412  0002E2  0100               	movlb	0	; () banked
   413  0002E4  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   414  0002E6  C0C2  F079         	movff	main@amplitude2,___lwtoft@c
   415  0002EA  C0C3  F07A         	movff	main@amplitude2+1,___lwtoft@c+1
   416  0002EE  EC56  F007         	call	___lwtoft	;wreg free
   417  0002F2  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   418  0002F6  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   419  0002FA  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   420  0002FE  C200  F079         	movff	_G,___lwtoft@c
   421  000302  C201  F07A         	movff	_G+1,___lwtoft@c+1
   422  000306  EC56  F007         	call	___lwtoft	;wreg free
   423  00030A  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   424  00030E  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   425  000312  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   426  000316  ECE1  F001         	call	___ftmul	;wreg free
   427  00031A  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   428  00031E  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   429  000322  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   430  000326  ECEB  F003         	call	___ftdiv	;wreg free
   431  00032A  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   432  00032E  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   433  000332  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   434  000336  EC42  F003         	call	___fttol	;wreg free
   435  00033A  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   436  00033E  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   437  000342  0E47               	movlw	71
   438  000344  ECF6  F005         	call	_pwm
   439                           
   440                           ;main.c: 206: pwm('B',(int)( (float)B[0] * (float)amplitude3/65520.));
   441  000348  0EF0               	movlw	240
   442  00034A  0100               	movlb	0	; () banked
   443  00034C  6F8E               	movwf	___ftdiv@f2& (0+255),b
   444  00034E  0E7F               	movlw	127
   445  000350  0100               	movlb	0	; () banked
   446  000352  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   447  000354  0E47               	movlw	71
   448  000356  0100               	movlb	0	; () banked
   449  000358  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   450  00035A  C0C4  F079         	movff	main@amplitude3,___lwtoft@c
   451  00035E  C0C5  F07A         	movff	main@amplitude3+1,___lwtoft@c+1
   452  000362  EC56  F007         	call	___lwtoft	;wreg free
   453  000366  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   454  00036A  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   455  00036E  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   456  000372  C300  F079         	movff	_B,___lwtoft@c
   457  000376  C301  F07A         	movff	_B+1,___lwtoft@c+1
   458  00037A  EC56  F007         	call	___lwtoft	;wreg free
   459  00037E  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   460  000382  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   461  000386  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   462  00038A  ECE1  F001         	call	___ftmul	;wreg free
   463  00038E  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   464  000392  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   465  000396  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   466  00039A  ECEB  F003         	call	___ftdiv	;wreg free
   467  00039E  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   468  0003A2  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   469  0003A6  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   470  0003AA  EC42  F003         	call	___fttol	;wreg free
   471  0003AE  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   472  0003B2  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   473  0003B6  0E42               	movlw	66
   474  0003B8  ECF6  F005         	call	_pwm
   475                           
   476                           ;main.c: 208: else
   477                           ;main.c: 209: {
   478                           
   479                           ;main.c: 207: }
   480  0003BC  D700               	goto	l2013
   481                           
   482                           ;main.c: 213: }
   483                           ;main.c: 214: }
   484                           ;main.c: 216: return (0);
   485                           ;	Return value of _main is never used
   486  0003BE  EF8E  F000         	goto	start
   487  0003C2                     __end_of_main:
   488                           	opt stack 0
   489                           wreg	equ	0xFE8
   490                           plusw1	equ	0xFE3
   491                           plusw2	equ	0xFDB
   492                           status	equ	0xFD8
   493                           
   494                           	psect	cinit
   495  000E66                     __pcinit:
   496                           	opt stack 0
   497  000E66                     start_initialization:
   498                           	opt stack 0
   499  000E66                     __initialization:
   500                           	opt stack 0
   501                           
   502                           ; Clear objects allocated to BANK3 (200 bytes)
   503  000E66  EE03  F000         	lfsr	0,__pbssBANK3
   504  000E6A  0EC8               	movlw	200
   505  000E6C                     clear_0:
   506  000E6C  6AEE               	clrf	postinc0,c
   507  000E6E  06E8               	decf	wreg,f,c
   508  000E70  E1FD               	bnz	clear_0
   509                           
   510                           ; Clear objects allocated to BANK2 (200 bytes)
   511  000E72  EE02  F000         	lfsr	0,__pbssBANK2
   512  000E76  0EC8               	movlw	200
   513  000E78                     clear_1:
   514  000E78  6AEE               	clrf	postinc0,c
   515  000E7A  06E8               	decf	wreg,f,c
   516  000E7C  E1FD               	bnz	clear_1
   517                           
   518                           ; Clear objects allocated to BANK1 (200 bytes)
   519  000E7E  EE01  F000         	lfsr	0,__pbssBANK1
   520  000E82  0EC8               	movlw	200
   521  000E84                     clear_2:
   522  000E84  6AEE               	clrf	postinc0,c
   523  000E86  06E8               	decf	wreg,f,c
   524  000E88  E1FD               	bnz	clear_2
   525                           
   526                           ; Clear objects allocated to BANK0 (15 bytes)
   527  000E8A  EE00  F0CC         	lfsr	0,__pbssBANK0
   528  000E8E  0E0F               	movlw	15
   529  000E90                     clear_3:
   530  000E90  6AEE               	clrf	postinc0,c
   531  000E92  06E8               	decf	wreg,f,c
   532  000E94  E1FD               	bnz	clear_3
   533                           
   534                           ; Clear objects allocated to COMRAM (24 bytes)
   535  000E96  EE00  F029         	lfsr	0,__pbssCOMRAM
   536  000E9A  0E18               	movlw	24
   537  000E9C                     clear_4:
   538  000E9C  6AEE               	clrf	postinc0,c
   539  000E9E  06E8               	decf	wreg,f,c
   540  000EA0  E1FD               	bnz	clear_4
   541  000EA2                     end_of_initialization:
   542                           	opt stack 0
   543  000EA2                     __end_of__initialization:
   544                           	opt stack 0
   545  000EA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   546  000EA4  6EF8               	movwf	tblptru,c
   547  000EA6  0100               	movlb	0
   548  000EA8  EF90  F000         	goto	_main	;jump to C main() function
   549                           tblptru	equ	0xFF8
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           plusw1	equ	0xFE3
   553                           plusw2	equ	0xFDB
   554                           status	equ	0xFD8
   555                           
   556                           	psect	bssCOMRAM
   557  000029                     __pbssCOMRAM:
   558                           	opt stack 0
   559  000029                     RX2_ISR@F19163:
   560                           	opt stack 0
   561  000029                     	ds	2
   562  00002B                     _millis:
   563                           	opt stack 0
   564  00002B                     	ds	2
   565  00002D                     RX2_ISR@compteur:
   566                           	opt stack 0
   567  00002D                     	ds	1
   568  00002E                     _beginB:
   569                           	opt stack 0
   570  00002E                     	ds	1
   571  00002F                     _beginG:
   572                           	opt stack 0
   573  00002F                     	ds	1
   574  000030                     _beginR:
   575                           	opt stack 0
   576  000030                     	ds	1
   577  000031                     RX2_ISR@buffer:
   578                           	opt stack 0
   579  000031                     	ds	16
   580                           tblptru	equ	0xFF8
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           plusw1	equ	0xFE3
   584                           plusw2	equ	0xFDB
   585                           status	equ	0xFD8
   586                           
   587                           	psect	bssBANK0
   588  0000CC                     __pbssBANK0:
   589                           	opt stack 0
   590  0000CC                     main@F19169:
   591                           	opt stack 0
   592  0000CC                     	ds	15
   593                           tblptru	equ	0xFF8
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           plusw1	equ	0xFE3
   597                           plusw2	equ	0xFDB
   598                           status	equ	0xFD8
   599                           
   600                           	psect	bssBANK1
   601  000100                     __pbssBANK1:
   602                           	opt stack 0
   603  000100                     _R:
   604                           	opt stack 0
   605  000100                     	ds	200
   606                           tblptru	equ	0xFF8
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           plusw1	equ	0xFE3
   610                           plusw2	equ	0xFDB
   611                           status	equ	0xFD8
   612                           
   613                           	psect	bssBANK2
   614  000200                     __pbssBANK2:
   615                           	opt stack 0
   616  000200                     _G:
   617                           	opt stack 0
   618  000200                     	ds	200
   619                           tblptru	equ	0xFF8
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           plusw1	equ	0xFE3
   623                           plusw2	equ	0xFDB
   624                           status	equ	0xFD8
   625                           
   626                           	psect	bssBANK3
   627  000300                     __pbssBANK3:
   628                           	opt stack 0
   629  000300                     _B:
   630                           	opt stack 0
   631  000300                     	ds	200
   632                           tblptru	equ	0xFF8
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           plusw1	equ	0xFE3
   636                           plusw2	equ	0xFDB
   637                           status	equ	0xFD8
   638                           
   639                           	psect	cstackBANK0
   640  000060                     __pcstackBANK0:
   641                           	opt stack 0
   642  000060                     ??_Timer0_ISR:
   643                           
   644                           ; 0 bytes @ 0x0
   645  000060                     	ds	17
   646  000071                     ?_readADC:
   647                           	opt stack 0
   648  000071                     ?___awdiv:
   649                           	opt stack 0
   650  000071                     ?___ftpack:
   651                           	opt stack 0
   652  000071                     ___awdiv@dividend:
   653                           	opt stack 0
   654  000071                     ___ftpack@arg:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x11
   658  000071                     	ds	2
   659  000073                     ??_readADC:
   660  000073                     ___awdiv@divisor:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x13
   664  000073                     	ds	1
   665  000074                     ___ftpack@exp:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x14
   669  000074                     	ds	1
   670  000075                     readADC@channel:
   671                           	opt stack 0
   672  000075                     ___awdiv@counter:
   673                           	opt stack 0
   674  000075                     ___ftpack@sign:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x15
   678  000075                     	ds	1
   679  000076                     ??___ftpack:
   680  000076                     readADC@tempo:
   681                           	opt stack 0
   682  000076                     ___awdiv@sign:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x16
   686  000076                     	ds	1
   687  000077                     ___awdiv@quotient:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x17
   691  000077                     	ds	2
   692  000079                     ?___lwtoft:
   693                           	opt stack 0
   694  000079                     ___lwtoft@c:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x19
   698  000079                     	ds	3
   699  00007C                     ?___ftmul:
   700                           	opt stack 0
   701  00007C                     ___ftmul@f1:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x1C
   705  00007C                     	ds	3
   706  00007F                     ___ftmul@f2:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x1F
   710  00007F                     	ds	3
   711  000082                     ??___ftmul:
   712                           
   713                           ; 0 bytes @ 0x22
   714  000082                     	ds	3
   715  000085                     ___ftmul@exp:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x25
   719  000085                     	ds	1
   720  000086                     ___ftmul@f3_as_product:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x26
   724  000086                     	ds	3
   725  000089                     ___ftmul@cntr:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x29
   729  000089                     	ds	1
   730  00008A                     ___ftmul@sign:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x2A
   734  00008A                     	ds	1
   735  00008B                     ?___ftdiv:
   736                           	opt stack 0
   737  00008B                     ___ftdiv@f1:
   738                           	opt stack 0
   739                           
   740                           ; 3 bytes @ 0x2B
   741  00008B                     	ds	3
   742  00008E                     ___ftdiv@f2:
   743                           	opt stack 0
   744                           
   745                           ; 3 bytes @ 0x2E
   746  00008E                     	ds	3
   747  000091                     ??___ftdiv:
   748                           
   749                           ; 0 bytes @ 0x31
   750  000091                     	ds	3
   751  000094                     ___ftdiv@cntr:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x34
   755  000094                     	ds	1
   756  000095                     ___ftdiv@f3:
   757                           	opt stack 0
   758                           
   759                           ; 3 bytes @ 0x35
   760  000095                     	ds	3
   761  000098                     ___ftdiv@exp:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x38
   765  000098                     	ds	1
   766  000099                     ___ftdiv@sign:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x39
   770  000099                     	ds	1
   771  00009A                     ?___fttol:
   772                           	opt stack 0
   773  00009A                     ___fttol@f1:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x3A
   777  00009A                     	ds	4
   778  00009E                     ??___fttol:
   779                           
   780                           ; 0 bytes @ 0x3E
   781  00009E                     	ds	5
   782  0000A3                     ___fttol@sign1:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x43
   786  0000A3                     	ds	1
   787  0000A4                     ___fttol@lval:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x44
   791  0000A4                     	ds	4
   792  0000A8                     ___fttol@exp1:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x48
   796  0000A8                     	ds	1
   797  0000A9                     pwm@dutycycle:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x49
   801  0000A9                     	ds	2
   802  0000AB                     pwm@color:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x4B
   806  0000AB                     	ds	1
   807  0000AC                     
   808                           ; 2 bytes @ 0x4C
   809  0000AC                     	ds	2
   810  0000AE                     
   811                           ; 3 bytes @ 0x4E
   812  0000AE                     	ds	3
   813  0000B1                     main@msg:
   814                           	opt stack 0
   815                           
   816                           ; 15 bytes @ 0x51
   817  0000B1                     	ds	15
   818  0000C0                     main@amplitude1:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x60
   822  0000C0                     	ds	2
   823  0000C2                     main@amplitude2:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x62
   827  0000C2                     	ds	2
   828  0000C4                     main@amplitude3:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x64
   832  0000C4                     	ds	2
   833  0000C6                     main@old_SWITCH1:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x66
   837  0000C6                     	ds	1
   838  0000C7                     main@mode:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x67
   842  0000C7                     	ds	1
   843  0000C8                     main@delay:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x68
   847  0000C8                     	ds	4
   848                           tblptru	equ	0xFF8
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           plusw1	equ	0xFE3
   852                           plusw2	equ	0xFDB
   853                           status	equ	0xFD8
   854                           
   855                           	psect	cstackCOMRAM
   856  000001                     __pcstackCOMRAM:
   857                           	opt stack 0
   858  000001                     ??_isdigit:
   859  000001                     ?___wmul:
   860                           	opt stack 0
   861  000001                     ___wmul@multiplier:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x0
   865  000001                     	ds	1
   866  000002                     _isdigit$859:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x1
   870  000002                     	ds	1
   871  000003                     isdigit@c:
   872                           	opt stack 0
   873  000003                     ___wmul@multiplicand:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x2
   877  000003                     	ds	2
   878  000005                     ___wmul@product:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x4
   882  000005                     	ds	2
   883  000007                     ?_atoi:
   884                           	opt stack 0
   885  000007                     atoi@s:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x6
   889  000007                     	ds	2
   890  000009                     ??_atoi:
   891                           
   892                           ; 0 bytes @ 0x8
   893  000009                     	ds	2
   894  00000B                     atoi@sign:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0xA
   898  00000B                     	ds	1
   899  00000C                     atoi@a:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xB
   903  00000C                     	ds	2
   904  00000E                     ??_RX2_ISR:
   905                           
   906                           ; 0 bytes @ 0xD
   907  00000E                     	ds	14
   908  00001C                     RX2_ISR@input:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x1B
   912  00001C                     	ds	2
   913  00001E                     ?i1___awdiv:
   914                           	opt stack 0
   915  00001E                     i1___awdiv@dividend:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919  00001E                     	ds	2
   920  000020                     i1___awdiv@divisor:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x1F
   924  000020                     	ds	2
   925  000022                     i1___awdiv@counter:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x21
   929  000022                     	ds	1
   930  000023                     i1___awdiv@sign:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x22
   934  000023                     	ds	1
   935  000024                     i1___awdiv@quotient:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x23
   939  000024                     	ds	2
   940  000026                     i1pwm@dutycycle:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x25
   944  000026                     	ds	2
   945  000028                     i1pwm@color:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x27
   949  000028                     	ds	1
   950                           tblptru	equ	0xFF8
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           plusw1	equ	0xFE3
   954                           plusw2	equ	0xFDB
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _readADC *****************
   958 ;; Defined at:
   959 ;;		line 230 in file "main.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  channel         1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  channel         1   21[BANK0 ] unsigned char 
   964 ;;  tempo           1   22[BANK0 ] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2   17[BANK0 ] unsigned int 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;Total ram usage:        6 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    6
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text1
   989  000DA2                     __ptext1:
   990                           	opt stack 0
   991  000DA2                     _readADC:
   992                           	opt stack 24
   993                           
   994                           ;incstack = 0
   995                           ;readADC@channel stored from wreg
   996  000DA2  0100               	movlb	0	; () banked
   997  000DA4  6F75               	movwf	readADC@channel& (0+255),b
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 232: char tempo=0;
  1001  000DA6  0E00               	movlw	0
  1002  000DA8  0100               	movlb	0	; () banked
  1003  000DAA  6F76               	movwf	readADC@tempo& (0+255),b
  1004                           
  1005                           ;main.c: 233: switch (channel)
  1006  000DAC  D008               	goto	l1723
  1007  000DAE                     l250:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 236: {
  1011                           ;main.c: 237: CHS1=0;
  1012  000DAE  96C2               	bcf	4034,3,c	;volatile
  1013  000DB0  D004               	goto	L1
  1014  000DB2                     l252:
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;main.c: 242: {
  1018                           ;main.c: 243: CHS1=1;
  1019  000DB2  86C2               	bsf	4034,3,c	;volatile
  1020                           
  1021                           ;main.c: 244: CHS0=0;
  1022  000DB4  94C2               	bcf	4034,2,c	;volatile
  1023                           
  1024                           ;main.c: 245: break;
  1025  000DB6  D00F               	goto	l1725
  1026  000DB8                     l253:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 248: {
  1030                           ;main.c: 249: CHS1=1;
  1031  000DB8  86C2               	bsf	4034,3,c	;volatile
  1032  000DBA                     L1:
  1033                           
  1034                           ;main.c: 250: CHS0=1;
  1035  000DBA  84C2               	bsf	4034,2,c	;volatile
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 252: }
  1039                           ;main.c: 253: }
  1040                           
  1041                           ;main.c: 251: break;
  1042  000DBC  D00C               	goto	l1725
  1043  000DBE                     l1723:
  1044                           
  1045                           ; BSR set to: 0
  1046  000DBE  0100               	movlb	0	; () banked
  1047  000DC0  5175               	movf	readADC@channel& (0+255),w,b
  1048                           
  1049                           ; Switch size 1, requested type "space"
  1050                           ; Number of cases is 3, Range of values is 1 to 3
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte           10     6 (average)
  1054                           ;	Chosen strategy is simple_byte
  1055  000DC2  0A01               	xorlw	1	; case 1
  1056  000DC4  B4D8               	btfsc	status,2,c
  1057  000DC6  D7F3               	goto	l250
  1058  000DC8  0A03               	xorlw	3	; case 2
  1059  000DCA  B4D8               	btfsc	status,2,c
  1060  000DCC  D7F2               	goto	l252
  1061  000DCE  0A01               	xorlw	1	; case 3
  1062  000DD0  B4D8               	btfsc	status,2,c
  1063  000DD2  D7F2               	goto	l253
  1064  000DD4  D000               	goto	l1725
  1065  000DD6                     l1725:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 254: for(tempo=0;tempo<100;tempo++);
  1069  000DD6  0E00               	movlw	0
  1070  000DD8  0100               	movlb	0	; () banked
  1071  000DDA  6F76               	movwf	readADC@tempo& (0+255),b
  1072  000DDC  D003               	goto	l1733
  1073                           
  1074                           ; BSR set to: 0
  1075                           
  1076                           ; BSR set to: 0
  1077  000DDE  D006               	goto	l255
  1078  000DE0                     l1731:
  1079                           
  1080                           ; BSR set to: 0
  1081  000DE0  0100               	movlb	0	; () banked
  1082  000DE2  2B76               	incf	readADC@tempo& (0+255),f,b
  1083  000DE4                     l1733:
  1084                           
  1085                           ; BSR set to: 0
  1086  000DE4  0E63               	movlw	99
  1087  000DE6  0100               	movlb	0	; () banked
  1088  000DE8  6576               	cpfsgt	readADC@tempo& (0+255),b
  1089  000DEA  D7FA               	goto	l1731
  1090  000DEC                     l255:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 255: GO_nDONE = 1;
  1094  000DEC  82C2               	bsf	4034,1,c	;volatile
  1095                           
  1096                           ;main.c: 256: while(GO_nDONE);
  1097  000DEE  D000               	goto	l256
  1098  000DF0                     l256:
  1099                           
  1100                           ; BSR set to: 0
  1101  000DF0  B2C2               	btfsc	4034,1,c	;volatile
  1102  000DF2  D7FE               	goto	l256
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 258: return ((ADRESH<<8)+ADRESL);
  1106                           
  1107                           ; BSR set to: 0
  1108  000DF4  50C4               	movf	4036,w,c	;volatile
  1109  000DF6  0100               	movlb	0	; () banked
  1110  000DF8  6F74               	movwf	(??_readADC+1)& (0+255),b
  1111  000DFA  6B73               	clrf	??_readADC& (0+255),b
  1112  000DFC  50C3               	movf	4035,w,c	;volatile
  1113  000DFE  0100               	movlb	0	; () banked
  1114  000E00  2573               	addwf	??_readADC& (0+255),w,b
  1115  000E02  0100               	movlb	0	; () banked
  1116  000E04  6F71               	movwf	?_readADC& (0+255),b
  1117  000E06  0E00               	movlw	0
  1118  000E08  0100               	movlb	0	; () banked
  1119  000E0A  2174               	addwfc	(??_readADC+1)& (0+255),w,b
  1120  000E0C  0100               	movlb	0	; () banked
  1121  000E0E  6F72               	movwf	(?_readADC+1)& (0+255),b
  1122  000E10  0012               	return	
  1123                           
  1124                           ; BSR set to: 0
  1125                           
  1126                           ; BSR set to: 0
  1127  000E12  0012               	return		;funcret
  1128  000E14                     __end_of_readADC:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           plusw1	equ	0xFE3
  1134                           plusw2	equ	0xFDB
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function _pwm *****************
  1138 ;; Defined at:
  1139 ;;		line 8 in file "converter.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  color           1    wreg     unsigned char 
  1142 ;;  dutycycle       2   73[BANK0 ] int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  color           1   75[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;Total ram usage:        3 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    7
  1161 ;; This function calls:
  1162 ;;		___awdiv
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text2
  1169  000BEC                     __ptext2:
  1170                           	opt stack 0
  1171  000BEC                     _pwm:
  1172                           	opt stack 23
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;incstack = 0
  1176                           ;pwm@color stored from wreg
  1177  000BEC  0100               	movlb	0	; () banked
  1178  000BEE  6FAB               	movwf	pwm@color& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;converter.c: 9: switch(color){
  1182  000BF0  D03C               	goto	l1681
  1183  000BF2                     l1661:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1187  000BF2  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1188  000BF6  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1189  000BFA  0E00               	movlw	0
  1190  000BFC  0100               	movlb	0	; () banked
  1191  000BFE  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1192  000C00  0E04               	movlw	4
  1193  000C02  6F73               	movwf	___awdiv@divisor& (0+255),b
  1194  000C04  EC8E  F005         	call	___awdiv	;wreg free
  1195  000C08  0100               	movlb	0	; () banked
  1196  000C0A  5171               	movf	?___awdiv& (0+255),w,b
  1197  000C0C  010F               	movlb	15	; () banked
  1198  000C0E  6F51               	movwf	81,b	;volatile
  1199                           
  1200                           ; BSR set to: 15
  1201                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1202  000C10  010F               	movlb	15	; () banked
  1203  000C12  9B50               	bcf	80,5,b	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;converter.c: 13: DC2B0=dutycycle%1;
  1207  000C14  010F               	movlb	15	; () banked
  1208  000C16  9950               	bcf	80,4,b	;volatile
  1209                           
  1210                           ;converter.c: 14: break;
  1211  000C18  0012               	return	
  1212  000C1A                     l1667:
  1213                           
  1214                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1215  000C1A  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1216  000C1E  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1217  000C22  0E00               	movlw	0
  1218  000C24  0100               	movlb	0	; () banked
  1219  000C26  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1220  000C28  0E04               	movlw	4
  1221  000C2A  6F73               	movwf	___awdiv@divisor& (0+255),b
  1222  000C2C  EC8E  F005         	call	___awdiv	;wreg free
  1223  000C30  0100               	movlb	0	; () banked
  1224  000C32  5171               	movf	?___awdiv& (0+255),w,b
  1225  000C34  010F               	movlb	15	; () banked
  1226  000C36  6F4E               	movwf	78,b	;volatile
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1230  000C38  010F               	movlb	15	; () banked
  1231  000C3A  9B4D               	bcf	77,5,b	;volatile
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;converter.c: 18: DC3B0=0;
  1235  000C3C  010F               	movlb	15	; () banked
  1236  000C3E  994D               	bcf	77,4,b	;volatile
  1237                           
  1238                           ;converter.c: 19: break;
  1239  000C40  0012               	return	
  1240  000C42                     l1673:
  1241                           
  1242                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1243  000C42  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1244  000C46  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1245  000C4A  0E00               	movlw	0
  1246  000C4C  0100               	movlb	0	; () banked
  1247  000C4E  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1248  000C50  0E04               	movlw	4
  1249  000C52  6F73               	movwf	___awdiv@divisor& (0+255),b
  1250  000C54  EC8E  F005         	call	___awdiv	;wreg free
  1251  000C58  0100               	movlb	0	; () banked
  1252  000C5A  5171               	movf	?___awdiv& (0+255),w,b
  1253  000C5C  010F               	movlb	15	; () banked
  1254  000C5E  6F4B               	movwf	75,b	;volatile
  1255                           
  1256                           ; BSR set to: 15
  1257                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1258  000C60  010F               	movlb	15	; () banked
  1259  000C62  9B4A               	bcf	74,5,b	;volatile
  1260                           
  1261                           ; BSR set to: 15
  1262                           ;converter.c: 23: DC4B0=dutycycle%1;
  1263  000C64  010F               	movlb	15	; () banked
  1264  000C66  994A               	bcf	74,4,b	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;converter.c: 25: }
  1268                           
  1269                           ;converter.c: 24: break;
  1270  000C68  0012               	return	
  1271  000C6A                     l1681:
  1272  000C6A  0100               	movlb	0	; () banked
  1273  000C6C  51AB               	movf	pwm@color& (0+255),w,b
  1274                           
  1275                           ; Switch size 1, requested type "space"
  1276                           ; Number of cases is 3, Range of values is 66 to 82
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte           10     6 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281  000C6E  0A42               	xorlw	66	; case 66
  1282  000C70  B4D8               	btfsc	status,2,c
  1283  000C72  D7BF               	goto	l1661
  1284  000C74  0A05               	xorlw	5	; case 71
  1285  000C76  B4D8               	btfsc	status,2,c
  1286  000C78  D7E4               	goto	l1673
  1287  000C7A  0A15               	xorlw	21	; case 82
  1288  000C7C  A4D8               	btfss	status,2,c
  1289  000C7E  0012               	return	
  1290  000C80  D7CC               	goto	l1667
  1291                           
  1292                           ; BSR set to: 0
  1293  000C82  0012               	return		;funcret
  1294  000C84                     __end_of_pwm:
  1295                           	opt stack 0
  1296                           tblptru	equ	0xFF8
  1297                           postinc0	equ	0xFEE
  1298                           wreg	equ	0xFE8
  1299                           plusw1	equ	0xFE3
  1300                           plusw2	equ	0xFDB
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function ___awdiv *****************
  1304 ;; Defined at:
  1305 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  dividend        2   17[BANK0 ] int 
  1308 ;;  divisor         2   19[BANK0 ] int 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  quotient        2   23[BANK0 ] int 
  1311 ;;  sign            1   22[BANK0 ] unsigned char 
  1312 ;;  counter         1   21[BANK0 ] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  2   17[BANK0 ] int 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;Total ram usage:        8 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    6
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_pwm
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337  000B1C                     __ptext3:
  1338                           	opt stack 0
  1339  000B1C                     ___awdiv:
  1340                           	opt stack 23
  1341                           
  1342                           ;incstack = 0
  1343  000B1C  0E00               	movlw	0
  1344  000B1E  0100               	movlb	0	; () banked
  1345  000B20  6F76               	movwf	___awdiv@sign& (0+255),b
  1346                           
  1347                           ; BSR set to: 0
  1348  000B22  0100               	movlb	0	; () banked
  1349  000B24  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1350  000B26  D009               	goto	l1579
  1351                           
  1352                           ; BSR set to: 0
  1353  000B28  0100               	movlb	0	; () banked
  1354  000B2A  6D73               	negf	___awdiv@divisor& (0+255),b
  1355  000B2C  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1356  000B2E  B0D8               	btfsc	status,0,c
  1357  000B30  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1358                           
  1359                           ; BSR set to: 0
  1360  000B32  0E01               	movlw	1
  1361  000B34  0100               	movlb	0	; () banked
  1362  000B36  6F76               	movwf	___awdiv@sign& (0+255),b
  1363  000B38  D000               	goto	l1579
  1364  000B3A                     l1579:
  1365                           
  1366                           ; BSR set to: 0
  1367  000B3A  0100               	movlb	0	; () banked
  1368  000B3C  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1369  000B3E  D009               	goto	l1585
  1370                           
  1371                           ; BSR set to: 0
  1372  000B40  0100               	movlb	0	; () banked
  1373  000B42  6D71               	negf	___awdiv@dividend& (0+255),b
  1374  000B44  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1375  000B46  B0D8               	btfsc	status,0,c
  1376  000B48  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1377                           
  1378                           ; BSR set to: 0
  1379  000B4A  0E01               	movlw	1
  1380  000B4C  0100               	movlb	0	; () banked
  1381  000B4E  1B76               	xorwf	___awdiv@sign& (0+255),f,b
  1382  000B50  D000               	goto	l1585
  1383  000B52                     l1585:
  1384                           
  1385                           ; BSR set to: 0
  1386  000B52  0E00               	movlw	0
  1387  000B54  0100               	movlb	0	; () banked
  1388  000B56  6F78               	movwf	(___awdiv@quotient+1)& (0+255),b
  1389  000B58  0E00               	movlw	0
  1390  000B5A  6F77               	movwf	___awdiv@quotient& (0+255),b
  1391                           
  1392                           ; BSR set to: 0
  1393  000B5C  0100               	movlb	0	; () banked
  1394  000B5E  5173               	movf	___awdiv@divisor& (0+255),w,b
  1395  000B60  0100               	movlb	0	; () banked
  1396  000B62  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1397  000B64  B4D8               	btfsc	status,2,c
  1398  000B66  D031               	goto	l1607
  1399                           
  1400                           ; BSR set to: 0
  1401  000B68  0E01               	movlw	1
  1402  000B6A  0100               	movlb	0	; () banked
  1403  000B6C  6F75               	movwf	___awdiv@counter& (0+255),b
  1404  000B6E  D007               	goto	l1593
  1405  000B70                     l1591:
  1406                           
  1407                           ; BSR set to: 0
  1408  000B70  0100               	movlb	0	; () banked
  1409  000B72  90D8               	bcf	status,0,c
  1410  000B74  3773               	rlcf	___awdiv@divisor& (0+255),f,b
  1411  000B76  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1412  000B78  0100               	movlb	0	; () banked
  1413  000B7A  2B75               	incf	___awdiv@counter& (0+255),f,b
  1414  000B7C  D000               	goto	l1593
  1415  000B7E                     l1593:
  1416                           
  1417                           ; BSR set to: 0
  1418  000B7E  0100               	movlb	0	; () banked
  1419  000B80  BF74               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1420  000B82  D002               	goto	l1595
  1421  000B84  D7F5               	goto	l1591
  1422                           
  1423                           ; BSR set to: 0
  1424  000B86  D000               	goto	l1595
  1425  000B88                     l1595:
  1426                           
  1427                           ; BSR set to: 0
  1428  000B88  0100               	movlb	0	; () banked
  1429  000B8A  90D8               	bcf	status,0,c
  1430  000B8C  3777               	rlcf	___awdiv@quotient& (0+255),f,b
  1431  000B8E  3778               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1432                           
  1433                           ; BSR set to: 0
  1434  000B90  0100               	movlb	0	; () banked
  1435  000B92  5173               	movf	___awdiv@divisor& (0+255),w,b
  1436  000B94  0100               	movlb	0	; () banked
  1437  000B96  5D71               	subwf	___awdiv@dividend& (0+255),w,b
  1438  000B98  0100               	movlb	0	; () banked
  1439  000B9A  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1440  000B9C  0100               	movlb	0	; () banked
  1441  000B9E  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1442  000BA0  A0D8               	btfss	status,0,c
  1443  000BA2  D00B               	goto	l1603
  1444                           
  1445                           ; BSR set to: 0
  1446  000BA4  0100               	movlb	0	; () banked
  1447  000BA6  5173               	movf	___awdiv@divisor& (0+255),w,b
  1448  000BA8  0100               	movlb	0	; () banked
  1449  000BAA  5F71               	subwf	___awdiv@dividend& (0+255),f,b
  1450  000BAC  0100               	movlb	0	; () banked
  1451  000BAE  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1452  000BB0  0100               	movlb	0	; () banked
  1453  000BB2  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1454                           
  1455                           ; BSR set to: 0
  1456  000BB4  0100               	movlb	0	; () banked
  1457  000BB6  8177               	bsf	___awdiv@quotient& (0+255),0,b
  1458  000BB8  D000               	goto	l1603
  1459  000BBA                     l1603:
  1460                           
  1461                           ; BSR set to: 0
  1462  000BBA  0100               	movlb	0	; () banked
  1463  000BBC  90D8               	bcf	status,0,c
  1464  000BBE  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1465  000BC0  3373               	rrcf	___awdiv@divisor& (0+255),f,b
  1466                           
  1467                           ; BSR set to: 0
  1468  000BC2  0100               	movlb	0	; () banked
  1469  000BC4  2F75               	decfsz	___awdiv@counter& (0+255),f,b
  1470  000BC6  D7E0               	goto	l1595
  1471                           
  1472                           ; BSR set to: 0
  1473  000BC8  D000               	goto	l1607
  1474  000BCA                     l1607:
  1475                           
  1476                           ; BSR set to: 0
  1477  000BCA  0100               	movlb	0	; () banked
  1478  000BCC  5176               	movf	___awdiv@sign& (0+255),w,b
  1479  000BCE  0100               	movlb	0	; () banked
  1480  000BD0  B4D8               	btfsc	status,2,c
  1481  000BD2  D006               	goto	l1611
  1482                           
  1483                           ; BSR set to: 0
  1484  000BD4  0100               	movlb	0	; () banked
  1485  000BD6  6D77               	negf	___awdiv@quotient& (0+255),b
  1486  000BD8  1F78               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1487  000BDA  B0D8               	btfsc	status,0,c
  1488  000BDC  2B78               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1489  000BDE  D000               	goto	l1611
  1490  000BE0                     l1611:
  1491                           
  1492                           ; BSR set to: 0
  1493  000BE0  C077  F071         	movff	___awdiv@quotient,?___awdiv
  1494  000BE4  C078  F072         	movff	___awdiv@quotient+1,?___awdiv+1
  1495  000BE8  0012               	return	
  1496                           
  1497                           ; BSR set to: 0
  1498                           
  1499                           ; BSR set to: 0
  1500  000BEA  0012               	return		;funcret
  1501  000BEC                     __end_of___awdiv:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           plusw1	equ	0xFE3
  1507                           plusw2	equ	0xFDB
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _initialisation *****************
  1511 ;; Defined at:
  1512 ;;		line 6 in file "init.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    7
  1533 ;; This function calls:
  1534 ;;		_initADC
  1535 ;;		_initComms
  1536 ;;		_initPWM
  1537 ;;		_initTimer0
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text4
  1544  000F7C                     __ptext4:
  1545                           	opt stack 0
  1546  000F7C                     _initialisation:
  1547                           	opt stack 23
  1548                           
  1549                           ;init.c: 10: initPWM();
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;incstack = 0
  1553  000F7C  EC0A  F007         	call	_initPWM	;wreg free
  1554                           
  1555                           ;init.c: 14: initComms();
  1556  000F80  EC6C  F007         	call	_initComms	;wreg free
  1557                           
  1558                           ;init.c: 18: initADC();
  1559  000F84  ECA5  F007         	call	_initADC	;wreg free
  1560                           
  1561                           ;init.c: 22: initTimer0();
  1562  000F88  ECB3  F007         	call	_initTimer0	;wreg free
  1563  000F8C  0012               	return		;funcret
  1564  000F8E                     __end_of_initialisation:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           plusw1	equ	0xFE3
  1570                           plusw2	equ	0xFDB
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _initTimer0 *****************
  1574 ;; Defined at:
  1575 ;;		line 117 in file "init.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		None
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    6
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_initialisation
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text5
  1604  000F66                     __ptext5:
  1605                           	opt stack 0
  1606  000F66                     _initTimer0:
  1607                           	opt stack 23
  1608                           
  1609                           ;init.c: 120: T0PS2 = 0;
  1610                           
  1611                           ;incstack = 0
  1612  000F66  94D5               	bcf	4053,2,c	;volatile
  1613                           
  1614                           ;init.c: 121: T0PS1 = 1;
  1615  000F68  82D5               	bsf	4053,1,c	;volatile
  1616                           
  1617                           ;init.c: 122: T0PS0 = 0;
  1618  000F6A  90D5               	bcf	4053,0,c	;volatile
  1619                           
  1620                           ;init.c: 123: PSA = 0;
  1621  000F6C  96D5               	bcf	4053,3,c	;volatile
  1622                           
  1623                           ;init.c: 124: T0CS = 0;
  1624  000F6E  9AD5               	bcf	4053,5,c	;volatile
  1625                           
  1626                           ;init.c: 125: T08BIT = 1;
  1627  000F70  8CD5               	bsf	4053,6,c	;volatile
  1628                           
  1629                           ;init.c: 126: TMR0IP = 0;
  1630  000F72  94F1               	bcf	intcon2,2,c	;volatile
  1631                           
  1632                           ;init.c: 127: TMR0IE = 1;
  1633  000F74  8AF2               	bsf	intcon,5,c	;volatile
  1634                           
  1635                           ;init.c: 128: PEIE = 1;
  1636  000F76  8CF2               	bsf	intcon,6,c	;volatile
  1637                           
  1638                           ;init.c: 129: GIE = 1;
  1639  000F78  8EF2               	bsf	intcon,7,c	;volatile
  1640  000F7A  0012               	return		;funcret
  1641  000F7C                     __end_of_initTimer0:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           intcon	equ	0xFF2
  1645                           intcon2	equ	0xFF1
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           plusw1	equ	0xFE3
  1649                           plusw2	equ	0xFDB
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _initPWM *****************
  1653 ;; Defined at:
  1654 ;;		line 27 in file "init.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    6
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_initialisation
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  000E14                     __ptext6:
  1684                           	opt stack 0
  1685  000E14                     _initPWM:
  1686                           	opt stack 23
  1687                           
  1688                           ;init.c: 32: PR2=0xFF;
  1689                           
  1690                           ;incstack = 0
  1691  000E14  68CB               	setf	4043,c	;volatile
  1692                           
  1693                           ;init.c: 36: CCPR2L=0b00000000;
  1694  000E16  0E00               	movlw	0
  1695  000E18  010F               	movlb	15	; () banked
  1696  000E1A  6F51               	movwf	81,b	;volatile
  1697                           
  1698                           ;init.c: 37: CCPR3L=0b00000000;
  1699  000E1C  0E00               	movlw	0
  1700  000E1E  010F               	movlb	15	; () banked
  1701  000E20  6F4E               	movwf	78,b	;volatile
  1702                           
  1703                           ;init.c: 38: CCPR4L=0b00000000;
  1704  000E22  0E00               	movlw	0
  1705  000E24  010F               	movlb	15	; () banked
  1706  000E26  6F4B               	movwf	75,b	;volatile
  1707                           
  1708                           ; BSR set to: 15
  1709                           ;init.c: 39: DC2B1=0;
  1710  000E28  010F               	movlb	15	; () banked
  1711  000E2A  9B50               	bcf	80,5,b	;volatile
  1712                           
  1713                           ; BSR set to: 15
  1714                           ;init.c: 40: DC2B0=0;
  1715  000E2C  010F               	movlb	15	; () banked
  1716  000E2E  9950               	bcf	80,4,b	;volatile
  1717                           
  1718                           ; BSR set to: 15
  1719                           ;init.c: 41: DC3B1=0;
  1720  000E30  010F               	movlb	15	; () banked
  1721  000E32  9B4D               	bcf	77,5,b	;volatile
  1722                           
  1723                           ; BSR set to: 15
  1724                           ;init.c: 42: DC3B0=0;
  1725  000E34  010F               	movlb	15	; () banked
  1726  000E36  994D               	bcf	77,4,b	;volatile
  1727                           
  1728                           ; BSR set to: 15
  1729                           ;init.c: 43: DC4B1=0;
  1730  000E38  010F               	movlb	15	; () banked
  1731  000E3A  9B4A               	bcf	74,5,b	;volatile
  1732                           
  1733                           ; BSR set to: 15
  1734                           ;init.c: 44: DC4B0=0;
  1735  000E3C  010F               	movlb	15	; () banked
  1736  000E3E  994A               	bcf	74,4,b	;volatile
  1737                           
  1738                           ; BSR set to: 15
  1739                           ;init.c: 50: TRISC=TRISC & 0b00111011;
  1740  000E40  5094               	movf	3988,w,c	;volatile
  1741  000E42  0B3B               	andlw	59
  1742  000E44  6E94               	movwf	3988,c	;volatile
  1743                           
  1744                           ; BSR set to: 15
  1745                           ;init.c: 53: T2CKPS1=0;
  1746  000E46  92CA               	bcf	4042,1,c	;volatile
  1747                           
  1748                           ; BSR set to: 15
  1749                           ;init.c: 54: T2CKPS0=0;
  1750  000E48  90CA               	bcf	4042,0,c	;volatile
  1751                           
  1752                           ; BSR set to: 15
  1753                           ;init.c: 57: TMR2ON = 1;
  1754  000E4A  84CA               	bsf	4042,2,c	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;init.c: 60: CCP2M2=1;
  1758  000E4C  010F               	movlb	15	; () banked
  1759  000E4E  8550               	bsf	80,2,b	;volatile
  1760                           
  1761                           ; BSR set to: 15
  1762                           ;init.c: 61: CCP2M3=1;
  1763  000E50  010F               	movlb	15	; () banked
  1764  000E52  8750               	bsf	80,3,b	;volatile
  1765                           
  1766                           ; BSR set to: 15
  1767                           ;init.c: 62: CCP3M2=1;
  1768  000E54  010F               	movlb	15	; () banked
  1769  000E56  854D               	bsf	77,2,b	;volatile
  1770                           
  1771                           ; BSR set to: 15
  1772                           ;init.c: 63: CCP3M3=1;
  1773  000E58  010F               	movlb	15	; () banked
  1774  000E5A  874D               	bsf	77,3,b	;volatile
  1775                           
  1776                           ; BSR set to: 15
  1777                           ;init.c: 64: CCP4M2=1;
  1778  000E5C  010F               	movlb	15	; () banked
  1779  000E5E  854A               	bsf	74,2,b	;volatile
  1780                           
  1781                           ; BSR set to: 15
  1782                           ;init.c: 65: CCP4M3=1;
  1783  000E60  010F               	movlb	15	; () banked
  1784  000E62  874A               	bsf	74,3,b	;volatile
  1785                           
  1786                           ; BSR set to: 15
  1787  000E64  0012               	return		;funcret
  1788  000E66                     __end_of_initPWM:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           intcon	equ	0xFF2
  1792                           intcon2	equ	0xFF1
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           plusw1	equ	0xFE3
  1796                           plusw2	equ	0xFDB
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _initComms *****************
  1800 ;; Defined at:
  1801 ;;		line 69 in file "init.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    6
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_initialisation
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text7
  1830  000ED8                     __ptext7:
  1831                           	opt stack 0
  1832  000ED8                     _initComms:
  1833                           	opt stack 23
  1834                           
  1835                           ;init.c: 71: TRISBbits.TRISB7 = 1;
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;incstack = 0
  1839  000ED8  8E93               	bsf	3987,7,c	;volatile
  1840                           
  1841                           ;init.c: 72: TRISBbits.TRISB6 = 0;
  1842  000EDA  9C93               	bcf	3987,6,c	;volatile
  1843                           
  1844                           ;init.c: 75: TXSTA2bits.BRGH = 1;
  1845  000EDC  84BA               	bsf	4026,2,c	;volatile
  1846                           
  1847                           ;init.c: 76: TXSTA2bits.SYNC = 0;
  1848  000EDE  98BA               	bcf	4026,4,c	;volatile
  1849                           
  1850                           ;init.c: 77: SPBRGH2 = 0;
  1851  000EE0  0E00               	movlw	0
  1852  000EE2  6E7C               	movwf	3964,c	;volatile
  1853                           
  1854                           ;init.c: 78: SPBRG2 = 51;
  1855  000EE4  0E33               	movlw	51
  1856  000EE6  6E7B               	movwf	3963,c	;volatile
  1857                           
  1858                           ;init.c: 79: BAUDCON2 = 0x08;
  1859  000EE8  0E08               	movlw	8
  1860  000EEA  6EB9               	movwf	4025,c	;volatile
  1861                           
  1862                           ;init.c: 83: TXSTA2bits.TXEN = 1;
  1863  000EEC  8ABA               	bsf	4026,5,c	;volatile
  1864                           
  1865                           ;init.c: 84: RCSTA2bits.CREN = 1;
  1866  000EEE  88A6               	bsf	4006,4,c	;volatile
  1867                           
  1868                           ;init.c: 85: RCSTA2bits.SPEN = 1;
  1869  000EF0  8EA6               	bsf	4006,7,c	;volatile
  1870                           
  1871                           ;init.c: 88: RCONbits.IPEN = 1;
  1872  000EF2  8ED0               	bsf	4048,7,c	;volatile
  1873                           
  1874                           ;init.c: 89: INTCONbits.GIE = 1;
  1875  000EF4  8EF2               	bsf	intcon,7,c	;volatile
  1876                           
  1877                           ;init.c: 90: INTCONbits.PEIE = 1;
  1878  000EF6  8CF2               	bsf	intcon,6,c	;volatile
  1879                           
  1880                           ;init.c: 91: PIE3bits.RC2IE = 1;
  1881  000EF8  8AA3               	bsf	4003,5,c	;volatile
  1882                           
  1883                           ;init.c: 92: PIE3bits.TX2IE = 0;
  1884  000EFA  98A3               	bcf	4003,4,c	;volatile
  1885                           
  1886                           ;init.c: 94: RC2IF = 0;
  1887  000EFC  9AA4               	bcf	4004,5,c	;volatile
  1888  000EFE  0012               	return		;funcret
  1889  000F00                     __end_of_initComms:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           intcon	equ	0xFF2
  1893                           intcon2	equ	0xFF1
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           plusw1	equ	0xFE3
  1897                           plusw2	equ	0xFDB
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _initADC *****************
  1901 ;; Defined at:
  1902 ;;		line 97 in file "init.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;		None               void
  1909 ;; Registers used:
  1910 ;;		None
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    6
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_initialisation
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text8
  1931  000F4A                     __ptext8:
  1932                           	opt stack 0
  1933  000F4A                     _initADC:
  1934                           	opt stack 23
  1935                           
  1936                           ;init.c: 99: TRIGSEL1=0;
  1937                           
  1938                           ;incstack = 0
  1939  000F4A  9EC1               	bcf	4033,7,c	;volatile
  1940                           
  1941                           ;init.c: 100: TRIGSEL0=0;
  1942  000F4C  9CC1               	bcf	4033,6,c	;volatile
  1943                           
  1944                           ;init.c: 102: VCFG1=0;
  1945  000F4E  9AC1               	bcf	4033,5,c	;volatile
  1946                           
  1947                           ;init.c: 103: VCFG0=0;
  1948  000F50  98C1               	bcf	4033,4,c	;volatile
  1949                           
  1950                           ;init.c: 104: VNCFG=0;
  1951  000F52  96C1               	bcf	4033,3,c	;volatile
  1952                           
  1953                           ;init.c: 108: ANSEL3=1;
  1954  000F54  010F               	movlb	15	; () banked
  1955  000F56  875D               	bsf	93,3,b	;volatile
  1956                           
  1957                           ;init.c: 109: ANSEL2=1;
  1958  000F58  010F               	movlb	15	; () banked
  1959  000F5A  855D               	bsf	93,2,b	;volatile
  1960                           
  1961                           ;init.c: 110: ANSEL1=1;
  1962  000F5C  010F               	movlb	15	; () banked
  1963  000F5E  835D               	bsf	93,1,b	;volatile
  1964                           
  1965                           ;init.c: 112: ADON=1;
  1966  000F60  80C2               	bsf	4034,0,c	;volatile
  1967                           
  1968                           ;init.c: 114: CHS0=1;
  1969  000F62  84C2               	bsf	4034,2,c	;volatile
  1970                           
  1971                           ; BSR set to: 15
  1972  000F64  0012               	return		;funcret
  1973  000F66                     __end_of_initADC:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           intcon	equ	0xFF2
  1977                           intcon2	equ	0xFF1
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           plusw1	equ	0xFE3
  1981                           plusw2	equ	0xFDB
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function ___lwtoft *****************
  1985 ;; Defined at:
  1986 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  c               2   25[BANK0 ] unsigned int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  3   25[BANK0 ] float 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2000 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;Total ram usage:        3 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    7
  2007 ;; This function calls:
  2008 ;;		___ftpack
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text9
  2015  000EAC                     __ptext9:
  2016                           	opt stack 0
  2017  000EAC                     ___lwtoft:
  2018                           	opt stack 23
  2019                           
  2020                           ; BSR set to: 15
  2021                           ;incstack = 0
  2022  000EAC  C079  F071         	movff	___lwtoft@c,___ftpack@arg
  2023  000EB0  C07A  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  2024  000EB4  0100               	movlb	0	; () banked
  2025  000EB6  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  2026  000EB8  0E8E               	movlw	142
  2027  000EBA  0100               	movlb	0	; () banked
  2028  000EBC  6F74               	movwf	___ftpack@exp& (0+255),b
  2029  000EBE  0E00               	movlw	0
  2030  000EC0  0100               	movlb	0	; () banked
  2031  000EC2  6F75               	movwf	___ftpack@sign& (0+255),b
  2032  000EC4  EC94  F004         	call	___ftpack	;wreg free
  2033  000EC8  C071  F079         	movff	?___ftpack,?___lwtoft
  2034  000ECC  C072  F07A         	movff	?___ftpack+1,?___lwtoft+1
  2035  000ED0  C073  F07B         	movff	?___ftpack+2,?___lwtoft+2
  2036  000ED4  0012               	return	
  2037  000ED6  0012               	return		;funcret
  2038  000ED8                     __end_of___lwtoft:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           intcon	equ	0xFF2
  2042                           intcon2	equ	0xFF1
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           plusw1	equ	0xFE3
  2046                           plusw2	equ	0xFDB
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function ___fttol *****************
  2050 ;; Defined at:
  2051 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  f1              3   58[BANK0 ] float 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  lval            4   68[BANK0 ] unsigned long 
  2056 ;;  exp1            1   72[BANK0 ] unsigned char 
  2057 ;;  sign1           1   67[BANK0 ] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  4   58[BANK0 ] long 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2067 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;Total ram usage:       15 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    6
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text10
  2082  000684                     __ptext10:
  2083                           	opt stack 0
  2084  000684                     ___fttol:
  2085                           	opt stack 24
  2086                           
  2087                           ;incstack = 0
  2088  000684  C09C  F09E         	movff	___fttol@f1+2,??___fttol
  2089  000688  0100               	movlb	0	; () banked
  2090  00068A  6B9F               	clrf	(??___fttol+1)& (0+255),b
  2091  00068C  6BA0               	clrf	(??___fttol+2)& (0+255),b
  2092  00068E  0100               	movlb	0	; () banked
  2093  000690  359B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2094  000692  0100               	movlb	0	; () banked
  2095  000694  379E               	rlcf	??___fttol& (0+255),f,b
  2096  000696  E301               	bnc	u1201
  2097  000698  819F               	bsf	(??___fttol+1)& (0+255),0,b
  2098  00069A                     u1201:
  2099  00069A  0100               	movlb	0	; () banked
  2100  00069C  519E               	movf	??___fttol& (0+255),w,b
  2101  00069E  0100               	movlb	0	; () banked
  2102  0006A0  6FA8               	movwf	___fttol@exp1& (0+255),b
  2103  0006A2  0100               	movlb	0	; () banked
  2104  0006A4  51A8               	movf	___fttol@exp1& (0+255),w,b
  2105  0006A6  A4D8               	btfss	status,2,c
  2106  0006A8  D00A               	goto	l1839
  2107                           
  2108                           ; BSR set to: 0
  2109  0006AA  0E00               	movlw	0
  2110  0006AC  0100               	movlb	0	; () banked
  2111  0006AE  6F9A               	movwf	?___fttol& (0+255),b
  2112  0006B0  0E00               	movlw	0
  2113  0006B2  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2114  0006B4  0E00               	movlw	0
  2115  0006B6  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2116  0006B8  0E00               	movlw	0
  2117  0006BA  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120  0006BC  0012               	return	
  2121  0006BE                     l1839:
  2122                           
  2123                           ; BSR set to: 0
  2124  0006BE  0E17               	movlw	23
  2125  0006C0  0100               	movlb	0	; () banked
  2126  0006C2  6F9E               	movwf	??___fttol& (0+255),b
  2127  0006C4  C09A  F09F         	movff	___fttol@f1,??___fttol+1
  2128  0006C8  C09B  F0A0         	movff	___fttol@f1+1,??___fttol+2
  2129  0006CC  C09C  F0A1         	movff	___fttol@f1+2,??___fttol+3
  2130  0006D0  0100               	movlb	0	; () banked
  2131  0006D2  299E               	incf	??___fttol& (0+255),w,b
  2132  0006D4  0100               	movlb	0	; () banked
  2133  0006D6  6FA2               	movwf	(??___fttol+4)& (0+255),b
  2134  0006D8  D005               	goto	u1220
  2135  0006DA                     u1225:
  2136  0006DA  0100               	movlb	0	; () banked
  2137  0006DC  90D8               	bcf	status,0,c
  2138  0006DE  33A1               	rrcf	(??___fttol+3)& (0+255),f,b
  2139  0006E0  33A0               	rrcf	(??___fttol+2)& (0+255),f,b
  2140  0006E2  339F               	rrcf	(??___fttol+1)& (0+255),f,b
  2141  0006E4                     u1220:
  2142  0006E4  0100               	movlb	0	; () banked
  2143  0006E6  2FA2               	decfsz	(??___fttol+4)& (0+255),f,b
  2144  0006E8  D7F8               	goto	u1225
  2145  0006EA  0100               	movlb	0	; () banked
  2146  0006EC  519F               	movf	(??___fttol+1)& (0+255),w,b
  2147  0006EE  0100               	movlb	0	; () banked
  2148  0006F0  6FA3               	movwf	___fttol@sign1& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151  0006F2  0100               	movlb	0	; () banked
  2152  0006F4  8F9B               	bsf	(___fttol@f1+1)& (0+255),7,b
  2153                           
  2154                           ; BSR set to: 0
  2155  0006F6  0EFF               	movlw	255
  2156  0006F8  0100               	movlb	0	; () banked
  2157  0006FA  179A               	andwf	___fttol@f1& (0+255),f,b
  2158  0006FC  0EFF               	movlw	255
  2159  0006FE  0100               	movlb	0	; () banked
  2160  000700  179B               	andwf	(___fttol@f1+1)& (0+255),f,b
  2161  000702  0E00               	movlw	0
  2162  000704  0100               	movlb	0	; () banked
  2163  000706  179C               	andwf	(___fttol@f1+2)& (0+255),f,b
  2164                           
  2165                           ; BSR set to: 0
  2166  000708  0100               	movlb	0	; () banked
  2167  00070A  519A               	movf	___fttol@f1& (0+255),w,b
  2168  00070C  0100               	movlb	0	; () banked
  2169  00070E  6FA4               	movwf	___fttol@lval& (0+255),b
  2170  000710  0100               	movlb	0	; () banked
  2171  000712  519B               	movf	(___fttol@f1+1)& (0+255),w,b
  2172  000714  0100               	movlb	0	; () banked
  2173  000716  6FA5               	movwf	(___fttol@lval+1)& (0+255),b
  2174  000718  0100               	movlb	0	; () banked
  2175  00071A  519C               	movf	(___fttol@f1+2)& (0+255),w,b
  2176  00071C  0100               	movlb	0	; () banked
  2177  00071E  6FA6               	movwf	(___fttol@lval+2)& (0+255),b
  2178  000720  0100               	movlb	0	; () banked
  2179  000722  6BA7               	clrf	(___fttol@lval+3)& (0+255),b
  2180                           
  2181                           ; BSR set to: 0
  2182  000724  0E8E               	movlw	142
  2183  000726  0100               	movlb	0	; () banked
  2184  000728  5FA8               	subwf	___fttol@exp1& (0+255),f,b
  2185                           
  2186                           ; BSR set to: 0
  2187  00072A  0100               	movlb	0	; () banked
  2188  00072C  AFA8               	btfss	___fttol@exp1& (0+255),7,b
  2189  00072E  D01B               	goto	l1861
  2190                           
  2191                           ; BSR set to: 0
  2192  000730  0100               	movlb	0	; () banked
  2193  000732  51A8               	movf	___fttol@exp1& (0+255),w,b
  2194  000734  0A80               	xorlw	128
  2195  000736  0F8F               	addlw	143
  2196  000738  B0D8               	btfsc	status,0,c
  2197  00073A  D00B               	goto	l1857
  2198                           
  2199                           ; BSR set to: 0
  2200  00073C  0E00               	movlw	0
  2201  00073E  0100               	movlb	0	; () banked
  2202  000740  6F9A               	movwf	?___fttol& (0+255),b
  2203  000742  0E00               	movlw	0
  2204  000744  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2205  000746  0E00               	movlw	0
  2206  000748  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2207  00074A  0E00               	movlw	0
  2208  00074C  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211  00074E  0012               	return	
  2212                           
  2213                           ; BSR set to: 0
  2214  000750  D000               	goto	l1857
  2215  000752                     l1857:
  2216                           
  2217                           ; BSR set to: 0
  2218  000752  0100               	movlb	0	; () banked
  2219  000754  90D8               	bcf	status,0,c
  2220  000756  33A7               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2221  000758  33A6               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2222  00075A  33A5               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2223  00075C  33A4               	rrcf	___fttol@lval& (0+255),f,b
  2224                           
  2225                           ; BSR set to: 0
  2226  00075E  0100               	movlb	0	; () banked
  2227  000760  3FA8               	incfsz	___fttol@exp1& (0+255),f,b
  2228  000762  D7F7               	goto	l1857
  2229                           
  2230                           ; BSR set to: 0
  2231  000764  D01F               	goto	l1871
  2232  000766                     l1861:
  2233                           
  2234                           ; BSR set to: 0
  2235  000766  0E17               	movlw	23
  2236  000768  0100               	movlb	0	; () banked
  2237  00076A  65A8               	cpfsgt	___fttol@exp1& (0+255),b
  2238  00076C  D014               	goto	l1869
  2239                           
  2240                           ; BSR set to: 0
  2241  00076E  0E00               	movlw	0
  2242  000770  0100               	movlb	0	; () banked
  2243  000772  6F9A               	movwf	?___fttol& (0+255),b
  2244  000774  0E00               	movlw	0
  2245  000776  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2246  000778  0E00               	movlw	0
  2247  00077A  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2248  00077C  0E00               	movlw	0
  2249  00077E  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252  000780  0012               	return	
  2253                           
  2254                           ; BSR set to: 0
  2255  000782  D009               	goto	l1869
  2256  000784                     l1867:
  2257                           
  2258                           ; BSR set to: 0
  2259  000784  0100               	movlb	0	; () banked
  2260  000786  90D8               	bcf	status,0,c
  2261  000788  37A4               	rlcf	___fttol@lval& (0+255),f,b
  2262  00078A  37A5               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2263  00078C  37A6               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2264  00078E  37A7               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2265  000790  0100               	movlb	0	; () banked
  2266  000792  07A8               	decf	___fttol@exp1& (0+255),f,b
  2267  000794  D000               	goto	l1869
  2268  000796                     l1869:
  2269                           
  2270                           ; BSR set to: 0
  2271  000796  0100               	movlb	0	; () banked
  2272  000798  51A8               	movf	___fttol@exp1& (0+255),w,b
  2273  00079A  0100               	movlb	0	; () banked
  2274  00079C  B4D8               	btfsc	status,2,c
  2275  00079E  D002               	goto	l1871
  2276  0007A0  D7F1               	goto	l1867
  2277                           
  2278                           ; BSR set to: 0
  2279  0007A2  D000               	goto	l1871
  2280  0007A4                     l1871:
  2281                           
  2282                           ; BSR set to: 0
  2283  0007A4  0100               	movlb	0	; () banked
  2284  0007A6  51A3               	movf	___fttol@sign1& (0+255),w,b
  2285  0007A8  0100               	movlb	0	; () banked
  2286  0007AA  B4D8               	btfsc	status,2,c
  2287  0007AC  D00A               	goto	l1875
  2288                           
  2289                           ; BSR set to: 0
  2290  0007AE  0100               	movlb	0	; () banked
  2291  0007B0  1FA7               	comf	(___fttol@lval+3)& (0+255),f,b
  2292  0007B2  1FA6               	comf	(___fttol@lval+2)& (0+255),f,b
  2293  0007B4  1FA5               	comf	(___fttol@lval+1)& (0+255),f,b
  2294  0007B6  6DA4               	negf	___fttol@lval& (0+255),b
  2295  0007B8  0E00               	movlw	0
  2296  0007BA  23A5               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2297  0007BC  23A6               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2298  0007BE  23A7               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2299  0007C0  D000               	goto	l1875
  2300  0007C2                     l1875:
  2301                           
  2302                           ; BSR set to: 0
  2303  0007C2  C0A4  F09A         	movff	___fttol@lval,?___fttol
  2304  0007C6  C0A5  F09B         	movff	___fttol@lval+1,?___fttol+1
  2305  0007CA  C0A6  F09C         	movff	___fttol@lval+2,?___fttol+2
  2306  0007CE  C0A7  F09D         	movff	___fttol@lval+3,?___fttol+3
  2307  0007D2  0012               	return	
  2308                           
  2309                           ; BSR set to: 0
  2310                           
  2311                           ; BSR set to: 0
  2312  0007D4  0012               	return		;funcret
  2313  0007D6                     __end_of___fttol:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           intcon	equ	0xFF2
  2317                           intcon2	equ	0xFF1
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           plusw1	equ	0xFE3
  2321                           plusw2	equ	0xFDB
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function ___ftmul *****************
  2325 ;; Defined at:
  2326 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  f1              3   28[BANK0 ] float 
  2329 ;;  f2              3   31[BANK0 ] float 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  2332 ;;  sign            1   42[BANK0 ] unsigned char 
  2333 ;;  cntr            1   41[BANK0 ] unsigned char 
  2334 ;;  exp             1   37[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  3   28[BANK0 ] float 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2345 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;Total ram usage:       15 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    7
  2351 ;; This function calls:
  2352 ;;		___ftpack
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text11
  2359  0003C2                     __ptext11:
  2360                           	opt stack 0
  2361  0003C2                     ___ftmul:
  2362                           	opt stack 23
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;incstack = 0
  2366  0003C2  C07E  F082         	movff	___ftmul@f1+2,??___ftmul
  2367  0003C6  0100               	movlb	0	; () banked
  2368  0003C8  6B83               	clrf	(??___ftmul+1)& (0+255),b
  2369  0003CA  6B84               	clrf	(??___ftmul+2)& (0+255),b
  2370  0003CC  0100               	movlb	0	; () banked
  2371  0003CE  357D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2372  0003D0  0100               	movlb	0	; () banked
  2373  0003D2  3782               	rlcf	??___ftmul& (0+255),f,b
  2374  0003D4  E301               	bnc	u1141
  2375  0003D6  8183               	bsf	(??___ftmul+1)& (0+255),0,b
  2376  0003D8                     u1141:
  2377  0003D8  0100               	movlb	0	; () banked
  2378  0003DA  5182               	movf	??___ftmul& (0+255),w,b
  2379  0003DC  0100               	movlb	0	; () banked
  2380  0003DE  6F85               	movwf	___ftmul@exp& (0+255),b
  2381  0003E0  0100               	movlb	0	; () banked
  2382  0003E2  5185               	movf	___ftmul@exp& (0+255),w,b
  2383  0003E4  A4D8               	btfss	status,2,c
  2384  0003E6  D00A               	goto	l1791
  2385                           
  2386                           ; BSR set to: 0
  2387  0003E8  0E00               	movlw	0
  2388  0003EA  0100               	movlb	0	; () banked
  2389  0003EC  6F7C               	movwf	?___ftmul& (0+255),b
  2390  0003EE  0E00               	movlw	0
  2391  0003F0  0100               	movlb	0	; () banked
  2392  0003F2  6F7D               	movwf	(?___ftmul+1)& (0+255),b
  2393  0003F4  0E00               	movlw	0
  2394  0003F6  0100               	movlb	0	; () banked
  2395  0003F8  6F7E               	movwf	(?___ftmul+2)& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398  0003FA  0012               	return	
  2399  0003FC                     l1791:
  2400                           
  2401                           ; BSR set to: 0
  2402  0003FC  C081  F082         	movff	___ftmul@f2+2,??___ftmul
  2403  000400  0100               	movlb	0	; () banked
  2404  000402  6B83               	clrf	(??___ftmul+1)& (0+255),b
  2405  000404  6B84               	clrf	(??___ftmul+2)& (0+255),b
  2406  000406  0100               	movlb	0	; () banked
  2407  000408  3580               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2408  00040A  0100               	movlb	0	; () banked
  2409  00040C  3782               	rlcf	??___ftmul& (0+255),f,b
  2410  00040E  E301               	bnc	u1161
  2411  000410  8183               	bsf	(??___ftmul+1)& (0+255),0,b
  2412  000412                     u1161:
  2413  000412  0100               	movlb	0	; () banked
  2414  000414  5182               	movf	??___ftmul& (0+255),w,b
  2415  000416  0100               	movlb	0	; () banked
  2416  000418  6F8A               	movwf	___ftmul@sign& (0+255),b
  2417  00041A  0100               	movlb	0	; () banked
  2418  00041C  518A               	movf	___ftmul@sign& (0+255),w,b
  2419  00041E  A4D8               	btfss	status,2,c
  2420  000420  D00A               	goto	l1797
  2421                           
  2422                           ; BSR set to: 0
  2423  000422  0E00               	movlw	0
  2424  000424  0100               	movlb	0	; () banked
  2425  000426  6F7C               	movwf	?___ftmul& (0+255),b
  2426  000428  0E00               	movlw	0
  2427  00042A  0100               	movlb	0	; () banked
  2428  00042C  6F7D               	movwf	(?___ftmul+1)& (0+255),b
  2429  00042E  0E00               	movlw	0
  2430  000430  0100               	movlb	0	; () banked
  2431  000432  6F7E               	movwf	(?___ftmul+2)& (0+255),b
  2432                           
  2433                           ; BSR set to: 0
  2434  000434  0012               	return	
  2435  000436                     l1797:
  2436                           
  2437                           ; BSR set to: 0
  2438  000436  0100               	movlb	0	; () banked
  2439  000438  518A               	movf	___ftmul@sign& (0+255),w,b
  2440  00043A  0F7B               	addlw	123
  2441  00043C  0100               	movlb	0	; () banked
  2442  00043E  2785               	addwf	___ftmul@exp& (0+255),f,b
  2443                           
  2444                           ; BSR set to: 0
  2445  000440  C07E  F08A         	movff	___ftmul@f1+2,___ftmul@sign
  2446  000444  0100               	movlb	0	; () banked
  2447  000446  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2448  000448  0100               	movlb	0	; () banked
  2449  00044A  1B8A               	xorwf	___ftmul@sign& (0+255),f,b
  2450  00044C  0E80               	movlw	128
  2451  00044E  0100               	movlb	0	; () banked
  2452  000450  178A               	andwf	___ftmul@sign& (0+255),f,b
  2453                           
  2454                           ; BSR set to: 0
  2455  000452  0100               	movlb	0	; () banked
  2456  000454  8F7D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2457                           
  2458                           ; BSR set to: 0
  2459  000456  0100               	movlb	0	; () banked
  2460  000458  8F80               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2461                           
  2462                           ; BSR set to: 0
  2463  00045A  0EFF               	movlw	255
  2464  00045C  0100               	movlb	0	; () banked
  2465  00045E  177F               	andwf	___ftmul@f2& (0+255),f,b
  2466  000460  0EFF               	movlw	255
  2467  000462  0100               	movlb	0	; () banked
  2468  000464  1780               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2469  000466  0E00               	movlw	0
  2470  000468  0100               	movlb	0	; () banked
  2471  00046A  1781               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2472                           
  2473                           ; BSR set to: 0
  2474  00046C  0E00               	movlw	0
  2475  00046E  0100               	movlb	0	; () banked
  2476  000470  6F86               	movwf	___ftmul@f3_as_product& (0+255),b
  2477  000472  0E00               	movlw	0
  2478  000474  0100               	movlb	0	; () banked
  2479  000476  6F87               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2480  000478  0E00               	movlw	0
  2481  00047A  0100               	movlb	0	; () banked
  2482  00047C  6F88               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2483                           
  2484                           ; BSR set to: 0
  2485  00047E  0E07               	movlw	7
  2486  000480  0100               	movlb	0	; () banked
  2487  000482  6F89               	movwf	___ftmul@cntr& (0+255),b
  2488  000484  D000               	goto	l1811
  2489  000486                     l1811:
  2490                           
  2491                           ; BSR set to: 0
  2492  000486  0100               	movlb	0	; () banked
  2493  000488  A17C               	btfss	___ftmul@f1& (0+255),0,b
  2494  00048A  D00D               	goto	l1815
  2495                           
  2496                           ; BSR set to: 0
  2497  00048C  0100               	movlb	0	; () banked
  2498  00048E  517F               	movf	___ftmul@f2& (0+255),w,b
  2499  000490  0100               	movlb	0	; () banked
  2500  000492  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2501  000494  0100               	movlb	0	; () banked
  2502  000496  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
  2503  000498  0100               	movlb	0	; () banked
  2504  00049A  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2505  00049C  0100               	movlb	0	; () banked
  2506  00049E  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2507  0004A0  0100               	movlb	0	; () banked
  2508  0004A2  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2509  0004A4  D000               	goto	l1815
  2510  0004A6                     l1815:
  2511                           
  2512                           ; BSR set to: 0
  2513  0004A6  0100               	movlb	0	; () banked
  2514  0004A8  90D8               	bcf	status,0,c
  2515  0004AA  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2516  0004AC  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2517  0004AE  337C               	rrcf	___ftmul@f1& (0+255),f,b
  2518  0004B0  0100               	movlb	0	; () banked
  2519  0004B2  90D8               	bcf	status,0,c
  2520  0004B4  377F               	rlcf	___ftmul@f2& (0+255),f,b
  2521  0004B6  3780               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2522  0004B8  3781               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2523                           
  2524                           ; BSR set to: 0
  2525  0004BA  0100               	movlb	0	; () banked
  2526  0004BC  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
  2527  0004BE  D7E3               	goto	l1811
  2528  0004C0  D000               	goto	l1819
  2529  0004C2                     l1819:
  2530                           
  2531                           ; BSR set to: 0
  2532  0004C2  0E09               	movlw	9
  2533  0004C4  0100               	movlb	0	; () banked
  2534  0004C6  6F89               	movwf	___ftmul@cntr& (0+255),b
  2535  0004C8  D000               	goto	l1821
  2536  0004CA                     l1821:
  2537                           
  2538                           ; BSR set to: 0
  2539  0004CA  0100               	movlb	0	; () banked
  2540  0004CC  A17C               	btfss	___ftmul@f1& (0+255),0,b
  2541  0004CE  D00D               	goto	l1825
  2542                           
  2543                           ; BSR set to: 0
  2544  0004D0  0100               	movlb	0	; () banked
  2545  0004D2  517F               	movf	___ftmul@f2& (0+255),w,b
  2546  0004D4  0100               	movlb	0	; () banked
  2547  0004D6  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2548  0004D8  0100               	movlb	0	; () banked
  2549  0004DA  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
  2550  0004DC  0100               	movlb	0	; () banked
  2551  0004DE  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2552  0004E0  0100               	movlb	0	; () banked
  2553  0004E2  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2554  0004E4  0100               	movlb	0	; () banked
  2555  0004E6  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2556  0004E8  D000               	goto	l1825
  2557  0004EA                     l1825:
  2558                           
  2559                           ; BSR set to: 0
  2560  0004EA  0100               	movlb	0	; () banked
  2561  0004EC  90D8               	bcf	status,0,c
  2562  0004EE  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2563  0004F0  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2564  0004F2  337C               	rrcf	___ftmul@f1& (0+255),f,b
  2565  0004F4  0100               	movlb	0	; () banked
  2566  0004F6  90D8               	bcf	status,0,c
  2567  0004F8  3388               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2568  0004FA  3387               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2569  0004FC  3386               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2570                           
  2571                           ; BSR set to: 0
  2572  0004FE  0100               	movlb	0	; () banked
  2573  000500  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
  2574  000502  D7E3               	goto	l1821
  2575  000504  D000               	goto	l1829
  2576  000506                     l1829:
  2577                           
  2578                           ; BSR set to: 0
  2579  000506  C086  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  2580  00050A  C087  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2581  00050E  C088  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2582  000512  C085  F074         	movff	___ftmul@exp,___ftpack@exp
  2583  000516  C08A  F075         	movff	___ftmul@sign,___ftpack@sign
  2584  00051A  EC94  F004         	call	___ftpack	;wreg free
  2585  00051E  C071  F07C         	movff	?___ftpack,?___ftmul
  2586  000522  C072  F07D         	movff	?___ftpack+1,?___ftmul+1
  2587  000526  C073  F07E         	movff	?___ftpack+2,?___ftmul+2
  2588  00052A  0012               	return	
  2589  00052C  0012               	return		;funcret
  2590  00052E                     __end_of___ftmul:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           intcon	equ	0xFF2
  2594                           intcon2	equ	0xFF1
  2595                           postinc0	equ	0xFEE
  2596                           wreg	equ	0xFE8
  2597                           plusw1	equ	0xFE3
  2598                           plusw2	equ	0xFDB
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function ___ftdiv *****************
  2602 ;; Defined at:
  2603 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  f1              3   43[BANK0 ] float 
  2606 ;;  f2              3   46[BANK0 ] float 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  f3              3   53[BANK0 ] float 
  2609 ;;  sign            1   57[BANK0 ] unsigned char 
  2610 ;;  exp             1   56[BANK0 ] unsigned char 
  2611 ;;  cntr            1   52[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  3   43[BANK0 ] float 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2621 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;Total ram usage:       15 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    7
  2628 ;; This function calls:
  2629 ;;		___ftpack
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text12
  2636  0007D6                     __ptext12:
  2637                           	opt stack 0
  2638  0007D6                     ___ftdiv:
  2639                           	opt stack 23
  2640                           
  2641                           ;incstack = 0
  2642  0007D6  C08D  F091         	movff	___ftdiv@f1+2,??___ftdiv
  2643  0007DA  0100               	movlb	0	; () banked
  2644  0007DC  6B92               	clrf	(??___ftdiv+1)& (0+255),b
  2645  0007DE  6B93               	clrf	(??___ftdiv+2)& (0+255),b
  2646  0007E0  0100               	movlb	0	; () banked
  2647  0007E2  358C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2648  0007E4  0100               	movlb	0	; () banked
  2649  0007E6  3791               	rlcf	??___ftdiv& (0+255),f,b
  2650  0007E8  E301               	bnc	u1091
  2651  0007EA  8192               	bsf	(??___ftdiv+1)& (0+255),0,b
  2652  0007EC                     u1091:
  2653  0007EC  0100               	movlb	0	; () banked
  2654  0007EE  5191               	movf	??___ftdiv& (0+255),w,b
  2655  0007F0  0100               	movlb	0	; () banked
  2656  0007F2  6F98               	movwf	___ftdiv@exp& (0+255),b
  2657  0007F4  0100               	movlb	0	; () banked
  2658  0007F6  5198               	movf	___ftdiv@exp& (0+255),w,b
  2659  0007F8  A4D8               	btfss	status,2,c
  2660  0007FA  D00A               	goto	l1745
  2661                           
  2662                           ; BSR set to: 0
  2663  0007FC  0E00               	movlw	0
  2664  0007FE  0100               	movlb	0	; () banked
  2665  000800  6F8B               	movwf	?___ftdiv& (0+255),b
  2666  000802  0E00               	movlw	0
  2667  000804  0100               	movlb	0	; () banked
  2668  000806  6F8C               	movwf	(?___ftdiv+1)& (0+255),b
  2669  000808  0E00               	movlw	0
  2670  00080A  0100               	movlb	0	; () banked
  2671  00080C  6F8D               	movwf	(?___ftdiv+2)& (0+255),b
  2672                           
  2673                           ; BSR set to: 0
  2674  00080E  0012               	return	
  2675  000810                     l1745:
  2676                           
  2677                           ; BSR set to: 0
  2678  000810  C090  F091         	movff	___ftdiv@f2+2,??___ftdiv
  2679  000814  0100               	movlb	0	; () banked
  2680  000816  6B92               	clrf	(??___ftdiv+1)& (0+255),b
  2681  000818  6B93               	clrf	(??___ftdiv+2)& (0+255),b
  2682  00081A  0100               	movlb	0	; () banked
  2683  00081C  358F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2684  00081E  0100               	movlb	0	; () banked
  2685  000820  3791               	rlcf	??___ftdiv& (0+255),f,b
  2686  000822  E301               	bnc	u1111
  2687  000824  8192               	bsf	(??___ftdiv+1)& (0+255),0,b
  2688  000826                     u1111:
  2689  000826  0100               	movlb	0	; () banked
  2690  000828  5191               	movf	??___ftdiv& (0+255),w,b
  2691  00082A  0100               	movlb	0	; () banked
  2692  00082C  6F99               	movwf	___ftdiv@sign& (0+255),b
  2693  00082E  0100               	movlb	0	; () banked
  2694  000830  5199               	movf	___ftdiv@sign& (0+255),w,b
  2695  000832  A4D8               	btfss	status,2,c
  2696  000834  D00A               	goto	l1751
  2697                           
  2698                           ; BSR set to: 0
  2699  000836  0E00               	movlw	0
  2700  000838  0100               	movlb	0	; () banked
  2701  00083A  6F8B               	movwf	?___ftdiv& (0+255),b
  2702  00083C  0E00               	movlw	0
  2703  00083E  0100               	movlb	0	; () banked
  2704  000840  6F8C               	movwf	(?___ftdiv+1)& (0+255),b
  2705  000842  0E00               	movlw	0
  2706  000844  0100               	movlb	0	; () banked
  2707  000846  6F8D               	movwf	(?___ftdiv+2)& (0+255),b
  2708                           
  2709                           ; BSR set to: 0
  2710  000848  0012               	return	
  2711  00084A                     l1751:
  2712                           
  2713                           ; BSR set to: 0
  2714  00084A  0E00               	movlw	0
  2715  00084C  0100               	movlb	0	; () banked
  2716  00084E  6F95               	movwf	___ftdiv@f3& (0+255),b
  2717  000850  0E00               	movlw	0
  2718  000852  0100               	movlb	0	; () banked
  2719  000854  6F96               	movwf	(___ftdiv@f3+1)& (0+255),b
  2720  000856  0E00               	movlw	0
  2721  000858  0100               	movlb	0	; () banked
  2722  00085A  6F97               	movwf	(___ftdiv@f3+2)& (0+255),b
  2723                           
  2724                           ; BSR set to: 0
  2725  00085C  0100               	movlb	0	; () banked
  2726  00085E  5199               	movf	___ftdiv@sign& (0+255),w,b
  2727  000860  0F89               	addlw	137
  2728  000862  0100               	movlb	0	; () banked
  2729  000864  5F98               	subwf	___ftdiv@exp& (0+255),f,b
  2730                           
  2731                           ; BSR set to: 0
  2732  000866  C08D  F099         	movff	___ftdiv@f1+2,___ftdiv@sign
  2733                           
  2734                           ; BSR set to: 0
  2735  00086A  0100               	movlb	0	; () banked
  2736  00086C  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2737  00086E  0100               	movlb	0	; () banked
  2738  000870  1B99               	xorwf	___ftdiv@sign& (0+255),f,b
  2739                           
  2740                           ; BSR set to: 0
  2741  000872  0E80               	movlw	128
  2742  000874  0100               	movlb	0	; () banked
  2743  000876  1799               	andwf	___ftdiv@sign& (0+255),f,b
  2744                           
  2745                           ; BSR set to: 0
  2746  000878  0100               	movlb	0	; () banked
  2747  00087A  8F8C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2748                           
  2749                           ; BSR set to: 0
  2750  00087C  0EFF               	movlw	255
  2751  00087E  0100               	movlb	0	; () banked
  2752  000880  178B               	andwf	___ftdiv@f1& (0+255),f,b
  2753  000882  0EFF               	movlw	255
  2754  000884  0100               	movlb	0	; () banked
  2755  000886  178C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2756  000888  0E00               	movlw	0
  2757  00088A  0100               	movlb	0	; () banked
  2758  00088C  178D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2759                           
  2760                           ; BSR set to: 0
  2761  00088E  0100               	movlb	0	; () banked
  2762  000890  8F8F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2763                           
  2764                           ; BSR set to: 0
  2765  000892  0EFF               	movlw	255
  2766  000894  0100               	movlb	0	; () banked
  2767  000896  178E               	andwf	___ftdiv@f2& (0+255),f,b
  2768  000898  0EFF               	movlw	255
  2769  00089A  0100               	movlb	0	; () banked
  2770  00089C  178F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2771  00089E  0E00               	movlw	0
  2772  0008A0  0100               	movlb	0	; () banked
  2773  0008A2  1790               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2774                           
  2775                           ; BSR set to: 0
  2776  0008A4  0E18               	movlw	24
  2777  0008A6  0100               	movlb	0	; () banked
  2778  0008A8  6F94               	movwf	___ftdiv@cntr& (0+255),b
  2779  0008AA  D000               	goto	l1771
  2780  0008AC                     l1771:
  2781                           
  2782                           ; BSR set to: 0
  2783  0008AC  0100               	movlb	0	; () banked
  2784  0008AE  90D8               	bcf	status,0,c
  2785  0008B0  3795               	rlcf	___ftdiv@f3& (0+255),f,b
  2786  0008B2  3796               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2787  0008B4  3797               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2788                           
  2789                           ; BSR set to: 0
  2790  0008B6  0100               	movlb	0	; () banked
  2791  0008B8  518E               	movf	___ftdiv@f2& (0+255),w,b
  2792  0008BA  0100               	movlb	0	; () banked
  2793  0008BC  5D8B               	subwf	___ftdiv@f1& (0+255),w,b
  2794  0008BE  0100               	movlb	0	; () banked
  2795  0008C0  518F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2796  0008C2  0100               	movlb	0	; () banked
  2797  0008C4  598C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2798  0008C6  0100               	movlb	0	; () banked
  2799  0008C8  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2800  0008CA  0100               	movlb	0	; () banked
  2801  0008CC  598D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2802  0008CE  A0D8               	btfss	status,0,c
  2803  0008D0  D00E               	goto	l660
  2804                           
  2805                           ; BSR set to: 0
  2806  0008D2  0100               	movlb	0	; () banked
  2807  0008D4  518E               	movf	___ftdiv@f2& (0+255),w,b
  2808  0008D6  0100               	movlb	0	; () banked
  2809  0008D8  5F8B               	subwf	___ftdiv@f1& (0+255),f,b
  2810  0008DA  0100               	movlb	0	; () banked
  2811  0008DC  518F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2812  0008DE  0100               	movlb	0	; () banked
  2813  0008E0  5B8C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2814  0008E2  0100               	movlb	0	; () banked
  2815  0008E4  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2816  0008E6  0100               	movlb	0	; () banked
  2817  0008E8  5B8D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2818                           
  2819                           ; BSR set to: 0
  2820  0008EA  0100               	movlb	0	; () banked
  2821  0008EC  8195               	bsf	___ftdiv@f3& (0+255),0,b
  2822  0008EE                     l660:
  2823                           
  2824                           ; BSR set to: 0
  2825  0008EE  0100               	movlb	0	; () banked
  2826  0008F0  90D8               	bcf	status,0,c
  2827  0008F2  378B               	rlcf	___ftdiv@f1& (0+255),f,b
  2828  0008F4  378C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2829  0008F6  378D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2830                           
  2831                           ; BSR set to: 0
  2832  0008F8  0100               	movlb	0	; () banked
  2833  0008FA  2F94               	decfsz	___ftdiv@cntr& (0+255),f,b
  2834  0008FC  D7D7               	goto	l1771
  2835  0008FE  D000               	goto	l1781
  2836  000900                     l1781:
  2837                           
  2838                           ; BSR set to: 0
  2839  000900  C095  F071         	movff	___ftdiv@f3,___ftpack@arg
  2840  000904  C096  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2841  000908  C097  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2842  00090C  C098  F074         	movff	___ftdiv@exp,___ftpack@exp
  2843  000910  C099  F075         	movff	___ftdiv@sign,___ftpack@sign
  2844  000914  EC94  F004         	call	___ftpack	;wreg free
  2845  000918  C071  F08B         	movff	?___ftpack,?___ftdiv
  2846  00091C  C072  F08C         	movff	?___ftpack+1,?___ftdiv+1
  2847  000920  C073  F08D         	movff	?___ftpack+2,?___ftdiv+2
  2848  000924  0012               	return	
  2849  000926  0012               	return		;funcret
  2850  000928                     __end_of___ftdiv:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           intcon	equ	0xFF2
  2854                           intcon2	equ	0xFF1
  2855                           postinc0	equ	0xFEE
  2856                           wreg	equ	0xFE8
  2857                           plusw1	equ	0xFE3
  2858                           plusw2	equ	0xFDB
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function ___ftpack *****************
  2862 ;; Defined at:
  2863 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  arg             3   17[BANK0 ] unsigned um
  2866 ;;  exp             1   20[BANK0 ] unsigned char 
  2867 ;;  sign            1   21[BANK0 ] unsigned char 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  3   17[BANK0 ] float 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2879 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;Total ram usage:        8 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    6
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		___ftdiv
  2890 ;;		___ftmul
  2891 ;;		___lwtoft
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text13
  2896  000928                     __ptext13:
  2897                           	opt stack 0
  2898  000928                     ___ftpack:
  2899                           	opt stack 23
  2900                           
  2901                           ;incstack = 0
  2902  000928  0100               	movlb	0	; () banked
  2903  00092A  5174               	movf	___ftpack@exp& (0+255),w,b
  2904  00092C  0100               	movlb	0	; () banked
  2905  00092E  B4D8               	btfsc	status,2,c
  2906  000930  D008               	goto	l1527
  2907                           
  2908                           ; BSR set to: 0
  2909  000932  0100               	movlb	0	; () banked
  2910  000934  5171               	movf	___ftpack@arg& (0+255),w,b
  2911  000936  0100               	movlb	0	; () banked
  2912  000938  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2913  00093A  0100               	movlb	0	; () banked
  2914  00093C  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2915  00093E  A4D8               	btfss	status,2,c
  2916  000940  D013               	goto	l1533
  2917  000942                     l1527:
  2918                           
  2919                           ; BSR set to: 0
  2920  000942  0E00               	movlw	0
  2921  000944  0100               	movlb	0	; () banked
  2922  000946  6F71               	movwf	?___ftpack& (0+255),b
  2923  000948  0E00               	movlw	0
  2924  00094A  0100               	movlb	0	; () banked
  2925  00094C  6F72               	movwf	(?___ftpack+1)& (0+255),b
  2926  00094E  0E00               	movlw	0
  2927  000950  0100               	movlb	0	; () banked
  2928  000952  6F73               	movwf	(?___ftpack+2)& (0+255),b
  2929                           
  2930                           ; BSR set to: 0
  2931  000954  0012               	return	
  2932                           
  2933                           ; BSR set to: 0
  2934  000956  D008               	goto	l1533
  2935  000958                     l1531:
  2936                           
  2937                           ; BSR set to: 0
  2938  000958  0100               	movlb	0	; () banked
  2939  00095A  2B74               	incf	___ftpack@exp& (0+255),f,b
  2940  00095C  0100               	movlb	0	; () banked
  2941  00095E  90D8               	bcf	status,0,c
  2942  000960  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2943  000962  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2944  000964  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2945  000966  D000               	goto	l1533
  2946  000968                     l1533:
  2947                           
  2948                           ; BSR set to: 0
  2949  000968  0E00               	movlw	0
  2950  00096A  0100               	movlb	0	; () banked
  2951  00096C  1571               	andwf	___ftpack@arg& (0+255),w,b
  2952  00096E  0100               	movlb	0	; () banked
  2953  000970  6F76               	movwf	??___ftpack& (0+255),b
  2954  000972  0E00               	movlw	0
  2955  000974  0100               	movlb	0	; () banked
  2956  000976  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2957  000978  0100               	movlb	0	; () banked
  2958  00097A  6F77               	movwf	(??___ftpack+1)& (0+255),b
  2959  00097C  0EFE               	movlw	254
  2960  00097E  0100               	movlb	0	; () banked
  2961  000980  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2962  000982  0100               	movlb	0	; () banked
  2963  000984  6F78               	movwf	(??___ftpack+2)& (0+255),b
  2964  000986  0100               	movlb	0	; () banked
  2965  000988  5176               	movf	??___ftpack& (0+255),w,b
  2966  00098A  0100               	movlb	0	; () banked
  2967  00098C  1177               	iorwf	(??___ftpack+1)& (0+255),w,b
  2968  00098E  0100               	movlb	0	; () banked
  2969  000990  1178               	iorwf	(??___ftpack+2)& (0+255),w,b
  2970  000992  B4D8               	btfsc	status,2,c
  2971  000994  D013               	goto	l1539
  2972  000996  D7E0               	goto	l1531
  2973                           
  2974                           ; BSR set to: 0
  2975  000998  D011               	goto	l1539
  2976  00099A                     l1535:
  2977                           
  2978                           ; BSR set to: 0
  2979  00099A  0100               	movlb	0	; () banked
  2980  00099C  2B74               	incf	___ftpack@exp& (0+255),f,b
  2981                           
  2982                           ; BSR set to: 0
  2983  00099E  0E01               	movlw	1
  2984  0009A0  0100               	movlb	0	; () banked
  2985  0009A2  2771               	addwf	___ftpack@arg& (0+255),f,b
  2986  0009A4  0E00               	movlw	0
  2987  0009A6  0100               	movlb	0	; () banked
  2988  0009A8  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2989  0009AA  0E00               	movlw	0
  2990  0009AC  0100               	movlb	0	; () banked
  2991  0009AE  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2992  0009B0  0100               	movlb	0	; () banked
  2993  0009B2  90D8               	bcf	status,0,c
  2994  0009B4  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2995  0009B6  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2996  0009B8  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2997  0009BA  D000               	goto	l1539
  2998  0009BC                     l1539:
  2999                           
  3000                           ; BSR set to: 0
  3001  0009BC  0E00               	movlw	0
  3002  0009BE  0100               	movlb	0	; () banked
  3003  0009C0  1571               	andwf	___ftpack@arg& (0+255),w,b
  3004  0009C2  0100               	movlb	0	; () banked
  3005  0009C4  6F76               	movwf	??___ftpack& (0+255),b
  3006  0009C6  0E00               	movlw	0
  3007  0009C8  0100               	movlb	0	; () banked
  3008  0009CA  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3009  0009CC  0100               	movlb	0	; () banked
  3010  0009CE  6F77               	movwf	(??___ftpack+1)& (0+255),b
  3011  0009D0  0EFF               	movlw	255
  3012  0009D2  0100               	movlb	0	; () banked
  3013  0009D4  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3014  0009D6  0100               	movlb	0	; () banked
  3015  0009D8  6F78               	movwf	(??___ftpack+2)& (0+255),b
  3016  0009DA  0100               	movlb	0	; () banked
  3017  0009DC  5176               	movf	??___ftpack& (0+255),w,b
  3018  0009DE  0100               	movlb	0	; () banked
  3019  0009E0  1177               	iorwf	(??___ftpack+1)& (0+255),w,b
  3020  0009E2  0100               	movlb	0	; () banked
  3021  0009E4  1178               	iorwf	(??___ftpack+2)& (0+255),w,b
  3022  0009E6  B4D8               	btfsc	status,2,c
  3023  0009E8  D00A               	goto	l1543
  3024  0009EA  D7D7               	goto	l1535
  3025                           
  3026                           ; BSR set to: 0
  3027  0009EC  D008               	goto	l1543
  3028  0009EE                     l1541:
  3029                           
  3030                           ; BSR set to: 0
  3031  0009EE  0100               	movlb	0	; () banked
  3032  0009F0  0774               	decf	___ftpack@exp& (0+255),f,b
  3033  0009F2  0100               	movlb	0	; () banked
  3034  0009F4  90D8               	bcf	status,0,c
  3035  0009F6  3771               	rlcf	___ftpack@arg& (0+255),f,b
  3036  0009F8  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3037  0009FA  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3038  0009FC  D000               	goto	l1543
  3039  0009FE                     l1543:
  3040                           
  3041                           ; BSR set to: 0
  3042  0009FE  0100               	movlb	0	; () banked
  3043  000A00  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3044  000A02  D005               	goto	l596
  3045                           
  3046                           ; BSR set to: 0
  3047  000A04  0E02               	movlw	2
  3048  000A06  0100               	movlb	0	; () banked
  3049  000A08  6174               	cpfslt	___ftpack@exp& (0+255),b
  3050  000A0A  D7F1               	goto	l1541
  3051  000A0C  D000               	goto	l596
  3052  000A0E                     l596:
  3053                           
  3054                           ; BSR set to: 0
  3055  000A0E  0100               	movlb	0	; () banked
  3056  000A10  B174               	btfsc	___ftpack@exp& (0+255),0,b
  3057  000A12  D003               	goto	l1549
  3058                           
  3059                           ; BSR set to: 0
  3060  000A14  0100               	movlb	0	; () banked
  3061  000A16  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3062  000A18  D000               	goto	l1549
  3063  000A1A                     l1549:
  3064                           
  3065                           ; BSR set to: 0
  3066  000A1A  0100               	movlb	0	; () banked
  3067  000A1C  90D8               	bcf	status,0,c
  3068  000A1E  3374               	rrcf	___ftpack@exp& (0+255),f,b
  3069  000A20  0100               	movlb	0	; () banked
  3070  000A22  5174               	movf	___ftpack@exp& (0+255),w,b
  3071  000A24  0100               	movlb	0	; () banked
  3072  000A26  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3073                           
  3074                           ; BSR set to: 0
  3075  000A28  0100               	movlb	0	; () banked
  3076  000A2A  5175               	movf	___ftpack@sign& (0+255),w,b
  3077  000A2C  0100               	movlb	0	; () banked
  3078  000A2E  B4D8               	btfsc	status,2,c
  3079  000A30  D003               	goto	l1555
  3080                           
  3081                           ; BSR set to: 0
  3082  000A32  0100               	movlb	0	; () banked
  3083  000A34  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3084  000A36  D000               	goto	l1555
  3085  000A38                     l1555:
  3086                           
  3087                           ; BSR set to: 0
  3088  000A38  C071  F071         	movff	___ftpack@arg,?___ftpack
  3089  000A3C  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
  3090  000A40  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
  3091  000A44  0012               	return	
  3092                           
  3093                           ; BSR set to: 0
  3094                           
  3095                           ; BSR set to: 0
  3096  000A46  0012               	return		;funcret
  3097  000A48                     __end_of___ftpack:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           intcon	equ	0xFF2
  3101                           intcon2	equ	0xFF1
  3102                           postinc0	equ	0xFEE
  3103                           wreg	equ	0xFE8
  3104                           plusw1	equ	0xFE3
  3105                           plusw2	equ	0xFDB
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _Timer0_ISR *****************
  3109 ;; Defined at:
  3110 ;;		line 99 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;		None               void
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;Total ram usage:       17 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    5
  3131 ;; This function calls:
  3132 ;;		i1_pwm
  3133 ;; This function is called by:
  3134 ;;		Interrupt level 1
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	intcodelo
  3139  000018                     __pintcodelo:
  3140                           	opt stack 0
  3141  000018                     _Timer0_ISR:
  3142                           	opt stack 23
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;incstack = 0
  3146  000018  CFD8 F060          	movff	status,??_Timer0_ISR
  3147  00001C  CFE8 F061          	movff	wreg,??_Timer0_ISR+1
  3148  000020  CFE0 F062          	movff	bsr,??_Timer0_ISR+2
  3149  000024  CFFA F063          	movff	pclath,??_Timer0_ISR+3
  3150  000028  CFFB F064          	movff	pclatu,??_Timer0_ISR+4
  3151  00002C  CFE9 F065          	movff	fsr0l,??_Timer0_ISR+5
  3152  000030  CFEA F066          	movff	fsr0h,??_Timer0_ISR+6
  3153  000034  CFE1 F067          	movff	fsr1l,??_Timer0_ISR+7
  3154  000038  CFE2 F068          	movff	fsr1h,??_Timer0_ISR+8
  3155  00003C  CFD9 F069          	movff	fsr2l,??_Timer0_ISR+9
  3156  000040  CFDA F06A          	movff	fsr2h,??_Timer0_ISR+10
  3157  000044  CFF3 F06B          	movff	prodl,??_Timer0_ISR+11
  3158  000048  CFF4 F06C          	movff	prodh,??_Timer0_ISR+12
  3159  00004C  CFF6 F06D          	movff	tblptrl,??_Timer0_ISR+13
  3160  000050  CFF7 F06E          	movff	tblptrh,??_Timer0_ISR+14
  3161  000054  CFF8 F06F          	movff	tblptru,??_Timer0_ISR+15
  3162  000058  CFF5 F070          	movff	tablat,??_Timer0_ISR+16
  3163                           
  3164                           ;main.c: 102: if (T0IE && T0IF)
  3165  00005C  BAF2               	btfsc	intcon,5,c	;volatile
  3166  00005E  A4F2               	btfss	intcon,2,c	;volatile
  3167  000060  D03A               	goto	i1l202
  3168                           
  3169                           ;main.c: 103: {
  3170                           ;main.c: 104: T0IF=0;
  3171  000062  94F2               	bcf	intcon,2,c	;volatile
  3172                           
  3173                           ;main.c: 106: TMR0=15;
  3174  000064  0E00               	movlw	0
  3175  000066  6ED7               	movwf	4055,c	;volatile
  3176  000068  0E0F               	movlw	15
  3177  00006A  6ED6               	movwf	4054,c	;volatile
  3178                           
  3179                           ;main.c: 108: millis++;
  3180  00006C  4A2B               	infsnz	_millis,f,c
  3181  00006E  2A2C               	incf	_millis+1,f,c
  3182                           
  3183                           ;main.c: 109: if (millis==1000)
  3184  000070  0EE8               	movlw	232
  3185  000072  182B               	xorwf	_millis,w,c
  3186  000074  E130               	bnz	i1l202
  3187  000076  0E03               	movlw	3
  3188  000078  182C               	xorwf	_millis+1,w,c
  3189  00007A  A4D8               	btfss	status,2,c
  3190  00007C  D02C               	goto	i1l202
  3191                           
  3192                           ;main.c: 110: {
  3193                           ;main.c: 111: millis=0;
  3194  00007E  0E00               	movlw	0
  3195  000080  6E2C               	movwf	_millis+1,c
  3196  000082  0E00               	movlw	0
  3197  000084  6E2B               	movwf	_millis,c
  3198                           
  3199                           ;main.c: 112: pwm('R',1023);
  3200  000086  0E03               	movlw	3
  3201  000088  6E27               	movwf	i1pwm@dutycycle+1,c
  3202  00008A  6826               	setf	i1pwm@dutycycle,c
  3203  00008C  0E52               	movlw	82
  3204  00008E  EC8D  F006         	call	i1_pwm
  3205                           
  3206                           ;main.c: 113: pwm('G',1023);
  3207  000092  0E03               	movlw	3
  3208  000094  6E27               	movwf	i1pwm@dutycycle+1,c
  3209  000096  6826               	setf	i1pwm@dutycycle,c
  3210  000098  0E47               	movlw	71
  3211  00009A  EC8D  F006         	call	i1_pwm
  3212                           
  3213                           ;main.c: 114: pwm('B',1023);
  3214  00009E  0E03               	movlw	3
  3215  0000A0  6E27               	movwf	i1pwm@dutycycle+1,c
  3216  0000A2  6826               	setf	i1pwm@dutycycle,c
  3217  0000A4  0E42               	movlw	66
  3218  0000A6  EC8D  F006         	call	i1_pwm
  3219                           
  3220                           ;main.c: 115: pwm('R',0);
  3221  0000AA  0E00               	movlw	0
  3222  0000AC  6E27               	movwf	i1pwm@dutycycle+1,c
  3223  0000AE  0E00               	movlw	0
  3224  0000B0  6E26               	movwf	i1pwm@dutycycle,c
  3225  0000B2  0E52               	movlw	82
  3226  0000B4  EC8D  F006         	call	i1_pwm
  3227                           
  3228                           ;main.c: 116: pwm('G',0);
  3229  0000B8  0E00               	movlw	0
  3230  0000BA  6E27               	movwf	i1pwm@dutycycle+1,c
  3231  0000BC  0E00               	movlw	0
  3232  0000BE  6E26               	movwf	i1pwm@dutycycle,c
  3233  0000C0  0E47               	movlw	71
  3234  0000C2  EC8D  F006         	call	i1_pwm
  3235                           
  3236                           ;main.c: 117: pwm('B',0);
  3237  0000C6  0E00               	movlw	0
  3238  0000C8  6E27               	movwf	i1pwm@dutycycle+1,c
  3239  0000CA  0E00               	movlw	0
  3240  0000CC  6E26               	movwf	i1pwm@dutycycle,c
  3241  0000CE  0E42               	movlw	66
  3242  0000D0  EC8D  F006         	call	i1_pwm
  3243  0000D4  D000               	goto	i1l202
  3244  0000D6                     i1l202:
  3245  0000D6  C070  FFF5         	movff	??_Timer0_ISR+16,tablat
  3246  0000DA  C06F  FFF8         	movff	??_Timer0_ISR+15,tblptru
  3247  0000DE  C06E  FFF7         	movff	??_Timer0_ISR+14,tblptrh
  3248  0000E2  C06D  FFF6         	movff	??_Timer0_ISR+13,tblptrl
  3249  0000E6  C06C  FFF4         	movff	??_Timer0_ISR+12,prodh
  3250  0000EA  C06B  FFF3         	movff	??_Timer0_ISR+11,prodl
  3251  0000EE  C06A  FFDA         	movff	??_Timer0_ISR+10,fsr2h
  3252  0000F2  C069  FFD9         	movff	??_Timer0_ISR+9,fsr2l
  3253  0000F6  C068  FFE2         	movff	??_Timer0_ISR+8,fsr1h
  3254  0000FA  C067  FFE1         	movff	??_Timer0_ISR+7,fsr1l
  3255  0000FE  C066  FFEA         	movff	??_Timer0_ISR+6,fsr0h
  3256  000102  C065  FFE9         	movff	??_Timer0_ISR+5,fsr0l
  3257  000106  C064  FFFB         	movff	??_Timer0_ISR+4,pclatu
  3258  00010A  C063  FFFA         	movff	??_Timer0_ISR+3,pclath
  3259  00010E  C062  FFE0         	movff	??_Timer0_ISR+2,bsr
  3260  000112  C061  FFE8         	movff	??_Timer0_ISR+1,wreg
  3261  000116  C060  FFD8         	movff	??_Timer0_ISR,status
  3262  00011A  0010               	retfie	
  3263  00011C                     __end_of_Timer0_ISR:
  3264                           	opt stack 0
  3265                           pclatu	equ	0xFFB
  3266                           pclath	equ	0xFFA
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           prodh	equ	0xFF4
  3272                           prodl	equ	0xFF3
  3273                           intcon	equ	0xFF2
  3274                           intcon2	equ	0xFF1
  3275                           postinc0	equ	0xFEE
  3276                           fsr0h	equ	0xFEA
  3277                           fsr0l	equ	0xFE9
  3278                           wreg	equ	0xFE8
  3279                           plusw1	equ	0xFE3
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           bsr	equ	0xFE0
  3283                           plusw2	equ	0xFDB
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function i1_pwm *****************
  3289 ;; Defined at:
  3290 ;;		line 8 in file "converter.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  color           1    wreg     unsigned char 
  3293 ;;  dutycycle       2   37[COMRAM] int 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  color           1   39[COMRAM] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;Total ram usage:        3 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    4
  3312 ;; This function calls:
  3313 ;;		i1___awdiv
  3314 ;; This function is called by:
  3315 ;;		_Timer0_ISR
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text15
  3320  000D1A                     __ptext15:
  3321                           	opt stack 0
  3322  000D1A                     i1_pwm:
  3323                           	opt stack 23
  3324                           
  3325                           ;incstack = 0
  3326                           ;i1pwm@color stored from wreg
  3327  000D1A  6E28               	movwf	i1pwm@color,c
  3328                           
  3329                           ;converter.c: 9: switch(color){
  3330  000D1C  D036               	goto	i1l1905
  3331  000D1E                     i1l1885:
  3332                           
  3333                           ;converter.c: 11: CCPR2L=dutycycle/4;
  3334  000D1E  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3335  000D22  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3336  000D26  0E00               	movlw	0
  3337  000D28  6E21               	movwf	i1___awdiv@divisor+1,c
  3338  000D2A  0E04               	movlw	4
  3339  000D2C  6E20               	movwf	i1___awdiv@divisor,c
  3340  000D2E  EC42  F006         	call	i1___awdiv	;wreg free
  3341  000D32  501E               	movf	?i1___awdiv,w,c
  3342  000D34  010F               	movlb	15	; () banked
  3343  000D36  6F51               	movwf	81,b	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  3347  000D38  010F               	movlb	15	; () banked
  3348  000D3A  9B50               	bcf	80,5,b	;volatile
  3349                           
  3350                           ; BSR set to: 15
  3351                           ;converter.c: 13: DC2B0=dutycycle%1;
  3352  000D3C  010F               	movlb	15	; () banked
  3353  000D3E  9950               	bcf	80,4,b	;volatile
  3354                           
  3355                           ;converter.c: 14: break;
  3356  000D40  0012               	return	
  3357  000D42                     i1l1891:
  3358                           
  3359                           ;converter.c: 16: CCPR3L=dutycycle/4;
  3360  000D42  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3361  000D46  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3362  000D4A  0E00               	movlw	0
  3363  000D4C  6E21               	movwf	i1___awdiv@divisor+1,c
  3364  000D4E  0E04               	movlw	4
  3365  000D50  6E20               	movwf	i1___awdiv@divisor,c
  3366  000D52  EC42  F006         	call	i1___awdiv	;wreg free
  3367  000D56  501E               	movf	?i1___awdiv,w,c
  3368  000D58  010F               	movlb	15	; () banked
  3369  000D5A  6F4E               	movwf	78,b	;volatile
  3370                           
  3371                           ; BSR set to: 15
  3372                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  3373  000D5C  010F               	movlb	15	; () banked
  3374  000D5E  9B4D               	bcf	77,5,b	;volatile
  3375                           
  3376                           ; BSR set to: 15
  3377                           ;converter.c: 18: DC3B0=0;
  3378  000D60  010F               	movlb	15	; () banked
  3379  000D62  994D               	bcf	77,4,b	;volatile
  3380                           
  3381                           ;converter.c: 19: break;
  3382  000D64  0012               	return	
  3383  000D66                     i1l1897:
  3384                           
  3385                           ;converter.c: 21: CCPR4L=dutycycle/4;
  3386  000D66  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3387  000D6A  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3388  000D6E  0E00               	movlw	0
  3389  000D70  6E21               	movwf	i1___awdiv@divisor+1,c
  3390  000D72  0E04               	movlw	4
  3391  000D74  6E20               	movwf	i1___awdiv@divisor,c
  3392  000D76  EC42  F006         	call	i1___awdiv	;wreg free
  3393  000D7A  501E               	movf	?i1___awdiv,w,c
  3394  000D7C  010F               	movlb	15	; () banked
  3395  000D7E  6F4B               	movwf	75,b	;volatile
  3396                           
  3397                           ; BSR set to: 15
  3398                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  3399  000D80  010F               	movlb	15	; () banked
  3400  000D82  9B4A               	bcf	74,5,b	;volatile
  3401                           
  3402                           ; BSR set to: 15
  3403                           ;converter.c: 23: DC4B0=dutycycle%1;
  3404  000D84  010F               	movlb	15	; () banked
  3405  000D86  994A               	bcf	74,4,b	;volatile
  3406                           
  3407                           ; BSR set to: 15
  3408                           ;converter.c: 25: }
  3409                           
  3410                           ;converter.c: 24: break;
  3411  000D88  0012               	return	
  3412  000D8A                     i1l1905:
  3413  000D8A  5028               	movf	i1pwm@color,w,c
  3414                           
  3415                           ; Switch size 1, requested type "space"
  3416                           ; Number of cases is 3, Range of values is 66 to 82
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte           10     6 (average)
  3420                           ;	Chosen strategy is simple_byte
  3421  000D8C  0A42               	xorlw	66	; case 66
  3422  000D8E  B4D8               	btfsc	status,2,c
  3423  000D90  D7C6               	goto	i1l1885
  3424  000D92  0A05               	xorlw	5	; case 71
  3425  000D94  B4D8               	btfsc	status,2,c
  3426  000D96  D7E7               	goto	i1l1897
  3427  000D98  0A15               	xorlw	21	; case 82
  3428  000D9A  A4D8               	btfss	status,2,c
  3429  000D9C  0012               	return	
  3430  000D9E  D7D1               	goto	i1l1891
  3431  000DA0  0012               	return		;funcret
  3432  000DA2                     __end_ofi1_pwm:
  3433                           	opt stack 0
  3434                           pclatu	equ	0xFFB
  3435                           pclath	equ	0xFFA
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           prodh	equ	0xFF4
  3441                           prodl	equ	0xFF3
  3442                           intcon	equ	0xFF2
  3443                           intcon2	equ	0xFF1
  3444                           postinc0	equ	0xFEE
  3445                           fsr0h	equ	0xFEA
  3446                           fsr0l	equ	0xFE9
  3447                           wreg	equ	0xFE8
  3448                           plusw1	equ	0xFE3
  3449                           fsr1h	equ	0xFE2
  3450                           fsr1l	equ	0xFE1
  3451                           bsr	equ	0xFE0
  3452                           plusw2	equ	0xFDB
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function i1___awdiv *****************
  3458 ;; Defined at:
  3459 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  dividend        2   29[COMRAM] int 
  3462 ;;  divisor         2   31[COMRAM] int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  __awdiv         2   35[COMRAM] int 
  3465 ;;  __awdiv         1   34[COMRAM] unsigned char 
  3466 ;;  __awdiv         1   33[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2   29[COMRAM] int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;Total ram usage:        8 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    3
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		i1_pwm
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text16
  3491  000C84                     __ptext16:
  3492                           	opt stack 0
  3493  000C84                     i1___awdiv:
  3494                           	opt stack 23
  3495                           
  3496                           ;incstack = 0
  3497  000C84  0E00               	movlw	0
  3498  000C86  6E23               	movwf	i1___awdiv@sign,c
  3499  000C88  AE21               	btfss	i1___awdiv@divisor+1,7,c
  3500  000C8A  D007               	goto	i1l1623
  3501  000C8C  6C20               	negf	i1___awdiv@divisor,c
  3502  000C8E  1E21               	comf	i1___awdiv@divisor+1,f,c
  3503  000C90  B0D8               	btfsc	status,0,c
  3504  000C92  2A21               	incf	i1___awdiv@divisor+1,f,c
  3505  000C94  0E01               	movlw	1
  3506  000C96  6E23               	movwf	i1___awdiv@sign,c
  3507  000C98  D000               	goto	i1l1623
  3508  000C9A                     i1l1623:
  3509  000C9A  AE1F               	btfss	i1___awdiv@dividend+1,7,c
  3510  000C9C  D007               	goto	i1l1629
  3511  000C9E  6C1E               	negf	i1___awdiv@dividend,c
  3512  000CA0  1E1F               	comf	i1___awdiv@dividend+1,f,c
  3513  000CA2  B0D8               	btfsc	status,0,c
  3514  000CA4  2A1F               	incf	i1___awdiv@dividend+1,f,c
  3515  000CA6  0E01               	movlw	1
  3516  000CA8  1A23               	xorwf	i1___awdiv@sign,f,c
  3517  000CAA  D000               	goto	i1l1629
  3518  000CAC                     i1l1629:
  3519  000CAC  0E00               	movlw	0
  3520  000CAE  6E25               	movwf	i1___awdiv@quotient+1,c
  3521  000CB0  0E00               	movlw	0
  3522  000CB2  6E24               	movwf	i1___awdiv@quotient,c
  3523  000CB4  5020               	movf	i1___awdiv@divisor,w,c
  3524  000CB6  1021               	iorwf	i1___awdiv@divisor+1,w,c
  3525  000CB8  B4D8               	btfsc	status,2,c
  3526  000CBA  D021               	goto	i1l1651
  3527  000CBC  0E01               	movlw	1
  3528  000CBE  6E22               	movwf	i1___awdiv@counter,c
  3529  000CC0  D005               	goto	i1l1637
  3530  000CC2                     i1l1635:
  3531  000CC2  90D8               	bcf	status,0,c
  3532  000CC4  3620               	rlcf	i1___awdiv@divisor,f,c
  3533  000CC6  3621               	rlcf	i1___awdiv@divisor+1,f,c
  3534  000CC8  2A22               	incf	i1___awdiv@counter,f,c
  3535  000CCA  D000               	goto	i1l1637
  3536  000CCC                     i1l1637:
  3537  000CCC  BE21               	btfsc	i1___awdiv@divisor+1,7,c
  3538  000CCE  D002               	goto	i1l1639
  3539  000CD0  D7F8               	goto	i1l1635
  3540  000CD2  D000               	goto	i1l1639
  3541  000CD4                     i1l1639:
  3542  000CD4  90D8               	bcf	status,0,c
  3543  000CD6  3624               	rlcf	i1___awdiv@quotient,f,c
  3544  000CD8  3625               	rlcf	i1___awdiv@quotient+1,f,c
  3545  000CDA  5020               	movf	i1___awdiv@divisor,w,c
  3546  000CDC  5C1E               	subwf	i1___awdiv@dividend,w,c
  3547  000CDE  5021               	movf	i1___awdiv@divisor+1,w,c
  3548  000CE0  581F               	subwfb	i1___awdiv@dividend+1,w,c
  3549  000CE2  A0D8               	btfss	status,0,c
  3550  000CE4  D006               	goto	i1l1647
  3551  000CE6  5020               	movf	i1___awdiv@divisor,w,c
  3552  000CE8  5E1E               	subwf	i1___awdiv@dividend,f,c
  3553  000CEA  5021               	movf	i1___awdiv@divisor+1,w,c
  3554  000CEC  5A1F               	subwfb	i1___awdiv@dividend+1,f,c
  3555  000CEE  8024               	bsf	i1___awdiv@quotient,0,c
  3556  000CF0  D000               	goto	i1l1647
  3557  000CF2                     i1l1647:
  3558  000CF2  90D8               	bcf	status,0,c
  3559  000CF4  3221               	rrcf	i1___awdiv@divisor+1,f,c
  3560  000CF6  3220               	rrcf	i1___awdiv@divisor,f,c
  3561  000CF8  2E22               	decfsz	i1___awdiv@counter,f,c
  3562  000CFA  D7EC               	goto	i1l1639
  3563  000CFC  D000               	goto	i1l1651
  3564  000CFE                     i1l1651:
  3565  000CFE  5023               	movf	i1___awdiv@sign,w,c
  3566  000D00  B4D8               	btfsc	status,2,c
  3567  000D02  D005               	goto	i1l1655
  3568  000D04  6C24               	negf	i1___awdiv@quotient,c
  3569  000D06  1E25               	comf	i1___awdiv@quotient+1,f,c
  3570  000D08  B0D8               	btfsc	status,0,c
  3571  000D0A  2A25               	incf	i1___awdiv@quotient+1,f,c
  3572  000D0C  D000               	goto	i1l1655
  3573  000D0E                     i1l1655:
  3574  000D0E  C024  F01E         	movff	i1___awdiv@quotient,?i1___awdiv
  3575  000D12  C025  F01F         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  3576  000D16  0012               	return	
  3577  000D18  0012               	return		;funcret
  3578  000D1A                     __end_ofi1___awdiv:
  3579                           	opt stack 0
  3580                           pclatu	equ	0xFFB
  3581                           pclath	equ	0xFFA
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           postinc0	equ	0xFEE
  3591                           fsr0h	equ	0xFEA
  3592                           fsr0l	equ	0xFE9
  3593                           wreg	equ	0xFE8
  3594                           plusw1	equ	0xFE3
  3595                           fsr1h	equ	0xFE2
  3596                           fsr1l	equ	0xFE1
  3597                           bsr	equ	0xFE0
  3598                           plusw2	equ	0xFDB
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _RX2_ISR *****************
  3604 ;; Defined at:
  3605 ;;		line 123 in file "main.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  input           2   27[COMRAM] unsigned char [2]
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:       16 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    2
  3626 ;; This function calls:
  3627 ;;		_atoi
  3628 ;; This function is called by:
  3629 ;;		Interrupt level 2
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	intcode
  3634  000008                     __pintcode:
  3635                           	opt stack 0
  3636  000008                     _RX2_ISR:
  3637                           	opt stack 23
  3638                           
  3639                           ;incstack = 0
  3640  000008  CFFA F00E          	movff	pclath,??_RX2_ISR
  3641  00000C  CFFB F00F          	movff	pclatu,??_RX2_ISR+1
  3642  000010  CFE9 F010          	movff	fsr0l,??_RX2_ISR+2
  3643  000014  EF97  F002         	goto	int_func
  3644                           pclatu	equ	0xFFB
  3645                           pclath	equ	0xFFA
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           intcon	equ	0xFF2
  3653                           intcon2	equ	0xFF1
  3654                           postinc0	equ	0xFEE
  3655                           fsr0h	equ	0xFEA
  3656                           fsr0l	equ	0xFE9
  3657                           wreg	equ	0xFE8
  3658                           plusw1	equ	0xFE3
  3659                           fsr1h	equ	0xFE2
  3660                           fsr1l	equ	0xFE1
  3661                           bsr	equ	0xFE0
  3662                           plusw2	equ	0xFDB
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667                           	psect	intcode_body
  3668  00052E                     __pintcode_body:
  3669                           	opt stack 23
  3670  00052E                     int_func:
  3671                           	opt stack 23
  3672  00052E  CFEA F011          	movff	fsr0h,??_RX2_ISR+3
  3673  000532  CFE1 F012          	movff	fsr1l,??_RX2_ISR+4
  3674  000536  CFE2 F013          	movff	fsr1h,??_RX2_ISR+5
  3675  00053A  CFD9 F014          	movff	fsr2l,??_RX2_ISR+6
  3676  00053E  CFDA F015          	movff	fsr2h,??_RX2_ISR+7
  3677  000542  CFF3 F016          	movff	prodl,??_RX2_ISR+8
  3678  000546  CFF4 F017          	movff	prodh,??_RX2_ISR+9
  3679  00054A  CFF6 F018          	movff	tblptrl,??_RX2_ISR+10
  3680  00054E  CFF7 F019          	movff	tblptrh,??_RX2_ISR+11
  3681  000552  CFF8 F01A          	movff	tblptru,??_RX2_ISR+12
  3682  000556  CFF5 F01B          	movff	tablat,??_RX2_ISR+13
  3683                           
  3684                           ;main.c: 124: RC2IF = 0;
  3685  00055A  9AA4               	bcf	4004,5,c	;volatile
  3686                           
  3687                           ;main.c: 126: static char compteur=0;
  3688                           ;main.c: 127: static char buffer[16]="";
  3689                           ;main.c: 129: char input[2] = "";
  3690  00055C  C029  F01C         	movff	RX2_ISR@F19163,RX2_ISR@input
  3691  000560  C02A  F01D         	movff	RX2_ISR@F19163+1,RX2_ISR@input+1
  3692                           
  3693                           ;main.c: 130: input[0] = RCREG2;
  3694  000564  CF7A F01C          	movff	3962,RX2_ISR@input	;volatile
  3695                           
  3696                           ;main.c: 132: if (beginR==1 | beginG==1 | beginB==1)
  3697  000568  0430               	decf	_beginR,w,c
  3698  00056A  B4D8               	btfsc	status,2,c
  3699  00056C  D006               	goto	i2l1941
  3700  00056E  042F               	decf	_beginG,w,c
  3701  000570  B4D8               	btfsc	status,2,c
  3702  000572  D003               	goto	i2l1941
  3703  000574  042E               	decf	_beginB,w,c
  3704  000576  A4D8               	btfss	status,2,c
  3705  000578  D053               	goto	i2l1979
  3706  00057A                     i2l1941:
  3707                           
  3708                           ;main.c: 133: {
  3709                           ;main.c: 134: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  3710  00057A  0E52               	movlw	82
  3711  00057C  181C               	xorwf	RX2_ISR@input,w,c
  3712  00057E  B4D8               	btfsc	status,2,c
  3713  000580  D014               	goto	i2l1951
  3714  000582  0E47               	movlw	71
  3715  000584  181C               	xorwf	RX2_ISR@input,w,c
  3716  000586  B4D8               	btfsc	status,2,c
  3717  000588  D010               	goto	i2l1951
  3718  00058A  0E42               	movlw	66
  3719  00058C  181C               	xorwf	RX2_ISR@input,w,c
  3720  00058E  B4D8               	btfsc	status,2,c
  3721  000590  D00C               	goto	i2l1951
  3722                           
  3723                           ;main.c: 135: {
  3724                           ;main.c: 136: buffer[compteur]=input[0];
  3725  000592  502D               	movf	RX2_ISR@compteur,w,c
  3726  000594  0D01               	mullw	1
  3727  000596  0E31               	movlw	low RX2_ISR@buffer
  3728  000598  24F3               	addwf	prodl,w,c
  3729  00059A  6ED9               	movwf	fsr2l,c
  3730  00059C  0E00               	movlw	high RX2_ISR@buffer
  3731  00059E  20F4               	addwfc	prodh,w,c
  3732  0005A0  6EDA               	movwf	fsr2h,c
  3733  0005A2  C01C  FFDF         	movff	RX2_ISR@input,indf2
  3734                           
  3735                           ;main.c: 137: compteur+=1;
  3736  0005A6  2A2D               	incf	RX2_ISR@compteur,f,c
  3737                           
  3738                           ;main.c: 138: }
  3739  0005A8  D03B               	goto	i2l1979
  3740  0005AA                     i2l1951:
  3741                           
  3742                           ;main.c: 140: else
  3743                           ;main.c: 141: {
  3744                           ;main.c: 142: if (beginR==1)
  3745  0005AA  0430               	decf	_beginR,w,c
  3746  0005AC  A4D8               	btfss	status,2,c
  3747  0005AE  D00B               	goto	i2l1955
  3748                           
  3749                           ;main.c: 143: R[0]=atoi(buffer);
  3750  0005B0  0E31               	movlw	low RX2_ISR@buffer
  3751  0005B2  6E07               	movwf	atoi@s,c
  3752  0005B4  0E00               	movlw	high RX2_ISR@buffer
  3753  0005B6  6E08               	movwf	atoi@s+1,c
  3754  0005B8  EC24  F005         	call	_atoi	;wreg free
  3755  0005BC  C007  F100         	movff	?_atoi,_R
  3756  0005C0  C008  F101         	movff	?_atoi+1,_R+1
  3757  0005C4  D000               	goto	i2l1955
  3758  0005C6                     i2l1955:
  3759                           
  3760                           ;main.c: 144: beginR=0;
  3761  0005C6  0E00               	movlw	0
  3762  0005C8  6E30               	movwf	_beginR,c
  3763                           
  3764                           ;main.c: 145: if (beginG==1)
  3765  0005CA  042F               	decf	_beginG,w,c
  3766  0005CC  A4D8               	btfss	status,2,c
  3767  0005CE  D00B               	goto	i2l1961
  3768                           
  3769                           ;main.c: 146: G[0]=atoi(buffer);
  3770  0005D0  0E31               	movlw	low RX2_ISR@buffer
  3771  0005D2  6E07               	movwf	atoi@s,c
  3772  0005D4  0E00               	movlw	high RX2_ISR@buffer
  3773  0005D6  6E08               	movwf	atoi@s+1,c
  3774  0005D8  EC24  F005         	call	_atoi	;wreg free
  3775  0005DC  C007  F200         	movff	?_atoi,_G
  3776  0005E0  C008  F201         	movff	?_atoi+1,_G+1
  3777  0005E4  D000               	goto	i2l1961
  3778  0005E6                     i2l1961:
  3779                           
  3780                           ;main.c: 147: beginG=0;
  3781  0005E6  0E00               	movlw	0
  3782  0005E8  6E2F               	movwf	_beginG,c
  3783                           
  3784                           ;main.c: 148: if (beginB==1)
  3785  0005EA  042E               	decf	_beginB,w,c
  3786  0005EC  A4D8               	btfss	status,2,c
  3787  0005EE  D00B               	goto	i2l1967
  3788                           
  3789                           ;main.c: 149: B[0]=atoi(buffer);
  3790  0005F0  0E31               	movlw	low RX2_ISR@buffer
  3791  0005F2  6E07               	movwf	atoi@s,c
  3792  0005F4  0E00               	movlw	high RX2_ISR@buffer
  3793  0005F6  6E08               	movwf	atoi@s+1,c
  3794  0005F8  EC24  F005         	call	_atoi	;wreg free
  3795  0005FC  C007  F300         	movff	?_atoi,_B
  3796  000600  C008  F301         	movff	?_atoi+1,_B+1
  3797  000604  D000               	goto	i2l1967
  3798  000606                     i2l1967:
  3799                           
  3800                           ;main.c: 150: beginB=0;
  3801  000606  0E00               	movlw	0
  3802  000608  6E2E               	movwf	_beginB,c
  3803                           
  3804                           ;main.c: 153: compteur=0;
  3805  00060A  0E00               	movlw	0
  3806  00060C  6E2D               	movwf	RX2_ISR@compteur,c
  3807                           
  3808                           ;main.c: 154: buffer[3]='\0';
  3809  00060E  0E00               	movlw	0
  3810  000610  6E34               	movwf	RX2_ISR@buffer+3,c
  3811                           
  3812                           ;main.c: 155: buffer[2]='\0';
  3813  000612  0E00               	movlw	0
  3814  000614  6E33               	movwf	RX2_ISR@buffer+2,c
  3815                           
  3816                           ;main.c: 156: buffer[1]='\0';
  3817  000616  0E00               	movlw	0
  3818  000618  6E32               	movwf	RX2_ISR@buffer+1,c
  3819                           
  3820                           ;main.c: 157: buffer[0]='\0';
  3821  00061A  0E00               	movlw	0
  3822  00061C  6E31               	movwf	RX2_ISR@buffer,c
  3823  00061E  D000               	goto	i2l1979
  3824  000620                     i2l1979:
  3825                           
  3826                           ;main.c: 158: }
  3827                           ;main.c: 159: }
  3828                           ;main.c: 161: if (input[0]=='R')
  3829  000620  0E52               	movlw	82
  3830  000622  181C               	xorwf	RX2_ISR@input,w,c
  3831  000624  A4D8               	btfss	status,2,c
  3832  000626  D003               	goto	i2l1983
  3833                           
  3834                           ;main.c: 162: beginR=1;
  3835  000628  0E01               	movlw	1
  3836  00062A  6E30               	movwf	_beginR,c
  3837  00062C  D000               	goto	i2l1983
  3838  00062E                     i2l1983:
  3839                           
  3840                           ;main.c: 163: if (input[0]=='G')
  3841  00062E  0E47               	movlw	71
  3842  000630  181C               	xorwf	RX2_ISR@input,w,c
  3843  000632  A4D8               	btfss	status,2,c
  3844  000634  D003               	goto	i2l1987
  3845                           
  3846                           ;main.c: 164: beginG=1;
  3847  000636  0E01               	movlw	1
  3848  000638  6E2F               	movwf	_beginG,c
  3849  00063A  D000               	goto	i2l1987
  3850  00063C                     i2l1987:
  3851                           
  3852                           ;main.c: 165: if (input[0]=='B')
  3853  00063C  0E42               	movlw	66
  3854  00063E  181C               	xorwf	RX2_ISR@input,w,c
  3855  000640  A4D8               	btfss	status,2,c
  3856  000642  D003               	goto	i2l222
  3857                           
  3858                           ;main.c: 166: beginB=1;
  3859  000644  0E01               	movlw	1
  3860  000646  6E2E               	movwf	_beginB,c
  3861  000648  D000               	goto	i2l222
  3862  00064A                     i2l222:
  3863  00064A  C01B  FFF5         	movff	??_RX2_ISR+13,tablat
  3864  00064E  C01A  FFF8         	movff	??_RX2_ISR+12,tblptru
  3865  000652  C019  FFF7         	movff	??_RX2_ISR+11,tblptrh
  3866  000656  C018  FFF6         	movff	??_RX2_ISR+10,tblptrl
  3867  00065A  C017  FFF4         	movff	??_RX2_ISR+9,prodh
  3868  00065E  C016  FFF3         	movff	??_RX2_ISR+8,prodl
  3869  000662  C015  FFDA         	movff	??_RX2_ISR+7,fsr2h
  3870  000666  C014  FFD9         	movff	??_RX2_ISR+6,fsr2l
  3871  00066A  C013  FFE2         	movff	??_RX2_ISR+5,fsr1h
  3872  00066E  C012  FFE1         	movff	??_RX2_ISR+4,fsr1l
  3873  000672  C011  FFEA         	movff	??_RX2_ISR+3,fsr0h
  3874  000676  C010  FFE9         	movff	??_RX2_ISR+2,fsr0l
  3875  00067A  C00F  FFFB         	movff	??_RX2_ISR+1,pclatu
  3876  00067E  C00E  FFFA         	movff	??_RX2_ISR,pclath
  3877  000682  0011               	retfie		f
  3878  000684                     __end_of_RX2_ISR:
  3879                           	opt stack 0
  3880                           pclatu	equ	0xFFB
  3881                           pclath	equ	0xFFA
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           intcon2	equ	0xFF1
  3890                           postinc0	equ	0xFEE
  3891                           fsr0h	equ	0xFEA
  3892                           fsr0l	equ	0xFE9
  3893                           wreg	equ	0xFE8
  3894                           plusw1	equ	0xFE3
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           bsr	equ	0xFE0
  3898                           indf2	equ	0xFDF
  3899                           plusw2	equ	0xFDB
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _atoi *****************
  3905 ;; Defined at:
  3906 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3909 ;;		 -> RX2_ISR@buffer(16), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  a               2   11[COMRAM] int 
  3912 ;;  sign            1   10[COMRAM] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2    6[COMRAM] int 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;Total ram usage:        7 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    1
  3929 ;; This function calls:
  3930 ;;		___wmul
  3931 ;;		_isdigit
  3932 ;; This function is called by:
  3933 ;;		_RX2_ISR
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text18
  3938  000A48                     __ptext18:
  3939                           	opt stack 0
  3940  000A48                     _atoi:
  3941                           	opt stack 23
  3942                           
  3943                           ;incstack = 0
  3944  000A48  D003               	goto	i2l1695
  3945  000A4A                     i2l1693:
  3946  000A4A  4A07               	infsnz	atoi@s,f,c
  3947  000A4C  2A08               	incf	atoi@s+1,f,c
  3948  000A4E  D000               	goto	i2l1695
  3949  000A50                     i2l1695:
  3950  000A50  C007  FFD9         	movff	atoi@s,fsr2l
  3951  000A54  C008  FFDA         	movff	atoi@s+1,fsr2h
  3952  000A58  0E20               	movlw	32
  3953  000A5A  18DE               	xorwf	postinc2,w,c
  3954  000A5C  B4D8               	btfsc	status,2,c
  3955  000A5E  D7F5               	goto	i2l1693
  3956  000A60  C007  FFD9         	movff	atoi@s,fsr2l
  3957  000A64  C008  FFDA         	movff	atoi@s+1,fsr2h
  3958  000A68  0E09               	movlw	9
  3959  000A6A  18DE               	xorwf	postinc2,w,c
  3960  000A6C  B4D8               	btfsc	status,2,c
  3961  000A6E  D7ED               	goto	i2l1693
  3962  000A70  0E00               	movlw	0
  3963  000A72  6E0D               	movwf	atoi@a+1,c
  3964  000A74  0E00               	movlw	0
  3965  000A76  6E0C               	movwf	atoi@a,c
  3966  000A78  0E00               	movlw	0
  3967  000A7A  6E0B               	movwf	atoi@sign,c
  3968  000A7C  C007  FFD9         	movff	atoi@s,fsr2l
  3969  000A80  C008  FFDA         	movff	atoi@s+1,fsr2h
  3970  000A84  0E2D               	movlw	45
  3971  000A86  18DE               	xorwf	postinc2,w,c
  3972  000A88  A4D8               	btfss	status,2,c
  3973  000A8A  D002               	goto	i2l1705
  3974  000A8C  2A0B               	incf	atoi@sign,f,c
  3975  000A8E  D025               	goto	i2l1711
  3976  000A90                     i2l1705:
  3977  000A90  C007  FFD9         	movff	atoi@s,fsr2l
  3978  000A94  C008  FFDA         	movff	atoi@s+1,fsr2h
  3979  000A98  0E2B               	movlw	43
  3980  000A9A  18DE               	xorwf	postinc2,w,c
  3981  000A9C  A4D8               	btfss	status,2,c
  3982  000A9E  D020               	goto	i2l1713
  3983  000AA0  D01C               	goto	i2l1711
  3984  000AA2  D01E               	goto	i2l1713
  3985  000AA4                     i2l1709:
  3986  000AA4  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3987  000AA8  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3988  000AAC  0E00               	movlw	0
  3989  000AAE  6E04               	movwf	___wmul@multiplicand+1,c
  3990  000AB0  0E0A               	movlw	10
  3991  000AB2  6E03               	movwf	___wmul@multiplicand,c
  3992  000AB4  EC80  F007         	call	___wmul	;wreg free
  3993  000AB8  C007  FFD9         	movff	atoi@s,fsr2l
  3994  000ABC  C008  FFDA         	movff	atoi@s+1,fsr2h
  3995  000AC0  50DF               	movf	indf2,w,c
  3996  000AC2  6E09               	movwf	??_atoi& (0+255),c
  3997  000AC4  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3998  000AC6  5001               	movf	?___wmul,w,c
  3999  000AC8  2609               	addwf	??_atoi,f,c
  4000  000ACA  5002               	movf	?___wmul+1,w,c
  4001  000ACC  220A               	addwfc	??_atoi+1,f,c
  4002  000ACE  0ED0               	movlw	208
  4003  000AD0  2409               	addwf	??_atoi,w,c
  4004  000AD2  6E0C               	movwf	atoi@a,c
  4005  000AD4  0EFF               	movlw	255
  4006  000AD6  200A               	addwfc	??_atoi+1,w,c
  4007  000AD8  6E0D               	movwf	atoi@a+1,c
  4008  000ADA                     i2l1711:
  4009  000ADA  4A07               	infsnz	atoi@s,f,c
  4010  000ADC  2A08               	incf	atoi@s+1,f,c
  4011  000ADE  D000               	goto	i2l1713
  4012  000AE0                     i2l1713:
  4013  000AE0  C007  FFD9         	movff	atoi@s,fsr2l
  4014  000AE4  C008  FFDA         	movff	atoi@s+1,fsr2h
  4015  000AE8  50DF               	movf	indf2,w,c
  4016  000AEA  EC94  F007         	call	_isdigit
  4017  000AEE  B0D8               	btfsc	status,0,c
  4018  000AF0  D7D9               	goto	i2l1709
  4019  000AF2  500B               	movf	atoi@sign,w,c
  4020  000AF4  B4D8               	btfsc	status,2,c
  4021  000AF6  D00D               	goto	i2l444
  4022  000AF8  C00C  F009         	movff	atoi@a,??_atoi
  4023  000AFC  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  4024  000B00  1E09               	comf	??_atoi,f,c
  4025  000B02  1E0A               	comf	??_atoi+1,f,c
  4026  000B04  4A09               	infsnz	??_atoi,f,c
  4027  000B06  2A0A               	incf	??_atoi+1,f,c
  4028  000B08  C009  F007         	movff	??_atoi,?_atoi
  4029  000B0C  C00A  F008         	movff	??_atoi+1,?_atoi+1
  4030  000B10  0012               	return	
  4031  000B12                     i2l444:
  4032  000B12  C00C  F007         	movff	atoi@a,?_atoi
  4033  000B16  C00D  F008         	movff	atoi@a+1,?_atoi+1
  4034  000B1A  0012               	return		;funcret
  4035  000B1C                     __end_of_atoi:
  4036                           	opt stack 0
  4037                           pclatu	equ	0xFFB
  4038                           pclath	equ	0xFFA
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           intcon	equ	0xFF2
  4046                           intcon2	equ	0xFF1
  4047                           postinc0	equ	0xFEE
  4048                           fsr0h	equ	0xFEA
  4049                           fsr0l	equ	0xFE9
  4050                           wreg	equ	0xFE8
  4051                           plusw1	equ	0xFE3
  4052                           fsr1h	equ	0xFE2
  4053                           fsr1l	equ	0xFE1
  4054                           bsr	equ	0xFE0
  4055                           indf2	equ	0xFDF
  4056                           postinc2	equ	0xFDE
  4057                           plusw2	equ	0xFDB
  4058                           fsr2h	equ	0xFDA
  4059                           fsr2l	equ	0xFD9
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _isdigit *****************
  4063 ;; Defined at:
  4064 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  c               1    wreg     unsigned char 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  c               1    2[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;		None               void
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;Total ram usage:        3 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_atoi
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text19
  4092  000F28                     __ptext19:
  4093                           	opt stack 0
  4094  000F28                     _isdigit:
  4095                           	opt stack 23
  4096                           
  4097                           ;incstack = 0
  4098                           ;isdigit@c stored from wreg
  4099  000F28  6E03               	movwf	isdigit@c,c
  4100  000F2A  0E00               	movlw	0
  4101  000F2C  6E02               	movwf	_isdigit$859,c
  4102  000F2E  0E3A               	movlw	58
  4103  000F30  6003               	cpfslt	isdigit@c,c
  4104  000F32  D006               	goto	i2l1567
  4105  000F34  0E2F               	movlw	47
  4106  000F36  6403               	cpfsgt	isdigit@c,c
  4107  000F38  D003               	goto	i2l1567
  4108  000F3A  0E01               	movlw	1
  4109  000F3C  6E02               	movwf	_isdigit$859,c
  4110  000F3E  D000               	goto	i2l1567
  4111  000F40                     i2l1567:
  4112  000F40  C002  F001         	movff	_isdigit$859,??_isdigit
  4113  000F44  3001               	rrcf	??_isdigit,w,c
  4114  000F46  0012               	return	
  4115  000F48  0012               	return		;funcret
  4116  000F4A                     __end_of_isdigit:
  4117                           	opt stack 0
  4118                           pclatu	equ	0xFFB
  4119                           pclath	equ	0xFFA
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           intcon2	equ	0xFF1
  4128                           postinc0	equ	0xFEE
  4129                           fsr0h	equ	0xFEA
  4130                           fsr0l	equ	0xFE9
  4131                           wreg	equ	0xFE8
  4132                           plusw1	equ	0xFE3
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           bsr	equ	0xFE0
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           plusw2	equ	0xFDB
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function ___wmul *****************
  4144 ;; Defined at:
  4145 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  multiplier      2    0[COMRAM] unsigned int 
  4148 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  product         2    4[COMRAM] unsigned int 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2    0[COMRAM] unsigned int 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, prodl, prodh
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;Total ram usage:        6 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_atoi
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text20
  4174  000F00                     __ptext20:
  4175                           	opt stack 0
  4176  000F00                     ___wmul:
  4177                           	opt stack 23
  4178                           
  4179                           ;incstack = 0
  4180  000F00  5001               	movf	___wmul@multiplier,w,c
  4181  000F02  0203               	mulwf	___wmul@multiplicand,c
  4182  000F04  CFF3 F005          	movff	prodl,___wmul@product
  4183  000F08  CFF4 F006          	movff	prodh,___wmul@product+1
  4184  000F0C  5001               	movf	___wmul@multiplier,w,c
  4185  000F0E  0204               	mulwf	___wmul@multiplicand+1,c
  4186  000F10  50F3               	movf	prodl,w,c
  4187  000F12  2606               	addwf	___wmul@product+1,f,c
  4188  000F14  5002               	movf	___wmul@multiplier+1,w,c
  4189  000F16  0203               	mulwf	___wmul@multiplicand,c
  4190  000F18  50F3               	movf	prodl,w,c
  4191  000F1A  2606               	addwf	___wmul@product+1,f,c
  4192  000F1C  C005  F001         	movff	___wmul@product,?___wmul
  4193  000F20  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4194  000F24  0012               	return	
  4195  000F26  0012               	return		;funcret
  4196  000F28                     __end_of___wmul:
  4197                           	opt stack 0
  4198  0000                     pclatu	equ	0xFFB
  4199                           pclath	equ	0xFFA
  4200                           tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           prodh	equ	0xFF4
  4205                           prodl	equ	0xFF3
  4206                           intcon	equ	0xFF2
  4207                           intcon2	equ	0xFF1
  4208                           postinc0	equ	0xFEE
  4209                           fsr0h	equ	0xFEA
  4210                           fsr0l	equ	0xFE9
  4211                           wreg	equ	0xFE8
  4212                           plusw1	equ	0xFE3
  4213                           fsr1h	equ	0xFE2
  4214                           fsr1l	equ	0xFE1
  4215                           bsr	equ	0xFE0
  4216                           indf2	equ	0xFDF
  4217                           postinc2	equ	0xFDE
  4218                           plusw2	equ	0xFDB
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           pclatu	equ	0xFFB
  4223                           pclath	equ	0xFFA
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           intcon	equ	0xFF2
  4231                           intcon2	equ	0xFF1
  4232                           postinc0	equ	0xFEE
  4233                           fsr0h	equ	0xFEA
  4234                           fsr0l	equ	0xFE9
  4235                           wreg	equ	0xFE8
  4236                           plusw1	equ	0xFE3
  4237                           fsr1h	equ	0xFE2
  4238                           fsr1l	equ	0xFE1
  4239                           bsr	equ	0xFE0
  4240                           indf2	equ	0xFDF
  4241                           postinc2	equ	0xFDE
  4242                           plusw2	equ	0xFDB
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247                           	psect	rparam
  4248  0000                     pclatu	equ	0xFFB
  4249                           pclath	equ	0xFFA
  4250                           tblptru	equ	0xFF8
  4251                           tblptrh	equ	0xFF7
  4252                           tblptrl	equ	0xFF6
  4253                           tablat	equ	0xFF5
  4254                           prodh	equ	0xFF4
  4255                           prodl	equ	0xFF3
  4256                           intcon	equ	0xFF2
  4257                           intcon2	equ	0xFF1
  4258                           postinc0	equ	0xFEE
  4259                           fsr0h	equ	0xFEA
  4260                           fsr0l	equ	0xFE9
  4261                           wreg	equ	0xFE8
  4262                           plusw1	equ	0xFE3
  4263                           fsr1h	equ	0xFE2
  4264                           fsr1l	equ	0xFE1
  4265                           bsr	equ	0xFE0
  4266                           indf2	equ	0xFDF
  4267                           postinc2	equ	0xFDE
  4268                           plusw2	equ	0xFDB
  4269                           fsr2h	equ	0xFDA
  4270                           fsr2l	equ	0xFD9
  4271                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         639
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      64
    BANK0           160    108     123
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> RX2_ISR@buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Timer0_ISR in COMRAM

    _Timer0_ISR->i1_pwm
    i1_pwm->i1___awdiv

Critical Paths under _RX2_ISR in COMRAM

    _RX2_ISR->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _RX2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _RX2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _RX2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _RX2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _RX2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Critical Paths under _RX2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_ISR in BANK6

    None.

Critical Paths under _RX2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_ISR in BANK7

    None.

Critical Paths under _RX2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_ISR in BANK8

    None.

Critical Paths under _RX2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_ISR in BANK9

    None.

Critical Paths under _RX2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_ISR in BANK10

    None.

Critical Paths under _RX2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_ISR in BANK11

    None.

Critical Paths under _RX2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_ISR in BANK12

    None.

Critical Paths under _RX2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_ISR in BANK13

    None.

Critical Paths under _RX2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_ISR in BANK14

    None.

Critical Paths under _RX2_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    27      5    8489
                                             76 BANK0     32    27      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      69
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1027
                                             73 BANK0      3     1      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     618
                                             17 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2008
                                             25 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     411
                                             58 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2392
                                             28 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2346
                                             43 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Timer0_ISR                                          17    17      0     700
                                              0 BANK0     17    17      0
                              i1_pwm
 ---------------------------------------------------------------------------------
 (4) i1_pwm                                                3     1      2     700
                                             37 COMRAM     3     1      2
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (5) i1___awdiv                                            8     4      4     456
                                             29 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _RX2_ISR                                             16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (7) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _initialisation
     _initADC
     _initComms
     _initPWM
     _initTimer0
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _readADC

 _Timer0_ISR (ROOT)
   i1_pwm
     i1___awdiv

 _RX2_ISR (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      40       1       67.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     313       6        0.0%
DATA                 0      0     313       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 23 21:24:00 2015

                      _B 0300                        _G 0200                        _R 0100  
           ___awdiv@sign 0076                       bsr 000FE0      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l232 024E  
                    l250 0DAE                      l252 0DB2                      l253 0DB8  
                    l255 0DEC                      l256 0DF0                      l660 08EE  
                    l596 0A0E                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _RC0 007C10                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _PSA 007EAB                      _pwm 0BEC                      prod 000FF3  
                    wreg 000FE8               _TXSTA2bits 000FBA             ___ftdiv@cntr 0094  
           ___ftdiv@sign 0099                     l2021 0204                     l2013 01BE  
                   l2015 01D0                     l2019 01F2                     l1531 0958  
                   l1611 0BE0                     l1603 0BBA                     l1541 09EE  
                   l1533 0968                     l1543 09FE                     l1535 099A  
                   l1527 0942                     l1607 0BCA                     l1555 0A38  
                   l1539 09BC                     l1811 0486                     l1731 0DE0  
                   l1723 0DBE                     l1549 0A1A                     l1821 04CA  
                   l1661 0BF2                     l1733 0DE4                     l1725 0DD6  
                   l1751 084A                     l1815 04A6                     l1591 0B70  
                   l1745 0810                     l1825 04EA                     l1593 0B7E  
                   l1585 0B52                     l1673 0C42                     l1681 0C6A  
                   l1771 08AC                     l1819 04C2                     l1595 0B88  
                   l1579 0B3A                     l1667 0C1A                     l1781 0900  
                   l1829 0506                     l1861 0766                     l1791 03FC  
                   l1871 07A4                     l1839 06BE                     l1857 0752  
                   l1875 07C2                     l1867 0784                     l1797 0436  
                   l1869 0796                     l1993 0144                     l1997 016A  
                   l1999 017C                     _ADON 007E10                     _CHS0 007E12  
                   _CHS1 007E13                     ?_pwm 00A9                     _T0IE 007F95  
                   _T0IF 007F92                     _T0CS 007EAD                     u1111 0826  
                   u1201 069A                     u1220 06E4                     u1141 03D8  
                   u1161 0412                     u1225 06DA                     u1091 07EC  
                   u1500 0248                     u1510 024A                     u1451 018A  
                   _PEIE 007F96                     _TMR0 000FD6         ??_initialisation 0071  
        __end_of_RX2_ISR 0684                     _atoi 0A48                     _main 0120  
           ___ftpack@arg 0071             ___ftpack@exp 0074                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 011C            __CFG_IESO$OFF 000000             ___ftmul@cntr 0089  
           ___param_bank 000010             ___ftmul@sign 008A             ___fttol@exp1 00A8  
           ___fttol@lval 00A4                    ??_pwm 00AB                    _DC2B0 007A84  
                  _DC2B1 007A85                    _DC3B0 007A6C                    _DC3B1 007A6D  
                  _DC4B0 007A54                    _DC4B1 007A55                    ?_atoi 0007  
                  ?_main 00AC           i1___awdiv@sign 0023          __end_of___awdiv 0BEC  
        __end_of___ftdiv 0928          __end_of___ftmul 052E          ___awdiv@divisor 0073  
        __end_of___fttol 07D6                    _T0PS0 007EA8                    _T0PS1 007EA9  
                  _T0PS2 007EAA                    _RC2IF 007D25                    i1l202 00D6  
                  i2l222 064A                    i2l444 0B12          ___awdiv@counter 0075  
                  _VCFG0 007E0C                    _VCFG1 007E0D                    _VNCFG 007E0B  
                  _TRISC 000F94                    i1_pwm 0D1A            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initADC 0F66  
        __end_of_readADC 0E14           __CFG_EBTRB$OFF 000000          __end_of_initPWM 0E66  
        __end_of_isdigit 0F4A            ___ftpack@sign 0075                    atoi@a 000C  
                  atoi@s 0007                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8       __size_ofi1___awdiv 0096  
             i1pwm@color 0028           __CFG_MCLRE$OFF 000000          __initialization 0E66  
           __end_of_atoi 0B1C             __end_of_main 03C2                   ??_atoi 0009  
                 ??_main 00B1            ___fttol@sign1 00A3            __activetblptr 000002  
         __CFG_RETEN$OFF 000000                   ?i1_pwm 0026                ??_RX2_ISR 000E  
                 _CCP2M2 007A82                   _CCP2M3 007A83                   _CCP3M2 007A6A  
                 _CCP3M3 007A6B                   _CCP4M2 007A52                   _CCP4M3 007A53  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR2L 000F51  
                 _CCPR3L 000F4E                   _CCPR4L 000F4B                   _T08BIT 007EAE  
       ___awdiv@dividend 0071                   _ANSEL1 007AE9                   _ANSEL2 007AEA  
                 _ANSEL3 007AEB         __end_of___ftpack 0A48                   i1l1623 0C9A  
                 i1l1635 0CC2                   i1l1651 0CFE                   i1l1637 0CCC  
                 i1l1629 0CAC                   i1l1655 0D0E                   i1l1647 0CF2  
                 i1l1639 0CD4                   i1l1905 0D8A          __CFG_BBSIZ$BB2K 000000  
                 i1l1891 0D42                   i1l1885 0D1E                   i1l1897 0D66  
                 i2l1711 0ADA                   i2l1713 0AE0                   i2l1705 0A90  
                 i2l1709 0AA4           __CFG_WDTEN$OFF 000000                   i2l1567 0F40  
                 i2l1693 0A4A                   i2l1941 057A                   i2l1695 0A50  
                 i2l1951 05AA                   i2l1961 05E6                   i2l1955 05C6  
                 i2l1983 062E                   i2l1967 0606                   i2l1987 063C  
                 i2l1979 0620                   _RCREG2 000F7A         __end_of___lwtoft 0ED8  
                 _TMR0IE 007F95                   _SPBRG2 000F7B                   _TMR0IP 007F8A  
                 _TMR2ON 007E52                   _TXREG2 000F79               _Timer0_ISR 0018  
         __CFG_XINST$OFF 000000                   _beginB 002E                   _beginG 002F  
                 ___wmul 0F00                   _beginR 0030                ??___awdiv 0075  
         __CFG_STVREN$ON 000000                ??___ftdiv 0091                ??___ftmul 0082  
              ??___fttol 009E             readADC@tempo 0076                   _millis 002B  
                 clear_0 0E6C                   clear_1 0E78                   clear_2 0E84  
                 clear_3 0E90                   clear_4 0E9C         ___awdiv@quotient 0077  
              ??_initADC 0071    ___ftmul@f3_as_product 0086                ??_readADC 0073  
      __end_ofi1___awdiv 0D1A                ??_initPWM 0071                ??_isdigit 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0EA2            ___rparam_used 000001  
             ___ftdiv@f1 008B               ___ftdiv@f2 008E               ___ftdiv@f3 0095  
             ___ftmul@f1 007C               ___ftmul@f2 007F            __end_ofi1_pwm 0DA2  
             ___fttol@f1 009A           __pcstackCOMRAM 0001               ___lwtoft@c 0079  
                ??i1_pwm 0028               __pbssBANK0 00CC               __pbssBANK1 0100  
             __pbssBANK2 0200               __pbssBANK3 0300          __CFG_PLLCFG$OFF 000000  
     __size_of_initComms 0028           main@amplitude1 00C0           main@amplitude2 00C2  
         main@amplitude3 00C4              ?_Timer0_ISR 0001                  ?___wmul 0001  
              ?___ftpack 0071                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
              ?___lwtoft 0079       i1___awdiv@dividend 001E         __CFG_CANMX$PORTB 000000  
                _SPBRGH2 000F7C                  _RX2_ISR 0008          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000       i1___awdiv@quotient 0024  
             _initTimer0 0F66                  ___awdiv 0B1C                  ___ftdiv 07D6  
        __size_of___wmul 0028                  ___ftmul 03C2                  ___fttol 0684  
                __pcinit 0E66               ??___ftpack 0076                  __ramtop 0F00  
                __ptext0 0120                  __ptext1 0DA2                  __ptext2 0BEC  
                __ptext3 0B1C                  __ptext4 0F7C                  __ptext5 0F66  
                __ptext6 0E14                  __ptext7 0ED8                  __ptext8 0F4A  
                __ptext9 0EAC        __end_of_initComms 0F00               ??___lwtoft 007C  
                _initADC 0F4A                  _readADC 0DA2                  _initPWM 0E14  
                _isdigit 0F28             __size_of_pwm 0098        __CFG_MSSPMSK$MSK7 000000  
    __size_of_Timer0_ISR 0104                  main@msg 00B1           __pintcode_body 052E  
   end_of_initialization 0EA2            __Lmediumconst 0000                  int_func 052E  
                postinc0 000FEE                  postinc2 000FDE  __size_of_initialisation 0012  
             main@F19169 00CC         __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93  
              i1___awdiv 0C84              ___ftdiv@exp 0098              ___ftmul@exp 0085  
            ?_initTimer0 0001           __end_of___wmul 0F28      start_initialization 0E66  
             ?i1___awdiv 001E              __end_of_pwm 0C84             ??_Timer0_ISR 0060  
               ??___wmul 0005        __size_of___ftpack 0120              __pbssCOMRAM 0029  
      __size_of___lwtoft 002C            __pcstackBANK0 0060                 ?_RX2_ISR 0001  
     __end_of_Timer0_ISR 011C            RX2_ISR@F19163 0029      __size_of_initTimer0 0016  
              __pintcode 0008           _initialisation 0F7C                 ?___awdiv 0071  
               ?___ftdiv 008B                 ?___ftmul 007C                 ?___fttol 009A  
      i1___awdiv@divisor 0020              __pintcodelo 0018        i1___awdiv@counter 0022  
          RX2_ISR@buffer 0031                 ?_initADC 0001                 ?_readADC 0071  
               ?_initPWM 0001                 _BAUDCON2 000FB9                 ?_isdigit 0001  
         __size_ofi1_pwm 0088                _initComms 0ED8              ??i1___awdiv 0022  
         ___wmul@product 0005                 _PIE3bits 000FA3   __end_of_initialisation 0F8E  
               _PIR3bits 000FA4                 _GO_nDONE 007E11                 _RCONbits 000FD0  
        main@old_SWITCH1 00C6          RX2_ISR@compteur 002D                 _TRIGSEL0 007E0E  
               _TRIGSEL1 007E0F        ___wmul@multiplier 0001         __CFG_SOSCSEL$DIG 000000  
              main@delay 00C8               ?_initComms 0001         __size_of_RX2_ISR 067C  
               __Hrparam 0000          ?_initialisation 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000             ??_initTimer0 0071         __size_of___awdiv 00D0  
       __size_of___ftdiv 0152         __size_of___ftmul 016C         __size_of___fttol 0152  
         readADC@channel 0075                 ___ftpack 0928              _isdigit$859 0002  
               ___lwtoft 0EAC         __size_of_initADC 001C         __size_of_readADC 0072  
       __size_of_initPWM 0052         __size_of_isdigit 0022                 __ptext10 0684  
               __ptext11 03C2                 __ptext20 0F00                 __ptext12 07D6  
               __ptext13 0928                 __ptext15 0D1A                 __ptext16 0C84  
               __ptext18 0A48                 __ptext19 0F28             RX2_ISR@input 001C  
     __end_of_initTimer0 0F7C            __size_of_atoi 00D4            __size_of_main 02A2  
               atoi@sign 000B                 main@argc 00AC                 main@argv 00AE  
               main@mode 00C7      __CFG_INTOSCSEL$HIGH 000000               _INTCONbits 000FF2  
            ??_initComms 0071                 isdigit@c 0003                 intlevel1 0000  
               intlevel2 0000             pwm@dutycycle 00A9               _RCSTA2bits 000FA6  
               pwm@color 00AB       __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000  
         i1pwm@dutycycle 0026  
