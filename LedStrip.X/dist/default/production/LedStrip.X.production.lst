

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 23 20:56:25 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _CCPR2L	set	3921
    38  0000                     _CCPR3L	set	3918
    39  0000                     _CCPR4L	set	3915
    40  0000                     _ANSEL1	set	31465
    41  0000                     _ANSEL2	set	31466
    42  0000                     _ANSEL3	set	31467
    43  0000                     _CCP2M2	set	31362
    44  0000                     _CCP2M3	set	31363
    45  0000                     _CCP3M2	set	31338
    46  0000                     _CCP3M3	set	31339
    47  0000                     _CCP4M2	set	31314
    48  0000                     _CCP4M3	set	31315
    49  0000                     _DC2B0	set	31364
    50  0000                     _DC2B1	set	31365
    51  0000                     _DC3B0	set	31340
    52  0000                     _DC3B1	set	31341
    53  0000                     _DC4B0	set	31316
    54  0000                     _DC4B1	set	31317
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADRESL	set	4035
    57  0000                     _BAUDCON2	set	4025
    58  0000                     _INTCONbits	set	4082
    59  0000                     _PIE3bits	set	4003
    60  0000                     _PIR3bits	set	4004
    61  0000                     _PR2	set	4043
    62  0000                     _RCONbits	set	4048
    63  0000                     _RCREG2	set	3962
    64  0000                     _RCSTA2bits	set	4006
    65  0000                     _SPBRG2	set	3963
    66  0000                     _SPBRGH2	set	3964
    67  0000                     _TRISBbits	set	3987
    68  0000                     _TRISC	set	3988
    69  0000                     _TXREG2	set	3961
    70  0000                     _TXSTA2bits	set	4026
    71  0000                     _ADON	set	32272
    72  0000                     _CHS0	set	32274
    73  0000                     _CHS1	set	32275
    74  0000                     _GIE	set	32663
    75  0000                     _GO_nDONE	set	32273
    76  0000                     _PEIE	set	32662
    77  0000                     _PSA	set	32427
    78  0000                     _RC0	set	31760
    79  0000                     _RC2IF	set	32037
    80  0000                     _T08BIT	set	32430
    81  0000                     _T0CS	set	32429
    82  0000                     _T0IE	set	32661
    83  0000                     _T0IF	set	32658
    84  0000                     _T0PS0	set	32424
    85  0000                     _T0PS1	set	32425
    86  0000                     _T0PS2	set	32426
    87  0000                     _T2CKPS0	set	32336
    88  0000                     _T2CKPS1	set	32337
    89  0000                     _TMR0IE	set	32661
    90  0000                     _TMR0IP	set	32650
    91  0000                     _TMR2ON	set	32338
    92  0000                     _TRIGSEL0	set	32270
    93  0000                     _TRIGSEL1	set	32271
    94  0000                     _VCFG0	set	32268
    95  0000                     _VCFG1	set	32269
    96  0000                     _VNCFG	set	32267
    97                           
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 168 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;  argc            2   76[BANK0 ] int 
   106 ;;  argv            3   78[BANK0 ] PTR PTR unsigned char 
   107 ;; Auto vars:     Size  Location     Type
   108 ;;  msg            15   81[BANK0 ] unsigned char [15]
   109 ;;  delay           4  104[BANK0 ] long 
   110 ;;  amplitude3      2  100[BANK0 ] unsigned int 
   111 ;;  amplitude2      2   98[BANK0 ] unsigned int 
   112 ;;  amplitude1      2   96[BANK0 ] unsigned int 
   113 ;;  mode            1  103[BANK0 ] unsigned char 
   114 ;;  old_SWITCH1     1  102[BANK0 ] unsigned char 
   115 ;; Return value:  Size  Location     Type
   116 ;;                  2   76[BANK0 ] int 
   117 ;; Registers used:
   118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   124 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   125 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   127 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   128 ;;Total ram usage:       32 bytes
   129 ;; Hardware stack levels required when called:    8
   130 ;; This function calls:
   131 ;;		___ftdiv
   132 ;;		___ftmul
   133 ;;		___fttol
   134 ;;		___lwtoft
   135 ;;		_initialisation
   136 ;;		_pwm
   137 ;;		_readADC
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144  000118                     __ptext0:
   145                           	opt stack 0
   146  000118                     _main:
   147                           	opt stack 23
   148                           
   149                           ;main.c: 170: long int delay=0;
   150                           
   151                           ;incstack = 0
   152  000118  0E00               	movlw	0
   153  00011A  0100               	movlb	0	; () banked
   154  00011C  6FC8               	movwf	main@delay& (0+255),b
   155  00011E  0E00               	movlw	0
   156  000120  6FC9               	movwf	(main@delay+1)& (0+255),b
   157  000122  0E00               	movlw	0
   158  000124  6FCA               	movwf	(main@delay+2)& (0+255),b
   159  000126  0E00               	movlw	0
   160  000128  6FCB               	movwf	(main@delay+3)& (0+255),b
   161                           
   162                           ;main.c: 171: for(delay=0;delay<100000;delay++);
   163  00012A  0E00               	movlw	0
   164  00012C  0100               	movlb	0	; () banked
   165  00012E  6FC8               	movwf	main@delay& (0+255),b
   166  000130  0E00               	movlw	0
   167  000132  6FC9               	movwf	(main@delay+1)& (0+255),b
   168  000134  0E00               	movlw	0
   169  000136  6FCA               	movwf	(main@delay+2)& (0+255),b
   170  000138  0E00               	movlw	0
   171  00013A  6FCB               	movwf	(main@delay+3)& (0+255),b
   172  00013C                     l1987:
   173                           
   174                           ; BSR set to: 0
   175  00013C  0100               	movlb	0	; () banked
   176  00013E  BFCB               	btfsc	(main@delay+3)& (0+255),7,b
   177  000140  D010               	goto	l1991
   178  000142  0100               	movlb	0	; () banked
   179  000144  51CB               	movf	(main@delay+3)& (0+255),w,b
   180  000146  E116               	bnz	l1993
   181  000148  0EA0               	movlw	160
   182  00014A  0100               	movlb	0	; () banked
   183  00014C  5DC8               	subwf	main@delay& (0+255),w,b
   184  00014E  0E86               	movlw	134
   185  000150  0100               	movlb	0	; () banked
   186  000152  59C9               	subwfb	(main@delay+1)& (0+255),w,b
   187  000154  0E01               	movlw	1
   188  000156  0100               	movlb	0	; () banked
   189  000158  59CA               	subwfb	(main@delay+2)& (0+255),w,b
   190  00015A  B0D8               	btfsc	status,0,c
   191  00015C  D00B               	goto	l1993
   192  00015E  D001               	goto	l1991
   193                           
   194                           ; BSR set to: 0
   195  000160  D009               	goto	l1993
   196  000162                     l1991:
   197                           
   198                           ; BSR set to: 0
   199  000162  0E01               	movlw	1
   200  000164  0100               	movlb	0	; () banked
   201  000166  27C8               	addwf	main@delay& (0+255),f,b
   202  000168  0E00               	movlw	0
   203  00016A  23C9               	addwfc	(main@delay+1)& (0+255),f,b
   204  00016C  23CA               	addwfc	(main@delay+2)& (0+255),f,b
   205  00016E  23CB               	addwfc	(main@delay+3)& (0+255),f,b
   206  000170  D7E5               	goto	l1987
   207  000172  D000               	goto	l1993
   208  000174                     l1993:
   209                           
   210                           ; BSR set to: 0
   211                           ;main.c: 172: initialisation();
   212  000174  ECBA  F007         	call	_initialisation	;wreg free
   213                           
   214                           ;main.c: 173: char msg[15]="";
   215  000178  EE20  F0CC         	lfsr	2,main@F19169
   216  00017C  EE10  F0B1         	lfsr	1,main@msg
   217  000180  0E0E               	movlw	14
   218  000182                     u1451:
   219  000182  CFDB FFE3          	movff	plusw2,plusw1
   220  000186  06E8               	decf	wreg,f,c
   221  000188  E2FC               	bc	u1451
   222                           
   223                           ;main.c: 175: char mode=0;
   224  00018A  0E00               	movlw	0
   225  00018C  0100               	movlb	0	; () banked
   226  00018E  6FC7               	movwf	main@mode& (0+255),b
   227                           
   228                           ; BSR set to: 0
   229                           ;main.c: 176: char old_SWITCH1=0;
   230  000190  0E00               	movlw	0
   231  000192  0100               	movlb	0	; () banked
   232  000194  6FC6               	movwf	main@old_SWITCH1& (0+255),b
   233                           
   234                           ; BSR set to: 0
   235                           ;main.c: 182: unsigned int amplitude1=0;
   236  000196  0E00               	movlw	0
   237  000198  0100               	movlb	0	; () banked
   238  00019A  6FC1               	movwf	(main@amplitude1+1)& (0+255),b
   239  00019C  0E00               	movlw	0
   240  00019E  6FC0               	movwf	main@amplitude1& (0+255),b
   241                           
   242                           ; BSR set to: 0
   243                           ;main.c: 183: unsigned int amplitude2=0;
   244  0001A0  0E00               	movlw	0
   245  0001A2  0100               	movlb	0	; () banked
   246  0001A4  6FC3               	movwf	(main@amplitude2+1)& (0+255),b
   247  0001A6  0E00               	movlw	0
   248  0001A8  6FC2               	movwf	main@amplitude2& (0+255),b
   249                           
   250                           ; BSR set to: 0
   251                           ;main.c: 184: unsigned int amplitude3=0;
   252  0001AA  0E00               	movlw	0
   253  0001AC  0100               	movlb	0	; () banked
   254  0001AE  6FC5               	movwf	(main@amplitude3+1)& (0+255),b
   255  0001B0  0E00               	movlw	0
   256  0001B2  6FC4               	movwf	main@amplitude3& (0+255),b
   257  0001B4  D000               	goto	l2007
   258  0001B6                     l2007:
   259                           
   260                           ;main.c: 187: for(delay=0;delay<100;delay++);
   261  0001B6  0E00               	movlw	0
   262  0001B8  0100               	movlb	0	; () banked
   263  0001BA  6FC8               	movwf	main@delay& (0+255),b
   264  0001BC  0E00               	movlw	0
   265  0001BE  6FC9               	movwf	(main@delay+1)& (0+255),b
   266  0001C0  0E00               	movlw	0
   267  0001C2  6FCA               	movwf	(main@delay+2)& (0+255),b
   268  0001C4  0E00               	movlw	0
   269  0001C6  6FCB               	movwf	(main@delay+3)& (0+255),b
   270  0001C8                     l2009:
   271                           
   272                           ; BSR set to: 0
   273  0001C8  0100               	movlb	0	; () banked
   274  0001CA  BFCB               	btfsc	(main@delay+3)& (0+255),7,b
   275  0001CC  D00E               	goto	l2013
   276  0001CE  0100               	movlb	0	; () banked
   277  0001D0  51CB               	movf	(main@delay+3)& (0+255),w,b
   278  0001D2  0100               	movlb	0	; () banked
   279  0001D4  11CA               	iorwf	(main@delay+2)& (0+255),w,b
   280  0001D6  0100               	movlb	0	; () banked
   281  0001D8  11C9               	iorwf	(main@delay+1)& (0+255),w,b
   282  0001DA  E110               	bnz	l2015
   283  0001DC  0E64               	movlw	100
   284  0001DE  0100               	movlb	0	; () banked
   285  0001E0  5DC8               	subwf	main@delay& (0+255),w,b
   286  0001E2  B0D8               	btfsc	status,0,c
   287  0001E4  D00B               	goto	l2015
   288  0001E6  D001               	goto	l2013
   289                           
   290                           ; BSR set to: 0
   291  0001E8  D009               	goto	l2015
   292  0001EA                     l2013:
   293                           
   294                           ; BSR set to: 0
   295  0001EA  0E01               	movlw	1
   296  0001EC  0100               	movlb	0	; () banked
   297  0001EE  27C8               	addwf	main@delay& (0+255),f,b
   298  0001F0  0E00               	movlw	0
   299  0001F2  23C9               	addwfc	(main@delay+1)& (0+255),f,b
   300  0001F4  23CA               	addwfc	(main@delay+2)& (0+255),f,b
   301  0001F6  23CB               	addwfc	(main@delay+3)& (0+255),f,b
   302  0001F8  D7E7               	goto	l2009
   303  0001FA  D000               	goto	l2015
   304  0001FC                     l2015:
   305                           
   306                           ; BSR set to: 0
   307                           ;main.c: 189: amplitude1=readADC(1);
   308  0001FC  0E01               	movlw	1
   309  0001FE  ECCD  F006         	call	_readADC
   310  000202  C071  F0C0         	movff	?_readADC,main@amplitude1
   311  000206  C072  F0C1         	movff	?_readADC+1,main@amplitude1+1
   312                           
   313                           ;main.c: 190: amplitude2=readADC(2);
   314  00020A  0E02               	movlw	2
   315  00020C  ECCD  F006         	call	_readADC
   316  000210  C071  F0C2         	movff	?_readADC,main@amplitude2
   317  000214  C072  F0C3         	movff	?_readADC+1,main@amplitude2+1
   318                           
   319                           ;main.c: 191: amplitude3=readADC(3);
   320  000218  0E03               	movlw	3
   321  00021A  ECCD  F006         	call	_readADC
   322  00021E  C071  F0C4         	movff	?_readADC,main@amplitude3
   323  000222  C072  F0C5         	movff	?_readADC+1,main@amplitude3+1
   324                           
   325                           ;main.c: 194: if (RC0==0 && old_SWITCH1==1)
   326  000226  B082               	btfsc	3970,0,c	;volatile
   327  000228  D00E               	goto	l230
   328  00022A  0100               	movlb	0	; () banked
   329  00022C  05C6               	decf	main@old_SWITCH1& (0+255),w,b
   330  00022E  A4D8               	btfss	status,2,c
   331  000230  D00A               	goto	l230
   332                           
   333                           ; BSR set to: 0
   334                           ;main.c: 195: {
   335                           ;main.c: 196: mode=!mode;
   336  000232  0100               	movlb	0	; () banked
   337  000234  51C7               	movf	main@mode& (0+255),w,b
   338  000236  0100               	movlb	0	; () banked
   339  000238  A4D8               	btfss	status,2,c
   340  00023A  D002               	goto	u1500
   341  00023C  0E01               	movlw	1
   342  00023E  D001               	goto	u1510
   343  000240                     u1500:
   344  000240  0E00               	movlw	0
   345  000242                     u1510:
   346  000242  0100               	movlb	0	; () banked
   347  000244  6FC7               	movwf	main@mode& (0+255),b
   348  000246                     l230:
   349                           
   350                           ;main.c: 197: }
   351                           ;main.c: 198: old_SWITCH1=RC0;
   352  000246  0E00               	movlw	0
   353  000248  B082               	btfsc	3970,0,c	;volatile
   354  00024A  0E01               	movlw	1
   355  00024C  0100               	movlb	0	; () banked
   356  00024E  6FC6               	movwf	main@old_SWITCH1& (0+255),b
   357                           
   358                           ; BSR set to: 0
   359                           ;main.c: 200: if (mode==1)
   360  000250  0100               	movlb	0	; () banked
   361  000252  05C7               	decf	main@mode& (0+255),w,b
   362  000254  A4D8               	btfss	status,2,c
   363  000256  D7AF               	goto	l2007
   364                           
   365                           ; BSR set to: 0
   366                           ;main.c: 201: {
   367                           ;main.c: 202: pwm('R',(int)( (float)R[0] * (float)amplitude1/65520.));
   368  000258  0EF0               	movlw	240
   369  00025A  0100               	movlb	0	; () banked
   370  00025C  6F8E               	movwf	___ftdiv@f2& (0+255),b
   371  00025E  0E7F               	movlw	127
   372  000260  0100               	movlb	0	; () banked
   373  000262  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   374  000264  0E47               	movlw	71
   375  000266  0100               	movlb	0	; () banked
   376  000268  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   377  00026A  C0C0  F079         	movff	main@amplitude1,___lwtoft@c
   378  00026E  C0C1  F07A         	movff	main@amplitude1+1,___lwtoft@c+1
   379  000272  EC52  F007         	call	___lwtoft	;wreg free
   380  000276  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   381  00027A  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   382  00027E  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   383  000282  C100  F079         	movff	_R,___lwtoft@c
   384  000286  C101  F07A         	movff	_R+1,___lwtoft@c+1
   385  00028A  EC52  F007         	call	___lwtoft	;wreg free
   386  00028E  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   387  000292  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   388  000296  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   389  00029A  ECDD  F001         	call	___ftmul	;wreg free
   390  00029E  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   391  0002A2  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   392  0002A6  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   393  0002AA  ECE7  F003         	call	___ftdiv	;wreg free
   394  0002AE  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   395  0002B2  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   396  0002B6  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   397  0002BA  EC3E  F003         	call	___fttol	;wreg free
   398  0002BE  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   399  0002C2  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   400  0002C6  0E52               	movlw	82
   401  0002C8  ECF2  F005         	call	_pwm
   402                           
   403                           ;main.c: 203: pwm('G',(int)( (float)G[0] * (float)amplitude2/65520.));
   404  0002CC  0EF0               	movlw	240
   405  0002CE  0100               	movlb	0	; () banked
   406  0002D0  6F8E               	movwf	___ftdiv@f2& (0+255),b
   407  0002D2  0E7F               	movlw	127
   408  0002D4  0100               	movlb	0	; () banked
   409  0002D6  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   410  0002D8  0E47               	movlw	71
   411  0002DA  0100               	movlb	0	; () banked
   412  0002DC  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   413  0002DE  C0C2  F079         	movff	main@amplitude2,___lwtoft@c
   414  0002E2  C0C3  F07A         	movff	main@amplitude2+1,___lwtoft@c+1
   415  0002E6  EC52  F007         	call	___lwtoft	;wreg free
   416  0002EA  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   417  0002EE  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   418  0002F2  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   419  0002F6  C200  F079         	movff	_G,___lwtoft@c
   420  0002FA  C201  F07A         	movff	_G+1,___lwtoft@c+1
   421  0002FE  EC52  F007         	call	___lwtoft	;wreg free
   422  000302  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   423  000306  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   424  00030A  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   425  00030E  ECDD  F001         	call	___ftmul	;wreg free
   426  000312  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   427  000316  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   428  00031A  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   429  00031E  ECE7  F003         	call	___ftdiv	;wreg free
   430  000322  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   431  000326  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   432  00032A  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   433  00032E  EC3E  F003         	call	___fttol	;wreg free
   434  000332  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   435  000336  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   436  00033A  0E47               	movlw	71
   437  00033C  ECF2  F005         	call	_pwm
   438                           
   439                           ;main.c: 204: pwm('B',(int)( (float)B[0] * (float)amplitude3/65520.));
   440  000340  0EF0               	movlw	240
   441  000342  0100               	movlb	0	; () banked
   442  000344  6F8E               	movwf	___ftdiv@f2& (0+255),b
   443  000346  0E7F               	movlw	127
   444  000348  0100               	movlb	0	; () banked
   445  00034A  6F8F               	movwf	(___ftdiv@f2+1)& (0+255),b
   446  00034C  0E47               	movlw	71
   447  00034E  0100               	movlb	0	; () banked
   448  000350  6F90               	movwf	(___ftdiv@f2+2)& (0+255),b
   449  000352  C0C4  F079         	movff	main@amplitude3,___lwtoft@c
   450  000356  C0C5  F07A         	movff	main@amplitude3+1,___lwtoft@c+1
   451  00035A  EC52  F007         	call	___lwtoft	;wreg free
   452  00035E  C079  F07F         	movff	?___lwtoft,___ftmul@f2
   453  000362  C07A  F080         	movff	?___lwtoft+1,___ftmul@f2+1
   454  000366  C07B  F081         	movff	?___lwtoft+2,___ftmul@f2+2
   455  00036A  C300  F079         	movff	_B,___lwtoft@c
   456  00036E  C301  F07A         	movff	_B+1,___lwtoft@c+1
   457  000372  EC52  F007         	call	___lwtoft	;wreg free
   458  000376  C079  F07C         	movff	?___lwtoft,___ftmul@f1
   459  00037A  C07A  F07D         	movff	?___lwtoft+1,___ftmul@f1+1
   460  00037E  C07B  F07E         	movff	?___lwtoft+2,___ftmul@f1+2
   461  000382  ECDD  F001         	call	___ftmul	;wreg free
   462  000386  C07C  F08B         	movff	?___ftmul,___ftdiv@f1
   463  00038A  C07D  F08C         	movff	?___ftmul+1,___ftdiv@f1+1
   464  00038E  C07E  F08D         	movff	?___ftmul+2,___ftdiv@f1+2
   465  000392  ECE7  F003         	call	___ftdiv	;wreg free
   466  000396  C08B  F09A         	movff	?___ftdiv,___fttol@f1
   467  00039A  C08C  F09B         	movff	?___ftdiv+1,___fttol@f1+1
   468  00039E  C08D  F09C         	movff	?___ftdiv+2,___fttol@f1+2
   469  0003A2  EC3E  F003         	call	___fttol	;wreg free
   470  0003A6  C09A  F0A9         	movff	?___fttol,pwm@dutycycle
   471  0003AA  C09B  F0AA         	movff	?___fttol+1,pwm@dutycycle+1
   472  0003AE  0E42               	movlw	66
   473  0003B0  ECF2  F005         	call	_pwm
   474                           
   475                           ;main.c: 206: else
   476                           ;main.c: 207: {
   477                           
   478                           ;main.c: 205: }
   479  0003B4  D700               	goto	l2007
   480                           
   481                           ;main.c: 211: }
   482                           ;main.c: 212: }
   483                           ;main.c: 214: return (0);
   484                           ;	Return value of _main is never used
   485  0003B6  EF8A  F000         	goto	start
   486  0003BA                     __end_of_main:
   487                           	opt stack 0
   488                           wreg	equ	0xFE8
   489                           plusw1	equ	0xFE3
   490                           plusw2	equ	0xFDB
   491                           status	equ	0xFD8
   492                           
   493                           	psect	cinit
   494  000E5E                     __pcinit:
   495                           	opt stack 0
   496  000E5E                     start_initialization:
   497                           	opt stack 0
   498  000E5E                     __initialization:
   499                           	opt stack 0
   500                           
   501                           ; Clear objects allocated to BANK3 (200 bytes)
   502  000E5E  EE03  F000         	lfsr	0,__pbssBANK3
   503  000E62  0EC8               	movlw	200
   504  000E64                     clear_0:
   505  000E64  6AEE               	clrf	postinc0,c
   506  000E66  06E8               	decf	wreg,f,c
   507  000E68  E1FD               	bnz	clear_0
   508                           
   509                           ; Clear objects allocated to BANK2 (200 bytes)
   510  000E6A  EE02  F000         	lfsr	0,__pbssBANK2
   511  000E6E  0EC8               	movlw	200
   512  000E70                     clear_1:
   513  000E70  6AEE               	clrf	postinc0,c
   514  000E72  06E8               	decf	wreg,f,c
   515  000E74  E1FD               	bnz	clear_1
   516                           
   517                           ; Clear objects allocated to BANK1 (200 bytes)
   518  000E76  EE01  F000         	lfsr	0,__pbssBANK1
   519  000E7A  0EC8               	movlw	200
   520  000E7C                     clear_2:
   521  000E7C  6AEE               	clrf	postinc0,c
   522  000E7E  06E8               	decf	wreg,f,c
   523  000E80  E1FD               	bnz	clear_2
   524                           
   525                           ; Clear objects allocated to BANK0 (15 bytes)
   526  000E82  EE00  F0CC         	lfsr	0,__pbssBANK0
   527  000E86  0E0F               	movlw	15
   528  000E88                     clear_3:
   529  000E88  6AEE               	clrf	postinc0,c
   530  000E8A  06E8               	decf	wreg,f,c
   531  000E8C  E1FD               	bnz	clear_3
   532                           
   533                           ; Clear objects allocated to COMRAM (24 bytes)
   534  000E8E  EE00  F029         	lfsr	0,__pbssCOMRAM
   535  000E92  0E18               	movlw	24
   536  000E94                     clear_4:
   537  000E94  6AEE               	clrf	postinc0,c
   538  000E96  06E8               	decf	wreg,f,c
   539  000E98  E1FD               	bnz	clear_4
   540  000E9A                     end_of_initialization:
   541                           	opt stack 0
   542  000E9A                     __end_of__initialization:
   543                           	opt stack 0
   544  000E9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   545  000E9C  6EF8               	movwf	tblptru,c
   546  000E9E  0100               	movlb	0
   547  000EA0  EF8C  F000         	goto	_main	;jump to C main() function
   548                           tblptru	equ	0xFF8
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           plusw1	equ	0xFE3
   552                           plusw2	equ	0xFDB
   553                           status	equ	0xFD8
   554                           
   555                           	psect	bssCOMRAM
   556  000029                     __pbssCOMRAM:
   557                           	opt stack 0
   558  000029                     RX2_ISR@F19163:
   559                           	opt stack 0
   560  000029                     	ds	2
   561  00002B                     _millis:
   562                           	opt stack 0
   563  00002B                     	ds	2
   564  00002D                     RX2_ISR@compteur:
   565                           	opt stack 0
   566  00002D                     	ds	1
   567  00002E                     _beginB:
   568                           	opt stack 0
   569  00002E                     	ds	1
   570  00002F                     _beginG:
   571                           	opt stack 0
   572  00002F                     	ds	1
   573  000030                     _beginR:
   574                           	opt stack 0
   575  000030                     	ds	1
   576  000031                     RX2_ISR@buffer:
   577                           	opt stack 0
   578  000031                     	ds	16
   579                           tblptru	equ	0xFF8
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           plusw1	equ	0xFE3
   583                           plusw2	equ	0xFDB
   584                           status	equ	0xFD8
   585                           
   586                           	psect	bssBANK0
   587  0000CC                     __pbssBANK0:
   588                           	opt stack 0
   589  0000CC                     main@F19169:
   590                           	opt stack 0
   591  0000CC                     	ds	15
   592                           tblptru	equ	0xFF8
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           plusw1	equ	0xFE3
   596                           plusw2	equ	0xFDB
   597                           status	equ	0xFD8
   598                           
   599                           	psect	bssBANK1
   600  000100                     __pbssBANK1:
   601                           	opt stack 0
   602  000100                     _R:
   603                           	opt stack 0
   604  000100                     	ds	200
   605                           tblptru	equ	0xFF8
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           plusw1	equ	0xFE3
   609                           plusw2	equ	0xFDB
   610                           status	equ	0xFD8
   611                           
   612                           	psect	bssBANK2
   613  000200                     __pbssBANK2:
   614                           	opt stack 0
   615  000200                     _G:
   616                           	opt stack 0
   617  000200                     	ds	200
   618                           tblptru	equ	0xFF8
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           plusw1	equ	0xFE3
   622                           plusw2	equ	0xFDB
   623                           status	equ	0xFD8
   624                           
   625                           	psect	bssBANK3
   626  000300                     __pbssBANK3:
   627                           	opt stack 0
   628  000300                     _B:
   629                           	opt stack 0
   630  000300                     	ds	200
   631                           tblptru	equ	0xFF8
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           plusw1	equ	0xFE3
   635                           plusw2	equ	0xFDB
   636                           status	equ	0xFD8
   637                           
   638                           	psect	cstackBANK0
   639  000060                     __pcstackBANK0:
   640                           	opt stack 0
   641  000060                     ??_Timer0_ISR:
   642                           
   643                           ; 0 bytes @ 0x0
   644  000060                     	ds	17
   645  000071                     ?_readADC:
   646                           	opt stack 0
   647  000071                     ?___awdiv:
   648                           	opt stack 0
   649  000071                     ?___ftpack:
   650                           	opt stack 0
   651  000071                     ___awdiv@dividend:
   652                           	opt stack 0
   653  000071                     ___ftpack@arg:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x11
   657  000071                     	ds	2
   658  000073                     ??_readADC:
   659  000073                     ___awdiv@divisor:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x13
   663  000073                     	ds	1
   664  000074                     ___ftpack@exp:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x14
   668  000074                     	ds	1
   669  000075                     readADC@channel:
   670                           	opt stack 0
   671  000075                     ___awdiv@counter:
   672                           	opt stack 0
   673  000075                     ___ftpack@sign:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x15
   677  000075                     	ds	1
   678  000076                     ??___ftpack:
   679  000076                     readADC@tempo:
   680                           	opt stack 0
   681  000076                     ___awdiv@sign:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x16
   685  000076                     	ds	1
   686  000077                     ___awdiv@quotient:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x17
   690  000077                     	ds	2
   691  000079                     ?___lwtoft:
   692                           	opt stack 0
   693  000079                     ___lwtoft@c:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x19
   697  000079                     	ds	3
   698  00007C                     ?___ftmul:
   699                           	opt stack 0
   700  00007C                     ___ftmul@f1:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x1C
   704  00007C                     	ds	3
   705  00007F                     ___ftmul@f2:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x1F
   709  00007F                     	ds	3
   710  000082                     ??___ftmul:
   711                           
   712                           ; 0 bytes @ 0x22
   713  000082                     	ds	3
   714  000085                     ___ftmul@exp:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x25
   718  000085                     	ds	1
   719  000086                     ___ftmul@f3_as_product:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x26
   723  000086                     	ds	3
   724  000089                     ___ftmul@cntr:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x29
   728  000089                     	ds	1
   729  00008A                     ___ftmul@sign:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x2A
   733  00008A                     	ds	1
   734  00008B                     ?___ftdiv:
   735                           	opt stack 0
   736  00008B                     ___ftdiv@f1:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x2B
   740  00008B                     	ds	3
   741  00008E                     ___ftdiv@f2:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x2E
   745  00008E                     	ds	3
   746  000091                     ??___ftdiv:
   747                           
   748                           ; 0 bytes @ 0x31
   749  000091                     	ds	3
   750  000094                     ___ftdiv@cntr:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x34
   754  000094                     	ds	1
   755  000095                     ___ftdiv@f3:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x35
   759  000095                     	ds	3
   760  000098                     ___ftdiv@exp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x38
   764  000098                     	ds	1
   765  000099                     ___ftdiv@sign:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x39
   769  000099                     	ds	1
   770  00009A                     ?___fttol:
   771                           	opt stack 0
   772  00009A                     ___fttol@f1:
   773                           	opt stack 0
   774                           
   775                           ; 3 bytes @ 0x3A
   776  00009A                     	ds	4
   777  00009E                     ??___fttol:
   778                           
   779                           ; 0 bytes @ 0x3E
   780  00009E                     	ds	5
   781  0000A3                     ___fttol@sign1:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x43
   785  0000A3                     	ds	1
   786  0000A4                     ___fttol@lval:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x44
   790  0000A4                     	ds	4
   791  0000A8                     ___fttol@exp1:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x48
   795  0000A8                     	ds	1
   796  0000A9                     pwm@dutycycle:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x49
   800  0000A9                     	ds	2
   801  0000AB                     pwm@color:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x4B
   805  0000AB                     	ds	1
   806  0000AC                     
   807                           ; 2 bytes @ 0x4C
   808  0000AC                     	ds	2
   809  0000AE                     
   810                           ; 3 bytes @ 0x4E
   811  0000AE                     	ds	3
   812  0000B1                     main@msg:
   813                           	opt stack 0
   814                           
   815                           ; 15 bytes @ 0x51
   816  0000B1                     	ds	15
   817  0000C0                     main@amplitude1:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x60
   821  0000C0                     	ds	2
   822  0000C2                     main@amplitude2:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x62
   826  0000C2                     	ds	2
   827  0000C4                     main@amplitude3:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x64
   831  0000C4                     	ds	2
   832  0000C6                     main@old_SWITCH1:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x66
   836  0000C6                     	ds	1
   837  0000C7                     main@mode:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x67
   841  0000C7                     	ds	1
   842  0000C8                     main@delay:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x68
   846  0000C8                     	ds	4
   847                           tblptru	equ	0xFF8
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           plusw1	equ	0xFE3
   851                           plusw2	equ	0xFDB
   852                           status	equ	0xFD8
   853                           
   854                           	psect	cstackCOMRAM
   855  000001                     __pcstackCOMRAM:
   856                           	opt stack 0
   857  000001                     ??_isdigit:
   858  000001                     ?___wmul:
   859                           	opt stack 0
   860  000001                     ___wmul@multiplier:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x0
   864  000001                     	ds	1
   865  000002                     _isdigit$858:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x1
   869  000002                     	ds	1
   870  000003                     isdigit@c:
   871                           	opt stack 0
   872  000003                     ___wmul@multiplicand:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x2
   876  000003                     	ds	2
   877  000005                     ___wmul@product:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x4
   881  000005                     	ds	2
   882  000007                     ?_atoi:
   883                           	opt stack 0
   884  000007                     atoi@s:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x6
   888  000007                     	ds	2
   889  000009                     ??_atoi:
   890                           
   891                           ; 0 bytes @ 0x8
   892  000009                     	ds	2
   893  00000B                     atoi@sign:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0xA
   897  00000B                     	ds	1
   898  00000C                     atoi@a:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0xB
   902  00000C                     	ds	2
   903  00000E                     ??_RX2_ISR:
   904                           
   905                           ; 0 bytes @ 0xD
   906  00000E                     	ds	14
   907  00001C                     RX2_ISR@input:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x1B
   911  00001C                     	ds	2
   912  00001E                     ?i1___awdiv:
   913                           	opt stack 0
   914  00001E                     i1___awdiv@dividend:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x1D
   918  00001E                     	ds	2
   919  000020                     i1___awdiv@divisor:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x1F
   923  000020                     	ds	2
   924  000022                     i1___awdiv@counter:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x21
   928  000022                     	ds	1
   929  000023                     i1___awdiv@sign:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x22
   933  000023                     	ds	1
   934  000024                     i1___awdiv@quotient:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x23
   938  000024                     	ds	2
   939  000026                     i1pwm@dutycycle:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x25
   943  000026                     	ds	2
   944  000028                     i1pwm@color:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x27
   948  000028                     	ds	1
   949                           tblptru	equ	0xFF8
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           plusw1	equ	0xFE3
   953                           plusw2	equ	0xFDB
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _readADC *****************
   957 ;; Defined at:
   958 ;;		line 228 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  channel         1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  channel         1   21[BANK0 ] unsigned char 
   963 ;;  tempo           1   22[BANK0 ] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   17[BANK0 ] unsigned int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;Total ram usage:        6 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    6
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text1
   988  000D9A                     __ptext1:
   989                           	opt stack 0
   990  000D9A                     _readADC:
   991                           	opt stack 24
   992                           
   993                           ;incstack = 0
   994                           ;readADC@channel stored from wreg
   995  000D9A  0100               	movlb	0	; () banked
   996  000D9C  6F75               	movwf	readADC@channel& (0+255),b
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 230: char tempo=0;
  1000  000D9E  0E00               	movlw	0
  1001  000DA0  0100               	movlb	0	; () banked
  1002  000DA2  6F76               	movwf	readADC@tempo& (0+255),b
  1003                           
  1004                           ;main.c: 231: switch (channel)
  1005  000DA4  D008               	goto	l1719
  1006  000DA6                     l248:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 234: {
  1010                           ;main.c: 235: CHS1=0;
  1011  000DA6  96C2               	bcf	4034,3,c	;volatile
  1012  000DA8  D004               	goto	L1
  1013  000DAA                     l250:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;main.c: 240: {
  1017                           ;main.c: 241: CHS1=1;
  1018  000DAA  86C2               	bsf	4034,3,c	;volatile
  1019                           
  1020                           ;main.c: 242: CHS0=0;
  1021  000DAC  94C2               	bcf	4034,2,c	;volatile
  1022                           
  1023                           ;main.c: 243: break;
  1024  000DAE  D00F               	goto	l1721
  1025  000DB0                     l251:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 246: {
  1029                           ;main.c: 247: CHS1=1;
  1030  000DB0  86C2               	bsf	4034,3,c	;volatile
  1031  000DB2                     L1:
  1032                           
  1033                           ;main.c: 248: CHS0=1;
  1034  000DB2  84C2               	bsf	4034,2,c	;volatile
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;main.c: 250: }
  1038                           ;main.c: 251: }
  1039                           
  1040                           ;main.c: 249: break;
  1041  000DB4  D00C               	goto	l1721
  1042  000DB6                     l1719:
  1043                           
  1044                           ; BSR set to: 0
  1045  000DB6  0100               	movlb	0	; () banked
  1046  000DB8  5175               	movf	readADC@channel& (0+255),w,b
  1047                           
  1048                           ; Switch size 1, requested type "space"
  1049                           ; Number of cases is 3, Range of values is 1 to 3
  1050                           ; switch strategies available:
  1051                           ; Name         Instructions Cycles
  1052                           ; simple_byte           10     6 (average)
  1053                           ;	Chosen strategy is simple_byte
  1054  000DBA  0A01               	xorlw	1	; case 1
  1055  000DBC  B4D8               	btfsc	status,2,c
  1056  000DBE  D7F3               	goto	l248
  1057  000DC0  0A03               	xorlw	3	; case 2
  1058  000DC2  B4D8               	btfsc	status,2,c
  1059  000DC4  D7F2               	goto	l250
  1060  000DC6  0A01               	xorlw	1	; case 3
  1061  000DC8  B4D8               	btfsc	status,2,c
  1062  000DCA  D7F2               	goto	l251
  1063  000DCC  D000               	goto	l1721
  1064  000DCE                     l1721:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 252: for(tempo=0;tempo<100;tempo++);
  1068  000DCE  0E00               	movlw	0
  1069  000DD0  0100               	movlb	0	; () banked
  1070  000DD2  6F76               	movwf	readADC@tempo& (0+255),b
  1071  000DD4  D003               	goto	l1729
  1072                           
  1073                           ; BSR set to: 0
  1074                           
  1075                           ; BSR set to: 0
  1076  000DD6  D006               	goto	l253
  1077  000DD8                     l1727:
  1078                           
  1079                           ; BSR set to: 0
  1080  000DD8  0100               	movlb	0	; () banked
  1081  000DDA  2B76               	incf	readADC@tempo& (0+255),f,b
  1082  000DDC                     l1729:
  1083                           
  1084                           ; BSR set to: 0
  1085  000DDC  0E63               	movlw	99
  1086  000DDE  0100               	movlb	0	; () banked
  1087  000DE0  6576               	cpfsgt	readADC@tempo& (0+255),b
  1088  000DE2  D7FA               	goto	l1727
  1089  000DE4                     l253:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;main.c: 253: GO_nDONE = 1;
  1093  000DE4  82C2               	bsf	4034,1,c	;volatile
  1094                           
  1095                           ;main.c: 254: while(GO_nDONE);
  1096  000DE6  D000               	goto	l254
  1097  000DE8                     l254:
  1098                           
  1099                           ; BSR set to: 0
  1100  000DE8  B2C2               	btfsc	4034,1,c	;volatile
  1101  000DEA  D7FE               	goto	l254
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;main.c: 256: return ((ADRESH<<8)+ADRESL);
  1105                           
  1106                           ; BSR set to: 0
  1107  000DEC  50C4               	movf	4036,w,c	;volatile
  1108  000DEE  0100               	movlb	0	; () banked
  1109  000DF0  6F74               	movwf	(??_readADC+1)& (0+255),b
  1110  000DF2  6B73               	clrf	??_readADC& (0+255),b
  1111  000DF4  50C3               	movf	4035,w,c	;volatile
  1112  000DF6  0100               	movlb	0	; () banked
  1113  000DF8  2573               	addwf	??_readADC& (0+255),w,b
  1114  000DFA  0100               	movlb	0	; () banked
  1115  000DFC  6F71               	movwf	?_readADC& (0+255),b
  1116  000DFE  0E00               	movlw	0
  1117  000E00  0100               	movlb	0	; () banked
  1118  000E02  2174               	addwfc	(??_readADC+1)& (0+255),w,b
  1119  000E04  0100               	movlb	0	; () banked
  1120  000E06  6F72               	movwf	(?_readADC+1)& (0+255),b
  1121  000E08  0012               	return	
  1122                           
  1123                           ; BSR set to: 0
  1124                           
  1125                           ; BSR set to: 0
  1126  000E0A  0012               	return		;funcret
  1127  000E0C                     __end_of_readADC:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           plusw1	equ	0xFE3
  1133                           plusw2	equ	0xFDB
  1134                           status	equ	0xFD8
  1135                           
  1136 ;; *************** function _pwm *****************
  1137 ;; Defined at:
  1138 ;;		line 8 in file "converter.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  color           1    wreg     unsigned char 
  1141 ;;  dutycycle       2   73[BANK0 ] int 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  color           1   75[BANK0 ] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;		None               void
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;Total ram usage:        3 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    7
  1160 ;; This function calls:
  1161 ;;		___awdiv
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text2
  1168  000BE4                     __ptext2:
  1169                           	opt stack 0
  1170  000BE4                     _pwm:
  1171                           	opt stack 23
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;incstack = 0
  1175                           ;pwm@color stored from wreg
  1176  000BE4  0100               	movlb	0	; () banked
  1177  000BE6  6FAB               	movwf	pwm@color& (0+255),b
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;converter.c: 9: switch(color){
  1181  000BE8  D03C               	goto	l1677
  1182  000BEA                     l1657:
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;converter.c: 11: CCPR2L=dutycycle/4;
  1186  000BEA  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1187  000BEE  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1188  000BF2  0E00               	movlw	0
  1189  000BF4  0100               	movlb	0	; () banked
  1190  000BF6  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1191  000BF8  0E04               	movlw	4
  1192  000BFA  6F73               	movwf	___awdiv@divisor& (0+255),b
  1193  000BFC  EC8A  F005         	call	___awdiv	;wreg free
  1194  000C00  0100               	movlb	0	; () banked
  1195  000C02  5171               	movf	?___awdiv& (0+255),w,b
  1196  000C04  010F               	movlb	15	; () banked
  1197  000C06  6F51               	movwf	81,b	;volatile
  1198                           
  1199                           ; BSR set to: 15
  1200                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  1201  000C08  010F               	movlb	15	; () banked
  1202  000C0A  9B50               	bcf	80,5,b	;volatile
  1203                           
  1204                           ; BSR set to: 15
  1205                           ;converter.c: 13: DC2B0=dutycycle%1;
  1206  000C0C  010F               	movlb	15	; () banked
  1207  000C0E  9950               	bcf	80,4,b	;volatile
  1208                           
  1209                           ;converter.c: 14: break;
  1210  000C10  0012               	return	
  1211  000C12                     l1663:
  1212                           
  1213                           ;converter.c: 16: CCPR3L=dutycycle/4;
  1214  000C12  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1215  000C16  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1216  000C1A  0E00               	movlw	0
  1217  000C1C  0100               	movlb	0	; () banked
  1218  000C1E  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1219  000C20  0E04               	movlw	4
  1220  000C22  6F73               	movwf	___awdiv@divisor& (0+255),b
  1221  000C24  EC8A  F005         	call	___awdiv	;wreg free
  1222  000C28  0100               	movlb	0	; () banked
  1223  000C2A  5171               	movf	?___awdiv& (0+255),w,b
  1224  000C2C  010F               	movlb	15	; () banked
  1225  000C2E  6F4E               	movwf	78,b	;volatile
  1226                           
  1227                           ; BSR set to: 15
  1228                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  1229  000C30  010F               	movlb	15	; () banked
  1230  000C32  9B4D               	bcf	77,5,b	;volatile
  1231                           
  1232                           ; BSR set to: 15
  1233                           ;converter.c: 18: DC3B0=0;
  1234  000C34  010F               	movlb	15	; () banked
  1235  000C36  994D               	bcf	77,4,b	;volatile
  1236                           
  1237                           ;converter.c: 19: break;
  1238  000C38  0012               	return	
  1239  000C3A                     l1669:
  1240                           
  1241                           ;converter.c: 21: CCPR4L=dutycycle/4;
  1242  000C3A  C0A9  F071         	movff	pwm@dutycycle,___awdiv@dividend
  1243  000C3E  C0AA  F072         	movff	pwm@dutycycle+1,___awdiv@dividend+1
  1244  000C42  0E00               	movlw	0
  1245  000C44  0100               	movlb	0	; () banked
  1246  000C46  6F74               	movwf	(___awdiv@divisor+1)& (0+255),b
  1247  000C48  0E04               	movlw	4
  1248  000C4A  6F73               	movwf	___awdiv@divisor& (0+255),b
  1249  000C4C  EC8A  F005         	call	___awdiv	;wreg free
  1250  000C50  0100               	movlb	0	; () banked
  1251  000C52  5171               	movf	?___awdiv& (0+255),w,b
  1252  000C54  010F               	movlb	15	; () banked
  1253  000C56  6F4B               	movwf	75,b	;volatile
  1254                           
  1255                           ; BSR set to: 15
  1256                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  1257  000C58  010F               	movlb	15	; () banked
  1258  000C5A  9B4A               	bcf	74,5,b	;volatile
  1259                           
  1260                           ; BSR set to: 15
  1261                           ;converter.c: 23: DC4B0=dutycycle%1;
  1262  000C5C  010F               	movlb	15	; () banked
  1263  000C5E  994A               	bcf	74,4,b	;volatile
  1264                           
  1265                           ; BSR set to: 15
  1266                           ;converter.c: 25: }
  1267                           
  1268                           ;converter.c: 24: break;
  1269  000C60  0012               	return	
  1270  000C62                     l1677:
  1271  000C62  0100               	movlb	0	; () banked
  1272  000C64  51AB               	movf	pwm@color& (0+255),w,b
  1273                           
  1274                           ; Switch size 1, requested type "space"
  1275                           ; Number of cases is 3, Range of values is 66 to 82
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte           10     6 (average)
  1279                           ;	Chosen strategy is simple_byte
  1280  000C66  0A42               	xorlw	66	; case 66
  1281  000C68  B4D8               	btfsc	status,2,c
  1282  000C6A  D7BF               	goto	l1657
  1283  000C6C  0A05               	xorlw	5	; case 71
  1284  000C6E  B4D8               	btfsc	status,2,c
  1285  000C70  D7E4               	goto	l1669
  1286  000C72  0A15               	xorlw	21	; case 82
  1287  000C74  A4D8               	btfss	status,2,c
  1288  000C76  0012               	return	
  1289  000C78  D7CC               	goto	l1663
  1290                           
  1291                           ; BSR set to: 0
  1292  000C7A  0012               	return		;funcret
  1293  000C7C                     __end_of_pwm:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           plusw1	equ	0xFE3
  1299                           plusw2	equ	0xFDB
  1300                           status	equ	0xFD8
  1301                           
  1302 ;; *************** function ___awdiv *****************
  1303 ;; Defined at:
  1304 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  dividend        2   17[BANK0 ] int 
  1307 ;;  divisor         2   19[BANK0 ] int 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  quotient        2   23[BANK0 ] int 
  1310 ;;  sign            1   22[BANK0 ] unsigned char 
  1311 ;;  counter         1   21[BANK0 ] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  2   17[BANK0 ] int 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1321 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;Total ram usage:        8 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    6
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_pwm
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text3
  1336  000B14                     __ptext3:
  1337                           	opt stack 0
  1338  000B14                     ___awdiv:
  1339                           	opt stack 23
  1340                           
  1341                           ;incstack = 0
  1342  000B14  0E00               	movlw	0
  1343  000B16  0100               	movlb	0	; () banked
  1344  000B18  6F76               	movwf	___awdiv@sign& (0+255),b
  1345                           
  1346                           ; BSR set to: 0
  1347  000B1A  0100               	movlb	0	; () banked
  1348  000B1C  AF74               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1349  000B1E  D009               	goto	l1575
  1350                           
  1351                           ; BSR set to: 0
  1352  000B20  0100               	movlb	0	; () banked
  1353  000B22  6D73               	negf	___awdiv@divisor& (0+255),b
  1354  000B24  1F74               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1355  000B26  B0D8               	btfsc	status,0,c
  1356  000B28  2B74               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1357                           
  1358                           ; BSR set to: 0
  1359  000B2A  0E01               	movlw	1
  1360  000B2C  0100               	movlb	0	; () banked
  1361  000B2E  6F76               	movwf	___awdiv@sign& (0+255),b
  1362  000B30  D000               	goto	l1575
  1363  000B32                     l1575:
  1364                           
  1365                           ; BSR set to: 0
  1366  000B32  0100               	movlb	0	; () banked
  1367  000B34  AF72               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1368  000B36  D009               	goto	l1581
  1369                           
  1370                           ; BSR set to: 0
  1371  000B38  0100               	movlb	0	; () banked
  1372  000B3A  6D71               	negf	___awdiv@dividend& (0+255),b
  1373  000B3C  1F72               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1374  000B3E  B0D8               	btfsc	status,0,c
  1375  000B40  2B72               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1376                           
  1377                           ; BSR set to: 0
  1378  000B42  0E01               	movlw	1
  1379  000B44  0100               	movlb	0	; () banked
  1380  000B46  1B76               	xorwf	___awdiv@sign& (0+255),f,b
  1381  000B48  D000               	goto	l1581
  1382  000B4A                     l1581:
  1383                           
  1384                           ; BSR set to: 0
  1385  000B4A  0E00               	movlw	0
  1386  000B4C  0100               	movlb	0	; () banked
  1387  000B4E  6F78               	movwf	(___awdiv@quotient+1)& (0+255),b
  1388  000B50  0E00               	movlw	0
  1389  000B52  6F77               	movwf	___awdiv@quotient& (0+255),b
  1390                           
  1391                           ; BSR set to: 0
  1392  000B54  0100               	movlb	0	; () banked
  1393  000B56  5173               	movf	___awdiv@divisor& (0+255),w,b
  1394  000B58  0100               	movlb	0	; () banked
  1395  000B5A  1174               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1396  000B5C  B4D8               	btfsc	status,2,c
  1397  000B5E  D031               	goto	l1603
  1398                           
  1399                           ; BSR set to: 0
  1400  000B60  0E01               	movlw	1
  1401  000B62  0100               	movlb	0	; () banked
  1402  000B64  6F75               	movwf	___awdiv@counter& (0+255),b
  1403  000B66  D007               	goto	l1589
  1404  000B68                     l1587:
  1405                           
  1406                           ; BSR set to: 0
  1407  000B68  0100               	movlb	0	; () banked
  1408  000B6A  90D8               	bcf	status,0,c
  1409  000B6C  3773               	rlcf	___awdiv@divisor& (0+255),f,b
  1410  000B6E  3774               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1411  000B70  0100               	movlb	0	; () banked
  1412  000B72  2B75               	incf	___awdiv@counter& (0+255),f,b
  1413  000B74  D000               	goto	l1589
  1414  000B76                     l1589:
  1415                           
  1416                           ; BSR set to: 0
  1417  000B76  0100               	movlb	0	; () banked
  1418  000B78  BF74               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1419  000B7A  D002               	goto	l1591
  1420  000B7C  D7F5               	goto	l1587
  1421                           
  1422                           ; BSR set to: 0
  1423  000B7E  D000               	goto	l1591
  1424  000B80                     l1591:
  1425                           
  1426                           ; BSR set to: 0
  1427  000B80  0100               	movlb	0	; () banked
  1428  000B82  90D8               	bcf	status,0,c
  1429  000B84  3777               	rlcf	___awdiv@quotient& (0+255),f,b
  1430  000B86  3778               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1431                           
  1432                           ; BSR set to: 0
  1433  000B88  0100               	movlb	0	; () banked
  1434  000B8A  5173               	movf	___awdiv@divisor& (0+255),w,b
  1435  000B8C  0100               	movlb	0	; () banked
  1436  000B8E  5D71               	subwf	___awdiv@dividend& (0+255),w,b
  1437  000B90  0100               	movlb	0	; () banked
  1438  000B92  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1439  000B94  0100               	movlb	0	; () banked
  1440  000B96  5972               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1441  000B98  A0D8               	btfss	status,0,c
  1442  000B9A  D00B               	goto	l1599
  1443                           
  1444                           ; BSR set to: 0
  1445  000B9C  0100               	movlb	0	; () banked
  1446  000B9E  5173               	movf	___awdiv@divisor& (0+255),w,b
  1447  000BA0  0100               	movlb	0	; () banked
  1448  000BA2  5F71               	subwf	___awdiv@dividend& (0+255),f,b
  1449  000BA4  0100               	movlb	0	; () banked
  1450  000BA6  5174               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1451  000BA8  0100               	movlb	0	; () banked
  1452  000BAA  5B72               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1453                           
  1454                           ; BSR set to: 0
  1455  000BAC  0100               	movlb	0	; () banked
  1456  000BAE  8177               	bsf	___awdiv@quotient& (0+255),0,b
  1457  000BB0  D000               	goto	l1599
  1458  000BB2                     l1599:
  1459                           
  1460                           ; BSR set to: 0
  1461  000BB2  0100               	movlb	0	; () banked
  1462  000BB4  90D8               	bcf	status,0,c
  1463  000BB6  3374               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1464  000BB8  3373               	rrcf	___awdiv@divisor& (0+255),f,b
  1465                           
  1466                           ; BSR set to: 0
  1467  000BBA  0100               	movlb	0	; () banked
  1468  000BBC  2F75               	decfsz	___awdiv@counter& (0+255),f,b
  1469  000BBE  D7E0               	goto	l1591
  1470                           
  1471                           ; BSR set to: 0
  1472  000BC0  D000               	goto	l1603
  1473  000BC2                     l1603:
  1474                           
  1475                           ; BSR set to: 0
  1476  000BC2  0100               	movlb	0	; () banked
  1477  000BC4  5176               	movf	___awdiv@sign& (0+255),w,b
  1478  000BC6  0100               	movlb	0	; () banked
  1479  000BC8  B4D8               	btfsc	status,2,c
  1480  000BCA  D006               	goto	l1607
  1481                           
  1482                           ; BSR set to: 0
  1483  000BCC  0100               	movlb	0	; () banked
  1484  000BCE  6D77               	negf	___awdiv@quotient& (0+255),b
  1485  000BD0  1F78               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1486  000BD2  B0D8               	btfsc	status,0,c
  1487  000BD4  2B78               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1488  000BD6  D000               	goto	l1607
  1489  000BD8                     l1607:
  1490                           
  1491                           ; BSR set to: 0
  1492  000BD8  C077  F071         	movff	___awdiv@quotient,?___awdiv
  1493  000BDC  C078  F072         	movff	___awdiv@quotient+1,?___awdiv+1
  1494  000BE0  0012               	return	
  1495                           
  1496                           ; BSR set to: 0
  1497                           
  1498                           ; BSR set to: 0
  1499  000BE2  0012               	return		;funcret
  1500  000BE4                     __end_of___awdiv:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           plusw1	equ	0xFE3
  1506                           plusw2	equ	0xFDB
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _initialisation *****************
  1510 ;; Defined at:
  1511 ;;		line 6 in file "init.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    7
  1532 ;; This function calls:
  1533 ;;		_initADC
  1534 ;;		_initComms
  1535 ;;		_initPWM
  1536 ;;		_initTimer0
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text4
  1543  000F74                     __ptext4:
  1544                           	opt stack 0
  1545  000F74                     _initialisation:
  1546                           	opt stack 23
  1547                           
  1548                           ;init.c: 10: initPWM();
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;incstack = 0
  1552  000F74  EC06  F007         	call	_initPWM	;wreg free
  1553                           
  1554                           ;init.c: 14: initComms();
  1555  000F78  EC68  F007         	call	_initComms	;wreg free
  1556                           
  1557                           ;init.c: 18: initADC();
  1558  000F7C  ECA1  F007         	call	_initADC	;wreg free
  1559                           
  1560                           ;init.c: 22: initTimer0();
  1561  000F80  ECAF  F007         	call	_initTimer0	;wreg free
  1562  000F84  0012               	return		;funcret
  1563  000F86                     __end_of_initialisation:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           plusw1	equ	0xFE3
  1569                           plusw2	equ	0xFDB
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _initTimer0 *****************
  1573 ;; Defined at:
  1574 ;;		line 117 in file "init.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;		None               void
  1581 ;; Registers used:
  1582 ;;		None
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    6
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_initialisation
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text5
  1603  000F5E                     __ptext5:
  1604                           	opt stack 0
  1605  000F5E                     _initTimer0:
  1606                           	opt stack 23
  1607                           
  1608                           ;init.c: 120: T0PS2 = 0;
  1609                           
  1610                           ;incstack = 0
  1611  000F5E  94D5               	bcf	4053,2,c	;volatile
  1612                           
  1613                           ;init.c: 121: T0PS1 = 1;
  1614  000F60  82D5               	bsf	4053,1,c	;volatile
  1615                           
  1616                           ;init.c: 122: T0PS0 = 0;
  1617  000F62  90D5               	bcf	4053,0,c	;volatile
  1618                           
  1619                           ;init.c: 123: PSA = 0;
  1620  000F64  96D5               	bcf	4053,3,c	;volatile
  1621                           
  1622                           ;init.c: 124: T0CS = 0;
  1623  000F66  9AD5               	bcf	4053,5,c	;volatile
  1624                           
  1625                           ;init.c: 125: T08BIT = 1;
  1626  000F68  8CD5               	bsf	4053,6,c	;volatile
  1627                           
  1628                           ;init.c: 126: TMR0IP = 0;
  1629  000F6A  94F1               	bcf	intcon2,2,c	;volatile
  1630                           
  1631                           ;init.c: 127: TMR0IE = 1;
  1632  000F6C  8AF2               	bsf	intcon,5,c	;volatile
  1633                           
  1634                           ;init.c: 128: PEIE = 1;
  1635  000F6E  8CF2               	bsf	intcon,6,c	;volatile
  1636                           
  1637                           ;init.c: 129: GIE = 1;
  1638  000F70  8EF2               	bsf	intcon,7,c	;volatile
  1639  000F72  0012               	return		;funcret
  1640  000F74                     __end_of_initTimer0:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           intcon	equ	0xFF2
  1644                           intcon2	equ	0xFF1
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           plusw1	equ	0xFE3
  1648                           plusw2	equ	0xFDB
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _initPWM *****************
  1652 ;; Defined at:
  1653 ;;		line 27 in file "init.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;		None               void
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_initialisation
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text6
  1682  000E0C                     __ptext6:
  1683                           	opt stack 0
  1684  000E0C                     _initPWM:
  1685                           	opt stack 23
  1686                           
  1687                           ;init.c: 32: PR2=0xFF;
  1688                           
  1689                           ;incstack = 0
  1690  000E0C  68CB               	setf	4043,c	;volatile
  1691                           
  1692                           ;init.c: 36: CCPR2L=0b00000000;
  1693  000E0E  0E00               	movlw	0
  1694  000E10  010F               	movlb	15	; () banked
  1695  000E12  6F51               	movwf	81,b	;volatile
  1696                           
  1697                           ;init.c: 37: CCPR3L=0b00000000;
  1698  000E14  0E00               	movlw	0
  1699  000E16  010F               	movlb	15	; () banked
  1700  000E18  6F4E               	movwf	78,b	;volatile
  1701                           
  1702                           ;init.c: 38: CCPR4L=0b00000000;
  1703  000E1A  0E00               	movlw	0
  1704  000E1C  010F               	movlb	15	; () banked
  1705  000E1E  6F4B               	movwf	75,b	;volatile
  1706                           
  1707                           ; BSR set to: 15
  1708                           ;init.c: 39: DC2B1=0;
  1709  000E20  010F               	movlb	15	; () banked
  1710  000E22  9B50               	bcf	80,5,b	;volatile
  1711                           
  1712                           ; BSR set to: 15
  1713                           ;init.c: 40: DC2B0=0;
  1714  000E24  010F               	movlb	15	; () banked
  1715  000E26  9950               	bcf	80,4,b	;volatile
  1716                           
  1717                           ; BSR set to: 15
  1718                           ;init.c: 41: DC3B1=0;
  1719  000E28  010F               	movlb	15	; () banked
  1720  000E2A  9B4D               	bcf	77,5,b	;volatile
  1721                           
  1722                           ; BSR set to: 15
  1723                           ;init.c: 42: DC3B0=0;
  1724  000E2C  010F               	movlb	15	; () banked
  1725  000E2E  994D               	bcf	77,4,b	;volatile
  1726                           
  1727                           ; BSR set to: 15
  1728                           ;init.c: 43: DC4B1=0;
  1729  000E30  010F               	movlb	15	; () banked
  1730  000E32  9B4A               	bcf	74,5,b	;volatile
  1731                           
  1732                           ; BSR set to: 15
  1733                           ;init.c: 44: DC4B0=0;
  1734  000E34  010F               	movlb	15	; () banked
  1735  000E36  994A               	bcf	74,4,b	;volatile
  1736                           
  1737                           ; BSR set to: 15
  1738                           ;init.c: 50: TRISC=TRISC & 0b00111011;
  1739  000E38  5094               	movf	3988,w,c	;volatile
  1740  000E3A  0B3B               	andlw	59
  1741  000E3C  6E94               	movwf	3988,c	;volatile
  1742                           
  1743                           ; BSR set to: 15
  1744                           ;init.c: 53: T2CKPS1=0;
  1745  000E3E  92CA               	bcf	4042,1,c	;volatile
  1746                           
  1747                           ; BSR set to: 15
  1748                           ;init.c: 54: T2CKPS0=0;
  1749  000E40  90CA               	bcf	4042,0,c	;volatile
  1750                           
  1751                           ; BSR set to: 15
  1752                           ;init.c: 57: TMR2ON = 1;
  1753  000E42  84CA               	bsf	4042,2,c	;volatile
  1754                           
  1755                           ; BSR set to: 15
  1756                           ;init.c: 60: CCP2M2=1;
  1757  000E44  010F               	movlb	15	; () banked
  1758  000E46  8550               	bsf	80,2,b	;volatile
  1759                           
  1760                           ; BSR set to: 15
  1761                           ;init.c: 61: CCP2M3=1;
  1762  000E48  010F               	movlb	15	; () banked
  1763  000E4A  8750               	bsf	80,3,b	;volatile
  1764                           
  1765                           ; BSR set to: 15
  1766                           ;init.c: 62: CCP3M2=1;
  1767  000E4C  010F               	movlb	15	; () banked
  1768  000E4E  854D               	bsf	77,2,b	;volatile
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;init.c: 63: CCP3M3=1;
  1772  000E50  010F               	movlb	15	; () banked
  1773  000E52  874D               	bsf	77,3,b	;volatile
  1774                           
  1775                           ; BSR set to: 15
  1776                           ;init.c: 64: CCP4M2=1;
  1777  000E54  010F               	movlb	15	; () banked
  1778  000E56  854A               	bsf	74,2,b	;volatile
  1779                           
  1780                           ; BSR set to: 15
  1781                           ;init.c: 65: CCP4M3=1;
  1782  000E58  010F               	movlb	15	; () banked
  1783  000E5A  874A               	bsf	74,3,b	;volatile
  1784                           
  1785                           ; BSR set to: 15
  1786  000E5C  0012               	return		;funcret
  1787  000E5E                     __end_of_initPWM:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           intcon	equ	0xFF2
  1791                           intcon2	equ	0xFF1
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           plusw1	equ	0xFE3
  1795                           plusw2	equ	0xFDB
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _initComms *****************
  1799 ;; Defined at:
  1800 ;;		line 69 in file "init.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, status,2
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    6
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_initialisation
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text7
  1829  000ED0                     __ptext7:
  1830                           	opt stack 0
  1831  000ED0                     _initComms:
  1832                           	opt stack 23
  1833                           
  1834                           ;init.c: 71: TRISBbits.TRISB7 = 1;
  1835                           
  1836                           ; BSR set to: 15
  1837                           ;incstack = 0
  1838  000ED0  8E93               	bsf	3987,7,c	;volatile
  1839                           
  1840                           ;init.c: 72: TRISBbits.TRISB6 = 0;
  1841  000ED2  9C93               	bcf	3987,6,c	;volatile
  1842                           
  1843                           ;init.c: 75: TXSTA2bits.BRGH = 1;
  1844  000ED4  84BA               	bsf	4026,2,c	;volatile
  1845                           
  1846                           ;init.c: 76: TXSTA2bits.SYNC = 0;
  1847  000ED6  98BA               	bcf	4026,4,c	;volatile
  1848                           
  1849                           ;init.c: 77: SPBRGH2 = 0;
  1850  000ED8  0E00               	movlw	0
  1851  000EDA  6E7C               	movwf	3964,c	;volatile
  1852                           
  1853                           ;init.c: 78: SPBRG2 = 51;
  1854  000EDC  0E33               	movlw	51
  1855  000EDE  6E7B               	movwf	3963,c	;volatile
  1856                           
  1857                           ;init.c: 79: BAUDCON2 = 0x08;
  1858  000EE0  0E08               	movlw	8
  1859  000EE2  6EB9               	movwf	4025,c	;volatile
  1860                           
  1861                           ;init.c: 83: TXSTA2bits.TXEN = 1;
  1862  000EE4  8ABA               	bsf	4026,5,c	;volatile
  1863                           
  1864                           ;init.c: 84: RCSTA2bits.CREN = 1;
  1865  000EE6  88A6               	bsf	4006,4,c	;volatile
  1866                           
  1867                           ;init.c: 85: RCSTA2bits.SPEN = 1;
  1868  000EE8  8EA6               	bsf	4006,7,c	;volatile
  1869                           
  1870                           ;init.c: 88: RCONbits.IPEN = 1;
  1871  000EEA  8ED0               	bsf	4048,7,c	;volatile
  1872                           
  1873                           ;init.c: 89: INTCONbits.GIE = 1;
  1874  000EEC  8EF2               	bsf	intcon,7,c	;volatile
  1875                           
  1876                           ;init.c: 90: INTCONbits.PEIE = 1;
  1877  000EEE  8CF2               	bsf	intcon,6,c	;volatile
  1878                           
  1879                           ;init.c: 91: PIE3bits.RC2IE = 1;
  1880  000EF0  8AA3               	bsf	4003,5,c	;volatile
  1881                           
  1882                           ;init.c: 92: PIE3bits.TX2IE = 0;
  1883  000EF2  98A3               	bcf	4003,4,c	;volatile
  1884                           
  1885                           ;init.c: 94: RC2IF = 0;
  1886  000EF4  9AA4               	bcf	4004,5,c	;volatile
  1887  000EF6  0012               	return		;funcret
  1888  000EF8                     __end_of_initComms:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           intcon	equ	0xFF2
  1892                           intcon2	equ	0xFF1
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           plusw1	equ	0xFE3
  1896                           plusw2	equ	0xFDB
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _initADC *****************
  1900 ;; Defined at:
  1901 ;;		line 97 in file "init.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		None
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    6
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_initialisation
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text8
  1930  000F42                     __ptext8:
  1931                           	opt stack 0
  1932  000F42                     _initADC:
  1933                           	opt stack 23
  1934                           
  1935                           ;init.c: 99: TRIGSEL1=0;
  1936                           
  1937                           ;incstack = 0
  1938  000F42  9EC1               	bcf	4033,7,c	;volatile
  1939                           
  1940                           ;init.c: 100: TRIGSEL0=0;
  1941  000F44  9CC1               	bcf	4033,6,c	;volatile
  1942                           
  1943                           ;init.c: 102: VCFG1=0;
  1944  000F46  9AC1               	bcf	4033,5,c	;volatile
  1945                           
  1946                           ;init.c: 103: VCFG0=0;
  1947  000F48  98C1               	bcf	4033,4,c	;volatile
  1948                           
  1949                           ;init.c: 104: VNCFG=0;
  1950  000F4A  96C1               	bcf	4033,3,c	;volatile
  1951                           
  1952                           ;init.c: 108: ANSEL3=1;
  1953  000F4C  010F               	movlb	15	; () banked
  1954  000F4E  875D               	bsf	93,3,b	;volatile
  1955                           
  1956                           ;init.c: 109: ANSEL2=1;
  1957  000F50  010F               	movlb	15	; () banked
  1958  000F52  855D               	bsf	93,2,b	;volatile
  1959                           
  1960                           ;init.c: 110: ANSEL1=1;
  1961  000F54  010F               	movlb	15	; () banked
  1962  000F56  835D               	bsf	93,1,b	;volatile
  1963                           
  1964                           ;init.c: 112: ADON=1;
  1965  000F58  80C2               	bsf	4034,0,c	;volatile
  1966                           
  1967                           ;init.c: 114: CHS0=1;
  1968  000F5A  84C2               	bsf	4034,2,c	;volatile
  1969                           
  1970                           ; BSR set to: 15
  1971  000F5C  0012               	return		;funcret
  1972  000F5E                     __end_of_initADC:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           intcon	equ	0xFF2
  1976                           intcon2	equ	0xFF1
  1977                           postinc0	equ	0xFEE
  1978                           wreg	equ	0xFE8
  1979                           plusw1	equ	0xFE3
  1980                           plusw2	equ	0xFDB
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function ___lwtoft *****************
  1984 ;; Defined at:
  1985 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  c               2   25[BANK0 ] unsigned int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  3   25[BANK0 ] float 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1999 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;Total ram usage:        3 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    7
  2006 ;; This function calls:
  2007 ;;		___ftpack
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  000EA4                     __ptext9:
  2015                           	opt stack 0
  2016  000EA4                     ___lwtoft:
  2017                           	opt stack 23
  2018                           
  2019                           ; BSR set to: 15
  2020                           ;incstack = 0
  2021  000EA4  C079  F071         	movff	___lwtoft@c,___ftpack@arg
  2022  000EA8  C07A  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  2023  000EAC  0100               	movlb	0	; () banked
  2024  000EAE  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  2025  000EB0  0E8E               	movlw	142
  2026  000EB2  0100               	movlb	0	; () banked
  2027  000EB4  6F74               	movwf	___ftpack@exp& (0+255),b
  2028  000EB6  0E00               	movlw	0
  2029  000EB8  0100               	movlb	0	; () banked
  2030  000EBA  6F75               	movwf	___ftpack@sign& (0+255),b
  2031  000EBC  EC90  F004         	call	___ftpack	;wreg free
  2032  000EC0  C071  F079         	movff	?___ftpack,?___lwtoft
  2033  000EC4  C072  F07A         	movff	?___ftpack+1,?___lwtoft+1
  2034  000EC8  C073  F07B         	movff	?___ftpack+2,?___lwtoft+2
  2035  000ECC  0012               	return	
  2036  000ECE  0012               	return		;funcret
  2037  000ED0                     __end_of___lwtoft:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           intcon	equ	0xFF2
  2041                           intcon2	equ	0xFF1
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           plusw1	equ	0xFE3
  2045                           plusw2	equ	0xFDB
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function ___fttol *****************
  2049 ;; Defined at:
  2050 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  f1              3   58[BANK0 ] float 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  lval            4   68[BANK0 ] unsigned long 
  2055 ;;  exp1            1   72[BANK0 ] unsigned char 
  2056 ;;  sign1           1   67[BANK0 ] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  4   58[BANK0 ] long 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2067 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;Total ram usage:       15 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    6
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text10
  2081  00067C                     __ptext10:
  2082                           	opt stack 0
  2083  00067C                     ___fttol:
  2084                           	opt stack 24
  2085                           
  2086                           ;incstack = 0
  2087  00067C  C09C  F09E         	movff	___fttol@f1+2,??___fttol
  2088  000680  0100               	movlb	0	; () banked
  2089  000682  6B9F               	clrf	(??___fttol+1)& (0+255),b
  2090  000684  6BA0               	clrf	(??___fttol+2)& (0+255),b
  2091  000686  0100               	movlb	0	; () banked
  2092  000688  359B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2093  00068A  0100               	movlb	0	; () banked
  2094  00068C  379E               	rlcf	??___fttol& (0+255),f,b
  2095  00068E  E301               	bnc	u1201
  2096  000690  819F               	bsf	(??___fttol+1)& (0+255),0,b
  2097  000692                     u1201:
  2098  000692  0100               	movlb	0	; () banked
  2099  000694  519E               	movf	??___fttol& (0+255),w,b
  2100  000696  0100               	movlb	0	; () banked
  2101  000698  6FA8               	movwf	___fttol@exp1& (0+255),b
  2102  00069A  0100               	movlb	0	; () banked
  2103  00069C  51A8               	movf	___fttol@exp1& (0+255),w,b
  2104  00069E  A4D8               	btfss	status,2,c
  2105  0006A0  D00A               	goto	l1835
  2106                           
  2107                           ; BSR set to: 0
  2108  0006A2  0E00               	movlw	0
  2109  0006A4  0100               	movlb	0	; () banked
  2110  0006A6  6F9A               	movwf	?___fttol& (0+255),b
  2111  0006A8  0E00               	movlw	0
  2112  0006AA  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2113  0006AC  0E00               	movlw	0
  2114  0006AE  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2115  0006B0  0E00               	movlw	0
  2116  0006B2  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2117                           
  2118                           ; BSR set to: 0
  2119  0006B4  0012               	return	
  2120  0006B6                     l1835:
  2121                           
  2122                           ; BSR set to: 0
  2123  0006B6  0E17               	movlw	23
  2124  0006B8  0100               	movlb	0	; () banked
  2125  0006BA  6F9E               	movwf	??___fttol& (0+255),b
  2126  0006BC  C09A  F09F         	movff	___fttol@f1,??___fttol+1
  2127  0006C0  C09B  F0A0         	movff	___fttol@f1+1,??___fttol+2
  2128  0006C4  C09C  F0A1         	movff	___fttol@f1+2,??___fttol+3
  2129  0006C8  0100               	movlb	0	; () banked
  2130  0006CA  299E               	incf	??___fttol& (0+255),w,b
  2131  0006CC  0100               	movlb	0	; () banked
  2132  0006CE  6FA2               	movwf	(??___fttol+4)& (0+255),b
  2133  0006D0  D005               	goto	u1220
  2134  0006D2                     u1225:
  2135  0006D2  0100               	movlb	0	; () banked
  2136  0006D4  90D8               	bcf	status,0,c
  2137  0006D6  33A1               	rrcf	(??___fttol+3)& (0+255),f,b
  2138  0006D8  33A0               	rrcf	(??___fttol+2)& (0+255),f,b
  2139  0006DA  339F               	rrcf	(??___fttol+1)& (0+255),f,b
  2140  0006DC                     u1220:
  2141  0006DC  0100               	movlb	0	; () banked
  2142  0006DE  2FA2               	decfsz	(??___fttol+4)& (0+255),f,b
  2143  0006E0  D7F8               	goto	u1225
  2144  0006E2  0100               	movlb	0	; () banked
  2145  0006E4  519F               	movf	(??___fttol+1)& (0+255),w,b
  2146  0006E6  0100               	movlb	0	; () banked
  2147  0006E8  6FA3               	movwf	___fttol@sign1& (0+255),b
  2148                           
  2149                           ; BSR set to: 0
  2150  0006EA  0100               	movlb	0	; () banked
  2151  0006EC  8F9B               	bsf	(___fttol@f1+1)& (0+255),7,b
  2152                           
  2153                           ; BSR set to: 0
  2154  0006EE  0EFF               	movlw	255
  2155  0006F0  0100               	movlb	0	; () banked
  2156  0006F2  179A               	andwf	___fttol@f1& (0+255),f,b
  2157  0006F4  0EFF               	movlw	255
  2158  0006F6  0100               	movlb	0	; () banked
  2159  0006F8  179B               	andwf	(___fttol@f1+1)& (0+255),f,b
  2160  0006FA  0E00               	movlw	0
  2161  0006FC  0100               	movlb	0	; () banked
  2162  0006FE  179C               	andwf	(___fttol@f1+2)& (0+255),f,b
  2163                           
  2164                           ; BSR set to: 0
  2165  000700  0100               	movlb	0	; () banked
  2166  000702  519A               	movf	___fttol@f1& (0+255),w,b
  2167  000704  0100               	movlb	0	; () banked
  2168  000706  6FA4               	movwf	___fttol@lval& (0+255),b
  2169  000708  0100               	movlb	0	; () banked
  2170  00070A  519B               	movf	(___fttol@f1+1)& (0+255),w,b
  2171  00070C  0100               	movlb	0	; () banked
  2172  00070E  6FA5               	movwf	(___fttol@lval+1)& (0+255),b
  2173  000710  0100               	movlb	0	; () banked
  2174  000712  519C               	movf	(___fttol@f1+2)& (0+255),w,b
  2175  000714  0100               	movlb	0	; () banked
  2176  000716  6FA6               	movwf	(___fttol@lval+2)& (0+255),b
  2177  000718  0100               	movlb	0	; () banked
  2178  00071A  6BA7               	clrf	(___fttol@lval+3)& (0+255),b
  2179                           
  2180                           ; BSR set to: 0
  2181  00071C  0E8E               	movlw	142
  2182  00071E  0100               	movlb	0	; () banked
  2183  000720  5FA8               	subwf	___fttol@exp1& (0+255),f,b
  2184                           
  2185                           ; BSR set to: 0
  2186  000722  0100               	movlb	0	; () banked
  2187  000724  AFA8               	btfss	___fttol@exp1& (0+255),7,b
  2188  000726  D01B               	goto	l1857
  2189                           
  2190                           ; BSR set to: 0
  2191  000728  0100               	movlb	0	; () banked
  2192  00072A  51A8               	movf	___fttol@exp1& (0+255),w,b
  2193  00072C  0A80               	xorlw	128
  2194  00072E  0F8F               	addlw	143
  2195  000730  B0D8               	btfsc	status,0,c
  2196  000732  D00B               	goto	l1853
  2197                           
  2198                           ; BSR set to: 0
  2199  000734  0E00               	movlw	0
  2200  000736  0100               	movlb	0	; () banked
  2201  000738  6F9A               	movwf	?___fttol& (0+255),b
  2202  00073A  0E00               	movlw	0
  2203  00073C  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2204  00073E  0E00               	movlw	0
  2205  000740  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2206  000742  0E00               	movlw	0
  2207  000744  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2208                           
  2209                           ; BSR set to: 0
  2210  000746  0012               	return	
  2211                           
  2212                           ; BSR set to: 0
  2213  000748  D000               	goto	l1853
  2214  00074A                     l1853:
  2215                           
  2216                           ; BSR set to: 0
  2217  00074A  0100               	movlb	0	; () banked
  2218  00074C  90D8               	bcf	status,0,c
  2219  00074E  33A7               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2220  000750  33A6               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2221  000752  33A5               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2222  000754  33A4               	rrcf	___fttol@lval& (0+255),f,b
  2223                           
  2224                           ; BSR set to: 0
  2225  000756  0100               	movlb	0	; () banked
  2226  000758  3FA8               	incfsz	___fttol@exp1& (0+255),f,b
  2227  00075A  D7F7               	goto	l1853
  2228                           
  2229                           ; BSR set to: 0
  2230  00075C  D01F               	goto	l1867
  2231  00075E                     l1857:
  2232                           
  2233                           ; BSR set to: 0
  2234  00075E  0E17               	movlw	23
  2235  000760  0100               	movlb	0	; () banked
  2236  000762  65A8               	cpfsgt	___fttol@exp1& (0+255),b
  2237  000764  D014               	goto	l1865
  2238                           
  2239                           ; BSR set to: 0
  2240  000766  0E00               	movlw	0
  2241  000768  0100               	movlb	0	; () banked
  2242  00076A  6F9A               	movwf	?___fttol& (0+255),b
  2243  00076C  0E00               	movlw	0
  2244  00076E  6F9B               	movwf	(?___fttol+1)& (0+255),b
  2245  000770  0E00               	movlw	0
  2246  000772  6F9C               	movwf	(?___fttol+2)& (0+255),b
  2247  000774  0E00               	movlw	0
  2248  000776  6F9D               	movwf	(?___fttol+3)& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251  000778  0012               	return	
  2252                           
  2253                           ; BSR set to: 0
  2254  00077A  D009               	goto	l1865
  2255  00077C                     l1863:
  2256                           
  2257                           ; BSR set to: 0
  2258  00077C  0100               	movlb	0	; () banked
  2259  00077E  90D8               	bcf	status,0,c
  2260  000780  37A4               	rlcf	___fttol@lval& (0+255),f,b
  2261  000782  37A5               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2262  000784  37A6               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2263  000786  37A7               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2264  000788  0100               	movlb	0	; () banked
  2265  00078A  07A8               	decf	___fttol@exp1& (0+255),f,b
  2266  00078C  D000               	goto	l1865
  2267  00078E                     l1865:
  2268                           
  2269                           ; BSR set to: 0
  2270  00078E  0100               	movlb	0	; () banked
  2271  000790  51A8               	movf	___fttol@exp1& (0+255),w,b
  2272  000792  0100               	movlb	0	; () banked
  2273  000794  B4D8               	btfsc	status,2,c
  2274  000796  D002               	goto	l1867
  2275  000798  D7F1               	goto	l1863
  2276                           
  2277                           ; BSR set to: 0
  2278  00079A  D000               	goto	l1867
  2279  00079C                     l1867:
  2280                           
  2281                           ; BSR set to: 0
  2282  00079C  0100               	movlb	0	; () banked
  2283  00079E  51A3               	movf	___fttol@sign1& (0+255),w,b
  2284  0007A0  0100               	movlb	0	; () banked
  2285  0007A2  B4D8               	btfsc	status,2,c
  2286  0007A4  D00A               	goto	l1871
  2287                           
  2288                           ; BSR set to: 0
  2289  0007A6  0100               	movlb	0	; () banked
  2290  0007A8  1FA7               	comf	(___fttol@lval+3)& (0+255),f,b
  2291  0007AA  1FA6               	comf	(___fttol@lval+2)& (0+255),f,b
  2292  0007AC  1FA5               	comf	(___fttol@lval+1)& (0+255),f,b
  2293  0007AE  6DA4               	negf	___fttol@lval& (0+255),b
  2294  0007B0  0E00               	movlw	0
  2295  0007B2  23A5               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2296  0007B4  23A6               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2297  0007B6  23A7               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2298  0007B8  D000               	goto	l1871
  2299  0007BA                     l1871:
  2300                           
  2301                           ; BSR set to: 0
  2302  0007BA  C0A4  F09A         	movff	___fttol@lval,?___fttol
  2303  0007BE  C0A5  F09B         	movff	___fttol@lval+1,?___fttol+1
  2304  0007C2  C0A6  F09C         	movff	___fttol@lval+2,?___fttol+2
  2305  0007C6  C0A7  F09D         	movff	___fttol@lval+3,?___fttol+3
  2306  0007CA  0012               	return	
  2307                           
  2308                           ; BSR set to: 0
  2309                           
  2310                           ; BSR set to: 0
  2311  0007CC  0012               	return		;funcret
  2312  0007CE                     __end_of___fttol:
  2313                           	opt stack 0
  2314                           tblptru	equ	0xFF8
  2315                           intcon	equ	0xFF2
  2316                           intcon2	equ	0xFF1
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           plusw1	equ	0xFE3
  2320                           plusw2	equ	0xFDB
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function ___ftmul *****************
  2324 ;; Defined at:
  2325 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  f1              3   28[BANK0 ] float 
  2328 ;;  f2              3   31[BANK0 ] float 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  2331 ;;  sign            1   42[BANK0 ] unsigned char 
  2332 ;;  cntr            1   41[BANK0 ] unsigned char 
  2333 ;;  exp             1   37[BANK0 ] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  3   28[BANK0 ] float 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2343 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2344 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2345 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;Total ram usage:       15 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    7
  2350 ;; This function calls:
  2351 ;;		___ftpack
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text11
  2358  0003BA                     __ptext11:
  2359                           	opt stack 0
  2360  0003BA                     ___ftmul:
  2361                           	opt stack 23
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;incstack = 0
  2365  0003BA  C07E  F082         	movff	___ftmul@f1+2,??___ftmul
  2366  0003BE  0100               	movlb	0	; () banked
  2367  0003C0  6B83               	clrf	(??___ftmul+1)& (0+255),b
  2368  0003C2  6B84               	clrf	(??___ftmul+2)& (0+255),b
  2369  0003C4  0100               	movlb	0	; () banked
  2370  0003C6  357D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2371  0003C8  0100               	movlb	0	; () banked
  2372  0003CA  3782               	rlcf	??___ftmul& (0+255),f,b
  2373  0003CC  E301               	bnc	u1141
  2374  0003CE  8183               	bsf	(??___ftmul+1)& (0+255),0,b
  2375  0003D0                     u1141:
  2376  0003D0  0100               	movlb	0	; () banked
  2377  0003D2  5182               	movf	??___ftmul& (0+255),w,b
  2378  0003D4  0100               	movlb	0	; () banked
  2379  0003D6  6F85               	movwf	___ftmul@exp& (0+255),b
  2380  0003D8  0100               	movlb	0	; () banked
  2381  0003DA  5185               	movf	___ftmul@exp& (0+255),w,b
  2382  0003DC  A4D8               	btfss	status,2,c
  2383  0003DE  D00A               	goto	l1787
  2384                           
  2385                           ; BSR set to: 0
  2386  0003E0  0E00               	movlw	0
  2387  0003E2  0100               	movlb	0	; () banked
  2388  0003E4  6F7C               	movwf	?___ftmul& (0+255),b
  2389  0003E6  0E00               	movlw	0
  2390  0003E8  0100               	movlb	0	; () banked
  2391  0003EA  6F7D               	movwf	(?___ftmul+1)& (0+255),b
  2392  0003EC  0E00               	movlw	0
  2393  0003EE  0100               	movlb	0	; () banked
  2394  0003F0  6F7E               	movwf	(?___ftmul+2)& (0+255),b
  2395                           
  2396                           ; BSR set to: 0
  2397  0003F2  0012               	return	
  2398  0003F4                     l1787:
  2399                           
  2400                           ; BSR set to: 0
  2401  0003F4  C081  F082         	movff	___ftmul@f2+2,??___ftmul
  2402  0003F8  0100               	movlb	0	; () banked
  2403  0003FA  6B83               	clrf	(??___ftmul+1)& (0+255),b
  2404  0003FC  6B84               	clrf	(??___ftmul+2)& (0+255),b
  2405  0003FE  0100               	movlb	0	; () banked
  2406  000400  3580               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2407  000402  0100               	movlb	0	; () banked
  2408  000404  3782               	rlcf	??___ftmul& (0+255),f,b
  2409  000406  E301               	bnc	u1161
  2410  000408  8183               	bsf	(??___ftmul+1)& (0+255),0,b
  2411  00040A                     u1161:
  2412  00040A  0100               	movlb	0	; () banked
  2413  00040C  5182               	movf	??___ftmul& (0+255),w,b
  2414  00040E  0100               	movlb	0	; () banked
  2415  000410  6F8A               	movwf	___ftmul@sign& (0+255),b
  2416  000412  0100               	movlb	0	; () banked
  2417  000414  518A               	movf	___ftmul@sign& (0+255),w,b
  2418  000416  A4D8               	btfss	status,2,c
  2419  000418  D00A               	goto	l1793
  2420                           
  2421                           ; BSR set to: 0
  2422  00041A  0E00               	movlw	0
  2423  00041C  0100               	movlb	0	; () banked
  2424  00041E  6F7C               	movwf	?___ftmul& (0+255),b
  2425  000420  0E00               	movlw	0
  2426  000422  0100               	movlb	0	; () banked
  2427  000424  6F7D               	movwf	(?___ftmul+1)& (0+255),b
  2428  000426  0E00               	movlw	0
  2429  000428  0100               	movlb	0	; () banked
  2430  00042A  6F7E               	movwf	(?___ftmul+2)& (0+255),b
  2431                           
  2432                           ; BSR set to: 0
  2433  00042C  0012               	return	
  2434  00042E                     l1793:
  2435                           
  2436                           ; BSR set to: 0
  2437  00042E  0100               	movlb	0	; () banked
  2438  000430  518A               	movf	___ftmul@sign& (0+255),w,b
  2439  000432  0F7B               	addlw	123
  2440  000434  0100               	movlb	0	; () banked
  2441  000436  2785               	addwf	___ftmul@exp& (0+255),f,b
  2442                           
  2443                           ; BSR set to: 0
  2444  000438  C07E  F08A         	movff	___ftmul@f1+2,___ftmul@sign
  2445  00043C  0100               	movlb	0	; () banked
  2446  00043E  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2447  000440  0100               	movlb	0	; () banked
  2448  000442  1B8A               	xorwf	___ftmul@sign& (0+255),f,b
  2449  000444  0E80               	movlw	128
  2450  000446  0100               	movlb	0	; () banked
  2451  000448  178A               	andwf	___ftmul@sign& (0+255),f,b
  2452                           
  2453                           ; BSR set to: 0
  2454  00044A  0100               	movlb	0	; () banked
  2455  00044C  8F7D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2456                           
  2457                           ; BSR set to: 0
  2458  00044E  0100               	movlb	0	; () banked
  2459  000450  8F80               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2460                           
  2461                           ; BSR set to: 0
  2462  000452  0EFF               	movlw	255
  2463  000454  0100               	movlb	0	; () banked
  2464  000456  177F               	andwf	___ftmul@f2& (0+255),f,b
  2465  000458  0EFF               	movlw	255
  2466  00045A  0100               	movlb	0	; () banked
  2467  00045C  1780               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2468  00045E  0E00               	movlw	0
  2469  000460  0100               	movlb	0	; () banked
  2470  000462  1781               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2471                           
  2472                           ; BSR set to: 0
  2473  000464  0E00               	movlw	0
  2474  000466  0100               	movlb	0	; () banked
  2475  000468  6F86               	movwf	___ftmul@f3_as_product& (0+255),b
  2476  00046A  0E00               	movlw	0
  2477  00046C  0100               	movlb	0	; () banked
  2478  00046E  6F87               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2479  000470  0E00               	movlw	0
  2480  000472  0100               	movlb	0	; () banked
  2481  000474  6F88               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484  000476  0E07               	movlw	7
  2485  000478  0100               	movlb	0	; () banked
  2486  00047A  6F89               	movwf	___ftmul@cntr& (0+255),b
  2487  00047C  D000               	goto	l1807
  2488  00047E                     l1807:
  2489                           
  2490                           ; BSR set to: 0
  2491  00047E  0100               	movlb	0	; () banked
  2492  000480  A17C               	btfss	___ftmul@f1& (0+255),0,b
  2493  000482  D00D               	goto	l1811
  2494                           
  2495                           ; BSR set to: 0
  2496  000484  0100               	movlb	0	; () banked
  2497  000486  517F               	movf	___ftmul@f2& (0+255),w,b
  2498  000488  0100               	movlb	0	; () banked
  2499  00048A  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2500  00048C  0100               	movlb	0	; () banked
  2501  00048E  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
  2502  000490  0100               	movlb	0	; () banked
  2503  000492  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2504  000494  0100               	movlb	0	; () banked
  2505  000496  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2506  000498  0100               	movlb	0	; () banked
  2507  00049A  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2508  00049C  D000               	goto	l1811
  2509  00049E                     l1811:
  2510                           
  2511                           ; BSR set to: 0
  2512  00049E  0100               	movlb	0	; () banked
  2513  0004A0  90D8               	bcf	status,0,c
  2514  0004A2  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2515  0004A4  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2516  0004A6  337C               	rrcf	___ftmul@f1& (0+255),f,b
  2517  0004A8  0100               	movlb	0	; () banked
  2518  0004AA  90D8               	bcf	status,0,c
  2519  0004AC  377F               	rlcf	___ftmul@f2& (0+255),f,b
  2520  0004AE  3780               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2521  0004B0  3781               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2522                           
  2523                           ; BSR set to: 0
  2524  0004B2  0100               	movlb	0	; () banked
  2525  0004B4  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
  2526  0004B6  D7E3               	goto	l1807
  2527  0004B8  D000               	goto	l1815
  2528  0004BA                     l1815:
  2529                           
  2530                           ; BSR set to: 0
  2531  0004BA  0E09               	movlw	9
  2532  0004BC  0100               	movlb	0	; () banked
  2533  0004BE  6F89               	movwf	___ftmul@cntr& (0+255),b
  2534  0004C0  D000               	goto	l1817
  2535  0004C2                     l1817:
  2536                           
  2537                           ; BSR set to: 0
  2538  0004C2  0100               	movlb	0	; () banked
  2539  0004C4  A17C               	btfss	___ftmul@f1& (0+255),0,b
  2540  0004C6  D00D               	goto	l1821
  2541                           
  2542                           ; BSR set to: 0
  2543  0004C8  0100               	movlb	0	; () banked
  2544  0004CA  517F               	movf	___ftmul@f2& (0+255),w,b
  2545  0004CC  0100               	movlb	0	; () banked
  2546  0004CE  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2547  0004D0  0100               	movlb	0	; () banked
  2548  0004D2  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
  2549  0004D4  0100               	movlb	0	; () banked
  2550  0004D6  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2551  0004D8  0100               	movlb	0	; () banked
  2552  0004DA  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
  2553  0004DC  0100               	movlb	0	; () banked
  2554  0004DE  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2555  0004E0  D000               	goto	l1821
  2556  0004E2                     l1821:
  2557                           
  2558                           ; BSR set to: 0
  2559  0004E2  0100               	movlb	0	; () banked
  2560  0004E4  90D8               	bcf	status,0,c
  2561  0004E6  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2562  0004E8  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2563  0004EA  337C               	rrcf	___ftmul@f1& (0+255),f,b
  2564  0004EC  0100               	movlb	0	; () banked
  2565  0004EE  90D8               	bcf	status,0,c
  2566  0004F0  3388               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2567  0004F2  3387               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2568  0004F4  3386               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2569                           
  2570                           ; BSR set to: 0
  2571  0004F6  0100               	movlb	0	; () banked
  2572  0004F8  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
  2573  0004FA  D7E3               	goto	l1817
  2574  0004FC  D000               	goto	l1825
  2575  0004FE                     l1825:
  2576                           
  2577                           ; BSR set to: 0
  2578  0004FE  C086  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  2579  000502  C087  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2580  000506  C088  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2581  00050A  C085  F074         	movff	___ftmul@exp,___ftpack@exp
  2582  00050E  C08A  F075         	movff	___ftmul@sign,___ftpack@sign
  2583  000512  EC90  F004         	call	___ftpack	;wreg free
  2584  000516  C071  F07C         	movff	?___ftpack,?___ftmul
  2585  00051A  C072  F07D         	movff	?___ftpack+1,?___ftmul+1
  2586  00051E  C073  F07E         	movff	?___ftpack+2,?___ftmul+2
  2587  000522  0012               	return	
  2588  000524  0012               	return		;funcret
  2589  000526                     __end_of___ftmul:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           intcon	equ	0xFF2
  2593                           intcon2	equ	0xFF1
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           plusw1	equ	0xFE3
  2597                           plusw2	equ	0xFDB
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function ___ftdiv *****************
  2601 ;; Defined at:
  2602 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  f1              3   43[BANK0 ] float 
  2605 ;;  f2              3   46[BANK0 ] float 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  f3              3   53[BANK0 ] float 
  2608 ;;  sign            1   57[BANK0 ] unsigned char 
  2609 ;;  exp             1   56[BANK0 ] unsigned char 
  2610 ;;  cntr            1   52[BANK0 ] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  3   43[BANK0 ] float 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:       15 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    7
  2627 ;; This function calls:
  2628 ;;		___ftpack
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text12
  2635  0007CE                     __ptext12:
  2636                           	opt stack 0
  2637  0007CE                     ___ftdiv:
  2638                           	opt stack 23
  2639                           
  2640                           ;incstack = 0
  2641  0007CE  C08D  F091         	movff	___ftdiv@f1+2,??___ftdiv
  2642  0007D2  0100               	movlb	0	; () banked
  2643  0007D4  6B92               	clrf	(??___ftdiv+1)& (0+255),b
  2644  0007D6  6B93               	clrf	(??___ftdiv+2)& (0+255),b
  2645  0007D8  0100               	movlb	0	; () banked
  2646  0007DA  358C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2647  0007DC  0100               	movlb	0	; () banked
  2648  0007DE  3791               	rlcf	??___ftdiv& (0+255),f,b
  2649  0007E0  E301               	bnc	u1091
  2650  0007E2  8192               	bsf	(??___ftdiv+1)& (0+255),0,b
  2651  0007E4                     u1091:
  2652  0007E4  0100               	movlb	0	; () banked
  2653  0007E6  5191               	movf	??___ftdiv& (0+255),w,b
  2654  0007E8  0100               	movlb	0	; () banked
  2655  0007EA  6F98               	movwf	___ftdiv@exp& (0+255),b
  2656  0007EC  0100               	movlb	0	; () banked
  2657  0007EE  5198               	movf	___ftdiv@exp& (0+255),w,b
  2658  0007F0  A4D8               	btfss	status,2,c
  2659  0007F2  D00A               	goto	l1741
  2660                           
  2661                           ; BSR set to: 0
  2662  0007F4  0E00               	movlw	0
  2663  0007F6  0100               	movlb	0	; () banked
  2664  0007F8  6F8B               	movwf	?___ftdiv& (0+255),b
  2665  0007FA  0E00               	movlw	0
  2666  0007FC  0100               	movlb	0	; () banked
  2667  0007FE  6F8C               	movwf	(?___ftdiv+1)& (0+255),b
  2668  000800  0E00               	movlw	0
  2669  000802  0100               	movlb	0	; () banked
  2670  000804  6F8D               	movwf	(?___ftdiv+2)& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673  000806  0012               	return	
  2674  000808                     l1741:
  2675                           
  2676                           ; BSR set to: 0
  2677  000808  C090  F091         	movff	___ftdiv@f2+2,??___ftdiv
  2678  00080C  0100               	movlb	0	; () banked
  2679  00080E  6B92               	clrf	(??___ftdiv+1)& (0+255),b
  2680  000810  6B93               	clrf	(??___ftdiv+2)& (0+255),b
  2681  000812  0100               	movlb	0	; () banked
  2682  000814  358F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2683  000816  0100               	movlb	0	; () banked
  2684  000818  3791               	rlcf	??___ftdiv& (0+255),f,b
  2685  00081A  E301               	bnc	u1111
  2686  00081C  8192               	bsf	(??___ftdiv+1)& (0+255),0,b
  2687  00081E                     u1111:
  2688  00081E  0100               	movlb	0	; () banked
  2689  000820  5191               	movf	??___ftdiv& (0+255),w,b
  2690  000822  0100               	movlb	0	; () banked
  2691  000824  6F99               	movwf	___ftdiv@sign& (0+255),b
  2692  000826  0100               	movlb	0	; () banked
  2693  000828  5199               	movf	___ftdiv@sign& (0+255),w,b
  2694  00082A  A4D8               	btfss	status,2,c
  2695  00082C  D00A               	goto	l1747
  2696                           
  2697                           ; BSR set to: 0
  2698  00082E  0E00               	movlw	0
  2699  000830  0100               	movlb	0	; () banked
  2700  000832  6F8B               	movwf	?___ftdiv& (0+255),b
  2701  000834  0E00               	movlw	0
  2702  000836  0100               	movlb	0	; () banked
  2703  000838  6F8C               	movwf	(?___ftdiv+1)& (0+255),b
  2704  00083A  0E00               	movlw	0
  2705  00083C  0100               	movlb	0	; () banked
  2706  00083E  6F8D               	movwf	(?___ftdiv+2)& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709  000840  0012               	return	
  2710  000842                     l1747:
  2711                           
  2712                           ; BSR set to: 0
  2713  000842  0E00               	movlw	0
  2714  000844  0100               	movlb	0	; () banked
  2715  000846  6F95               	movwf	___ftdiv@f3& (0+255),b
  2716  000848  0E00               	movlw	0
  2717  00084A  0100               	movlb	0	; () banked
  2718  00084C  6F96               	movwf	(___ftdiv@f3+1)& (0+255),b
  2719  00084E  0E00               	movlw	0
  2720  000850  0100               	movlb	0	; () banked
  2721  000852  6F97               	movwf	(___ftdiv@f3+2)& (0+255),b
  2722                           
  2723                           ; BSR set to: 0
  2724  000854  0100               	movlb	0	; () banked
  2725  000856  5199               	movf	___ftdiv@sign& (0+255),w,b
  2726  000858  0F89               	addlw	137
  2727  00085A  0100               	movlb	0	; () banked
  2728  00085C  5F98               	subwf	___ftdiv@exp& (0+255),f,b
  2729                           
  2730                           ; BSR set to: 0
  2731  00085E  C08D  F099         	movff	___ftdiv@f1+2,___ftdiv@sign
  2732                           
  2733                           ; BSR set to: 0
  2734  000862  0100               	movlb	0	; () banked
  2735  000864  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2736  000866  0100               	movlb	0	; () banked
  2737  000868  1B99               	xorwf	___ftdiv@sign& (0+255),f,b
  2738                           
  2739                           ; BSR set to: 0
  2740  00086A  0E80               	movlw	128
  2741  00086C  0100               	movlb	0	; () banked
  2742  00086E  1799               	andwf	___ftdiv@sign& (0+255),f,b
  2743                           
  2744                           ; BSR set to: 0
  2745  000870  0100               	movlb	0	; () banked
  2746  000872  8F8C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2747                           
  2748                           ; BSR set to: 0
  2749  000874  0EFF               	movlw	255
  2750  000876  0100               	movlb	0	; () banked
  2751  000878  178B               	andwf	___ftdiv@f1& (0+255),f,b
  2752  00087A  0EFF               	movlw	255
  2753  00087C  0100               	movlb	0	; () banked
  2754  00087E  178C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2755  000880  0E00               	movlw	0
  2756  000882  0100               	movlb	0	; () banked
  2757  000884  178D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2758                           
  2759                           ; BSR set to: 0
  2760  000886  0100               	movlb	0	; () banked
  2761  000888  8F8F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2762                           
  2763                           ; BSR set to: 0
  2764  00088A  0EFF               	movlw	255
  2765  00088C  0100               	movlb	0	; () banked
  2766  00088E  178E               	andwf	___ftdiv@f2& (0+255),f,b
  2767  000890  0EFF               	movlw	255
  2768  000892  0100               	movlb	0	; () banked
  2769  000894  178F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2770  000896  0E00               	movlw	0
  2771  000898  0100               	movlb	0	; () banked
  2772  00089A  1790               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2773                           
  2774                           ; BSR set to: 0
  2775  00089C  0E18               	movlw	24
  2776  00089E  0100               	movlb	0	; () banked
  2777  0008A0  6F94               	movwf	___ftdiv@cntr& (0+255),b
  2778  0008A2  D000               	goto	l1767
  2779  0008A4                     l1767:
  2780                           
  2781                           ; BSR set to: 0
  2782  0008A4  0100               	movlb	0	; () banked
  2783  0008A6  90D8               	bcf	status,0,c
  2784  0008A8  3795               	rlcf	___ftdiv@f3& (0+255),f,b
  2785  0008AA  3796               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2786  0008AC  3797               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2787                           
  2788                           ; BSR set to: 0
  2789  0008AE  0100               	movlb	0	; () banked
  2790  0008B0  518E               	movf	___ftdiv@f2& (0+255),w,b
  2791  0008B2  0100               	movlb	0	; () banked
  2792  0008B4  5D8B               	subwf	___ftdiv@f1& (0+255),w,b
  2793  0008B6  0100               	movlb	0	; () banked
  2794  0008B8  518F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2795  0008BA  0100               	movlb	0	; () banked
  2796  0008BC  598C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2797  0008BE  0100               	movlb	0	; () banked
  2798  0008C0  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2799  0008C2  0100               	movlb	0	; () banked
  2800  0008C4  598D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2801  0008C6  A0D8               	btfss	status,0,c
  2802  0008C8  D00E               	goto	l658
  2803                           
  2804                           ; BSR set to: 0
  2805  0008CA  0100               	movlb	0	; () banked
  2806  0008CC  518E               	movf	___ftdiv@f2& (0+255),w,b
  2807  0008CE  0100               	movlb	0	; () banked
  2808  0008D0  5F8B               	subwf	___ftdiv@f1& (0+255),f,b
  2809  0008D2  0100               	movlb	0	; () banked
  2810  0008D4  518F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2811  0008D6  0100               	movlb	0	; () banked
  2812  0008D8  5B8C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2813  0008DA  0100               	movlb	0	; () banked
  2814  0008DC  5190               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2815  0008DE  0100               	movlb	0	; () banked
  2816  0008E0  5B8D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2817                           
  2818                           ; BSR set to: 0
  2819  0008E2  0100               	movlb	0	; () banked
  2820  0008E4  8195               	bsf	___ftdiv@f3& (0+255),0,b
  2821  0008E6                     l658:
  2822                           
  2823                           ; BSR set to: 0
  2824  0008E6  0100               	movlb	0	; () banked
  2825  0008E8  90D8               	bcf	status,0,c
  2826  0008EA  378B               	rlcf	___ftdiv@f1& (0+255),f,b
  2827  0008EC  378C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2828  0008EE  378D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2829                           
  2830                           ; BSR set to: 0
  2831  0008F0  0100               	movlb	0	; () banked
  2832  0008F2  2F94               	decfsz	___ftdiv@cntr& (0+255),f,b
  2833  0008F4  D7D7               	goto	l1767
  2834  0008F6  D000               	goto	l1777
  2835  0008F8                     l1777:
  2836                           
  2837                           ; BSR set to: 0
  2838  0008F8  C095  F071         	movff	___ftdiv@f3,___ftpack@arg
  2839  0008FC  C096  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2840  000900  C097  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2841  000904  C098  F074         	movff	___ftdiv@exp,___ftpack@exp
  2842  000908  C099  F075         	movff	___ftdiv@sign,___ftpack@sign
  2843  00090C  EC90  F004         	call	___ftpack	;wreg free
  2844  000910  C071  F08B         	movff	?___ftpack,?___ftdiv
  2845  000914  C072  F08C         	movff	?___ftpack+1,?___ftdiv+1
  2846  000918  C073  F08D         	movff	?___ftpack+2,?___ftdiv+2
  2847  00091C  0012               	return	
  2848  00091E  0012               	return		;funcret
  2849  000920                     __end_of___ftdiv:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           intcon	equ	0xFF2
  2853                           intcon2	equ	0xFF1
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           plusw1	equ	0xFE3
  2857                           plusw2	equ	0xFDB
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function ___ftpack *****************
  2861 ;; Defined at:
  2862 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  arg             3   17[BANK0 ] unsigned um
  2865 ;;  exp             1   20[BANK0 ] unsigned char 
  2866 ;;  sign            1   21[BANK0 ] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  3   17[BANK0 ] float 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:        8 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    6
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		___ftdiv
  2889 ;;		___ftmul
  2890 ;;		___lwtoft
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text13
  2895  000920                     __ptext13:
  2896                           	opt stack 0
  2897  000920                     ___ftpack:
  2898                           	opt stack 23
  2899                           
  2900                           ;incstack = 0
  2901  000920  0100               	movlb	0	; () banked
  2902  000922  5174               	movf	___ftpack@exp& (0+255),w,b
  2903  000924  0100               	movlb	0	; () banked
  2904  000926  B4D8               	btfsc	status,2,c
  2905  000928  D008               	goto	l1523
  2906                           
  2907                           ; BSR set to: 0
  2908  00092A  0100               	movlb	0	; () banked
  2909  00092C  5171               	movf	___ftpack@arg& (0+255),w,b
  2910  00092E  0100               	movlb	0	; () banked
  2911  000930  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2912  000932  0100               	movlb	0	; () banked
  2913  000934  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2914  000936  A4D8               	btfss	status,2,c
  2915  000938  D013               	goto	l1529
  2916  00093A                     l1523:
  2917                           
  2918                           ; BSR set to: 0
  2919  00093A  0E00               	movlw	0
  2920  00093C  0100               	movlb	0	; () banked
  2921  00093E  6F71               	movwf	?___ftpack& (0+255),b
  2922  000940  0E00               	movlw	0
  2923  000942  0100               	movlb	0	; () banked
  2924  000944  6F72               	movwf	(?___ftpack+1)& (0+255),b
  2925  000946  0E00               	movlw	0
  2926  000948  0100               	movlb	0	; () banked
  2927  00094A  6F73               	movwf	(?___ftpack+2)& (0+255),b
  2928                           
  2929                           ; BSR set to: 0
  2930  00094C  0012               	return	
  2931                           
  2932                           ; BSR set to: 0
  2933  00094E  D008               	goto	l1529
  2934  000950                     l1527:
  2935                           
  2936                           ; BSR set to: 0
  2937  000950  0100               	movlb	0	; () banked
  2938  000952  2B74               	incf	___ftpack@exp& (0+255),f,b
  2939  000954  0100               	movlb	0	; () banked
  2940  000956  90D8               	bcf	status,0,c
  2941  000958  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2942  00095A  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2943  00095C  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2944  00095E  D000               	goto	l1529
  2945  000960                     l1529:
  2946                           
  2947                           ; BSR set to: 0
  2948  000960  0E00               	movlw	0
  2949  000962  0100               	movlb	0	; () banked
  2950  000964  1571               	andwf	___ftpack@arg& (0+255),w,b
  2951  000966  0100               	movlb	0	; () banked
  2952  000968  6F76               	movwf	??___ftpack& (0+255),b
  2953  00096A  0E00               	movlw	0
  2954  00096C  0100               	movlb	0	; () banked
  2955  00096E  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2956  000970  0100               	movlb	0	; () banked
  2957  000972  6F77               	movwf	(??___ftpack+1)& (0+255),b
  2958  000974  0EFE               	movlw	254
  2959  000976  0100               	movlb	0	; () banked
  2960  000978  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2961  00097A  0100               	movlb	0	; () banked
  2962  00097C  6F78               	movwf	(??___ftpack+2)& (0+255),b
  2963  00097E  0100               	movlb	0	; () banked
  2964  000980  5176               	movf	??___ftpack& (0+255),w,b
  2965  000982  0100               	movlb	0	; () banked
  2966  000984  1177               	iorwf	(??___ftpack+1)& (0+255),w,b
  2967  000986  0100               	movlb	0	; () banked
  2968  000988  1178               	iorwf	(??___ftpack+2)& (0+255),w,b
  2969  00098A  B4D8               	btfsc	status,2,c
  2970  00098C  D013               	goto	l1535
  2971  00098E  D7E0               	goto	l1527
  2972                           
  2973                           ; BSR set to: 0
  2974  000990  D011               	goto	l1535
  2975  000992                     l1531:
  2976                           
  2977                           ; BSR set to: 0
  2978  000992  0100               	movlb	0	; () banked
  2979  000994  2B74               	incf	___ftpack@exp& (0+255),f,b
  2980                           
  2981                           ; BSR set to: 0
  2982  000996  0E01               	movlw	1
  2983  000998  0100               	movlb	0	; () banked
  2984  00099A  2771               	addwf	___ftpack@arg& (0+255),f,b
  2985  00099C  0E00               	movlw	0
  2986  00099E  0100               	movlb	0	; () banked
  2987  0009A0  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2988  0009A2  0E00               	movlw	0
  2989  0009A4  0100               	movlb	0	; () banked
  2990  0009A6  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2991  0009A8  0100               	movlb	0	; () banked
  2992  0009AA  90D8               	bcf	status,0,c
  2993  0009AC  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2994  0009AE  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2995  0009B0  3371               	rrcf	___ftpack@arg& (0+255),f,b
  2996  0009B2  D000               	goto	l1535
  2997  0009B4                     l1535:
  2998                           
  2999                           ; BSR set to: 0
  3000  0009B4  0E00               	movlw	0
  3001  0009B6  0100               	movlb	0	; () banked
  3002  0009B8  1571               	andwf	___ftpack@arg& (0+255),w,b
  3003  0009BA  0100               	movlb	0	; () banked
  3004  0009BC  6F76               	movwf	??___ftpack& (0+255),b
  3005  0009BE  0E00               	movlw	0
  3006  0009C0  0100               	movlb	0	; () banked
  3007  0009C2  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3008  0009C4  0100               	movlb	0	; () banked
  3009  0009C6  6F77               	movwf	(??___ftpack+1)& (0+255),b
  3010  0009C8  0EFF               	movlw	255
  3011  0009CA  0100               	movlb	0	; () banked
  3012  0009CC  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3013  0009CE  0100               	movlb	0	; () banked
  3014  0009D0  6F78               	movwf	(??___ftpack+2)& (0+255),b
  3015  0009D2  0100               	movlb	0	; () banked
  3016  0009D4  5176               	movf	??___ftpack& (0+255),w,b
  3017  0009D6  0100               	movlb	0	; () banked
  3018  0009D8  1177               	iorwf	(??___ftpack+1)& (0+255),w,b
  3019  0009DA  0100               	movlb	0	; () banked
  3020  0009DC  1178               	iorwf	(??___ftpack+2)& (0+255),w,b
  3021  0009DE  B4D8               	btfsc	status,2,c
  3022  0009E0  D00A               	goto	l1539
  3023  0009E2  D7D7               	goto	l1531
  3024                           
  3025                           ; BSR set to: 0
  3026  0009E4  D008               	goto	l1539
  3027  0009E6                     l1537:
  3028                           
  3029                           ; BSR set to: 0
  3030  0009E6  0100               	movlb	0	; () banked
  3031  0009E8  0774               	decf	___ftpack@exp& (0+255),f,b
  3032  0009EA  0100               	movlb	0	; () banked
  3033  0009EC  90D8               	bcf	status,0,c
  3034  0009EE  3771               	rlcf	___ftpack@arg& (0+255),f,b
  3035  0009F0  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3036  0009F2  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3037  0009F4  D000               	goto	l1539
  3038  0009F6                     l1539:
  3039                           
  3040                           ; BSR set to: 0
  3041  0009F6  0100               	movlb	0	; () banked
  3042  0009F8  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3043  0009FA  D005               	goto	l594
  3044                           
  3045                           ; BSR set to: 0
  3046  0009FC  0E02               	movlw	2
  3047  0009FE  0100               	movlb	0	; () banked
  3048  000A00  6174               	cpfslt	___ftpack@exp& (0+255),b
  3049  000A02  D7F1               	goto	l1537
  3050  000A04  D000               	goto	l594
  3051  000A06                     l594:
  3052                           
  3053                           ; BSR set to: 0
  3054  000A06  0100               	movlb	0	; () banked
  3055  000A08  B174               	btfsc	___ftpack@exp& (0+255),0,b
  3056  000A0A  D003               	goto	l1545
  3057                           
  3058                           ; BSR set to: 0
  3059  000A0C  0100               	movlb	0	; () banked
  3060  000A0E  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3061  000A10  D000               	goto	l1545
  3062  000A12                     l1545:
  3063                           
  3064                           ; BSR set to: 0
  3065  000A12  0100               	movlb	0	; () banked
  3066  000A14  90D8               	bcf	status,0,c
  3067  000A16  3374               	rrcf	___ftpack@exp& (0+255),f,b
  3068  000A18  0100               	movlb	0	; () banked
  3069  000A1A  5174               	movf	___ftpack@exp& (0+255),w,b
  3070  000A1C  0100               	movlb	0	; () banked
  3071  000A1E  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3072                           
  3073                           ; BSR set to: 0
  3074  000A20  0100               	movlb	0	; () banked
  3075  000A22  5175               	movf	___ftpack@sign& (0+255),w,b
  3076  000A24  0100               	movlb	0	; () banked
  3077  000A26  B4D8               	btfsc	status,2,c
  3078  000A28  D003               	goto	l1551
  3079                           
  3080                           ; BSR set to: 0
  3081  000A2A  0100               	movlb	0	; () banked
  3082  000A2C  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3083  000A2E  D000               	goto	l1551
  3084  000A30                     l1551:
  3085                           
  3086                           ; BSR set to: 0
  3087  000A30  C071  F071         	movff	___ftpack@arg,?___ftpack
  3088  000A34  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
  3089  000A38  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
  3090  000A3C  0012               	return	
  3091                           
  3092                           ; BSR set to: 0
  3093                           
  3094                           ; BSR set to: 0
  3095  000A3E  0012               	return		;funcret
  3096  000A40                     __end_of___ftpack:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           intcon	equ	0xFF2
  3100                           intcon2	equ	0xFF1
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           plusw1	equ	0xFE3
  3104                           plusw2	equ	0xFDB
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Timer0_ISR *****************
  3108 ;; Defined at:
  3109 ;;		line 99 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;Total ram usage:       17 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    5
  3130 ;; This function calls:
  3131 ;;		i1_pwm
  3132 ;; This function is called by:
  3133 ;;		Interrupt level 1
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	intcodelo
  3138  000018                     __pintcodelo:
  3139                           	opt stack 0
  3140  000018                     _Timer0_ISR:
  3141                           	opt stack 23
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;incstack = 0
  3145  000018  CFD8 F060          	movff	status,??_Timer0_ISR
  3146  00001C  CFE8 F061          	movff	wreg,??_Timer0_ISR+1
  3147  000020  CFE0 F062          	movff	bsr,??_Timer0_ISR+2
  3148  000024  CFFA F063          	movff	pclath,??_Timer0_ISR+3
  3149  000028  CFFB F064          	movff	pclatu,??_Timer0_ISR+4
  3150  00002C  CFE9 F065          	movff	fsr0l,??_Timer0_ISR+5
  3151  000030  CFEA F066          	movff	fsr0h,??_Timer0_ISR+6
  3152  000034  CFE1 F067          	movff	fsr1l,??_Timer0_ISR+7
  3153  000038  CFE2 F068          	movff	fsr1h,??_Timer0_ISR+8
  3154  00003C  CFD9 F069          	movff	fsr2l,??_Timer0_ISR+9
  3155  000040  CFDA F06A          	movff	fsr2h,??_Timer0_ISR+10
  3156  000044  CFF3 F06B          	movff	prodl,??_Timer0_ISR+11
  3157  000048  CFF4 F06C          	movff	prodh,??_Timer0_ISR+12
  3158  00004C  CFF6 F06D          	movff	tblptrl,??_Timer0_ISR+13
  3159  000050  CFF7 F06E          	movff	tblptrh,??_Timer0_ISR+14
  3160  000054  CFF8 F06F          	movff	tblptru,??_Timer0_ISR+15
  3161  000058  CFF5 F070          	movff	tablat,??_Timer0_ISR+16
  3162                           
  3163                           ;main.c: 102: if (T0IE && T0IF)
  3164  00005C  BAF2               	btfsc	intcon,5,c	;volatile
  3165  00005E  A4F2               	btfss	intcon,2,c	;volatile
  3166  000060  D036               	goto	i1l200
  3167                           
  3168                           ;main.c: 103: {
  3169                           ;main.c: 104: T0IF=0;
  3170  000062  94F2               	bcf	intcon,2,c	;volatile
  3171                           
  3172                           ;main.c: 106: millis++;
  3173  000064  4A2B               	infsnz	_millis,f,c
  3174  000066  2A2C               	incf	_millis+1,f,c
  3175                           
  3176                           ;main.c: 107: if (millis==1000)
  3177  000068  0EE8               	movlw	232
  3178  00006A  182B               	xorwf	_millis,w,c
  3179  00006C  E130               	bnz	i1l200
  3180  00006E  0E03               	movlw	3
  3181  000070  182C               	xorwf	_millis+1,w,c
  3182  000072  A4D8               	btfss	status,2,c
  3183  000074  D02C               	goto	i1l200
  3184                           
  3185                           ;main.c: 108: {
  3186                           ;main.c: 109: millis=0;
  3187  000076  0E00               	movlw	0
  3188  000078  6E2C               	movwf	_millis+1,c
  3189  00007A  0E00               	movlw	0
  3190  00007C  6E2B               	movwf	_millis,c
  3191                           
  3192                           ;main.c: 110: pwm('R',1023);
  3193  00007E  0E03               	movlw	3
  3194  000080  6E27               	movwf	i1pwm@dutycycle+1,c
  3195  000082  6826               	setf	i1pwm@dutycycle,c
  3196  000084  0E52               	movlw	82
  3197  000086  EC89  F006         	call	i1_pwm
  3198                           
  3199                           ;main.c: 111: pwm('G',1023);
  3200  00008A  0E03               	movlw	3
  3201  00008C  6E27               	movwf	i1pwm@dutycycle+1,c
  3202  00008E  6826               	setf	i1pwm@dutycycle,c
  3203  000090  0E47               	movlw	71
  3204  000092  EC89  F006         	call	i1_pwm
  3205                           
  3206                           ;main.c: 112: pwm('B',1023);
  3207  000096  0E03               	movlw	3
  3208  000098  6E27               	movwf	i1pwm@dutycycle+1,c
  3209  00009A  6826               	setf	i1pwm@dutycycle,c
  3210  00009C  0E42               	movlw	66
  3211  00009E  EC89  F006         	call	i1_pwm
  3212                           
  3213                           ;main.c: 113: pwm('R',0);
  3214  0000A2  0E00               	movlw	0
  3215  0000A4  6E27               	movwf	i1pwm@dutycycle+1,c
  3216  0000A6  0E00               	movlw	0
  3217  0000A8  6E26               	movwf	i1pwm@dutycycle,c
  3218  0000AA  0E52               	movlw	82
  3219  0000AC  EC89  F006         	call	i1_pwm
  3220                           
  3221                           ;main.c: 114: pwm('G',0);
  3222  0000B0  0E00               	movlw	0
  3223  0000B2  6E27               	movwf	i1pwm@dutycycle+1,c
  3224  0000B4  0E00               	movlw	0
  3225  0000B6  6E26               	movwf	i1pwm@dutycycle,c
  3226  0000B8  0E47               	movlw	71
  3227  0000BA  EC89  F006         	call	i1_pwm
  3228                           
  3229                           ;main.c: 115: pwm('B',0);
  3230  0000BE  0E00               	movlw	0
  3231  0000C0  6E27               	movwf	i1pwm@dutycycle+1,c
  3232  0000C2  0E00               	movlw	0
  3233  0000C4  6E26               	movwf	i1pwm@dutycycle,c
  3234  0000C6  0E42               	movlw	66
  3235  0000C8  EC89  F006         	call	i1_pwm
  3236  0000CC  D000               	goto	i1l200
  3237  0000CE                     i1l200:
  3238  0000CE  C070  FFF5         	movff	??_Timer0_ISR+16,tablat
  3239  0000D2  C06F  FFF8         	movff	??_Timer0_ISR+15,tblptru
  3240  0000D6  C06E  FFF7         	movff	??_Timer0_ISR+14,tblptrh
  3241  0000DA  C06D  FFF6         	movff	??_Timer0_ISR+13,tblptrl
  3242  0000DE  C06C  FFF4         	movff	??_Timer0_ISR+12,prodh
  3243  0000E2  C06B  FFF3         	movff	??_Timer0_ISR+11,prodl
  3244  0000E6  C06A  FFDA         	movff	??_Timer0_ISR+10,fsr2h
  3245  0000EA  C069  FFD9         	movff	??_Timer0_ISR+9,fsr2l
  3246  0000EE  C068  FFE2         	movff	??_Timer0_ISR+8,fsr1h
  3247  0000F2  C067  FFE1         	movff	??_Timer0_ISR+7,fsr1l
  3248  0000F6  C066  FFEA         	movff	??_Timer0_ISR+6,fsr0h
  3249  0000FA  C065  FFE9         	movff	??_Timer0_ISR+5,fsr0l
  3250  0000FE  C064  FFFB         	movff	??_Timer0_ISR+4,pclatu
  3251  000102  C063  FFFA         	movff	??_Timer0_ISR+3,pclath
  3252  000106  C062  FFE0         	movff	??_Timer0_ISR+2,bsr
  3253  00010A  C061  FFE8         	movff	??_Timer0_ISR+1,wreg
  3254  00010E  C060  FFD8         	movff	??_Timer0_ISR,status
  3255  000112  0010               	retfie	
  3256  000114                     __end_of_Timer0_ISR:
  3257                           	opt stack 0
  3258                           pclatu	equ	0xFFB
  3259                           pclath	equ	0xFFA
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           intcon	equ	0xFF2
  3267                           intcon2	equ	0xFF1
  3268                           postinc0	equ	0xFEE
  3269                           fsr0h	equ	0xFEA
  3270                           fsr0l	equ	0xFE9
  3271                           wreg	equ	0xFE8
  3272                           plusw1	equ	0xFE3
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           bsr	equ	0xFE0
  3276                           plusw2	equ	0xFDB
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function i1_pwm *****************
  3282 ;; Defined at:
  3283 ;;		line 8 in file "converter.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  color           1    wreg     unsigned char 
  3286 ;;  dutycycle       2   37[COMRAM] int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  color           1   39[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;		None               void
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;Total ram usage:        3 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    4
  3305 ;; This function calls:
  3306 ;;		i1___awdiv
  3307 ;; This function is called by:
  3308 ;;		_Timer0_ISR
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text15
  3313  000D12                     __ptext15:
  3314                           	opt stack 0
  3315  000D12                     i1_pwm:
  3316                           	opt stack 23
  3317                           
  3318                           ;incstack = 0
  3319                           ;i1pwm@color stored from wreg
  3320  000D12  6E28               	movwf	i1pwm@color,c
  3321                           
  3322                           ;converter.c: 9: switch(color){
  3323  000D14  D036               	goto	i1l1901
  3324  000D16                     i1l1881:
  3325                           
  3326                           ;converter.c: 11: CCPR2L=dutycycle/4;
  3327  000D16  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3328  000D1A  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3329  000D1E  0E00               	movlw	0
  3330  000D20  6E21               	movwf	i1___awdiv@divisor+1,c
  3331  000D22  0E04               	movlw	4
  3332  000D24  6E20               	movwf	i1___awdiv@divisor,c
  3333  000D26  EC3E  F006         	call	i1___awdiv	;wreg free
  3334  000D2A  501E               	movf	?i1___awdiv,w,c
  3335  000D2C  010F               	movlb	15	; () banked
  3336  000D2E  6F51               	movwf	81,b	;volatile
  3337                           
  3338                           ; BSR set to: 15
  3339                           ;converter.c: 12: DC2B1=(dutycycle/2)%1;
  3340  000D30  010F               	movlb	15	; () banked
  3341  000D32  9B50               	bcf	80,5,b	;volatile
  3342                           
  3343                           ; BSR set to: 15
  3344                           ;converter.c: 13: DC2B0=dutycycle%1;
  3345  000D34  010F               	movlb	15	; () banked
  3346  000D36  9950               	bcf	80,4,b	;volatile
  3347                           
  3348                           ;converter.c: 14: break;
  3349  000D38  0012               	return	
  3350  000D3A                     i1l1887:
  3351                           
  3352                           ;converter.c: 16: CCPR3L=dutycycle/4;
  3353  000D3A  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3354  000D3E  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3355  000D42  0E00               	movlw	0
  3356  000D44  6E21               	movwf	i1___awdiv@divisor+1,c
  3357  000D46  0E04               	movlw	4
  3358  000D48  6E20               	movwf	i1___awdiv@divisor,c
  3359  000D4A  EC3E  F006         	call	i1___awdiv	;wreg free
  3360  000D4E  501E               	movf	?i1___awdiv,w,c
  3361  000D50  010F               	movlb	15	; () banked
  3362  000D52  6F4E               	movwf	78,b	;volatile
  3363                           
  3364                           ; BSR set to: 15
  3365                           ;converter.c: 17: DC3B1=(dutycycle/2)%1;
  3366  000D54  010F               	movlb	15	; () banked
  3367  000D56  9B4D               	bcf	77,5,b	;volatile
  3368                           
  3369                           ; BSR set to: 15
  3370                           ;converter.c: 18: DC3B0=0;
  3371  000D58  010F               	movlb	15	; () banked
  3372  000D5A  994D               	bcf	77,4,b	;volatile
  3373                           
  3374                           ;converter.c: 19: break;
  3375  000D5C  0012               	return	
  3376  000D5E                     i1l1893:
  3377                           
  3378                           ;converter.c: 21: CCPR4L=dutycycle/4;
  3379  000D5E  C026  F01E         	movff	i1pwm@dutycycle,i1___awdiv@dividend
  3380  000D62  C027  F01F         	movff	i1pwm@dutycycle+1,i1___awdiv@dividend+1
  3381  000D66  0E00               	movlw	0
  3382  000D68  6E21               	movwf	i1___awdiv@divisor+1,c
  3383  000D6A  0E04               	movlw	4
  3384  000D6C  6E20               	movwf	i1___awdiv@divisor,c
  3385  000D6E  EC3E  F006         	call	i1___awdiv	;wreg free
  3386  000D72  501E               	movf	?i1___awdiv,w,c
  3387  000D74  010F               	movlb	15	; () banked
  3388  000D76  6F4B               	movwf	75,b	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391                           ;converter.c: 22: DC4B1=(dutycycle/2)%1;
  3392  000D78  010F               	movlb	15	; () banked
  3393  000D7A  9B4A               	bcf	74,5,b	;volatile
  3394                           
  3395                           ; BSR set to: 15
  3396                           ;converter.c: 23: DC4B0=dutycycle%1;
  3397  000D7C  010F               	movlb	15	; () banked
  3398  000D7E  994A               	bcf	74,4,b	;volatile
  3399                           
  3400                           ; BSR set to: 15
  3401                           ;converter.c: 25: }
  3402                           
  3403                           ;converter.c: 24: break;
  3404  000D80  0012               	return	
  3405  000D82                     i1l1901:
  3406  000D82  5028               	movf	i1pwm@color,w,c
  3407                           
  3408                           ; Switch size 1, requested type "space"
  3409                           ; Number of cases is 3, Range of values is 66 to 82
  3410                           ; switch strategies available:
  3411                           ; Name         Instructions Cycles
  3412                           ; simple_byte           10     6 (average)
  3413                           ;	Chosen strategy is simple_byte
  3414  000D84  0A42               	xorlw	66	; case 66
  3415  000D86  B4D8               	btfsc	status,2,c
  3416  000D88  D7C6               	goto	i1l1881
  3417  000D8A  0A05               	xorlw	5	; case 71
  3418  000D8C  B4D8               	btfsc	status,2,c
  3419  000D8E  D7E7               	goto	i1l1893
  3420  000D90  0A15               	xorlw	21	; case 82
  3421  000D92  A4D8               	btfss	status,2,c
  3422  000D94  0012               	return	
  3423  000D96  D7D1               	goto	i1l1887
  3424  000D98  0012               	return		;funcret
  3425  000D9A                     __end_ofi1_pwm:
  3426                           	opt stack 0
  3427                           pclatu	equ	0xFFB
  3428                           pclath	equ	0xFFA
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           intcon2	equ	0xFF1
  3437                           postinc0	equ	0xFEE
  3438                           fsr0h	equ	0xFEA
  3439                           fsr0l	equ	0xFE9
  3440                           wreg	equ	0xFE8
  3441                           plusw1	equ	0xFE3
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           bsr	equ	0xFE0
  3445                           plusw2	equ	0xFDB
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function i1___awdiv *****************
  3451 ;; Defined at:
  3452 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/awdiv.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  dividend        2   29[COMRAM] int 
  3455 ;;  divisor         2   31[COMRAM] int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  __awdiv         2   35[COMRAM] int 
  3458 ;;  __awdiv         1   34[COMRAM] unsigned char 
  3459 ;;  __awdiv         1   33[COMRAM] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2   29[COMRAM] int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;Total ram usage:        8 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    3
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		i1_pwm
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text16
  3484  000C7C                     __ptext16:
  3485                           	opt stack 0
  3486  000C7C                     i1___awdiv:
  3487                           	opt stack 23
  3488                           
  3489                           ;incstack = 0
  3490  000C7C  0E00               	movlw	0
  3491  000C7E  6E23               	movwf	i1___awdiv@sign,c
  3492  000C80  AE21               	btfss	i1___awdiv@divisor+1,7,c
  3493  000C82  D007               	goto	i1l1619
  3494  000C84  6C20               	negf	i1___awdiv@divisor,c
  3495  000C86  1E21               	comf	i1___awdiv@divisor+1,f,c
  3496  000C88  B0D8               	btfsc	status,0,c
  3497  000C8A  2A21               	incf	i1___awdiv@divisor+1,f,c
  3498  000C8C  0E01               	movlw	1
  3499  000C8E  6E23               	movwf	i1___awdiv@sign,c
  3500  000C90  D000               	goto	i1l1619
  3501  000C92                     i1l1619:
  3502  000C92  AE1F               	btfss	i1___awdiv@dividend+1,7,c
  3503  000C94  D007               	goto	i1l1625
  3504  000C96  6C1E               	negf	i1___awdiv@dividend,c
  3505  000C98  1E1F               	comf	i1___awdiv@dividend+1,f,c
  3506  000C9A  B0D8               	btfsc	status,0,c
  3507  000C9C  2A1F               	incf	i1___awdiv@dividend+1,f,c
  3508  000C9E  0E01               	movlw	1
  3509  000CA0  1A23               	xorwf	i1___awdiv@sign,f,c
  3510  000CA2  D000               	goto	i1l1625
  3511  000CA4                     i1l1625:
  3512  000CA4  0E00               	movlw	0
  3513  000CA6  6E25               	movwf	i1___awdiv@quotient+1,c
  3514  000CA8  0E00               	movlw	0
  3515  000CAA  6E24               	movwf	i1___awdiv@quotient,c
  3516  000CAC  5020               	movf	i1___awdiv@divisor,w,c
  3517  000CAE  1021               	iorwf	i1___awdiv@divisor+1,w,c
  3518  000CB0  B4D8               	btfsc	status,2,c
  3519  000CB2  D021               	goto	i1l1647
  3520  000CB4  0E01               	movlw	1
  3521  000CB6  6E22               	movwf	i1___awdiv@counter,c
  3522  000CB8  D005               	goto	i1l1633
  3523  000CBA                     i1l1631:
  3524  000CBA  90D8               	bcf	status,0,c
  3525  000CBC  3620               	rlcf	i1___awdiv@divisor,f,c
  3526  000CBE  3621               	rlcf	i1___awdiv@divisor+1,f,c
  3527  000CC0  2A22               	incf	i1___awdiv@counter,f,c
  3528  000CC2  D000               	goto	i1l1633
  3529  000CC4                     i1l1633:
  3530  000CC4  BE21               	btfsc	i1___awdiv@divisor+1,7,c
  3531  000CC6  D002               	goto	i1l1635
  3532  000CC8  D7F8               	goto	i1l1631
  3533  000CCA  D000               	goto	i1l1635
  3534  000CCC                     i1l1635:
  3535  000CCC  90D8               	bcf	status,0,c
  3536  000CCE  3624               	rlcf	i1___awdiv@quotient,f,c
  3537  000CD0  3625               	rlcf	i1___awdiv@quotient+1,f,c
  3538  000CD2  5020               	movf	i1___awdiv@divisor,w,c
  3539  000CD4  5C1E               	subwf	i1___awdiv@dividend,w,c
  3540  000CD6  5021               	movf	i1___awdiv@divisor+1,w,c
  3541  000CD8  581F               	subwfb	i1___awdiv@dividend+1,w,c
  3542  000CDA  A0D8               	btfss	status,0,c
  3543  000CDC  D006               	goto	i1l1643
  3544  000CDE  5020               	movf	i1___awdiv@divisor,w,c
  3545  000CE0  5E1E               	subwf	i1___awdiv@dividend,f,c
  3546  000CE2  5021               	movf	i1___awdiv@divisor+1,w,c
  3547  000CE4  5A1F               	subwfb	i1___awdiv@dividend+1,f,c
  3548  000CE6  8024               	bsf	i1___awdiv@quotient,0,c
  3549  000CE8  D000               	goto	i1l1643
  3550  000CEA                     i1l1643:
  3551  000CEA  90D8               	bcf	status,0,c
  3552  000CEC  3221               	rrcf	i1___awdiv@divisor+1,f,c
  3553  000CEE  3220               	rrcf	i1___awdiv@divisor,f,c
  3554  000CF0  2E22               	decfsz	i1___awdiv@counter,f,c
  3555  000CF2  D7EC               	goto	i1l1635
  3556  000CF4  D000               	goto	i1l1647
  3557  000CF6                     i1l1647:
  3558  000CF6  5023               	movf	i1___awdiv@sign,w,c
  3559  000CF8  B4D8               	btfsc	status,2,c
  3560  000CFA  D005               	goto	i1l1651
  3561  000CFC  6C24               	negf	i1___awdiv@quotient,c
  3562  000CFE  1E25               	comf	i1___awdiv@quotient+1,f,c
  3563  000D00  B0D8               	btfsc	status,0,c
  3564  000D02  2A25               	incf	i1___awdiv@quotient+1,f,c
  3565  000D04  D000               	goto	i1l1651
  3566  000D06                     i1l1651:
  3567  000D06  C024  F01E         	movff	i1___awdiv@quotient,?i1___awdiv
  3568  000D0A  C025  F01F         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  3569  000D0E  0012               	return	
  3570  000D10  0012               	return		;funcret
  3571  000D12                     __end_ofi1___awdiv:
  3572                           	opt stack 0
  3573                           pclatu	equ	0xFFB
  3574                           pclath	equ	0xFFA
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           postinc0	equ	0xFEE
  3584                           fsr0h	equ	0xFEA
  3585                           fsr0l	equ	0xFE9
  3586                           wreg	equ	0xFE8
  3587                           plusw1	equ	0xFE3
  3588                           fsr1h	equ	0xFE2
  3589                           fsr1l	equ	0xFE1
  3590                           bsr	equ	0xFE0
  3591                           plusw2	equ	0xFDB
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _RX2_ISR *****************
  3597 ;; Defined at:
  3598 ;;		line 121 in file "main.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  input           2   27[COMRAM] unsigned char [2]
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;Total ram usage:       16 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    2
  3619 ;; This function calls:
  3620 ;;		_atoi
  3621 ;; This function is called by:
  3622 ;;		Interrupt level 2
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	intcode
  3627  000008                     __pintcode:
  3628                           	opt stack 0
  3629  000008                     _RX2_ISR:
  3630                           	opt stack 23
  3631                           
  3632                           ;incstack = 0
  3633  000008  CFFA F00E          	movff	pclath,??_RX2_ISR
  3634  00000C  CFFB F00F          	movff	pclatu,??_RX2_ISR+1
  3635  000010  CFE9 F010          	movff	fsr0l,??_RX2_ISR+2
  3636  000014  EF93  F002         	goto	int_func
  3637                           pclatu	equ	0xFFB
  3638                           pclath	equ	0xFFA
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           intcon2	equ	0xFF1
  3647                           postinc0	equ	0xFEE
  3648                           fsr0h	equ	0xFEA
  3649                           fsr0l	equ	0xFE9
  3650                           wreg	equ	0xFE8
  3651                           plusw1	equ	0xFE3
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           bsr	equ	0xFE0
  3655                           plusw2	equ	0xFDB
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660                           	psect	intcode_body
  3661  000526                     __pintcode_body:
  3662                           	opt stack 23
  3663  000526                     int_func:
  3664                           	opt stack 23
  3665  000526  CFEA F011          	movff	fsr0h,??_RX2_ISR+3
  3666  00052A  CFE1 F012          	movff	fsr1l,??_RX2_ISR+4
  3667  00052E  CFE2 F013          	movff	fsr1h,??_RX2_ISR+5
  3668  000532  CFD9 F014          	movff	fsr2l,??_RX2_ISR+6
  3669  000536  CFDA F015          	movff	fsr2h,??_RX2_ISR+7
  3670  00053A  CFF3 F016          	movff	prodl,??_RX2_ISR+8
  3671  00053E  CFF4 F017          	movff	prodh,??_RX2_ISR+9
  3672  000542  CFF6 F018          	movff	tblptrl,??_RX2_ISR+10
  3673  000546  CFF7 F019          	movff	tblptrh,??_RX2_ISR+11
  3674  00054A  CFF8 F01A          	movff	tblptru,??_RX2_ISR+12
  3675  00054E  CFF5 F01B          	movff	tablat,??_RX2_ISR+13
  3676                           
  3677                           ;main.c: 122: RC2IF = 0;
  3678  000552  9AA4               	bcf	4004,5,c	;volatile
  3679                           
  3680                           ;main.c: 124: static char compteur=0;
  3681                           ;main.c: 125: static char buffer[16]="";
  3682                           ;main.c: 127: char input[2] = "";
  3683  000554  C029  F01C         	movff	RX2_ISR@F19163,RX2_ISR@input
  3684  000558  C02A  F01D         	movff	RX2_ISR@F19163+1,RX2_ISR@input+1
  3685                           
  3686                           ;main.c: 128: input[0] = RCREG2;
  3687  00055C  CF7A F01C          	movff	3962,RX2_ISR@input	;volatile
  3688                           
  3689                           ;main.c: 130: if (beginR==1 | beginG==1 | beginB==1)
  3690  000560  0430               	decf	_beginR,w,c
  3691  000562  B4D8               	btfsc	status,2,c
  3692  000564  D006               	goto	i2l1935
  3693  000566  042F               	decf	_beginG,w,c
  3694  000568  B4D8               	btfsc	status,2,c
  3695  00056A  D003               	goto	i2l1935
  3696  00056C  042E               	decf	_beginB,w,c
  3697  00056E  A4D8               	btfss	status,2,c
  3698  000570  D053               	goto	i2l1973
  3699  000572                     i2l1935:
  3700                           
  3701                           ;main.c: 131: {
  3702                           ;main.c: 132: if (input[0]!='R' & input[0]!='G' & input[0]!='B')
  3703  000572  0E52               	movlw	82
  3704  000574  181C               	xorwf	RX2_ISR@input,w,c
  3705  000576  B4D8               	btfsc	status,2,c
  3706  000578  D014               	goto	i2l1945
  3707  00057A  0E47               	movlw	71
  3708  00057C  181C               	xorwf	RX2_ISR@input,w,c
  3709  00057E  B4D8               	btfsc	status,2,c
  3710  000580  D010               	goto	i2l1945
  3711  000582  0E42               	movlw	66
  3712  000584  181C               	xorwf	RX2_ISR@input,w,c
  3713  000586  B4D8               	btfsc	status,2,c
  3714  000588  D00C               	goto	i2l1945
  3715                           
  3716                           ;main.c: 133: {
  3717                           ;main.c: 134: buffer[compteur]=input[0];
  3718  00058A  502D               	movf	RX2_ISR@compteur,w,c
  3719  00058C  0D01               	mullw	1
  3720  00058E  0E31               	movlw	low RX2_ISR@buffer
  3721  000590  24F3               	addwf	prodl,w,c
  3722  000592  6ED9               	movwf	fsr2l,c
  3723  000594  0E00               	movlw	high RX2_ISR@buffer
  3724  000596  20F4               	addwfc	prodh,w,c
  3725  000598  6EDA               	movwf	fsr2h,c
  3726  00059A  C01C  FFDF         	movff	RX2_ISR@input,indf2
  3727                           
  3728                           ;main.c: 135: compteur+=1;
  3729  00059E  2A2D               	incf	RX2_ISR@compteur,f,c
  3730                           
  3731                           ;main.c: 136: }
  3732  0005A0  D03B               	goto	i2l1973
  3733  0005A2                     i2l1945:
  3734                           
  3735                           ;main.c: 138: else
  3736                           ;main.c: 139: {
  3737                           ;main.c: 140: if (beginR==1)
  3738  0005A2  0430               	decf	_beginR,w,c
  3739  0005A4  A4D8               	btfss	status,2,c
  3740  0005A6  D00B               	goto	i2l1949
  3741                           
  3742                           ;main.c: 141: R[0]=atoi(buffer);
  3743  0005A8  0E31               	movlw	low RX2_ISR@buffer
  3744  0005AA  6E07               	movwf	atoi@s,c
  3745  0005AC  0E00               	movlw	high RX2_ISR@buffer
  3746  0005AE  6E08               	movwf	atoi@s+1,c
  3747  0005B0  EC20  F005         	call	_atoi	;wreg free
  3748  0005B4  C007  F100         	movff	?_atoi,_R
  3749  0005B8  C008  F101         	movff	?_atoi+1,_R+1
  3750  0005BC  D000               	goto	i2l1949
  3751  0005BE                     i2l1949:
  3752                           
  3753                           ;main.c: 142: beginR=0;
  3754  0005BE  0E00               	movlw	0
  3755  0005C0  6E30               	movwf	_beginR,c
  3756                           
  3757                           ;main.c: 143: if (beginG==1)
  3758  0005C2  042F               	decf	_beginG,w,c
  3759  0005C4  A4D8               	btfss	status,2,c
  3760  0005C6  D00B               	goto	i2l1955
  3761                           
  3762                           ;main.c: 144: G[0]=atoi(buffer);
  3763  0005C8  0E31               	movlw	low RX2_ISR@buffer
  3764  0005CA  6E07               	movwf	atoi@s,c
  3765  0005CC  0E00               	movlw	high RX2_ISR@buffer
  3766  0005CE  6E08               	movwf	atoi@s+1,c
  3767  0005D0  EC20  F005         	call	_atoi	;wreg free
  3768  0005D4  C007  F200         	movff	?_atoi,_G
  3769  0005D8  C008  F201         	movff	?_atoi+1,_G+1
  3770  0005DC  D000               	goto	i2l1955
  3771  0005DE                     i2l1955:
  3772                           
  3773                           ;main.c: 145: beginG=0;
  3774  0005DE  0E00               	movlw	0
  3775  0005E0  6E2F               	movwf	_beginG,c
  3776                           
  3777                           ;main.c: 146: if (beginB==1)
  3778  0005E2  042E               	decf	_beginB,w,c
  3779  0005E4  A4D8               	btfss	status,2,c
  3780  0005E6  D00B               	goto	i2l1961
  3781                           
  3782                           ;main.c: 147: B[0]=atoi(buffer);
  3783  0005E8  0E31               	movlw	low RX2_ISR@buffer
  3784  0005EA  6E07               	movwf	atoi@s,c
  3785  0005EC  0E00               	movlw	high RX2_ISR@buffer
  3786  0005EE  6E08               	movwf	atoi@s+1,c
  3787  0005F0  EC20  F005         	call	_atoi	;wreg free
  3788  0005F4  C007  F300         	movff	?_atoi,_B
  3789  0005F8  C008  F301         	movff	?_atoi+1,_B+1
  3790  0005FC  D000               	goto	i2l1961
  3791  0005FE                     i2l1961:
  3792                           
  3793                           ;main.c: 148: beginB=0;
  3794  0005FE  0E00               	movlw	0
  3795  000600  6E2E               	movwf	_beginB,c
  3796                           
  3797                           ;main.c: 151: compteur=0;
  3798  000602  0E00               	movlw	0
  3799  000604  6E2D               	movwf	RX2_ISR@compteur,c
  3800                           
  3801                           ;main.c: 152: buffer[3]='\0';
  3802  000606  0E00               	movlw	0
  3803  000608  6E34               	movwf	RX2_ISR@buffer+3,c
  3804                           
  3805                           ;main.c: 153: buffer[2]='\0';
  3806  00060A  0E00               	movlw	0
  3807  00060C  6E33               	movwf	RX2_ISR@buffer+2,c
  3808                           
  3809                           ;main.c: 154: buffer[1]='\0';
  3810  00060E  0E00               	movlw	0
  3811  000610  6E32               	movwf	RX2_ISR@buffer+1,c
  3812                           
  3813                           ;main.c: 155: buffer[0]='\0';
  3814  000612  0E00               	movlw	0
  3815  000614  6E31               	movwf	RX2_ISR@buffer,c
  3816  000616  D000               	goto	i2l1973
  3817  000618                     i2l1973:
  3818                           
  3819                           ;main.c: 156: }
  3820                           ;main.c: 157: }
  3821                           ;main.c: 159: if (input[0]=='R')
  3822  000618  0E52               	movlw	82
  3823  00061A  181C               	xorwf	RX2_ISR@input,w,c
  3824  00061C  A4D8               	btfss	status,2,c
  3825  00061E  D003               	goto	i2l1977
  3826                           
  3827                           ;main.c: 160: beginR=1;
  3828  000620  0E01               	movlw	1
  3829  000622  6E30               	movwf	_beginR,c
  3830  000624  D000               	goto	i2l1977
  3831  000626                     i2l1977:
  3832                           
  3833                           ;main.c: 161: if (input[0]=='G')
  3834  000626  0E47               	movlw	71
  3835  000628  181C               	xorwf	RX2_ISR@input,w,c
  3836  00062A  A4D8               	btfss	status,2,c
  3837  00062C  D003               	goto	i2l1981
  3838                           
  3839                           ;main.c: 162: beginG=1;
  3840  00062E  0E01               	movlw	1
  3841  000630  6E2F               	movwf	_beginG,c
  3842  000632  D000               	goto	i2l1981
  3843  000634                     i2l1981:
  3844                           
  3845                           ;main.c: 163: if (input[0]=='B')
  3846  000634  0E42               	movlw	66
  3847  000636  181C               	xorwf	RX2_ISR@input,w,c
  3848  000638  A4D8               	btfss	status,2,c
  3849  00063A  D003               	goto	i2l220
  3850                           
  3851                           ;main.c: 164: beginB=1;
  3852  00063C  0E01               	movlw	1
  3853  00063E  6E2E               	movwf	_beginB,c
  3854  000640  D000               	goto	i2l220
  3855  000642                     i2l220:
  3856  000642  C01B  FFF5         	movff	??_RX2_ISR+13,tablat
  3857  000646  C01A  FFF8         	movff	??_RX2_ISR+12,tblptru
  3858  00064A  C019  FFF7         	movff	??_RX2_ISR+11,tblptrh
  3859  00064E  C018  FFF6         	movff	??_RX2_ISR+10,tblptrl
  3860  000652  C017  FFF4         	movff	??_RX2_ISR+9,prodh
  3861  000656  C016  FFF3         	movff	??_RX2_ISR+8,prodl
  3862  00065A  C015  FFDA         	movff	??_RX2_ISR+7,fsr2h
  3863  00065E  C014  FFD9         	movff	??_RX2_ISR+6,fsr2l
  3864  000662  C013  FFE2         	movff	??_RX2_ISR+5,fsr1h
  3865  000666  C012  FFE1         	movff	??_RX2_ISR+4,fsr1l
  3866  00066A  C011  FFEA         	movff	??_RX2_ISR+3,fsr0h
  3867  00066E  C010  FFE9         	movff	??_RX2_ISR+2,fsr0l
  3868  000672  C00F  FFFB         	movff	??_RX2_ISR+1,pclatu
  3869  000676  C00E  FFFA         	movff	??_RX2_ISR,pclath
  3870  00067A  0011               	retfie		f
  3871  00067C                     __end_of_RX2_ISR:
  3872                           	opt stack 0
  3873                           pclatu	equ	0xFFB
  3874                           pclath	equ	0xFFA
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           prodh	equ	0xFF4
  3880                           prodl	equ	0xFF3
  3881                           intcon	equ	0xFF2
  3882                           intcon2	equ	0xFF1
  3883                           postinc0	equ	0xFEE
  3884                           fsr0h	equ	0xFEA
  3885                           fsr0l	equ	0xFE9
  3886                           wreg	equ	0xFE8
  3887                           plusw1	equ	0xFE3
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           bsr	equ	0xFE0
  3891                           indf2	equ	0xFDF
  3892                           plusw2	equ	0xFDB
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function _atoi *****************
  3898 ;; Defined at:
  3899 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3902 ;;		 -> RX2_ISR@buffer(16), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  a               2   11[COMRAM] int 
  3905 ;;  sign            1   10[COMRAM] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  2    6[COMRAM] int 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;Total ram usage:        7 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    1
  3922 ;; This function calls:
  3923 ;;		___wmul
  3924 ;;		_isdigit
  3925 ;; This function is called by:
  3926 ;;		_RX2_ISR
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text18
  3931  000A40                     __ptext18:
  3932                           	opt stack 0
  3933  000A40                     _atoi:
  3934                           	opt stack 23
  3935                           
  3936                           ;incstack = 0
  3937  000A40  D003               	goto	i2l1691
  3938  000A42                     i2l1689:
  3939  000A42  4A07               	infsnz	atoi@s,f,c
  3940  000A44  2A08               	incf	atoi@s+1,f,c
  3941  000A46  D000               	goto	i2l1691
  3942  000A48                     i2l1691:
  3943  000A48  C007  FFD9         	movff	atoi@s,fsr2l
  3944  000A4C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3945  000A50  0E20               	movlw	32
  3946  000A52  18DE               	xorwf	postinc2,w,c
  3947  000A54  B4D8               	btfsc	status,2,c
  3948  000A56  D7F5               	goto	i2l1689
  3949  000A58  C007  FFD9         	movff	atoi@s,fsr2l
  3950  000A5C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3951  000A60  0E09               	movlw	9
  3952  000A62  18DE               	xorwf	postinc2,w,c
  3953  000A64  B4D8               	btfsc	status,2,c
  3954  000A66  D7ED               	goto	i2l1689
  3955  000A68  0E00               	movlw	0
  3956  000A6A  6E0D               	movwf	atoi@a+1,c
  3957  000A6C  0E00               	movlw	0
  3958  000A6E  6E0C               	movwf	atoi@a,c
  3959  000A70  0E00               	movlw	0
  3960  000A72  6E0B               	movwf	atoi@sign,c
  3961  000A74  C007  FFD9         	movff	atoi@s,fsr2l
  3962  000A78  C008  FFDA         	movff	atoi@s+1,fsr2h
  3963  000A7C  0E2D               	movlw	45
  3964  000A7E  18DE               	xorwf	postinc2,w,c
  3965  000A80  A4D8               	btfss	status,2,c
  3966  000A82  D002               	goto	i2l1701
  3967  000A84  2A0B               	incf	atoi@sign,f,c
  3968  000A86  D025               	goto	i2l1707
  3969  000A88                     i2l1701:
  3970  000A88  C007  FFD9         	movff	atoi@s,fsr2l
  3971  000A8C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3972  000A90  0E2B               	movlw	43
  3973  000A92  18DE               	xorwf	postinc2,w,c
  3974  000A94  A4D8               	btfss	status,2,c
  3975  000A96  D020               	goto	i2l1709
  3976  000A98  D01C               	goto	i2l1707
  3977  000A9A  D01E               	goto	i2l1709
  3978  000A9C                     i2l1705:
  3979  000A9C  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3980  000AA0  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3981  000AA4  0E00               	movlw	0
  3982  000AA6  6E04               	movwf	___wmul@multiplicand+1,c
  3983  000AA8  0E0A               	movlw	10
  3984  000AAA  6E03               	movwf	___wmul@multiplicand,c
  3985  000AAC  EC7C  F007         	call	___wmul	;wreg free
  3986  000AB0  C007  FFD9         	movff	atoi@s,fsr2l
  3987  000AB4  C008  FFDA         	movff	atoi@s+1,fsr2h
  3988  000AB8  50DF               	movf	indf2,w,c
  3989  000ABA  6E09               	movwf	??_atoi& (0+255),c
  3990  000ABC  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3991  000ABE  5001               	movf	?___wmul,w,c
  3992  000AC0  2609               	addwf	??_atoi,f,c
  3993  000AC2  5002               	movf	?___wmul+1,w,c
  3994  000AC4  220A               	addwfc	??_atoi+1,f,c
  3995  000AC6  0ED0               	movlw	208
  3996  000AC8  2409               	addwf	??_atoi,w,c
  3997  000ACA  6E0C               	movwf	atoi@a,c
  3998  000ACC  0EFF               	movlw	255
  3999  000ACE  200A               	addwfc	??_atoi+1,w,c
  4000  000AD0  6E0D               	movwf	atoi@a+1,c
  4001  000AD2                     i2l1707:
  4002  000AD2  4A07               	infsnz	atoi@s,f,c
  4003  000AD4  2A08               	incf	atoi@s+1,f,c
  4004  000AD6  D000               	goto	i2l1709
  4005  000AD8                     i2l1709:
  4006  000AD8  C007  FFD9         	movff	atoi@s,fsr2l
  4007  000ADC  C008  FFDA         	movff	atoi@s+1,fsr2h
  4008  000AE0  50DF               	movf	indf2,w,c
  4009  000AE2  EC90  F007         	call	_isdigit
  4010  000AE6  B0D8               	btfsc	status,0,c
  4011  000AE8  D7D9               	goto	i2l1705
  4012  000AEA  500B               	movf	atoi@sign,w,c
  4013  000AEC  B4D8               	btfsc	status,2,c
  4014  000AEE  D00D               	goto	i2l442
  4015  000AF0  C00C  F009         	movff	atoi@a,??_atoi
  4016  000AF4  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  4017  000AF8  1E09               	comf	??_atoi,f,c
  4018  000AFA  1E0A               	comf	??_atoi+1,f,c
  4019  000AFC  4A09               	infsnz	??_atoi,f,c
  4020  000AFE  2A0A               	incf	??_atoi+1,f,c
  4021  000B00  C009  F007         	movff	??_atoi,?_atoi
  4022  000B04  C00A  F008         	movff	??_atoi+1,?_atoi+1
  4023  000B08  0012               	return	
  4024  000B0A                     i2l442:
  4025  000B0A  C00C  F007         	movff	atoi@a,?_atoi
  4026  000B0E  C00D  F008         	movff	atoi@a+1,?_atoi+1
  4027  000B12  0012               	return		;funcret
  4028  000B14                     __end_of_atoi:
  4029                           	opt stack 0
  4030                           pclatu	equ	0xFFB
  4031                           pclath	equ	0xFFA
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           intcon2	equ	0xFF1
  4040                           postinc0	equ	0xFEE
  4041                           fsr0h	equ	0xFEA
  4042                           fsr0l	equ	0xFE9
  4043                           wreg	equ	0xFE8
  4044                           plusw1	equ	0xFE3
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           bsr	equ	0xFE0
  4048                           indf2	equ	0xFDF
  4049                           postinc2	equ	0xFDE
  4050                           plusw2	equ	0xFDB
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8
  4054                           
  4055 ;; *************** function _isdigit *****************
  4056 ;; Defined at:
  4057 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  c               1    wreg     unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  c               1    2[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;		None               void
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;Total ram usage:        3 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_atoi
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text19
  4085  000F20                     __ptext19:
  4086                           	opt stack 0
  4087  000F20                     _isdigit:
  4088                           	opt stack 23
  4089                           
  4090                           ;incstack = 0
  4091                           ;isdigit@c stored from wreg
  4092  000F20  6E03               	movwf	isdigit@c,c
  4093  000F22  0E00               	movlw	0
  4094  000F24  6E02               	movwf	_isdigit$858,c
  4095  000F26  0E3A               	movlw	58
  4096  000F28  6003               	cpfslt	isdigit@c,c
  4097  000F2A  D006               	goto	i2l1563
  4098  000F2C  0E2F               	movlw	47
  4099  000F2E  6403               	cpfsgt	isdigit@c,c
  4100  000F30  D003               	goto	i2l1563
  4101  000F32  0E01               	movlw	1
  4102  000F34  6E02               	movwf	_isdigit$858,c
  4103  000F36  D000               	goto	i2l1563
  4104  000F38                     i2l1563:
  4105  000F38  C002  F001         	movff	_isdigit$858,??_isdigit
  4106  000F3C  3001               	rrcf	??_isdigit,w,c
  4107  000F3E  0012               	return	
  4108  000F40  0012               	return		;funcret
  4109  000F42                     __end_of_isdigit:
  4110                           	opt stack 0
  4111                           pclatu	equ	0xFFB
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           postinc0	equ	0xFEE
  4122                           fsr0h	equ	0xFEA
  4123                           fsr0l	equ	0xFE9
  4124                           wreg	equ	0xFE8
  4125                           plusw1	equ	0xFE3
  4126                           fsr1h	equ	0xFE2
  4127                           fsr1l	equ	0xFE1
  4128                           bsr	equ	0xFE0
  4129                           indf2	equ	0xFDF
  4130                           postinc2	equ	0xFDE
  4131                           plusw2	equ	0xFDB
  4132                           fsr2h	equ	0xFDA
  4133                           fsr2l	equ	0xFD9
  4134                           status	equ	0xFD8
  4135                           
  4136 ;; *************** function ___wmul *****************
  4137 ;; Defined at:
  4138 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  multiplier      2    0[COMRAM] unsigned int 
  4141 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  product         2    4[COMRAM] unsigned int 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    0[COMRAM] unsigned int 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0, prodl, prodh
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;Total ram usage:        6 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_atoi
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text20
  4167  000EF8                     __ptext20:
  4168                           	opt stack 0
  4169  000EF8                     ___wmul:
  4170                           	opt stack 23
  4171                           
  4172                           ;incstack = 0
  4173  000EF8  5001               	movf	___wmul@multiplier,w,c
  4174  000EFA  0203               	mulwf	___wmul@multiplicand,c
  4175  000EFC  CFF3 F005          	movff	prodl,___wmul@product
  4176  000F00  CFF4 F006          	movff	prodh,___wmul@product+1
  4177  000F04  5001               	movf	___wmul@multiplier,w,c
  4178  000F06  0204               	mulwf	___wmul@multiplicand+1,c
  4179  000F08  50F3               	movf	prodl,w,c
  4180  000F0A  2606               	addwf	___wmul@product+1,f,c
  4181  000F0C  5002               	movf	___wmul@multiplier+1,w,c
  4182  000F0E  0203               	mulwf	___wmul@multiplicand,c
  4183  000F10  50F3               	movf	prodl,w,c
  4184  000F12  2606               	addwf	___wmul@product+1,f,c
  4185  000F14  C005  F001         	movff	___wmul@product,?___wmul
  4186  000F18  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4187  000F1C  0012               	return	
  4188  000F1E  0012               	return		;funcret
  4189  000F20                     __end_of___wmul:
  4190                           	opt stack 0
  4191  0000                     pclatu	equ	0xFFB
  4192                           pclath	equ	0xFFA
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           intcon2	equ	0xFF1
  4201                           postinc0	equ	0xFEE
  4202                           fsr0h	equ	0xFEA
  4203                           fsr0l	equ	0xFE9
  4204                           wreg	equ	0xFE8
  4205                           plusw1	equ	0xFE3
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           bsr	equ	0xFE0
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           plusw2	equ	0xFDB
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           pclatu	equ	0xFFB
  4216                           pclath	equ	0xFFA
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           prodh	equ	0xFF4
  4222                           prodl	equ	0xFF3
  4223                           intcon	equ	0xFF2
  4224                           intcon2	equ	0xFF1
  4225                           postinc0	equ	0xFEE
  4226                           fsr0h	equ	0xFEA
  4227                           fsr0l	equ	0xFE9
  4228                           wreg	equ	0xFE8
  4229                           plusw1	equ	0xFE3
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           bsr	equ	0xFE0
  4233                           indf2	equ	0xFDF
  4234                           postinc2	equ	0xFDE
  4235                           plusw2	equ	0xFDB
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240                           	psect	rparam
  4241  0000                     pclatu	equ	0xFFB
  4242                           pclath	equ	0xFFA
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           intcon2	equ	0xFF1
  4251                           postinc0	equ	0xFEE
  4252                           fsr0h	equ	0xFEA
  4253                           fsr0l	equ	0xFE9
  4254                           wreg	equ	0xFE8
  4255                           plusw1	equ	0xFE3
  4256                           fsr1h	equ	0xFE2
  4257                           fsr1l	equ	0xFE1
  4258                           bsr	equ	0xFE0
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           plusw2	equ	0xFDB
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         639
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      64
    BANK0           160    108     123
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> RX2_ISR@buffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Timer0_ISR in COMRAM

    _Timer0_ISR->i1_pwm
    i1_pwm->i1___awdiv

Critical Paths under _RX2_ISR in COMRAM

    _RX2_ISR->_atoi
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_pwm
    _pwm->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _RX2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _RX2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _RX2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _RX2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _RX2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Critical Paths under _RX2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_ISR in BANK6

    None.

Critical Paths under _RX2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_ISR in BANK7

    None.

Critical Paths under _RX2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_ISR in BANK8

    None.

Critical Paths under _RX2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_ISR in BANK9

    None.

Critical Paths under _RX2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_ISR in BANK10

    None.

Critical Paths under _RX2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_ISR in BANK11

    None.

Critical Paths under _RX2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_ISR in BANK12

    None.

Critical Paths under _RX2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_ISR in BANK13

    None.

Critical Paths under _RX2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_ISR in BANK14

    None.

Critical Paths under _RX2_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    27      5    8489
                                             76 BANK0     32    27      5
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                     _initialisation
                                _pwm
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      69
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     1      2    1027
                                             73 BANK0      3     1      2
                            ___awdiv
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     618
                                             17 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
                            _initADC
                          _initComms
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2008
                                             25 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     411
                                             58 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2392
                                             28 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2346
                                             43 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Timer0_ISR                                          17    17      0     700
                                              0 BANK0     17    17      0
                              i1_pwm
 ---------------------------------------------------------------------------------
 (4) i1_pwm                                                3     1      2     700
                                             37 COMRAM     3     1      2
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (5) i1___awdiv                                            8     4      4     456
                                             29 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _RX2_ISR                                             16    16      0     876
                                             13 COMRAM    16    16      0
                               _atoi
 ---------------------------------------------------------------------------------
 (7) _atoi                                                 7     5      2     720
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _initialisation
     _initADC
     _initComms
     _initPWM
     _initTimer0
   _pwm
     ___awdiv
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _readADC

 _Timer0_ISR (ROOT)
   i1_pwm
     i1___awdiv

 _RX2_ISR (ROOT)
   _atoi
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      40       1       67.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     313       6        0.0%
DATA                 0      0     313       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 23 20:56:25 2015

                      _B 0300                        _G 0200                        _R 0100  
           ___awdiv@sign 0076                       bsr 000FE0      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l230 0246  
                    l250 0DAA                      l251 0DB0                      l253 0DE4  
                    l254 0DE8                      l248 0DA6                      l594 0A06  
                    l658 08E6                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _RC0 007C10                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _PSA 007EAB                      _pwm 0BE4                      prod 000FF3  
                    wreg 000FE8               _TXSTA2bits 000FBA             ___ftdiv@cntr 0094  
           ___ftdiv@sign 0099                     l2013 01EA                     l2015 01FC  
                   l2007 01B6                     l2009 01C8                     l1531 0992  
                   l1523 093A                     l1603 0BC2                     l1551 0A30  
                   l1535 09B4                     l1527 0950                     l1607 0BD8  
                   l1545 0A12                     l1537 09E6                     l1529 0960  
                   l1721 0DCE                     l1539 09F6                     l1811 049E  
                   l1741 0808                     l1821 04E2                     l1581 0B4A  
                   l1815 04BA                     l1807 047E                     l1591 0B80  
                   l1575 0B32                     l1663 0C12                     l1727 0DD8  
                   l1719 0DB6                     l1825 04FE                     l1817 04C2  
                   l1657 0BEA                     l1729 0DDC                     l1747 0842  
                   l1835 06B6                     l1587 0B68                     l1853 074A  
                   l1589 0B76                     l1669 0C3A                     l1677 0C62  
                   l1767 08A4                     l1871 07BA                     l1863 077C  
                   l1599 0BB2                     l1777 08F8                     l1793 042E  
                   l1865 078E                     l1857 075E                     l1787 03F4  
                   l1867 079C                     l1991 0162                     l1993 0174  
                   l1987 013C                     _ADON 007E10                     _CHS0 007E12  
                   _CHS1 007E13                     ?_pwm 00A9                     _T0IE 007F95  
                   _T0IF 007F92                     _T0CS 007EAD                     u1111 081E  
                   u1201 0692                     u1220 06DC                     u1141 03D0  
                   u1161 040A                     u1225 06D2                     u1091 07E4  
                   u1500 0240                     u1510 0242                     u1451 0182  
                   _PEIE 007F96         ??_initialisation 0071          __end_of_RX2_ISR 067C  
                   _atoi 0A40                     _main 0118             ___ftpack@arg 0071  
           ___ftpack@exp 0074                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0114  
          __CFG_IESO$OFF 000000             ___ftmul@cntr 0089             ___param_bank 000010  
           ___ftmul@sign 008A             ___fttol@exp1 00A8             ___fttol@lval 00A4  
                  ??_pwm 00AB                    _DC2B0 007A84                    _DC2B1 007A85  
                  _DC3B0 007A6C                    _DC3B1 007A6D                    _DC4B0 007A54  
                  _DC4B1 007A55                    ?_atoi 0007                    ?_main 00AC  
         i1___awdiv@sign 0023          __end_of___awdiv 0BE4          __end_of___ftdiv 0920  
        __end_of___ftmul 0526          ___awdiv@divisor 0073          __end_of___fttol 07CE  
                  _T0PS0 007EA8                    _T0PS1 007EA9                    _T0PS2 007EAA  
                  _RC2IF 007D25                    i1l200 00CE                    i2l220 0642  
                  i2l442 0B0A          ___awdiv@counter 0075                    _VCFG0 007E0C  
                  _VCFG1 007E0D                    _VNCFG 007E0B                    _TRISC 000F94  
                  i1_pwm 0D12            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000          __end_of_initADC 0F5E          __end_of_readADC 0E0C  
         __CFG_EBTRB$OFF 000000          __end_of_initPWM 0E5E          __end_of_isdigit 0F42  
          ___ftpack@sign 0075                    atoi@a 000C                    atoi@s 0007  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8       __size_ofi1___awdiv 0096               i1pwm@color 0028  
         __CFG_MCLRE$OFF 000000          __initialization 0E5E             __end_of_atoi 0B14  
           __end_of_main 03BA                   ??_atoi 0009                   ??_main 00B1  
          ___fttol@sign1 00A3            __activetblptr 000002           __CFG_RETEN$OFF 000000  
                 ?i1_pwm 0026                ??_RX2_ISR 000E                   _CCP2M2 007A82  
                 _CCP2M3 007A83                   _CCP3M2 007A6A                   _CCP3M3 007A6B  
                 _CCP4M2 007A52                   _CCP4M3 007A53                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000F51                   _CCPR3L 000F4E  
                 _CCPR4L 000F4B                   _T08BIT 007EAE         ___awdiv@dividend 0071  
                 _ANSEL1 007AE9                   _ANSEL2 007AEA                   _ANSEL3 007AEB  
       __end_of___ftpack 0A40                   i1l1631 0CBA                   i1l1633 0CC4  
                 i1l1625 0CA4                   i1l1651 0D06                   i1l1643 0CEA  
                 i1l1635 0CCC                   i1l1619 0C92                   i1l1901 0D82  
                 i1l1647 0CF6          __CFG_BBSIZ$BB2K 000000                   i1l1881 0D16  
                 i1l1893 0D5E                   i1l1887 0D3A                   i2l1701 0A88  
                 i2l1705 0A9C                   i2l1563 0F38                   i2l1707 0AD2  
                 i2l1709 0AD8           __CFG_WDTEN$OFF 000000                   i2l1691 0A48  
                 i2l1935 0572                   i2l1689 0A42                   i2l1961 05FE  
                 i2l1945 05A2                   i2l1955 05DE                   i2l1981 0634  
                 i2l1949 05BE                   i2l1973 0618                   i2l1977 0626  
                 _RCREG2 000F7A         __end_of___lwtoft 0ED0                   _TMR0IE 007F95  
                 _SPBRG2 000F7B                   _TMR0IP 007F8A                   _TMR2ON 007E52  
                 _TXREG2 000F79               _Timer0_ISR 0018           __CFG_XINST$OFF 000000  
                 _beginB 002E                   _beginG 002F                   ___wmul 0EF8  
                 _beginR 0030                ??___awdiv 0075           __CFG_STVREN$ON 000000  
              ??___ftdiv 0091                ??___ftmul 0082                ??___fttol 009E  
           readADC@tempo 0076                   _millis 002B                   clear_0 0E64  
                 clear_1 0E70                   clear_2 0E7C                   clear_3 0E88  
                 clear_4 0E94         ___awdiv@quotient 0077                ??_initADC 0071  
  ___ftmul@f3_as_product 0086                ??_readADC 0073        __end_ofi1___awdiv 0D12  
              ??_initPWM 0071                ??_isdigit 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0E9A            ___rparam_used 000001               ___ftdiv@f1 008B  
             ___ftdiv@f2 008E               ___ftdiv@f3 0095               ___ftmul@f1 007C  
             ___ftmul@f2 007F            __end_ofi1_pwm 0D9A               ___fttol@f1 009A  
         __pcstackCOMRAM 0001               ___lwtoft@c 0079                  ??i1_pwm 0028  
             __pbssBANK0 00CC               __pbssBANK1 0100               __pbssBANK2 0200  
             __pbssBANK3 0300          __CFG_PLLCFG$OFF 000000       __size_of_initComms 0028  
         main@amplitude1 00C0           main@amplitude2 00C2           main@amplitude3 00C4  
            ?_Timer0_ISR 0001                  ?___wmul 0001                ?___ftpack 0071  
                _T2CKPS0 007E50                  _T2CKPS1 007E51                ?___lwtoft 0079  
     i1___awdiv@dividend 001E         __CFG_CANMX$PORTB 000000                  _SPBRGH2 000F7C  
                _RX2_ISR 0008          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000       i1___awdiv@quotient 0024               _initTimer0 0F5E  
                ___awdiv 0B14                  ___ftdiv 07CE          __size_of___wmul 0028  
                ___ftmul 03BA                  ___fttol 067C                  __pcinit 0E5E  
             ??___ftpack 0076                  __ramtop 0F00                  __ptext0 0118  
                __ptext1 0D9A                  __ptext2 0BE4                  __ptext3 0B14  
                __ptext4 0F74                  __ptext5 0F5E                  __ptext6 0E0C  
                __ptext7 0ED0                  __ptext8 0F42                  __ptext9 0EA4  
      __end_of_initComms 0EF8               ??___lwtoft 007C                  _initADC 0F42  
                _readADC 0D9A                  _initPWM 0E0C                  _isdigit 0F20  
           __size_of_pwm 0098        __CFG_MSSPMSK$MSK7 000000      __size_of_Timer0_ISR 00FC  
                main@msg 00B1           __pintcode_body 0526     end_of_initialization 0E9A  
          __Lmediumconst 0000                  int_func 0526                  postinc0 000FEE  
                postinc2 000FDE  __size_of_initialisation 0012               main@F19169 00CC  
       __CFG_FOSC$INTIO2 000000                _TRISBbits 000F93                i1___awdiv 0C7C  
            ___ftdiv@exp 0098              ___ftmul@exp 0085              ?_initTimer0 0001  
         __end_of___wmul 0F20      start_initialization 0E5E               ?i1___awdiv 001E  
            __end_of_pwm 0C7C             ??_Timer0_ISR 0060                 ??___wmul 0005  
      __size_of___ftpack 0120              __pbssCOMRAM 0029        __size_of___lwtoft 002C  
          __pcstackBANK0 0060                 ?_RX2_ISR 0001       __end_of_Timer0_ISR 0114  
          RX2_ISR@F19163 0029      __size_of_initTimer0 0016                __pintcode 0008  
         _initialisation 0F74                 ?___awdiv 0071                 ?___ftdiv 008B  
               ?___ftmul 007C                 ?___fttol 009A        i1___awdiv@divisor 0020  
            __pintcodelo 0018        i1___awdiv@counter 0022            RX2_ISR@buffer 0031  
               ?_initADC 0001                 ?_readADC 0071                 ?_initPWM 0001  
               _BAUDCON2 000FB9                 ?_isdigit 0001           __size_ofi1_pwm 0088  
              _initComms 0ED0              ??i1___awdiv 0022           ___wmul@product 0005  
               _PIE3bits 000FA3   __end_of_initialisation 0F86                 _PIR3bits 000FA4  
               _GO_nDONE 007E11                 _RCONbits 000FD0          main@old_SWITCH1 00C6  
        RX2_ISR@compteur 002D                 _TRIGSEL0 007E0E                 _TRIGSEL1 007E0F  
      ___wmul@multiplier 0001         __CFG_SOSCSEL$DIG 000000                main@delay 00C8  
             ?_initComms 0001         __size_of_RX2_ISR 0674                 __Hrparam 0000  
        ?_initialisation 0001                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
           ??_initTimer0 0071         __size_of___awdiv 00D0         __size_of___ftdiv 0152  
       __size_of___ftmul 016C         __size_of___fttol 0152           readADC@channel 0075  
               ___ftpack 0920              _isdigit$858 0002                 ___lwtoft 0EA4  
       __size_of_initADC 001C         __size_of_readADC 0072         __size_of_initPWM 0052  
       __size_of_isdigit 0022                 __ptext10 067C                 __ptext11 03BA  
               __ptext20 0EF8                 __ptext12 07CE                 __ptext13 0920  
               __ptext15 0D12                 __ptext16 0C7C                 __ptext18 0A40  
               __ptext19 0F20             RX2_ISR@input 001C       __end_of_initTimer0 0F74  
          __size_of_atoi 00D4            __size_of_main 02A2                 atoi@sign 000B  
               main@argc 00AC                 main@argv 00AE                 main@mode 00C7  
    __CFG_INTOSCSEL$HIGH 000000               _INTCONbits 000FF2              ??_initComms 0071  
               isdigit@c 0003                 intlevel1 0000                 intlevel2 0000  
           pwm@dutycycle 00A9               _RCSTA2bits 000FA6                 pwm@color 00AB  
     __CFG_WDTPS$1048576 000000      __CFG_BORPWR$ZPBORMV 000000           i1pwm@dutycycle 0026  
